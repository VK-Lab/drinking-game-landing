/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["pages/_app"],{

/***/ "./node_modules/casper-js-sdk/dist/lib.js":
/*!************************************************!*\
  !*** ./node_modules/casper-js-sdk/dist/lib.js ***!
  \************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("/*! For license information please see lib.js.LICENSE.txt */\n!function(e,t){if(true)module.exports=t();else { var n, r; }}(self,(()=>(()=>{var e={8794:(e,t,r)=>{\"use strict\";r.d(t,{i:()=>n});const n=\"bignumber/5.1.1\"},2593:(e,t,r)=>{\"use strict\";r.d(t,{O$:()=>p,Zm:()=>d,g$:()=>v,t2:()=>w});var n=r(3550),i=r.n(n),o=r(3286),s=r(711),a=r(8794),u=i().BN;const c=new s.Yd(a.i),f={},l=9007199254740991;function d(e){return null!=e&&(p.isBigNumber(e)||\"number\"==typeof e&&e%1==0||\"string\"==typeof e&&!!e.match(/^-?[0-9]+$/)||(0,o.isHexString)(e)||\"bigint\"==typeof e||(0,o.isBytes)(e))}let h=!1;class p{constructor(e,t){c.checkNew(new.target,p),e!==f&&c.throwError(\"cannot call constructor directly; use BigNumber.from\",s.Yd.errors.UNSUPPORTED_OPERATION,{operation:\"new (BigNumber)\"}),this._hex=t,this._isBigNumber=!0,Object.freeze(this)}fromTwos(e){return b(m(this).fromTwos(e))}toTwos(e){return b(m(this).toTwos(e))}abs(){return\"-\"===this._hex[0]?p.from(this._hex.substring(1)):this}add(e){return b(m(this).add(m(e)))}sub(e){return b(m(this).sub(m(e)))}div(e){return p.from(e).isZero()&&g(\"division by zero\",\"div\"),b(m(this).div(m(e)))}mul(e){return b(m(this).mul(m(e)))}mod(e){const t=m(e);return t.isNeg()&&g(\"cannot modulo negative values\",\"mod\"),b(m(this).umod(t))}pow(e){const t=m(e);return t.isNeg()&&g(\"cannot raise to negative values\",\"pow\"),b(m(this).pow(t))}and(e){const t=m(e);return(this.isNegative()||t.isNeg())&&g(\"cannot 'and' negative values\",\"and\"),b(m(this).and(t))}or(e){const t=m(e);return(this.isNegative()||t.isNeg())&&g(\"cannot 'or' negative values\",\"or\"),b(m(this).or(t))}xor(e){const t=m(e);return(this.isNegative()||t.isNeg())&&g(\"cannot 'xor' negative values\",\"xor\"),b(m(this).xor(t))}mask(e){return(this.isNegative()||e<0)&&g(\"cannot mask negative values\",\"mask\"),b(m(this).maskn(e))}shl(e){return(this.isNegative()||e<0)&&g(\"cannot shift negative values\",\"shl\"),b(m(this).shln(e))}shr(e){return(this.isNegative()||e<0)&&g(\"cannot shift negative values\",\"shr\"),b(m(this).shrn(e))}eq(e){return m(this).eq(m(e))}lt(e){return m(this).lt(m(e))}lte(e){return m(this).lte(m(e))}gt(e){return m(this).gt(m(e))}gte(e){return m(this).gte(m(e))}isNegative(){return\"-\"===this._hex[0]}isZero(){return m(this).isZero()}toNumber(){try{return m(this).toNumber()}catch(e){g(\"overflow\",\"toNumber\",this.toString())}return null}toBigInt(){try{return BigInt(this.toString())}catch(e){}return c.throwError(\"this platform does not support BigInt\",s.Yd.errors.UNSUPPORTED_OPERATION,{value:this.toString()})}toString(){return arguments.length>0&&(10===arguments[0]?h||(h=!0,c.warn(\"BigNumber.toString does not accept any parameters; base-10 is assumed\")):16===arguments[0]?c.throwError(\"BigNumber.toString does not accept any parameters; use bigNumber.toHexString()\",s.Yd.errors.UNEXPECTED_ARGUMENT,{}):c.throwError(\"BigNumber.toString does not accept parameters\",s.Yd.errors.UNEXPECTED_ARGUMENT,{})),m(this).toString(10)}toHexString(){return this._hex}toJSON(e){return{type:\"BigNumber\",hex:this.toHexString()}}static from(e){if(e instanceof p)return e;if(\"string\"==typeof e)return e.match(/^-?0x[0-9a-f]+$/i)?new p(f,y(e)):e.match(/^-?[0-9]+$/)?new p(f,y(new u(e))):c.throwArgumentError(\"invalid BigNumber string\",\"value\",e);if(\"number\"==typeof e)return e%1&&g(\"underflow\",\"BigNumber.from\",e),(e>=l||e<=-l)&&g(\"overflow\",\"BigNumber.from\",e),p.from(String(e));const t=e;if(\"bigint\"==typeof t)return p.from(t.toString());if((0,o.isBytes)(t))return p.from((0,o.hexlify)(t));if(t)if(t.toHexString){const e=t.toHexString();if(\"string\"==typeof e)return p.from(e)}else{let e=t._hex;if(null==e&&\"BigNumber\"===t.type&&(e=t.hex),\"string\"==typeof e&&((0,o.isHexString)(e)||\"-\"===e[0]&&(0,o.isHexString)(e.substring(1))))return p.from(e)}return c.throwArgumentError(\"invalid BigNumber value\",\"value\",e)}static isBigNumber(e){return!(!e||!e._isBigNumber)}}function y(e){if(\"string\"!=typeof e)return y(e.toString(16));if(\"-\"===e[0])return\"-\"===(e=e.substring(1))[0]&&c.throwArgumentError(\"invalid hex\",\"value\",e),\"0x00\"===(e=y(e))?e:\"-\"+e;if(\"0x\"!==e.substring(0,2)&&(e=\"0x\"+e),\"0x\"===e)return\"0x00\";for(e.length%2&&(e=\"0x0\"+e.substring(2));e.length>4&&\"0x00\"===e.substring(0,4);)e=\"0x\"+e.substring(4);return e}function b(e){return p.from(y(e))}function m(e){const t=p.from(e).toHexString();return\"-\"===t[0]?new u(\"-\"+t.substring(3),16):new u(t.substring(2),16)}function g(e,t,r){const n={fault:e,operation:t};return null!=r&&(n.value=r),c.throwError(e,s.Yd.errors.NUMERIC_FAULT,n)}function v(e){return new u(e,36).toString(16)}function w(e){return new u(e,16).toString(36)}},2092:(e,t,r)=>{\"use strict\";r.r(t),r.d(t,{BigNumber:()=>n.O$,FixedFormat:()=>b,FixedNumber:()=>m,_base16To36:()=>n.t2,_base36To16:()=>n.g$,formatFixed:()=>p,parseFixed:()=>y});var n=r(2593),i=r(3286),o=r(711),s=r(8794);const a=new o.Yd(s.i),u={},c=n.O$.from(0),f=n.O$.from(-1);function l(e,t,r,n){const i={fault:t,operation:r};return void 0!==n&&(i.value=n),a.throwError(e,o.Yd.errors.NUMERIC_FAULT,i)}let d=\"0\";for(;d.length<256;)d+=d;function h(e){if(\"number\"!=typeof e)try{e=n.O$.from(e).toNumber()}catch(e){}return\"number\"==typeof e&&e>=0&&e<=256&&!(e%1)?\"1\"+d.substring(0,e):a.throwArgumentError(\"invalid decimal size\",\"decimals\",e)}function p(e,t){null==t&&(t=0);const r=h(t),i=(e=n.O$.from(e)).lt(c);i&&(e=e.mul(f));let o=e.mod(r).toString();for(;o.length<r.length-1;)o=\"0\"+o;o=o.match(/^([0-9]*[1-9]|0)(0*)/)[1];const s=e.div(r).toString();return e=s+\".\"+o,i&&(e=\"-\"+e),e}function y(e,t){null==t&&(t=0);const r=h(t);if(\"string\"==typeof e&&e.match(/^-?[0-9.,]+$/)||a.throwArgumentError(\"invalid decimal value\",\"value\",e),r.length-1==0)return n.O$.from(e);const i=\"-\"===e.substring(0,1);i&&(e=e.substring(1)),\".\"===e&&a.throwArgumentError(\"missing value\",\"value\",e);const o=e.split(\".\");o.length>2&&a.throwArgumentError(\"too many decimal points\",\"value\",e);let s=o[0],u=o[1];for(s||(s=\"0\"),u||(u=\"0\"),u.length>r.length-1&&l(\"fractional component exceeds decimals\",\"underflow\",\"parseFixed\");u.length<r.length-1;)u+=\"0\";const c=n.O$.from(s),d=n.O$.from(u);let p=c.mul(r).add(d);return i&&(p=p.mul(f)),p}class b{constructor(e,t,r,n){e!==u&&a.throwError(\"cannot use FixedFormat constructor; use FixedFormat.from\",o.Yd.errors.UNSUPPORTED_OPERATION,{operation:\"new FixedFormat\"}),this.signed=t,this.width=r,this.decimals=n,this.name=(t?\"\":\"u\")+\"fixed\"+String(r)+\"x\"+String(n),this._multiplier=h(n),Object.freeze(this)}static from(e){if(e instanceof b)return e;let t=!0,r=128,n=18;if(\"string\"==typeof e){if(\"fixed\"===e);else if(\"ufixed\"===e)t=!1;else if(null!=e){const i=e.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);i||a.throwArgumentError(\"invalid fixed format\",\"format\",e),t=\"u\"!==i[1],r=parseInt(i[2]),n=parseInt(i[3])}}else if(e){const i=(t,r,n)=>null==e[t]?n:(typeof e[t]!==r&&a.throwArgumentError(\"invalid fixed format (\"+t+\" not \"+r+\")\",\"format.\"+t,e[t]),e[t]);t=i(\"signed\",\"boolean\",t),r=i(\"width\",\"number\",r),n=i(\"decimals\",\"number\",n)}return r%8&&a.throwArgumentError(\"invalid fixed format width (not byte aligned)\",\"format.width\",r),n>80&&a.throwArgumentError(\"invalid fixed format (decimals too large)\",\"format.decimals\",n),new b(u,t,r,n)}}class m{constructor(e,t,r,n){a.checkNew(new.target,m),e!==u&&a.throwError(\"cannot use FixedNumber constructor; use FixedNumber.from\",o.Yd.errors.UNSUPPORTED_OPERATION,{operation:\"new FixedFormat\"}),this.format=n,this._hex=t,this._value=r,this._isFixedNumber=!0,Object.freeze(this)}_checkFormat(e){this.format.name!==e.format.name&&a.throwArgumentError(\"incompatible format; use fixedNumber.toFormat\",\"other\",e)}addUnsafe(e){this._checkFormat(e);const t=y(this._value,this.format.decimals),r=y(e._value,e.format.decimals);return m.fromValue(t.add(r),this.format.decimals,this.format)}subUnsafe(e){this._checkFormat(e);const t=y(this._value,this.format.decimals),r=y(e._value,e.format.decimals);return m.fromValue(t.sub(r),this.format.decimals,this.format)}mulUnsafe(e){this._checkFormat(e);const t=y(this._value,this.format.decimals),r=y(e._value,e.format.decimals);return m.fromValue(t.mul(r).div(this.format._multiplier),this.format.decimals,this.format)}divUnsafe(e){this._checkFormat(e);const t=y(this._value,this.format.decimals),r=y(e._value,e.format.decimals);return m.fromValue(t.mul(this.format._multiplier).div(r),this.format.decimals,this.format)}floor(){let e=this.toString().split(\".\"),t=m.from(e[0],this.format);const r=!e[1].match(/^(0*)$/);return this.isNegative()&&r&&(t=t.subUnsafe(g)),t}ceiling(){let e=this.toString().split(\".\"),t=m.from(e[0],this.format);const r=!e[1].match(/^(0*)$/);return!this.isNegative()&&r&&(t=t.addUnsafe(g)),t}round(e){null==e&&(e=0);let t=this.toString().split(\".\");if((e<0||e>80||e%1)&&a.throwArgumentError(\"invalid decimal count\",\"decimals\",e),t[1].length<=e)return this;const r=m.from(\"1\"+d.substring(0,e));return this.mulUnsafe(r).addUnsafe(v).floor().divUnsafe(r)}isZero(){return\"0.0\"===this._value}isNegative(){return\"-\"===this._value[0]}toString(){return this._value}toHexString(e){if(null==e)return this._hex;e%8&&a.throwArgumentError(\"invalid byte width\",\"width\",e);const t=n.O$.from(this._hex).fromTwos(this.format.width).toTwos(e).toHexString();return(0,i.hexZeroPad)(t,e/8)}toUnsafeFloat(){return parseFloat(this.toString())}toFormat(e){return m.fromString(this._value,e)}static fromValue(e,t,r){return null!=r||null==t||(0,n.Zm)(t)||(r=t,t=null),null==t&&(t=0),null==r&&(r=\"fixed\"),m.fromString(p(e,t),b.from(r))}static fromString(e,t){null==t&&(t=\"fixed\");const r=b.from(t),n=y(e,r.decimals);!r.signed&&n.lt(c)&&l(\"unsigned value cannot be negative\",\"overflow\",\"value\",e);let o=null;r.signed?o=n.toTwos(r.width).toHexString():(o=n.toHexString(),o=(0,i.hexZeroPad)(o,r.width/8));const s=p(n,r.decimals);return new m(u,o,s,r)}static fromBytes(e,t){null==t&&(t=\"fixed\");const r=b.from(t);if((0,i.arrayify)(e).length>r.width/8)throw new Error(\"overflow\");let o=n.O$.from(e);r.signed&&(o=o.fromTwos(r.width));const s=o.toTwos((r.signed?0:1)+r.width).toHexString(),a=p(o,r.decimals);return new m(u,s,a,r)}static from(e,t){if(\"string\"==typeof e)return m.fromString(e,t);if((0,i.isBytes)(e))return m.fromBytes(e,t);try{return m.fromValue(e,0,t)}catch(e){if(e.code!==o.Yd.errors.INVALID_ARGUMENT)throw e}return a.throwArgumentError(\"invalid FixedNumber value\",\"value\",e)}static isFixedNumber(e){return!(!e||!e._isFixedNumber)}}const g=m.from(1),v=m.from(\"0.5\")},3286:(e,t,r)=>{\"use strict\";r.r(t),r.d(t,{arrayify:()=>u,concat:()=>c,hexConcat:()=>m,hexDataLength:()=>y,hexDataSlice:()=>b,hexStripZeros:()=>v,hexValue:()=>g,hexZeroPad:()=>w,hexlify:()=>p,isBytes:()=>a,isBytesLike:()=>s,isHexString:()=>d,joinSignature:()=>_,splitSignature:()=>E,stripZeros:()=>f,zeroPad:()=>l});const n=new(r(711).Yd)(\"bytes/5.1.0\");function i(e){return!!e.toHexString}function o(e){return e.slice||(e.slice=function(){const t=Array.prototype.slice.call(arguments);return o(new Uint8Array(Array.prototype.slice.apply(e,t)))}),e}function s(e){return d(e)&&!(e.length%2)||a(e)}function a(e){if(null==e)return!1;if(e.constructor===Uint8Array)return!0;if(\"string\"==typeof e)return!1;if(null==e.length)return!1;for(let t=0;t<e.length;t++){const r=e[t];if(\"number\"!=typeof r||r<0||r>=256||r%1)return!1}return!0}function u(e,t){if(t||(t={}),\"number\"==typeof e){n.checkSafeUint53(e,\"invalid arrayify value\");const t=[];for(;e;)t.unshift(255&e),e=parseInt(String(e/256));return 0===t.length&&t.push(0),o(new Uint8Array(t))}if(t.allowMissingPrefix&&\"string\"==typeof e&&\"0x\"!==e.substring(0,2)&&(e=\"0x\"+e),i(e)&&(e=e.toHexString()),d(e)){let r=e.substring(2);r.length%2&&(\"left\"===t.hexPad?r=\"0x0\"+r.substring(2):\"right\"===t.hexPad?r+=\"0\":n.throwArgumentError(\"hex data is odd-length\",\"value\",e));const i=[];for(let e=0;e<r.length;e+=2)i.push(parseInt(r.substring(e,e+2),16));return o(new Uint8Array(i))}return a(e)?o(new Uint8Array(e)):n.throwArgumentError(\"invalid arrayify value\",\"value\",e)}function c(e){const t=e.map((e=>u(e))),r=t.reduce(((e,t)=>e+t.length),0),n=new Uint8Array(r);return t.reduce(((e,t)=>(n.set(t,e),e+t.length)),0),o(n)}function f(e){let t=u(e);if(0===t.length)return t;let r=0;for(;r<t.length&&0===t[r];)r++;return r&&(t=t.slice(r)),t}function l(e,t){(e=u(e)).length>t&&n.throwArgumentError(\"value out of range\",\"value\",arguments[0]);const r=new Uint8Array(t);return r.set(e,t-e.length),o(r)}function d(e,t){return!(\"string\"!=typeof e||!e.match(/^0x[0-9A-Fa-f]*$/)||t&&e.length!==2+2*t)}const h=\"0123456789abcdef\";function p(e,t){if(t||(t={}),\"number\"==typeof e){n.checkSafeUint53(e,\"invalid hexlify value\");let t=\"\";for(;e;)t=h[15&e]+t,e=Math.floor(e/16);return t.length?(t.length%2&&(t=\"0\"+t),\"0x\"+t):\"0x00\"}if(t.allowMissingPrefix&&\"string\"==typeof e&&\"0x\"!==e.substring(0,2)&&(e=\"0x\"+e),i(e))return e.toHexString();if(d(e))return e.length%2&&(\"left\"===t.hexPad?e=\"0x0\"+e.substring(2):\"right\"===t.hexPad?e+=\"0\":n.throwArgumentError(\"hex data is odd-length\",\"value\",e)),e.toLowerCase();if(a(e)){let t=\"0x\";for(let r=0;r<e.length;r++){let n=e[r];t+=h[(240&n)>>4]+h[15&n]}return t}return n.throwArgumentError(\"invalid hexlify value\",\"value\",e)}function y(e){if(\"string\"!=typeof e)e=p(e);else if(!d(e)||e.length%2)return null;return(e.length-2)/2}function b(e,t,r){return\"string\"!=typeof e?e=p(e):(!d(e)||e.length%2)&&n.throwArgumentError(\"invalid hexData\",\"value\",e),t=2+2*t,null!=r?\"0x\"+e.substring(t,2+2*r):\"0x\"+e.substring(t)}function m(e){let t=\"0x\";return e.forEach((e=>{t+=p(e).substring(2)})),t}function g(e){const t=v(p(e,{hexPad:\"left\"}));return\"0x\"===t?\"0x0\":t}function v(e){\"string\"!=typeof e&&(e=p(e)),d(e)||n.throwArgumentError(\"invalid hex string\",\"value\",e),e=e.substring(2);let t=0;for(;t<e.length&&\"0\"===e[t];)t++;return\"0x\"+e.substring(t)}function w(e,t){for(\"string\"!=typeof e?e=p(e):d(e)||n.throwArgumentError(\"invalid hex string\",\"value\",e),e.length>2*t+2&&n.throwArgumentError(\"value out of range\",\"value\",arguments[1]);e.length<2*t+2;)e=\"0x0\"+e.substring(2);return e}function E(e){const t={r:\"0x\",s:\"0x\",_vs:\"0x\",recoveryParam:0,v:0};if(s(e)){const r=u(e);65!==r.length&&n.throwArgumentError(\"invalid signature string; must be 65 bytes\",\"signature\",e),t.r=p(r.slice(0,32)),t.s=p(r.slice(32,64)),t.v=r[64],t.v<27&&(0===t.v||1===t.v?t.v+=27:n.throwArgumentError(\"signature invalid v byte\",\"signature\",e)),t.recoveryParam=1-t.v%2,t.recoveryParam&&(r[32]|=128),t._vs=p(r.slice(32,64))}else{if(t.r=e.r,t.s=e.s,t.v=e.v,t.recoveryParam=e.recoveryParam,t._vs=e._vs,null!=t._vs){const r=l(u(t._vs),32);t._vs=p(r);const i=r[0]>=128?1:0;null==t.recoveryParam?t.recoveryParam=i:t.recoveryParam!==i&&n.throwArgumentError(\"signature recoveryParam mismatch _vs\",\"signature\",e),r[0]&=127;const o=p(r);null==t.s?t.s=o:t.s!==o&&n.throwArgumentError(\"signature v mismatch _vs\",\"signature\",e)}null==t.recoveryParam?null==t.v?n.throwArgumentError(\"signature missing v and recoveryParam\",\"signature\",e):0===t.v||1===t.v?t.recoveryParam=t.v:t.recoveryParam=1-t.v%2:null==t.v?t.v=27+t.recoveryParam:t.recoveryParam!==1-t.v%2&&n.throwArgumentError(\"signature recoveryParam mismatch v\",\"signature\",e),null!=t.r&&d(t.r)?t.r=w(t.r,32):n.throwArgumentError(\"signature missing or invalid r\",\"signature\",e),null!=t.s&&d(t.s)?t.s=w(t.s,32):n.throwArgumentError(\"signature missing or invalid s\",\"signature\",e);const r=u(t.s);r[0]>=128&&n.throwArgumentError(\"signature s out of range\",\"signature\",e),t.recoveryParam&&(r[0]|=128);const i=p(r);t._vs&&(d(t._vs)||n.throwArgumentError(\"signature invalid _vs\",\"signature\",e),t._vs=w(t._vs,32)),null==t._vs?t._vs=i:t._vs!==i&&n.throwArgumentError(\"signature _vs mismatch v and s\",\"signature\",e)}return t}function _(e){return p(c([(e=E(e)).r,e.s,e.recoveryParam?\"0x1c\":\"0x1b\"]))}},2279:(e,t,r)=>{\"use strict\";r.r(t),r.d(t,{AddressZero:()=>n,EtherSymbol:()=>d,HashZero:()=>l,MaxUint256:()=>f,NegativeOne:()=>o,One:()=>a,Two:()=>u,WeiPerEther:()=>c,Zero:()=>s});const n=\"0x0000000000000000000000000000000000000000\";var i=r(2593);const o=i.O$.from(-1),s=i.O$.from(0),a=i.O$.from(1),u=i.O$.from(2),c=i.O$.from(\"1000000000000000000\"),f=i.O$.from(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"),l=\"0x0000000000000000000000000000000000000000000000000000000000000000\",d=\"Ξ\"},711:(e,t,r)=>{\"use strict\";r.d(t,{Yd:()=>l});let n=!1,i=!1;const o={debug:1,default:2,info:2,warning:3,error:4,off:5};let s=o.default,a=null;const u=function(){try{const e=[];if([\"NFD\",\"NFC\",\"NFKD\",\"NFKC\"].forEach((t=>{try{if(\"test\"!==\"test\".normalize(t))throw new Error(\"bad normalize\")}catch(r){e.push(t)}})),e.length)throw new Error(\"missing \"+e.join(\", \"));if(String.fromCharCode(233).normalize(\"NFD\")!==String.fromCharCode(101,769))throw new Error(\"broken implementation\")}catch(e){return e.message}return null}();var c,f;!function(e){e.DEBUG=\"DEBUG\",e.INFO=\"INFO\",e.WARNING=\"WARNING\",e.ERROR=\"ERROR\",e.OFF=\"OFF\"}(c||(c={})),function(e){e.UNKNOWN_ERROR=\"UNKNOWN_ERROR\",e.NOT_IMPLEMENTED=\"NOT_IMPLEMENTED\",e.UNSUPPORTED_OPERATION=\"UNSUPPORTED_OPERATION\",e.NETWORK_ERROR=\"NETWORK_ERROR\",e.SERVER_ERROR=\"SERVER_ERROR\",e.TIMEOUT=\"TIMEOUT\",e.BUFFER_OVERRUN=\"BUFFER_OVERRUN\",e.NUMERIC_FAULT=\"NUMERIC_FAULT\",e.MISSING_NEW=\"MISSING_NEW\",e.INVALID_ARGUMENT=\"INVALID_ARGUMENT\",e.MISSING_ARGUMENT=\"MISSING_ARGUMENT\",e.UNEXPECTED_ARGUMENT=\"UNEXPECTED_ARGUMENT\",e.CALL_EXCEPTION=\"CALL_EXCEPTION\",e.INSUFFICIENT_FUNDS=\"INSUFFICIENT_FUNDS\",e.NONCE_EXPIRED=\"NONCE_EXPIRED\",e.REPLACEMENT_UNDERPRICED=\"REPLACEMENT_UNDERPRICED\",e.UNPREDICTABLE_GAS_LIMIT=\"UNPREDICTABLE_GAS_LIMIT\"}(f||(f={}));class l{constructor(e){Object.defineProperty(this,\"version\",{enumerable:!0,value:e,writable:!1})}_log(e,t){const r=e.toLowerCase();null==o[r]&&this.throwArgumentError(\"invalid log level name\",\"logLevel\",e),s>o[r]||console.log.apply(console,t)}debug(...e){this._log(l.levels.DEBUG,e)}info(...e){this._log(l.levels.INFO,e)}warn(...e){this._log(l.levels.WARNING,e)}makeError(e,t,r){if(i)return this.makeError(\"censored error\",t,{});t||(t=l.errors.UNKNOWN_ERROR),r||(r={});const n=[];Object.keys(r).forEach((e=>{try{n.push(e+\"=\"+JSON.stringify(r[e]))}catch(t){n.push(e+\"=\"+JSON.stringify(r[e].toString()))}})),n.push(`code=${t}`),n.push(`version=${this.version}`);const o=e;n.length&&(e+=\" (\"+n.join(\", \")+\")\");const s=new Error(e);return s.reason=o,s.code=t,Object.keys(r).forEach((function(e){s[e]=r[e]})),s}throwError(e,t,r){throw this.makeError(e,t,r)}throwArgumentError(e,t,r){return this.throwError(e,l.errors.INVALID_ARGUMENT,{argument:t,value:r})}assert(e,t,r,n){e||this.throwError(t,r,n)}assertArgument(e,t,r,n){e||this.throwArgumentError(t,r,n)}checkNormalize(e){null==e&&(e=\"platform missing String.prototype.normalize\"),u&&this.throwError(\"platform missing String.prototype.normalize\",l.errors.UNSUPPORTED_OPERATION,{operation:\"String.prototype.normalize\",form:u})}checkSafeUint53(e,t){\"number\"==typeof e&&(null==t&&(t=\"value not safe\"),(e<0||e>=9007199254740991)&&this.throwError(t,l.errors.NUMERIC_FAULT,{operation:\"checkSafeInteger\",fault:\"out-of-safe-range\",value:e}),e%1&&this.throwError(t,l.errors.NUMERIC_FAULT,{operation:\"checkSafeInteger\",fault:\"non-integer\",value:e}))}checkArgumentCount(e,t,r){r=r?\": \"+r:\"\",e<t&&this.throwError(\"missing argument\"+r,l.errors.MISSING_ARGUMENT,{count:e,expectedCount:t}),e>t&&this.throwError(\"too many arguments\"+r,l.errors.UNEXPECTED_ARGUMENT,{count:e,expectedCount:t})}checkNew(e,t){e!==Object&&null!=e||this.throwError(\"missing new\",l.errors.MISSING_NEW,{name:t.name})}checkAbstract(e,t){e===t?this.throwError(\"cannot instantiate abstract class \"+JSON.stringify(t.name)+\" directly; use a sub-class\",l.errors.UNSUPPORTED_OPERATION,{name:e.name,operation:\"new\"}):e!==Object&&null!=e||this.throwError(\"missing new\",l.errors.MISSING_NEW,{name:t.name})}static globalLogger(){return a||(a=new l(\"logger/5.1.0\")),a}static setCensorship(e,t){if(!e&&t&&this.globalLogger().throwError(\"cannot permanently disable censorship\",l.errors.UNSUPPORTED_OPERATION,{operation:\"setCensorship\"}),n){if(!e)return;this.globalLogger().throwError(\"error censorship permanent\",l.errors.UNSUPPORTED_OPERATION,{operation:\"setCensorship\"})}i=!!e,n=!!t}static setLogLevel(e){const t=o[e.toLowerCase()];null!=t?s=t:l.globalLogger().warn(\"invalid log level - \"+e)}static from(e){return new l(e)}}l.errors=f,l.levels=c},9082:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.createCurve=t.getHash=void 0;const n=r(9569),i=r(8089),o=r(6551);function s(e){return{hash:e,hmac:(t,...r)=>(0,n.hmac)(e,t,(0,i.concatBytes)(...r)),randomBytes:i.randomBytes}}t.getHash=s,t.createCurve=function(e,t){const r=t=>(0,o.weierstrass)({...e,...s(t)});return Object.freeze({...r(t),create:r})}},1525:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.validateBasic=t.wNAF=void 0;const n=r(4632),i=r(219),o=BigInt(0),s=BigInt(1);t.wNAF=function(e,t){const r=(e,t)=>{const r=t.negate();return e?r:t},n=e=>({windows:Math.ceil(t/e)+1,windowSize:2**(e-1)});return{constTimeNegate:r,unsafeLadder(t,r){let n=e.ZERO,i=t;for(;r>o;)r&s&&(n=n.add(i)),i=i.double(),r>>=s;return n},precomputeWindow(e,t){const{windows:r,windowSize:i}=n(t),o=[];let s=e,a=s;for(let e=0;e<r;e++){a=s,o.push(a);for(let e=1;e<i;e++)a=a.add(s),o.push(a);s=a.double()}return o},wNAF(t,i,o){const{windows:a,windowSize:u}=n(t);let c=e.ZERO,f=e.BASE;const l=BigInt(2**t-1),d=2**t,h=BigInt(t);for(let e=0;e<a;e++){const t=e*u;let n=Number(o&l);o>>=h,n>u&&(n-=d,o+=s);const a=t,p=t+Math.abs(n)-1,y=e%2!=0,b=n<0;0===n?f=f.add(r(y,i[a])):c=c.add(r(b,i[p]))}return{p:c,f}},wNAFCached(e,t,r,n){const i=e._WINDOW_SIZE||1;let o=t.get(e);return o||(o=this.precomputeWindow(e,i),1!==i&&t.set(e,n(o))),this.wNAF(i,o,r)}}},t.validateBasic=function(e){return(0,n.validateField)(e.Fp),(0,i.validateObject)(e,{n:\"bigint\",h:\"bigint\",Gx:\"field\",Gy:\"field\"},{nBitLength:\"isSafeInteger\",nByteLength:\"isSafeInteger\"}),Object.freeze({...(0,n.nLength)(e.n,e.nBitLength),...e})}},3986:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.twistedEdwards=void 0;const n=r(4632),i=r(219),o=r(219),s=r(1525),a=BigInt(0),u=BigInt(1),c=BigInt(2),f=BigInt(8);t.twistedEdwards=function(e){const t=function(e){const t=(0,s.validateBasic)(e);return i.validateObject(e,{hash:\"function\",a:\"bigint\",d:\"bigint\",randomBytes:\"function\"},{adjustScalarBytes:\"function\",domain:\"function\",uvRatio:\"function\",mapToCurve:\"function\"}),Object.freeze({...t})}(e),{Fp:r,n:l,preHash:d,hash:h,randomBytes:p,nByteLength:y,h:b}=t,m=c**BigInt(8*y),g=r.create,v=t.uvRatio||((e,t)=>{try{return{isValid:!0,value:r.sqrt(e*r.inv(t))}}catch(e){return{isValid:!1,value:a}}}),w=t.adjustScalarBytes||(e=>e),E=t.domain||((e,t,r)=>{if(t.length||r)throw new Error(\"Contexts/pre-hash are not supported\");return e}),_=e=>\"bigint\"==typeof e&&0n<e,S=(e,t)=>_(e)&&_(t)&&e<t,T=e=>e===a||S(e,m);function B(e,t){if(S(e,t))return e;throw new Error(`Expected valid scalar < ${t}, got ${typeof e} ${e}`)}function A(e){return e===a?e:B(e,l)}const x=new Map;function P(e){if(!(e instanceof M))throw new Error(\"ExtendedPoint expected\")}class M{constructor(e,t,r,n){if(this.ex=e,this.ey=t,this.ez=r,this.et=n,!T(e))throw new Error(\"x required\");if(!T(t))throw new Error(\"y required\");if(!T(r))throw new Error(\"z required\");if(!T(n))throw new Error(\"t required\")}get x(){return this.toAffine().x}get y(){return this.toAffine().y}static fromAffine(e){if(e instanceof M)throw new Error(\"extended point not allowed\");const{x:t,y:r}=e||{};if(!T(t)||!T(r))throw new Error(\"invalid affine point\");return new M(t,r,u,g(t*r))}static normalizeZ(e){const t=r.invertBatch(e.map((e=>e.ez)));return e.map(((e,r)=>e.toAffine(t[r]))).map(M.fromAffine)}_setWindowSize(e){this._WINDOW_SIZE=e,x.delete(this)}assertValidity(){const{a:e,d:r}=t;if(this.is0())throw new Error(\"bad point: ZERO\");const{ex:n,ey:i,ez:o,et:s}=this,a=g(n*n),u=g(i*i),c=g(o*o),f=g(c*c),l=g(a*e);if(g(c*g(l+u))!==g(f+g(r*g(a*u))))throw new Error(\"bad point: equation left != right (1)\");if(g(n*i)!==g(o*s))throw new Error(\"bad point: equation left != right (2)\")}equals(e){P(e);const{ex:t,ey:r,ez:n}=this,{ex:i,ey:o,ez:s}=e,a=g(t*s),u=g(i*n),c=g(r*s),f=g(o*n);return a===u&&c===f}is0(){return this.equals(M.ZERO)}negate(){return new M(g(-this.ex),this.ey,this.ez,g(-this.et))}double(){const{a:e}=t,{ex:r,ey:n,ez:i}=this,o=g(r*r),s=g(n*n),a=g(c*g(i*i)),u=g(e*o),f=r+n,l=g(g(f*f)-o-s),d=u+s,h=d-a,p=u-s,y=g(l*h),b=g(d*p),m=g(l*p),v=g(h*d);return new M(y,b,v,m)}add(e){P(e);const{a:r,d:n}=t,{ex:i,ey:o,ez:s,et:u}=this,{ex:f,ey:l,ez:d,et:h}=e;if(r===BigInt(-1)){const e=g((o-i)*(l+f)),t=g((o+i)*(l-f)),r=g(t-e);if(r===a)return this.double();const n=g(s*c*h),p=g(u*c*d),y=p+n,b=t+e,m=p-n,v=g(y*r),w=g(b*m),E=g(y*m),_=g(r*b);return new M(v,w,_,E)}const p=g(i*f),y=g(o*l),b=g(u*n*h),m=g(s*d),v=g((i+o)*(f+l)-p-y),w=m-b,E=m+b,_=g(y-r*p),S=g(v*w),T=g(E*_),B=g(v*_),A=g(w*E);return new M(S,T,A,B)}subtract(e){return this.add(e.negate())}wNAF(e){return k.wNAFCached(this,x,e,M.normalizeZ)}multiply(e){const{p:t,f:r}=this.wNAF(B(e,l));return M.normalizeZ([t,r])[0]}multiplyUnsafe(e){let t=A(e);return t===a?O:this.equals(O)||t===u?this:this.equals(C)?this.wNAF(t).p:k.unsafeLadder(this,t)}isSmallOrder(){return this.multiplyUnsafe(b).is0()}isTorsionFree(){return k.unsafeLadder(this,l).is0()}toAffine(e){const{ex:t,ey:n,ez:i}=this,o=this.is0();null==e&&(e=o?f:r.inv(i));const s=g(t*e),c=g(n*e),l=g(i*e);if(o)return{x:a,y:u};if(l!==u)throw new Error(\"invZ was invalid\");return{x:s,y:c}}clearCofactor(){const{h:e}=t;return e===u?this:this.multiplyUnsafe(e)}static fromHex(e,n=!0){const{d:s,a:c}=t,f=r.BYTES,l=(e=(0,o.ensureBytes)(\"pointHex\",e,f)).slice(),d=e[f-1];l[f-1]=-129&d;const h=i.bytesToNumberLE(l);h===a||B(h,n?r.ORDER:m);const p=g(h*h),y=g(p-u),b=g(s*p-c);let{isValid:w,value:E}=v(y,b);if(!w)throw new Error(\"Point.fromHex: invalid y coordinate\");return 0!=(128&d)!=((E&u)===u)&&(E=g(-E)),M.fromAffine({x:E,y:h})}static fromPrivateKey(e){return I(e).point}toRawBytes(){const{x:e,y:t}=this.toAffine(),n=i.numberToBytesLE(t,r.BYTES);return n[n.length-1]|=e&u?128:0,n}toHex(){return i.bytesToHex(this.toRawBytes())}}M.BASE=new M(t.Gx,t.Gy,u,g(t.Gx*t.Gy)),M.ZERO=new M(a,u,u,a);const{BASE:C,ZERO:O}=M,k=(0,s.wNAF)(M,8*y);function R(e){return(0,n.mod)(e,l)}function L(e){return R(i.bytesToNumberLE(e))}function I(e){const t=y;e=(0,o.ensureBytes)(\"private key\",e,t);const r=(0,o.ensureBytes)(\"hashed private key\",h(e),2*t),n=w(r.slice(0,t)),i=r.slice(t,2*t),s=L(n),a=C.multiply(s),u=a.toRawBytes();return{head:n,prefix:i,scalar:s,point:a,pointBytes:u}}function N(e=new Uint8Array,...t){const r=i.concatBytes(...t);return L(h(E(r,(0,o.ensureBytes)(\"context\",e),!!d)))}return C._setWindowSize(8),{CURVE:t,getPublicKey:function(e){return I(e).pointBytes},sign:function(e,t,n){e=(0,o.ensureBytes)(\"message\",e),d&&(e=d(e));const{prefix:s,scalar:a,pointBytes:u}=I(t),c=N(n,s,e),f=C.multiply(c).toRawBytes(),l=R(c+N(n,f,u,e)*a);A(l);const h=i.concatBytes(f,i.numberToBytesLE(l,r.BYTES));return(0,o.ensureBytes)(\"result\",h,2*y)},verify:function(e,t,n,s){const a=r.BYTES;e=(0,o.ensureBytes)(\"signature\",e,2*a),t=(0,o.ensureBytes)(\"message\",t),d&&(t=d(t));const u=M.fromHex(n,!1),c=M.fromHex(e.slice(0,a),!1),f=i.bytesToNumberLE(e.slice(a,2*a)),l=C.multiplyUnsafe(f),h=N(s,c.toRawBytes(),u.toRawBytes(),t);return c.add(u.multiplyUnsafe(h)).subtract(l).clearCofactor().equals(M.ZERO)},ExtendedPoint:M,utils:{getExtendedPublicKey:I,randomPrivateKey:()=>p(r.BYTES),precompute:(e=8,t=M.BASE)=>(t._setWindowSize(e),t.multiply(BigInt(3)),t)}}}},5134:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.createHasher=t.isogenyMap=t.hash_to_field=t.expand_message_xof=t.expand_message_xmd=void 0;const n=r(4632),i=r(219),o=i.bytesToNumberBE;function s(e,t){if(e<0||e>=1<<8*t)throw new Error(`bad I2OSP call: value=${e} length=${t}`);const r=Array.from({length:t}).fill(0);for(let n=t-1;n>=0;n--)r[n]=255&e,e>>>=8;return new Uint8Array(r)}function a(e,t){const r=new Uint8Array(e.length);for(let n=0;n<e.length;n++)r[n]=e[n]^t[n];return r}function u(e){if(!(e instanceof Uint8Array))throw new Error(\"Uint8Array expected\")}function c(e){if(!Number.isSafeInteger(e))throw new Error(\"number expected\")}function f(e,t,r,n){u(e),u(t),c(r),t.length>255&&(t=n((0,i.concatBytes)((0,i.utf8ToBytes)(\"H2C-OVERSIZE-DST-\"),t)));const{outputLen:o,blockLen:f}=n,l=Math.ceil(r/o);if(l>255)throw new Error(\"Invalid xmd length\");const d=(0,i.concatBytes)(t,s(t.length,1)),h=s(0,f),p=s(r,2),y=new Array(l),b=n((0,i.concatBytes)(h,e,p,s(0,1),d));y[0]=n((0,i.concatBytes)(b,s(1,1),d));for(let e=1;e<=l;e++){const t=[a(b,y[e-1]),s(e+1,1),d];y[e]=n((0,i.concatBytes)(...t))}return(0,i.concatBytes)(...y).slice(0,r)}function l(e,t,r,n,o){if(u(e),u(t),c(r),t.length>255){const e=Math.ceil(2*n/8);t=o.create({dkLen:e}).update((0,i.utf8ToBytes)(\"H2C-OVERSIZE-DST-\")).update(t).digest()}if(r>65535||t.length>255)throw new Error(\"expand_message_xof: invalid lenInBytes\");return o.create({dkLen:r}).update(e).update(s(r,2)).update(t).update(s(t.length,1)).digest()}function d(e,t,r){(0,i.validateObject)(r,{DST:\"string\",p:\"bigint\",m:\"isSafeInteger\",k:\"isSafeInteger\",hash:\"hash\"});const{p:s,k:a,m:d,hash:h,expand:p,DST:y}=r;u(e),c(t);const b=function(e){if(e instanceof Uint8Array)return e;if(\"string\"==typeof e)return(0,i.utf8ToBytes)(e);throw new Error(\"DST must be Uint8Array or string\")}(y),m=s.toString(2).length,g=Math.ceil((m+a)/8),v=t*d*g;let w;if(\"xmd\"===p)w=f(e,b,v,h);else if(\"xof\"===p)w=l(e,b,v,a,h);else{if(void 0!==p)throw new Error('expand must be \"xmd\", \"xof\" or undefined');w=e}const E=new Array(t);for(let e=0;e<t;e++){const t=new Array(d);for(let r=0;r<d;r++){const i=g*(r+e*d),a=w.subarray(i,i+g);t[r]=(0,n.mod)(o(a),s)}E[e]=t}return E}t.expand_message_xmd=f,t.expand_message_xof=l,t.hash_to_field=d,t.isogenyMap=function(e,t){const r=t.map((e=>Array.from(e).reverse()));return(t,n)=>{const[i,o,s,a]=r.map((r=>r.reduce(((r,n)=>e.add(e.mul(r,t),n)))));return t=e.div(i,o),n=e.mul(n,e.div(s,a)),{x:t,y:n}}},t.createHasher=function(e,t,r){if(\"function\"!=typeof t)throw new Error(\"mapToCurve() must be defined\");return{hashToCurve(n,i){const o=d(n,2,{...r,DST:r.DST,...i}),s=e.fromAffine(t(o[0])),a=e.fromAffine(t(o[1])),u=s.add(a).clearCofactor();return u.assertValidity(),u},encodeToCurve(n,i){const o=d(n,1,{...r,DST:r.encodeDST,...i}),s=e.fromAffine(t(o[0])).clearCofactor();return s.assertValidity(),s}}}},4632:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.hashToPrivateScalar=t.FpSqrtEven=t.FpSqrtOdd=t.Fp=t.nLength=t.FpIsSquare=t.FpDiv=t.FpInvertBatch=t.FpPow=t.validateField=t.isNegativeLE=t.FpSqrt=t.tonelliShanks=t.invert=t.pow2=t.pow=t.mod=void 0;const n=r(219),i=BigInt(0),o=BigInt(1),s=BigInt(2),a=BigInt(3),u=BigInt(4),c=BigInt(5),f=BigInt(8);function l(e,t){const r=e%t;return r>=i?r:t+r}function d(e,t,r){if(r<=i||t<i)throw new Error(\"Expected power/modulo > 0\");if(r===o)return i;let n=o;for(;t>i;)t&o&&(n=n*e%r),e=e*e%r,t>>=o;return n}function h(e,t){if(e===i||t<=i)throw new Error(`invert: expected positive integers, got n=${e} mod=${t}`);let r=l(e,t),n=t,s=i,a=o,u=o,c=i;for(;r!==i;){const e=n/r,t=n%r,i=s-u*e,o=a-c*e;n=r,r=t,s=u,a=c,u=i,c=o}if(n!==o)throw new Error(\"invert: does not exist\");return l(s,t)}function p(e){const t=(e-o)/s;let r,n,a;for(r=e-o,n=0;r%s===i;r/=s,n++);for(a=s;a<e&&d(a,t,e)!==e-o;a++);if(1===n){const t=(e+o)/u;return function(e,r){const n=e.pow(r,t);if(!e.eql(e.sqr(n),r))throw new Error(\"Cannot find square root\");return n}}const c=(r+o)/s;return function(e,i){if(e.pow(i,t)===e.neg(e.ONE))throw new Error(\"Cannot find square root\");let s=n,u=e.pow(e.mul(e.ONE,a),r),f=e.pow(i,c),l=e.pow(i,r);for(;!e.eql(l,e.ONE);){if(e.eql(l,e.ZERO))return e.ZERO;let t=1;for(let r=e.sqr(l);t<s&&!e.eql(r,e.ONE);t++)r=e.sqr(r);const r=e.pow(u,o<<BigInt(s-t-1));u=e.sqr(r),f=e.mul(f,r),l=e.mul(l,u),s=t}return f}}function y(e){if(e%u===a){const t=(e+o)/u;return function(e,r){const n=e.pow(r,t);if(!e.eql(e.sqr(n),r))throw new Error(\"Cannot find square root\");return n}}if(e%f===c){const t=(e-c)/f;return function(e,r){const n=e.mul(r,s),i=e.pow(n,t),o=e.mul(r,i),a=e.mul(e.mul(o,s),i),u=e.mul(o,e.sub(a,e.ONE));if(!e.eql(e.sqr(u),r))throw new Error(\"Cannot find square root\");return u}}return p(e)}BigInt(9),BigInt(16),t.mod=l,t.pow=d,t.pow2=function(e,t,r){let n=e;for(;t-- >i;)n*=n,n%=r;return n},t.invert=h,t.tonelliShanks=p,t.FpSqrt=y,t.isNegativeLE=(e,t)=>(l(e,t)&o)===o;const b=[\"create\",\"isValid\",\"is0\",\"neg\",\"inv\",\"sqrt\",\"sqr\",\"eql\",\"add\",\"sub\",\"mul\",\"pow\",\"div\",\"addN\",\"subN\",\"mulN\",\"sqrN\"];function m(e,t,r){if(r<i)throw new Error(\"Expected power > 0\");if(r===i)return e.ONE;if(r===o)return t;let n=e.ONE,s=t;for(;r>i;)r&o&&(n=e.mul(n,s)),s=e.sqr(s),r>>=1n;return n}function g(e,t){const r=new Array(t.length),n=t.reduce(((t,n,i)=>e.is0(n)?t:(r[i]=t,e.mul(t,n))),e.ONE),i=e.inv(n);return t.reduceRight(((t,n,i)=>e.is0(n)?t:(r[i]=e.mul(t,r[i]),e.mul(t,n))),i),r}function v(e,t){const r=void 0!==t?t:e.toString(2).length;return{nBitLength:r,nByteLength:Math.ceil(r/8)}}t.validateField=function(e){const t=b.reduce(((e,t)=>(e[t]=\"function\",e)),{ORDER:\"bigint\",MASK:\"bigint\",BYTES:\"isSafeInteger\",BITS:\"isSafeInteger\"});return(0,n.validateObject)(e,t)},t.FpPow=m,t.FpInvertBatch=g,t.FpDiv=function(e,t,r){return e.mul(t,\"bigint\"==typeof r?h(r,e.ORDER):e.inv(r))},t.FpIsSquare=function(e){const t=(e.ORDER-o)/s;return r=>{const n=e.pow(r,t);return e.eql(n,e.ZERO)||e.eql(n,e.ONE)}},t.nLength=v,t.Fp=function(e,t,r=!1,s={}){if(e<=i)throw new Error(`Expected Fp ORDER > 0, got ${e}`);const{nBitLength:a,nByteLength:u}=v(e,t);if(u>2048)throw new Error(\"Field lengths over 2048 bytes are not supported\");const c=y(e),f=Object.freeze({ORDER:e,BITS:a,BYTES:u,MASK:(0,n.bitMask)(a),ZERO:i,ONE:o,create:t=>l(t,e),isValid:t=>{if(\"bigint\"!=typeof t)throw new Error(\"Invalid field element: expected bigint, got \"+typeof t);return i<=t&&t<e},is0:e=>e===i,isOdd:e=>(e&o)===o,neg:t=>l(-t,e),eql:(e,t)=>e===t,sqr:t=>l(t*t,e),add:(t,r)=>l(t+r,e),sub:(t,r)=>l(t-r,e),mul:(t,r)=>l(t*r,e),pow:(e,t)=>m(f,e,t),div:(t,r)=>l(t*h(r,e),e),sqrN:e=>e*e,addN:(e,t)=>e+t,subN:(e,t)=>e-t,mulN:(e,t)=>e*t,inv:t=>h(t,e),sqrt:s.sqrt||(e=>c(f,e)),invertBatch:e=>g(f,e),cmov:(e,t,r)=>r?t:e,toBytes:e=>r?(0,n.numberToBytesLE)(e,u):(0,n.numberToBytesBE)(e,u),fromBytes:e=>{if(e.length!==u)throw new Error(`Fp.fromBytes: expected ${u}, got ${e.length}`);return r?(0,n.bytesToNumberLE)(e):(0,n.bytesToNumberBE)(e)}});return Object.freeze(f)},t.FpSqrtOdd=function(e,t){if(!e.isOdd)throw new Error(\"Field doesn't have isOdd\");const r=e.sqrt(t);return e.isOdd(r)?r:e.neg(r)},t.FpSqrtEven=function(e,t){if(!e.isOdd)throw new Error(\"Field doesn't have isOdd\");const r=e.sqrt(t);return e.isOdd(r)?e.neg(r):r},t.hashToPrivateScalar=function(e,t,r=!1){const i=(e=(0,n.ensureBytes)(\"privateHash\",e)).length,s=v(t).nByteLength+8;if(s<24||i<s||i>1024)throw new Error(`hashToPrivateScalar: expected ${s}-1024 bytes of input, got ${i}`);return l(r?(0,n.bytesToNumberLE)(e):(0,n.bytesToNumberBE)(e),t-o)+o}},3924:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.montgomery=void 0;const n=r(4632),i=r(219),o=BigInt(0),s=BigInt(1);t.montgomery=function(e){const t=(r=e,(0,i.validateObject)(r,{a:\"bigint\"},{montgomeryBits:\"isSafeInteger\",nByteLength:\"isSafeInteger\",adjustScalarBytes:\"function\",domain:\"function\",powPminus2:\"function\",Gu:\"bigint\"}),Object.freeze({...r}));var r;const{P:a}=t,u=e=>(0,n.mod)(e,a),c=t.montgomeryBits,f=Math.ceil(c/8),l=t.nByteLength,d=t.adjustScalarBytes||(e=>e),h=t.powPminus2||(e=>(0,n.pow)(e,a-BigInt(2),a));function p(e,t,r){const n=u(e*(t-r));return[t=u(t-n),r=u(r+n)]}function y(e){if(\"bigint\"==typeof e&&o<=e&&e<a)return e;throw new Error(\"Expected valid scalar 0 < scalar < CURVE.P\")}const b=(t.a-BigInt(2))/BigInt(4);function m(e){return(0,i.numberToBytesLE)(u(e),f)}function g(e,t){const r=function(e){const t=(0,i.ensureBytes)(\"u coordinate\",e,f);return l===f&&(t[l-1]&=127),(0,i.bytesToNumberLE)(t)}(t),n=function(e,t){const r=y(e),n=y(t),i=r;let a,f=s,l=o,d=r,m=s,g=o;for(let e=BigInt(c-1);e>=o;e--){const t=n>>e&s;g^=t,a=p(g,f,d),f=a[0],d=a[1],a=p(g,l,m),l=a[0],m=a[1],g=t;const r=f+l,o=u(r*r),c=f-l,h=u(c*c),y=o-h,v=d+m,w=u((d-m)*r),E=u(v*c),_=w+E,S=w-E;d=u(_*_),m=u(i*u(S*S)),f=u(o*h),l=u(y*(o+u(b*y)))}a=p(g,f,d),f=a[0],d=a[1],a=p(g,l,m),l=a[0],m=a[1];const v=h(l);return u(f*v)}(r,function(e){const t=(0,i.ensureBytes)(\"scalar\",e);if(t.length!==f&&t.length!==l)throw new Error(`Expected ${f} or ${l} bytes, got ${t.length}`);return(0,i.bytesToNumberLE)(d(t))}(e));if(n===o)throw new Error(\"Invalid private or public key received\");return m(n)}const v=m(t.Gu);function w(e){return g(e,v)}return{scalarMult:g,scalarMultBase:w,getSharedSecret:(e,t)=>g(e,t),getPublicKey:e=>w(e),utils:{randomPrivateKey:()=>t.randomBytes(t.nByteLength)},GuBytes:v}}},219:(e,t)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.validateObject=t.createHmacDrbg=t.bitMask=t.bitSet=t.bitGet=t.bitLen=t.utf8ToBytes=t.equalBytes=t.concatBytes=t.ensureBytes=t.numberToVarBytesBE=t.numberToBytesLE=t.numberToBytesBE=t.bytesToNumberLE=t.bytesToNumberBE=t.hexToBytes=t.hexToNumber=t.numberToHexUnpadded=t.bytesToHex=void 0;const r=BigInt(0),n=BigInt(1),i=BigInt(2),o=e=>e instanceof Uint8Array,s=Array.from({length:256},((e,t)=>t.toString(16).padStart(2,\"0\")));function a(e){if(!o(e))throw new Error(\"Uint8Array expected\");let t=\"\";for(let r=0;r<e.length;r++)t+=s[e[r]];return t}function u(e){const t=e.toString(16);return 1&t.length?`0${t}`:t}function c(e){if(\"string\"!=typeof e)throw new Error(\"hex string expected, got \"+typeof e);return BigInt(\"\"===e?\"0\":`0x${e}`)}function f(e){if(\"string\"!=typeof e)throw new Error(\"hex string expected, got \"+typeof e);if(e.length%2)throw new Error(\"hex string is invalid: unpadded \"+e.length);const t=new Uint8Array(e.length/2);for(let r=0;r<t.length;r++){const n=2*r,i=e.slice(n,n+2),o=Number.parseInt(i,16);if(Number.isNaN(o)||o<0)throw new Error(\"invalid byte sequence\");t[r]=o}return t}function l(...e){const t=new Uint8Array(e.reduce(((e,t)=>e+t.length),0));let r=0;return e.forEach((e=>{if(!o(e))throw new Error(\"Uint8Array expected\");t.set(e,r),r+=e.length})),t}t.bytesToHex=a,t.numberToHexUnpadded=u,t.hexToNumber=c,t.hexToBytes=f,t.bytesToNumberBE=function(e){return c(a(e))},t.bytesToNumberLE=function(e){if(!o(e))throw new Error(\"Uint8Array expected\");return c(a(Uint8Array.from(e).reverse()))},t.numberToBytesBE=(e,t)=>f(e.toString(16).padStart(2*t,\"0\")),t.numberToBytesLE=(e,r)=>(0,t.numberToBytesBE)(e,r).reverse(),t.numberToVarBytesBE=e=>f(u(e)),t.ensureBytes=function(e,t,r){let n;if(\"string\"==typeof t)try{n=f(t)}catch(r){throw new Error(`${e} must be valid hex string, got \"${t}\". Cause: ${r}`)}else{if(!o(t))throw new Error(`${e} must be hex string or Uint8Array`);n=Uint8Array.from(t)}const i=n.length;if(\"number\"==typeof r&&i!==r)throw new Error(`${e} expected ${r} bytes, got ${i}`);return n},t.concatBytes=l,t.equalBytes=function(e,t){if(e.length!==t.length)return!1;for(let r=0;r<e.length;r++)if(e[r]!==t[r])return!1;return!0},t.utf8ToBytes=function(e){if(\"string\"!=typeof e)throw new Error(\"utf8ToBytes expected string, got \"+typeof e);return(new TextEncoder).encode(e)},t.bitLen=function(e){let t;for(t=0;e>0n;e>>=n,t+=1);return t},t.bitGet=(e,t)=>e>>BigInt(t)&1n,t.bitSet=(e,t,i)=>e|(i?n:r)<<BigInt(t),t.bitMask=e=>(i<<BigInt(e-1))-n;const d=e=>new Uint8Array(e),h=e=>Uint8Array.from(e);t.createHmacDrbg=function(e,t,r){if(\"number\"!=typeof e||e<2)throw new Error(\"hashLen must be a number\");if(\"number\"!=typeof t||t<2)throw new Error(\"qByteLen must be a number\");if(\"function\"!=typeof r)throw new Error(\"hmacFn must be a function\");let n=d(e),i=d(e),o=0;const s=()=>{n.fill(1),i.fill(0),o=0},a=(...e)=>r(i,n,...e),u=(e=d())=>{i=a(h([0]),e),n=a(),0!==e.length&&(i=a(h([1]),e),n=a())},c=()=>{if(o++>=1e3)throw new Error(\"drbg: tried 1000 values\");let e=0;const r=[];for(;e<t;){n=a();const t=n.slice();r.push(t),e+=n.length}return l(...r)};return(e,t)=>{let r;for(s(),u(e);!(r=t(c()));)u();return s(),r}};const p={bigint:e=>\"bigint\"==typeof e,function:e=>\"function\"==typeof e,boolean:e=>\"boolean\"==typeof e,string:e=>\"string\"==typeof e,isSafeInteger:e=>Number.isSafeInteger(e),array:e=>Array.isArray(e),field:(e,t)=>t.Fp.isValid(e),hash:e=>\"function\"==typeof e&&Number.isSafeInteger(e.outputLen)};t.validateObject=function(e,t,r={}){const n=(t,r,n)=>{const i=p[r];if(\"function\"!=typeof i)throw new Error(`Invalid validator \"${r}\", expected function`);const o=e[t];if(!(n&&void 0===o||i(o,e)))throw new Error(`Invalid param ${String(t)}=${o} (${typeof o}), expected ${r}`)};for(const[e,r]of Object.entries(t))n(e,r,!1);for(const[e,t]of Object.entries(r))n(e,t,!0);return e}},6551:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.mapToCurveSimpleSWU=t.SWUFpSqrtRatio=t.weierstrass=t.weierstrassPoints=void 0;const n=r(4632),i=r(219),o=r(219),s=r(1525),{bytesToNumberBE:a,hexToBytes:u}=i,c={Err:class extends Error{constructor(e=\"\"){super(e)}},_parseInt(e){const{Err:t}=c;if(e.length<2||2!==e[0])throw new t(\"Invalid signature integer tag\");const r=e[1],n=e.subarray(2,r+2);if(!r||n.length!==r)throw new t(\"Invalid signature integer: wrong length\");if(0===n[0]&&n[1]<=127)throw new t(\"Invalid signature integer: trailing length\");return{d:a(n),l:e.subarray(r+2)}},toSig(e){const{Err:t}=c,r=\"string\"==typeof e?u(e):e;if(!(r instanceof Uint8Array))throw new Error(\"ui8a expected\");let n=r.length;if(n<2||48!=r[0])throw new t(\"Invalid signature tag\");if(r[1]!==n-2)throw new t(\"Invalid signature: incorrect length\");const{d:i,l:o}=c._parseInt(r.subarray(2)),{d:s,l:a}=c._parseInt(o);if(a.length)throw new t(\"Invalid signature: left bytes after parsing\");return{r:i,s}},hexFromSig(e){const t=e=>Number.parseInt(e[0],16)>=8?\"00\"+e:e,r=e=>{const t=e.toString(16);return 1&t.length?`0${t}`:t},n=t(r(e.s)),i=t(r(e.r)),o=n.length/2,s=i.length/2,a=r(o),u=r(s);return`30${r(s+o+4)}02${u}${i}02${a}${n}`}},f=BigInt(0),l=BigInt(1);function d(e){const t=function(e){const t=(0,s.validateBasic)(e);i.validateObject(t,{a:\"field\",b:\"field\",fromBytes:\"function\",toBytes:\"function\"},{allowedPrivateKeyLengths:\"array\",wrapPrivateKey:\"boolean\",isTorsionFree:\"function\",clearCofactor:\"function\",allowInfinityPoint:\"boolean\"});const{endo:r,Fp:n,a:o}=t;if(r){if(!n.eql(o,n.ZERO))throw new Error(\"Endomorphism can only be defined for Koblitz curves that have a=0\");if(\"object\"!=typeof r||\"bigint\"!=typeof r.beta||\"function\"!=typeof r.splitScalar)throw new Error(\"Expected endomorphism with beta: bigint and splitScalar: function\")}return Object.freeze({...t})}(e),{Fp:r}=t;function a(e){const{a:n,b:i}=t,o=r.sqr(e),s=r.mul(o,e);return r.add(r.add(s,r.mul(e,n)),i)}function u(e){return\"bigint\"==typeof e&&f<e&&e<t.n}function c(e){if(!u(e))throw new Error(\"Expected valid bigint: 0 < bigint < curve.n\")}function d(e){const{allowedPrivateKeyLengths:r,nByteLength:s,wrapPrivateKey:a,n:u}=t;if(r&&\"bigint\"!=typeof e){if(e instanceof Uint8Array&&(e=i.bytesToHex(e)),\"string\"!=typeof e||!r.includes(e.length))throw new Error(\"Invalid key\");e=e.padStart(2*s,\"0\")}let f;try{f=\"bigint\"==typeof e?e:i.bytesToNumberBE((0,o.ensureBytes)(\"private key\",e,s))}catch(t){throw new Error(`private key must be ${s} bytes, hex or bigint, not ${typeof e}`)}return a&&(f=n.mod(f,u)),c(f),f}const h=new Map;function p(e){if(!(e instanceof y))throw new Error(\"ProjectivePoint expected\")}class y{constructor(e,t,n){if(this.px=e,this.py=t,this.pz=n,null==e||!r.isValid(e))throw new Error(\"x required\");if(null==t||!r.isValid(t))throw new Error(\"y required\");if(null==n||!r.isValid(n))throw new Error(\"z required\")}static fromAffine(e){const{x:t,y:n}=e||{};if(!e||!r.isValid(t)||!r.isValid(n))throw new Error(\"invalid affine point\");if(e instanceof y)throw new Error(\"projective point not allowed\");const i=e=>r.eql(e,r.ZERO);return i(t)&&i(n)?y.ZERO:new y(t,n,r.ONE)}get x(){return this.toAffine().x}get y(){return this.toAffine().y}static normalizeZ(e){const t=r.invertBatch(e.map((e=>e.pz)));return e.map(((e,r)=>e.toAffine(t[r]))).map(y.fromAffine)}static fromHex(e){const r=y.fromAffine(t.fromBytes((0,o.ensureBytes)(\"pointHex\",e)));return r.assertValidity(),r}static fromPrivateKey(e){return y.BASE.multiply(d(e))}_setWindowSize(e){this._WINDOW_SIZE=e,h.delete(this)}assertValidity(){if(this.is0()){if(t.allowInfinityPoint)return;throw new Error(\"bad point: ZERO\")}const{x:e,y:n}=this.toAffine();if(!r.isValid(e)||!r.isValid(n))throw new Error(\"bad point: x or y not FE\");const i=r.sqr(n),o=a(e);if(!r.eql(i,o))throw new Error(\"bad point: equation left != right\");if(!this.isTorsionFree())throw new Error(\"bad point: not in prime-order subgroup\")}hasEvenY(){const{y:e}=this.toAffine();if(r.isOdd)return!r.isOdd(e);throw new Error(\"Field doesn't support isOdd\")}equals(e){p(e);const{px:t,py:n,pz:i}=this,{px:o,py:s,pz:a}=e,u=r.eql(r.mul(t,a),r.mul(o,i)),c=r.eql(r.mul(n,a),r.mul(s,i));return u&&c}negate(){return new y(this.px,r.neg(this.py),this.pz)}double(){const{a:e,b:n}=t,i=r.mul(n,3n),{px:o,py:s,pz:a}=this;let u=r.ZERO,c=r.ZERO,f=r.ZERO,l=r.mul(o,o),d=r.mul(s,s),h=r.mul(a,a),p=r.mul(o,s);return p=r.add(p,p),f=r.mul(o,a),f=r.add(f,f),u=r.mul(e,f),c=r.mul(i,h),c=r.add(u,c),u=r.sub(d,c),c=r.add(d,c),c=r.mul(u,c),u=r.mul(p,u),f=r.mul(i,f),h=r.mul(e,h),p=r.sub(l,h),p=r.mul(e,p),p=r.add(p,f),f=r.add(l,l),l=r.add(f,l),l=r.add(l,h),l=r.mul(l,p),c=r.add(c,l),h=r.mul(s,a),h=r.add(h,h),l=r.mul(h,p),u=r.sub(u,l),f=r.mul(h,d),f=r.add(f,f),f=r.add(f,f),new y(u,c,f)}add(e){p(e);const{px:n,py:i,pz:o}=this,{px:s,py:a,pz:u}=e;let c=r.ZERO,f=r.ZERO,l=r.ZERO;const d=t.a,h=r.mul(t.b,3n);let b=r.mul(n,s),m=r.mul(i,a),g=r.mul(o,u),v=r.add(n,i),w=r.add(s,a);v=r.mul(v,w),w=r.add(b,m),v=r.sub(v,w),w=r.add(n,o);let E=r.add(s,u);return w=r.mul(w,E),E=r.add(b,g),w=r.sub(w,E),E=r.add(i,o),c=r.add(a,u),E=r.mul(E,c),c=r.add(m,g),E=r.sub(E,c),l=r.mul(d,w),c=r.mul(h,g),l=r.add(c,l),c=r.sub(m,l),l=r.add(m,l),f=r.mul(c,l),m=r.add(b,b),m=r.add(m,b),g=r.mul(d,g),w=r.mul(h,w),m=r.add(m,g),g=r.sub(b,g),g=r.mul(d,g),w=r.add(w,g),b=r.mul(m,w),f=r.add(f,b),b=r.mul(E,w),c=r.mul(v,c),c=r.sub(c,b),b=r.mul(v,m),l=r.mul(E,l),l=r.add(l,b),new y(c,f,l)}subtract(e){return this.add(e.negate())}is0(){return this.equals(y.ZERO)}wNAF(e){return m.wNAFCached(this,h,e,(e=>{const t=r.invertBatch(e.map((e=>e.pz)));return e.map(((e,r)=>e.toAffine(t[r]))).map(y.fromAffine)}))}multiplyUnsafe(e){const n=y.ZERO;if(e===f)return n;if(c(e),e===l)return this;const{endo:i}=t;if(!i)return m.unsafeLadder(this,e);let{k1neg:o,k1:s,k2neg:a,k2:u}=i.splitScalar(e),d=n,h=n,p=this;for(;s>f||u>f;)s&l&&(d=d.add(p)),u&l&&(h=h.add(p)),p=p.double(),s>>=l,u>>=l;return o&&(d=d.negate()),a&&(h=h.negate()),h=new y(r.mul(h.px,i.beta),h.py,h.pz),d.add(h)}multiply(e){c(e);let n,i,o=e;const{endo:s}=t;if(s){const{k1neg:e,k1:t,k2neg:a,k2:u}=s.splitScalar(o);let{p:c,f}=this.wNAF(t),{p:l,f:d}=this.wNAF(u);c=m.constTimeNegate(e,c),l=m.constTimeNegate(a,l),l=new y(r.mul(l.px,s.beta),l.py,l.pz),n=c.add(l),i=f.add(d)}else{const{p:e,f:t}=this.wNAF(o);n=e,i=t}return y.normalizeZ([n,i])[0]}multiplyAndAddUnsafe(e,t,r){const n=y.BASE,i=(e,t)=>t!==f&&t!==l&&e.equals(n)?e.multiply(t):e.multiplyUnsafe(t),o=i(this,t).add(i(e,r));return o.is0()?void 0:o}toAffine(e){const{px:t,py:n,pz:i}=this,o=this.is0();null==e&&(e=o?r.ONE:r.inv(i));const s=r.mul(t,e),a=r.mul(n,e),u=r.mul(i,e);if(o)return{x:r.ZERO,y:r.ZERO};if(!r.eql(u,r.ONE))throw new Error(\"invZ was invalid\");return{x:s,y:a}}isTorsionFree(){const{h:e,isTorsionFree:r}=t;if(e===l)return!0;if(r)return r(y,this);throw new Error(\"isTorsionFree() has not been declared for the elliptic curve\")}clearCofactor(){const{h:e,clearCofactor:r}=t;return e===l?this:r?r(y,this):this.multiplyUnsafe(t.h)}toRawBytes(e=!0){return this.assertValidity(),t.toBytes(y,this,e)}toHex(e=!0){return i.bytesToHex(this.toRawBytes(e))}}y.BASE=new y(t.Gx,t.Gy,r.ONE),y.ZERO=new y(r.ZERO,r.ONE,r.ZERO);const b=t.nBitLength,m=(0,s.wNAF)(y,t.endo?Math.ceil(b/2):b);return{ProjectivePoint:y,normPrivateKeyToScalar:d,weierstrassEquation:a,isWithinCurveOrder:u}}function h(e,t){const r=e.ORDER;let n=0n;for(let e=r-1n;e%2n===0n;e/=2n)n+=1n;const i=n,o=(r-1n)/2n**i,s=(o-1n)/2n,a=2n**i-1n,u=2n**(i-1n),c=e.pow(t,o),f=e.pow(t,(o+1n)/2n);let l=(t,r)=>{let n=c,o=e.pow(r,a),l=e.sqr(o);l=e.mul(l,r);let d=e.mul(t,l);d=e.pow(d,s),d=e.mul(d,o),o=e.mul(d,r),l=e.mul(d,t);let h=e.mul(l,o);d=e.pow(h,u);let p=e.eql(d,e.ONE);o=e.mul(l,f),d=e.mul(h,n),l=e.cmov(o,l,p),h=e.cmov(d,h,p);for(let t=i;t>1;t--){let r=2n**(t-2n),i=e.pow(h,r);const s=e.eql(i,e.ONE);o=e.mul(l,n),n=e.mul(n,n),i=e.mul(h,n),l=e.cmov(o,l,s),h=e.cmov(i,h,s)}return{isValid:p,value:l}};if(e.ORDER%4n===3n){const r=(e.ORDER-3n)/4n,n=e.sqrt(e.neg(t));l=(t,i)=>{let o=e.sqr(i);const s=e.mul(t,i);o=e.mul(o,s);let a=e.pow(o,r);a=e.mul(a,s);const u=e.mul(a,n),c=e.mul(e.sqr(a),i),f=e.eql(c,t);return{isValid:f,value:e.cmov(u,a,f)}}}return l}t.weierstrassPoints=d,t.weierstrass=function(e){const t=function(e){const t=(0,s.validateBasic)(e);return i.validateObject(t,{hash:\"hash\",hmac:\"function\",randomBytes:\"function\"},{bits2int:\"function\",bits2int_modN:\"function\",lowS:\"boolean\"}),Object.freeze({lowS:!0,...t})}(e),r=t.n,a=t.Fp,u=a.BYTES+1,h=2*a.BYTES+1;function p(e){return n.mod(e,r)}function y(e){return n.invert(e,r)}const{ProjectivePoint:b,normPrivateKeyToScalar:m,weierstrassEquation:g,isWithinCurveOrder:v}=d({...t,toBytes(e,t,r){const n=t.toAffine(),o=a.toBytes(n.x),s=i.concatBytes;return r?s(Uint8Array.from([t.hasEvenY()?2:3]),o):s(Uint8Array.from([4]),o,a.toBytes(n.y))},fromBytes(e){const t=e.length,r=e[0],n=e.subarray(1);if(t!==u||2!==r&&3!==r){if(t===h&&4===r)return{x:a.fromBytes(n.subarray(0,a.BYTES)),y:a.fromBytes(n.subarray(a.BYTES,2*a.BYTES))};throw new Error(`Point of length ${t} was invalid. Expected ${u} compressed bytes or ${h} uncompressed bytes`)}{const e=i.bytesToNumberBE(n);if(!(f<(o=e)&&o<a.ORDER))throw new Error(\"Point is not on curve\");const t=g(e);let s=a.sqrt(t);return 1==(1&r)!=((s&l)===l)&&(s=a.neg(s)),{x:e,y:s}}var o}}),w=e=>i.bytesToHex(i.numberToBytesBE(e,t.nByteLength));function E(e){return e>r>>l}const _=(e,t,r)=>i.bytesToNumberBE(e.slice(t,r));class S{constructor(e,t,r){this.r=e,this.s=t,this.recovery=r,this.assertValidity()}static fromCompact(e){const r=t.nByteLength;return e=(0,o.ensureBytes)(\"compactSignature\",e,2*r),new S(_(e,0,r),_(e,r,2*r))}static fromDER(e){const{r:t,s:r}=c.toSig((0,o.ensureBytes)(\"DER\",e));return new S(t,r)}assertValidity(){if(!v(this.r))throw new Error(\"r must be 0 < r < CURVE.n\");if(!v(this.s))throw new Error(\"s must be 0 < s < CURVE.n\")}addRecoveryBit(e){return new S(this.r,this.s,e)}recoverPublicKey(e){const{r,s:n,recovery:i}=this,s=x((0,o.ensureBytes)(\"msgHash\",e));if(null==i||![0,1,2,3].includes(i))throw new Error(\"recovery id invalid\");const u=2===i||3===i?r+t.n:r;if(u>=a.ORDER)throw new Error(\"recovery id 2 or 3 invalid\");const c=0==(1&i)?\"02\":\"03\",f=b.fromHex(c+w(u)),l=y(u),d=p(-s*l),h=p(n*l),m=b.BASE.multiplyAndAddUnsafe(f,d,h);if(!m)throw new Error(\"point at infinify\");return m.assertValidity(),m}hasHighS(){return E(this.s)}normalizeS(){return this.hasHighS()?new S(this.r,p(-this.s),this.recovery):this}toDERRawBytes(){return i.hexToBytes(this.toDERHex())}toDERHex(){return c.hexFromSig({r:this.r,s:this.s})}toCompactRawBytes(){return i.hexToBytes(this.toCompactHex())}toCompactHex(){return w(this.r)+w(this.s)}}const T={isValidPrivateKey(e){try{return m(e),!0}catch(e){return!1}},normPrivateKeyToScalar:m,randomPrivateKey:()=>{const e=t.randomBytes(a.BYTES+8),o=n.hashToPrivateScalar(e,r);return i.numberToBytesBE(o,t.nByteLength)},precompute:(e=8,t=b.BASE)=>(t._setWindowSize(e),t.multiply(BigInt(3)),t)};function B(e){const t=e instanceof Uint8Array,r=\"string\"==typeof e,n=(t||r)&&e.length;return t?n===u||n===h:r?n===2*u||n===2*h:e instanceof b}const A=t.bits2int||function(e){const r=i.bytesToNumberBE(e),n=8*e.length-t.nBitLength;return n>0?r>>BigInt(n):r},x=t.bits2int_modN||function(e){return p(A(e))},P=i.bitMask(t.nBitLength);function M(e){if(\"bigint\"!=typeof e)throw new Error(\"bigint expected\");if(!(f<=e&&e<P))throw new Error(`bigint expected < 2^${t.nBitLength}`);return i.numberToBytesBE(e,t.nByteLength)}const C={lowS:t.lowS,prehash:!1},O={lowS:t.lowS,prehash:!1};return b.BASE._setWindowSize(8),{CURVE:t,getPublicKey:function(e,t=!0){return b.fromPrivateKey(e).toRawBytes(t)},getSharedSecret:function(e,t,r=!0){if(B(e))throw new Error(\"first arg must be private key\");if(!B(t))throw new Error(\"second arg must be public key\");return b.fromHex(t).multiply(m(e)).toRawBytes(r)},sign:function(e,r,n=C){const{seed:s,k2sig:u}=function(e,r,n=C){if([\"recovered\",\"canonical\"].some((e=>e in n)))throw new Error(\"sign() legacy options not supported\");const{hash:s,randomBytes:u}=t;let{lowS:c,prehash:d,extraEntropy:h}=n;null==c&&(c=!0),e=(0,o.ensureBytes)(\"msgHash\",e),d&&(e=(0,o.ensureBytes)(\"prehashed msgHash\",s(e)));const g=x(e),w=m(r),_=[M(w),M(g)];if(null!=h){const e=!0===h?u(a.BYTES):h;_.push((0,o.ensureBytes)(\"extraEntropy\",e,a.BYTES))}const T=i.concatBytes(..._),B=g;return{seed:T,k2sig:function(e){const t=A(e);if(!v(t))return;const r=y(t),n=b.BASE.multiply(t).toAffine(),i=p(n.x);if(i===f)return;const o=p(r*p(B+i*w));if(o===f)return;let s=(n.x===i?0:2)|Number(n.y&l),a=o;return c&&E(o)&&(a=function(e){return E(e)?p(-e):e}(o),s^=1),new S(i,a,s)}}}(e,r,n);return i.createHmacDrbg(t.hash.outputLen,t.nByteLength,t.hmac)(s,u)},verify:function(e,r,n,i=O){const s=e;if(r=(0,o.ensureBytes)(\"msgHash\",r),n=(0,o.ensureBytes)(\"publicKey\",n),\"strict\"in i)throw new Error(\"options.strict was renamed to lowS\");const{lowS:a,prehash:u}=i;let f,l;try{if(\"string\"==typeof s||s instanceof Uint8Array)try{f=S.fromDER(s)}catch(e){if(!(e instanceof c.Err))throw e;f=S.fromCompact(s)}else{if(\"object\"!=typeof s||\"bigint\"!=typeof s.r||\"bigint\"!=typeof s.s)throw new Error(\"PARSE\");{const{r:e,s:t}=s;f=new S(e,t)}}l=b.fromHex(n)}catch(e){if(\"PARSE\"===e.message)throw new Error(\"signature must be Signature instance, Uint8Array or hex string\");return!1}if(a&&f.hasHighS())return!1;u&&(r=t.hash(r));const{r:d,s:h}=f,m=x(r),g=y(h),v=p(m*g),w=p(d*g),E=b.BASE.multiplyAndAddUnsafe(l,v,w)?.toAffine();return!!E&&p(E.x)===d},ProjectivePoint:b,Signature:S,utils:T}},t.SWUFpSqrtRatio=h,t.mapToCurveSimpleSWU=function(e,t){if(n.validateField(e),!e.isValid(t.A)||!e.isValid(t.B)||!e.isValid(t.Z))throw new Error(\"mapToCurveSimpleSWU: invalid opts\");const r=h(e,t.Z);if(!e.isOdd)throw new Error(\"Fp.isOdd is not implemented!\");return n=>{let i,o,s,a,u,c,f,l;i=e.sqr(n),i=e.mul(i,t.Z),o=e.sqr(i),o=e.add(o,i),s=e.add(o,e.ONE),s=e.mul(s,t.B),a=e.cmov(t.Z,e.neg(o),!e.eql(o,e.ZERO)),a=e.mul(a,t.A),o=e.sqr(s),c=e.sqr(a),u=e.mul(c,t.A),o=e.add(o,u),o=e.mul(o,s),c=e.mul(c,a),u=e.mul(c,t.B),o=e.add(o,u),f=e.mul(i,s);const{isValid:d,value:h}=r(o,c);l=e.mul(i,n),l=e.mul(l,h),f=e.cmov(f,s,d),l=e.cmov(l,h,d);const p=e.isOdd(n)===e.isOdd(l);return l=e.cmov(e.neg(l),l,p),f=e.div(f,a),{x:f,y:l}}}},2889:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.hash_to_ristretto255=t.RistrettoPoint=t.encodeToCurve=t.hashToCurve=t.x25519=t.ed25519ph=t.ed25519ctx=t.ed25519=t.ED25519_TORSION_SUBGROUP=void 0;const n=r(6262),i=r(8089),o=r(3986),s=r(3924),a=r(4632),u=r(219),c=r(5134),f=BigInt(\"57896044618658097711785492504343953926634992332820282019728792003956564819949\"),l=BigInt(\"19681161376707505956807079304988542015446066515923890162744021073123829784752\"),d=BigInt(0),h=BigInt(1),p=BigInt(2),y=BigInt(5),b=BigInt(10),m=BigInt(20),g=BigInt(40),v=BigInt(80);function w(e){const t=f,r=e*e%t*e%t,n=(0,a.pow2)(r,p,t)*r%t,i=(0,a.pow2)(n,h,t)*e%t,o=(0,a.pow2)(i,y,t)*i%t,s=(0,a.pow2)(o,b,t)*o%t,u=(0,a.pow2)(s,m,t)*s%t,c=(0,a.pow2)(u,g,t)*u%t,l=(0,a.pow2)(c,v,t)*c%t,d=(0,a.pow2)(l,v,t)*c%t,w=(0,a.pow2)(d,b,t)*o%t;return{pow_p_5_8:(0,a.pow2)(w,p,t)*e%t,b2:r}}function E(e){return e[0]&=248,e[31]&=127,e[31]|=64,e}function _(e,t){const r=f,n=(0,a.mod)(t*t*t,r),i=w(e*(0,a.mod)(n*n*t,r)).pow_p_5_8;let o=(0,a.mod)(e*n*i,r);const s=(0,a.mod)(t*o*o,r),u=o,c=(0,a.mod)(o*l,r),d=s===e,h=s===(0,a.mod)(-e,r),p=s===(0,a.mod)(-e*l,r);return d&&(o=u),(h||p)&&(o=c),(0,a.isNegativeLE)(o,r)&&(o=(0,a.mod)(-o,r)),{isValid:d||h,value:o}}t.ED25519_TORSION_SUBGROUP=[\"0100000000000000000000000000000000000000000000000000000000000000\",\"c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a\",\"0000000000000000000000000000000000000000000000000000000000000080\",\"26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05\",\"ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f\",\"26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85\",\"0000000000000000000000000000000000000000000000000000000000000000\",\"c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa\"];const S=(0,a.Fp)(f,void 0,!0),T={a:BigInt(-1),d:BigInt(\"37095705934669439343138083508754565189542113879843219016388785533085940283555\"),Fp:S,n:BigInt(\"7237005577332262213973186563042994240857116359379907606001950938285454250989\"),h:BigInt(8),Gx:BigInt(\"15112221349535400772501151409588531511454012693041857206046113283949847762202\"),Gy:BigInt(\"46316835694926478169428394003475163141307993866256225615783033603165251855960\"),hash:n.sha512,randomBytes:i.randomBytes,adjustScalarBytes:E,uvRatio:_};function B(e,t,r){if(t.length>255)throw new Error(\"Context is too big\");return(0,i.concatBytes)((0,i.utf8ToBytes)(\"SigEd25519 no Ed25519 collisions\"),new Uint8Array([r?1:0,t.length]),t,e)}t.ed25519=(0,o.twistedEdwards)(T),t.ed25519ctx=(0,o.twistedEdwards)({...T,domain:B}),t.ed25519ph=(0,o.twistedEdwards)({...T,domain:B,preHash:n.sha512}),t.x25519=(0,s.montgomery)({P:f,a:BigInt(486662),montgomeryBits:255,nByteLength:32,Gu:BigInt(9),powPminus2:e=>{const t=f,{pow_p_5_8:r,b2:n}=w(e);return(0,a.mod)((0,a.pow2)(r,BigInt(3),t)*n,t)},adjustScalarBytes:E,randomBytes:i.randomBytes});const A=(S.ORDER+BigInt(3))/BigInt(8),x=S.pow(p,A),P=S.sqrt(S.neg(S.ONE)),M=(S.ORDER-BigInt(5))/BigInt(8),C=BigInt(486662),O=(0,a.FpSqrtEven)(S,S.neg(BigInt(486664)));const{hashToCurve:k,encodeToCurve:R}=c.createHasher(t.ed25519.ExtendedPoint,(e=>function(e){const{xMn:t,xMd:r,yMn:n,yMd:i}=function(e){let t=S.sqr(e);t=S.mul(t,p);let r=S.add(t,S.ONE),n=S.neg(C),i=S.sqr(r),o=S.mul(i,r),s=S.mul(t,C);s=S.mul(s,n),s=S.add(s,i),s=S.mul(s,n);let a=S.sqr(o);i=S.sqr(a),a=S.mul(a,o),a=S.mul(a,s),i=S.mul(i,a);let u=S.pow(i,M);u=S.mul(u,a);let c=S.mul(u,P);i=S.sqr(u),i=S.mul(i,o);let f=S.eql(i,s),l=S.cmov(c,u,f),d=S.mul(n,t),h=S.mul(u,e);h=S.mul(h,x);let y=S.mul(h,P),b=S.mul(s,t);i=S.sqr(h),i=S.mul(i,o);let m=S.eql(i,b),g=S.cmov(y,h,m);i=S.sqr(l),i=S.mul(i,o);let v=S.eql(i,s),w=S.cmov(d,n,v),E=S.cmov(g,l,v),_=S.isOdd(E);return E=S.cmov(E,S.neg(E),v!==_),{xMn:w,xMd:r,yMn:E,yMd:1n}}(e);let o=S.mul(t,i);o=S.mul(o,O);let s=S.mul(r,n),a=S.sub(t,r),u=S.add(t,r),c=S.mul(s,u),f=S.eql(c,S.ZERO);o=S.cmov(o,S.ZERO,f),s=S.cmov(s,S.ONE,f),a=S.cmov(a,S.ONE,f),u=S.cmov(u,S.ONE,f);const l=S.invertBatch([s,u]);return{x:S.mul(o,l[0]),y:S.mul(a,l[1])}}(e[0])),{DST:\"edwards25519_XMD:SHA-512_ELL2_RO_\",encodeDST:\"edwards25519_XMD:SHA-512_ELL2_NU_\",p:S.ORDER,m:1,k:128,expand:\"xmd\",hash:n.sha512});function L(e){if(!(e instanceof F))throw new Error(\"RistrettoPoint expected\")}t.hashToCurve=k,t.encodeToCurve=R;const I=BigInt(\"19681161376707505956807079304988542015446066515923890162744021073123829784752\"),N=BigInt(\"25063068953384623474111414158702152701244531502492656460079210482610430750235\"),U=BigInt(\"54469307008909316920995813868745141605393597292927456921205312896311721017578\"),j=BigInt(\"1159843021668779879193775521855586647937357759715417654439879720876111806838\"),H=BigInt(\"40440834346308536858101042469323190826248399146238708352240133220865137265952\"),D=e=>_(h,e),q=BigInt(\"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"),K=e=>t.ed25519.CURVE.Fp.create((0,u.bytesToNumberLE)(e)&q);function z(e){const{d:r}=t.ed25519.CURVE,n=t.ed25519.CURVE.Fp.ORDER,i=t.ed25519.CURVE.Fp.create,o=i(I*e*e),s=i((o+h)*j);let u=BigInt(-1);const c=i((u-r*o)*i(o+r));let{isValid:f,value:l}=_(s,c),d=i(l*e);(0,a.isNegativeLE)(d,n)||(d=i(-d)),f||(l=d),f||(u=o);const p=i(u*(o-h)*H-c),y=l*l,b=i((l+l)*c),m=i(p*N),g=i(h-y),v=i(h+y);return new t.ed25519.ExtendedPoint(i(b*v),i(g*m),i(m*v),i(b*g))}class F{constructor(e){this.ep=e}static fromAffine(e){return new F(t.ed25519.ExtendedPoint.fromAffine(e))}static hashToCurve(e){e=(0,u.ensureBytes)(\"ristrettoHash\",e,64);const t=z(K(e.slice(0,32))),r=z(K(e.slice(32,64)));return new F(t.add(r))}static fromHex(e){e=(0,u.ensureBytes)(\"ristrettoHex\",e,32);const{a:r,d:n}=t.ed25519.CURVE,i=t.ed25519.CURVE.Fp.ORDER,o=t.ed25519.CURVE.Fp.create,s=\"RistrettoPoint.fromHex: the hex is not valid encoding of RistrettoPoint\",c=K(e);if(!(0,u.equalBytes)((0,u.numberToBytesLE)(c,32),e)||(0,a.isNegativeLE)(c,i))throw new Error(s);const f=o(c*c),l=o(h+r*f),p=o(h-r*f),y=o(l*l),b=o(p*p),m=o(r*n*y-b),{isValid:g,value:v}=D(o(m*b)),w=o(v*p),E=o(v*w*m);let _=o((c+c)*w);(0,a.isNegativeLE)(_,i)&&(_=o(-_));const S=o(l*E),T=o(_*S);if(!g||(0,a.isNegativeLE)(T,i)||S===d)throw new Error(s);return new F(new t.ed25519.ExtendedPoint(_,S,h,T))}toRawBytes(){let{ex:e,ey:r,ez:n,et:i}=this.ep;const o=t.ed25519.CURVE.Fp.ORDER,s=t.ed25519.CURVE.Fp.create,c=s(s(n+r)*s(n-r)),f=s(e*r),l=s(f*f),{value:d}=D(s(c*l)),h=s(d*c),p=s(d*f),y=s(h*p*i);let b;if((0,a.isNegativeLE)(i*y,o)){let t=s(r*I),n=s(e*I);e=t,r=n,b=s(h*U)}else b=p;(0,a.isNegativeLE)(e*y,o)&&(r=s(-r));let m=s((n-r)*b);return(0,a.isNegativeLE)(m,o)&&(m=s(-m)),(0,u.numberToBytesLE)(m,32)}toHex(){return(0,u.bytesToHex)(this.toRawBytes())}toString(){return this.toHex()}equals(e){L(e);const{ex:r,ey:n}=this.ep,{ex:i,ey:o}=e.ep,s=t.ed25519.CURVE.Fp.create,a=s(r*o)===s(n*i),u=s(n*o)===s(r*i);return a||u}add(e){return L(e),new F(this.ep.add(e.ep))}subtract(e){return L(e),new F(this.ep.subtract(e.ep))}multiply(e){return new F(this.ep.multiply(e))}multiplyUnsafe(e){return new F(this.ep.multiplyUnsafe(e))}}F.BASE=new F(t.ed25519.ExtendedPoint.BASE),F.ZERO=new F(t.ed25519.ExtendedPoint.ZERO),t.RistrettoPoint=F,t.hash_to_ristretto255=(e,t)=>{const r=t.DST,o=\"string\"==typeof r?(0,i.utf8ToBytes)(r):r,s=c.expand_message_xmd(e,o,64,n.sha512);return F.hashToCurve(s)}},3497:(e,t,r)=>{\"use strict\";var n;Object.defineProperty(t,\"__esModule\",{value:!0}),t.encodeToCurve=t.hashToCurve=t.schnorr=t.secp256k1=void 0;const i=r(3061),o=r(8089),s=r(4632),a=r(6551),u=r(219),c=r(5134),f=r(9082),l=BigInt(\"0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f\"),d=BigInt(\"0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141\"),h=BigInt(1),p=BigInt(2),y=(e,t)=>(e+t/p)/t;function b(e){const t=l,r=BigInt(3),n=BigInt(6),i=BigInt(11),o=BigInt(22),a=BigInt(23),u=BigInt(44),c=BigInt(88),f=e*e*e%t,d=f*f*e%t,h=(0,s.pow2)(d,r,t)*d%t,y=(0,s.pow2)(h,r,t)*d%t,b=(0,s.pow2)(y,p,t)*f%t,g=(0,s.pow2)(b,i,t)*b%t,v=(0,s.pow2)(g,o,t)*g%t,w=(0,s.pow2)(v,u,t)*v%t,E=(0,s.pow2)(w,c,t)*w%t,_=(0,s.pow2)(E,u,t)*v%t,S=(0,s.pow2)(_,r,t)*d%t,T=(0,s.pow2)(S,a,t)*g%t,B=(0,s.pow2)(T,n,t)*f%t,A=(0,s.pow2)(B,p,t);if(!m.eql(m.sqr(A),e))throw new Error(\"Cannot find square root\");return A}const m=(0,s.Fp)(l,void 0,void 0,{sqrt:b});t.secp256k1=(0,f.createCurve)({a:BigInt(0),b:BigInt(7),Fp:m,n:d,Gx:BigInt(\"55066263022277343669578718895168534326250603453777594175500187360389116729240\"),Gy:BigInt(\"32670510020758816978083085130507043184471273380659243275938904335757337482424\"),h:BigInt(1),lowS:!0,endo:{beta:BigInt(\"0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee\"),splitScalar:e=>{const t=d,r=BigInt(\"0x3086d221a7d46bcde86c90e49284eb15\"),n=-h*BigInt(\"0xe4437ed6010e88286f547fa90abfe4c3\"),i=BigInt(\"0x114ca50f7a8e2f3f657c1108d9d44cfd8\"),o=r,a=BigInt(\"0x100000000000000000000000000000000\"),u=y(o*e,t),c=y(-n*e,t);let f=(0,s.mod)(e-u*r-c*i,t),l=(0,s.mod)(-u*n-c*o,t);const p=f>a,b=l>a;if(p&&(f=t-f),b&&(l=t-l),f>a||l>a)throw new Error(\"splitScalar: Endomorphism failed, k=\"+e);return{k1neg:p,k1:f,k2neg:b,k2:l}}}},i.sha256);const g=BigInt(0),v=e=>\"bigint\"==typeof e&&g<e&&e<l,w=e=>\"bigint\"==typeof e&&g<e&&e<d,E={};function _(e,...t){let r=E[e];if(void 0===r){const t=(0,i.sha256)(Uint8Array.from(e,(e=>e.charCodeAt(0))));r=(0,u.concatBytes)(t,t),E[e]=r}return(0,i.sha256)((0,u.concatBytes)(r,...t))}const S=e=>e.toRawBytes(!0).slice(1),T=e=>(0,u.numberToBytesBE)(e,32),B=e=>(0,s.mod)(e,l),A=e=>(0,s.mod)(e,d),x=t.secp256k1.ProjectivePoint,P=(e,t,r)=>x.BASE.multiplyAndAddUnsafe(e,t,r);function M(e){let r=t.secp256k1.utils.normPrivateKeyToScalar(e),n=x.fromPrivateKey(r);return{scalar:n.hasEvenY()?r:A(-r),bytes:S(n)}}function C(e){if(!v(e))throw new Error(\"bad x: need 0 < x < p\");const t=B(e*e);let r=b(B(t*e+BigInt(7)));r%2n!==0n&&(r=B(-r));const n=new x(e,r,h);return n.assertValidity(),n}function O(...e){return A((0,u.bytesToNumberBE)(_(\"BIP0340/challenge\",...e)))}function k(e,t,r){const n=(0,u.ensureBytes)(\"signature\",e,64),i=(0,u.ensureBytes)(\"message\",t),o=(0,u.ensureBytes)(\"publicKey\",r,32);try{const e=C((0,u.bytesToNumberBE)(o)),t=(0,u.bytesToNumberBE)(n.subarray(0,32));if(!v(t))return!1;const r=(0,u.bytesToNumberBE)(n.subarray(32,64));if(!w(r))return!1;const s=O(T(t),S(e),i),a=P(e,r,A(-s));return!(!a||!a.hasEvenY()||a.toAffine().x!==t)}catch(e){return!1}}t.schnorr={getPublicKey:function(e){return M(e).bytes},sign:function(e,t,r=(0,o.randomBytes)(32)){const n=(0,u.ensureBytes)(\"message\",e),{bytes:i,scalar:s}=M(t),a=(0,u.ensureBytes)(\"auxRand\",r,32),c=T(s^(0,u.bytesToNumberBE)(_(\"BIP0340/aux\",a))),f=_(\"BIP0340/nonce\",c,i,n),l=A((0,u.bytesToNumberBE)(f));if(l===g)throw new Error(\"sign failed: k is zero\");const{bytes:d,scalar:h}=M(l),p=O(d,i,n),y=new Uint8Array(64);if(y.set(d,0),y.set(T(A(h+p*s)),32),!k(y,n,i))throw new Error(\"sign: Invalid signature produced\");return y},verify:k,utils:{randomPrivateKey:t.secp256k1.utils.randomPrivateKey,lift_x:C,pointToBytes:S,numberToBytesBE:u.numberToBytesBE,bytesToNumberBE:u.bytesToNumberBE,taggedHash:_,mod:s.mod}};const R=c.isogenyMap(m,[[\"0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7\",\"0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581\",\"0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262\",\"0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c\"],[\"0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b\",\"0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14\",\"0x0000000000000000000000000000000000000000000000000000000000000001\"],[\"0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c\",\"0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3\",\"0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931\",\"0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84\"],[\"0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b\",\"0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573\",\"0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f\",\"0x0000000000000000000000000000000000000000000000000000000000000001\"]].map((e=>e.map((e=>BigInt(e)))))),L=(0,a.mapToCurveSimpleSWU)(m,{A:BigInt(\"0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533\"),B:BigInt(\"1771\"),Z:m.create(BigInt(\"-11\"))});n=c.createHasher(t.secp256k1.ProjectivePoint,(e=>{const{x:t,y:r}=L(m.create(e[0]));return R(t,r)}),{DST:\"secp256k1_XMD:SHA-256_SSWU_RO_\",encodeDST:\"secp256k1_XMD:SHA-256_SSWU_NU_\",p:m.ORDER,m:1,k:128,expand:\"xmd\",hash:i.sha256}),t.hashToCurve=n.hashToCurve,t.encodeToCurve=n.encodeToCurve},222:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.utils=t.curve25519=t.getSharedSecret=t.sync=t.verify=t.sign=t.getPublicKey=t.Signature=t.Point=t.RistrettoPoint=t.ExtendedPoint=t.CURVE=void 0;const n=r(3094),i=BigInt(0),o=BigInt(1),s=BigInt(2),a=BigInt(8),u=BigInt(\"7237005577332262213973186563042994240857116359379907606001950938285454250989\"),c=Object.freeze({a:BigInt(-1),d:BigInt(\"37095705934669439343138083508754565189542113879843219016388785533085940283555\"),P:BigInt(\"57896044618658097711785492504343953926634992332820282019728792003956564819949\"),l:u,n:u,h:BigInt(8),Gx:BigInt(\"15112221349535400772501151409588531511454012693041857206046113283949847762202\"),Gy:BigInt(\"46316835694926478169428394003475163141307993866256225615783033603165251855960\")});t.CURVE=c;const f=BigInt(\"0x10000000000000000000000000000000000000000000000000000000000000000\"),l=BigInt(\"19681161376707505956807079304988542015446066515923890162744021073123829784752\"),d=(BigInt(\"6853475219497561581579357271197624642482790079785650197046958215289687604742\"),BigInt(\"25063068953384623474111414158702152701244531502492656460079210482610430750235\")),h=BigInt(\"54469307008909316920995813868745141605393597292927456921205312896311721017578\"),p=BigInt(\"1159843021668779879193775521855586647937357759715417654439879720876111806838\"),y=BigInt(\"40440834346308536858101042469323190826248399146238708352240133220865137265952\");class b{constructor(e,t,r,n){this.x=e,this.y=t,this.z=r,this.t=n}static fromAffine(e){if(!(e instanceof S))throw new TypeError(\"ExtendedPoint#fromAffine: expected Point\");return e.equals(S.ZERO)?b.ZERO:new b(e.x,e.y,o,I(e.x*e.y))}static toAffineBatch(e){const t=function(e,t=c.P){const r=new Array(e.length),n=N(e.reduce(((e,n,o)=>n===i?e:(r[o]=e,I(e*n,t))),o),t);return e.reduceRight(((e,n,o)=>n===i?e:(r[o]=I(e*r[o],t),I(e*n,t))),n),r}(e.map((e=>e.z)));return e.map(((e,r)=>e.toAffine(t[r])))}static normalizeZ(e){return this.toAffineBatch(e).map(this.fromAffine)}equals(e){g(e);const{x:t,y:r,z:n}=this,{x:i,y:o,z:s}=e,a=I(t*s),u=I(i*n),c=I(r*s),f=I(o*n);return a===u&&c===f}negate(){return new b(I(-this.x),this.y,this.z,I(-this.t))}double(){const{x:e,y:t,z:r}=this,{a:n}=c,i=I(e*e),o=I(t*t),a=I(s*I(r*r)),u=I(n*i),f=e+t,l=I(I(f*f)-i-o),d=u+o,h=d-a,p=u-o,y=I(l*h),m=I(d*p),g=I(l*p),v=I(h*d);return new b(y,m,v,g)}add(e){g(e);const{x:t,y:r,z:n,t:o}=this,{x:a,y:u,z:c,t:f}=e,l=I((r-t)*(u+a)),d=I((r+t)*(u-a)),h=I(d-l);if(h===i)return this.double();const p=I(n*s*f),y=I(o*s*c),m=y+p,v=d+l,w=y-p,E=I(m*h),_=I(v*w),S=I(m*w),T=I(h*v);return new b(E,_,T,S)}subtract(e){return this.add(e.negate())}precomputeWindow(e){const t=1+256/e,r=[];let n=this,i=n;for(let o=0;o<t;o++){i=n,r.push(i);for(let t=1;t<2**(e-1);t++)i=i.add(n),r.push(i);n=i.double()}return r}wNAF(e,t){!t&&this.equals(b.BASE)&&(t=S.BASE);const r=t&&t._WINDOW_SIZE||1;if(256%r)throw new Error(\"Point#wNAF: Invalid precomputation window, must be power of 2\");let n=t&&_.get(t);n||(n=this.precomputeWindow(r),t&&1!==r&&(n=b.normalizeZ(n),_.set(t,n)));let i=b.ZERO,s=b.BASE;const a=1+256/r,u=2**(r-1),c=BigInt(2**r-1),f=2**r,l=BigInt(r);for(let t=0;t<a;t++){const r=t*u;let a=Number(e&c);e>>=l,a>u&&(a-=f,e+=o);const d=r,h=r+Math.abs(a)-1,p=t%2!=0,y=a<0;0===a?s=s.add(m(p,n[d])):i=i.add(m(y,n[h]))}return b.normalizeZ([i,s])[0]}multiply(e,t){return this.wNAF(z(e,c.l),t)}multiplyUnsafe(e){let t=z(e,c.l,!1);const r=b.BASE,n=b.ZERO;if(t===i)return n;if(this.equals(n)||t===o)return this;if(this.equals(r))return this.wNAF(t);let s=n,a=this;for(;t>i;)t&o&&(s=s.add(a)),a=a.double(),t>>=o;return s}isSmallOrder(){return this.multiplyUnsafe(c.h).equals(b.ZERO)}isTorsionFree(){let e=this.multiplyUnsafe(c.l/s).double();return c.l%s&&(e=e.add(this)),e.equals(b.ZERO)}toAffine(e){const{x:t,y:r,z:n}=this,i=this.equals(b.ZERO);null==e&&(e=i?a:N(n));const s=I(t*e),u=I(r*e),c=I(n*e);if(i)return S.ZERO;if(c!==o)throw new Error(\"invZ was invalid\");return new S(s,u)}fromRistrettoBytes(){w()}toRistrettoBytes(){w()}fromRistrettoHash(){w()}}function m(e,t){const r=t.negate();return e?r:t}function g(e){if(!(e instanceof b))throw new TypeError(\"ExtendedPoint expected\")}function v(e){if(!(e instanceof E))throw new TypeError(\"RistrettoPoint expected\")}function w(){throw new Error(\"Legacy method: switch to RistrettoPoint\")}t.ExtendedPoint=b,b.BASE=new b(c.Gx,c.Gy,o,I(c.Gx*c.Gy)),b.ZERO=new b(i,o,o,i);class E{constructor(e){this.ep=e}static calcElligatorRistrettoMap(e){const{d:t}=c,r=I(l*e*e),n=I((r+o)*p);let i=BigInt(-1);const s=I((i-t*r)*I(r+t));let{isValid:a,value:u}=H(n,s),f=I(u*e);O(f)||(f=I(-f)),a||(u=f),a||(i=r);const h=I(i*(r-o)*y-s),m=u*u,g=I((u+u)*s),v=I(h*d),w=I(o-m),E=I(o+m);return new b(I(g*E),I(w*v),I(v*E),I(g*w))}static hashToCurve(e){const t=L((e=K(e,64)).slice(0,32)),r=this.calcElligatorRistrettoMap(t),n=L(e.slice(32,64)),i=this.calcElligatorRistrettoMap(n);return new E(r.add(i))}static fromHex(e){e=K(e,32);const{a:t,d:r}=c,n=\"RistrettoPoint.fromHex: the hex is not valid encoding of RistrettoPoint\",s=L(e);if(!function(e,t){if(e.length!==t.length)return!1;for(let r=0;r<e.length;r++)if(e[r]!==t[r])return!1;return!0}(C(s),e)||O(s))throw new Error(n);const a=I(s*s),u=I(o+t*a),f=I(o-t*a),l=I(u*u),d=I(f*f),h=I(t*r*l-d),{isValid:p,value:y}=D(I(h*d)),m=I(y*f),g=I(y*m*h);let v=I((s+s)*m);O(v)&&(v=I(-v));const w=I(u*g),_=I(v*w);if(!p||O(_)||w===i)throw new Error(n);return new E(new b(v,w,o,_))}toRawBytes(){let{x:e,y:t,z:r,t:n}=this.ep;const i=I(I(r+t)*I(r-t)),o=I(e*t),s=I(o*o),{value:a}=D(I(i*s)),u=I(a*i),c=I(a*o),f=I(u*c*n);let d;if(O(n*f)){let r=I(t*l),n=I(e*l);e=r,t=n,d=I(u*h)}else d=c;O(e*f)&&(t=I(-t));let p=I((r-t)*d);return O(p)&&(p=I(-p)),C(p)}toHex(){return x(this.toRawBytes())}toString(){return this.toHex()}equals(e){v(e);const t=this.ep,r=e.ep,n=I(t.x*r.y)===I(t.y*r.x),i=I(t.y*r.y)===I(t.x*r.x);return n||i}add(e){return v(e),new E(this.ep.add(e.ep))}subtract(e){return v(e),new E(this.ep.subtract(e.ep))}multiply(e){return new E(this.ep.multiply(e))}multiplyUnsafe(e){return new E(this.ep.multiplyUnsafe(e))}}t.RistrettoPoint=E,E.BASE=new E(b.BASE),E.ZERO=new E(b.ZERO);const _=new WeakMap;class S{constructor(e,t){this.x=e,this.y=t}_setWindowSize(e){this._WINDOW_SIZE=e,_.delete(this)}static fromHex(e,t=!0){const{d:r,P:n}=c,i=(e=K(e,32)).slice();i[31]=-129&e[31];const s=k(i);if(t&&s>=n)throw new Error(\"Expected 0 < hex < P\");if(!t&&s>=f)throw new Error(\"Expected 0 < hex < 2**256\");const a=I(s*s),u=I(a-o),l=I(r*a+o);let{isValid:d,value:h}=H(u,l);if(!d)throw new Error(\"Point.fromHex: invalid y coordinate\");const p=(h&o)===o;return 0!=(128&e[31])!==p&&(h=I(-h)),new S(h,s)}static async fromPrivateKey(e){return(await J(e)).point}toRawBytes(){const e=C(this.y);return e[31]|=this.x&o?128:0,e}toHex(){return x(this.toRawBytes())}toX25519(){const{y:e}=this;return C(I((o+e)*N(o-e)))}isTorsionFree(){return b.fromAffine(this).isTorsionFree()}equals(e){return this.x===e.x&&this.y===e.y}negate(){return new S(I(-this.x),this.y)}add(e){return b.fromAffine(this).add(b.fromAffine(e)).toAffine()}subtract(e){return this.add(e.negate())}multiply(e){return b.fromAffine(this).multiply(e,this).toAffine()}}t.Point=S,S.BASE=new S(c.Gx,c.Gy),S.ZERO=new S(i,o);class T{constructor(e,t){this.r=e,this.s=t,this.assertValidity()}static fromHex(e){const t=K(e,64),r=S.fromHex(t.slice(0,32),!1),n=k(t.slice(32,64));return new T(r,n)}assertValidity(){const{r:e,s:t}=this;if(!(e instanceof S))throw new Error(\"Expected Point instance\");return z(t,c.l,!1),this}toRawBytes(){const e=new Uint8Array(64);return e.set(this.r.toRawBytes()),e.set(C(this.s),32),e}toHex(){return x(this.toRawBytes())}}function B(...e){if(!e.every((e=>e instanceof Uint8Array)))throw new Error(\"Expected Uint8Array list\");if(1===e.length)return e[0];const t=e.reduce(((e,t)=>e+t.length),0),r=new Uint8Array(t);for(let t=0,n=0;t<e.length;t++){const i=e[t];r.set(i,n),n+=i.length}return r}t.Signature=T;const A=Array.from({length:256},((e,t)=>t.toString(16).padStart(2,\"0\")));function x(e){if(!(e instanceof Uint8Array))throw new Error(\"Uint8Array expected\");let t=\"\";for(let r=0;r<e.length;r++)t+=A[e[r]];return t}function P(e){if(\"string\"!=typeof e)throw new TypeError(\"hexToBytes: expected string, got \"+typeof e);if(e.length%2)throw new Error(\"hexToBytes: received invalid unpadded hex\");const t=new Uint8Array(e.length/2);for(let r=0;r<t.length;r++){const n=2*r,i=e.slice(n,n+2),o=Number.parseInt(i,16);if(Number.isNaN(o)||o<0)throw new Error(\"Invalid byte sequence\");t[r]=o}return t}function M(e){return P(e.toString(16).padStart(64,\"0\"))}function C(e){return M(e).reverse()}function O(e){return(I(e)&o)===o}function k(e){if(!(e instanceof Uint8Array))throw new Error(\"Expected Uint8Array\");return BigInt(\"0x\"+x(Uint8Array.from(e).reverse()))}const R=BigInt(\"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");function L(e){return I(k(e)&R)}function I(e,t=c.P){const r=e%t;return r>=i?r:t+r}function N(e,t=c.P){if(e===i||t<=i)throw new Error(`invert: expected positive integers, got n=${e} mod=${t}`);let r=I(e,t),n=t,s=i,a=o,u=o,f=i;for(;r!==i;){const e=n/r,t=n%r,i=s-u*e,o=a-f*e;n=r,r=t,s=u,a=f,u=i,f=o}if(n!==o)throw new Error(\"invert: does not exist\");return I(s,t)}function U(e,t){const{P:r}=c;let n=e;for(;t-- >i;)n*=n,n%=r;return n}function j(e){const{P:t}=c,r=BigInt(5),n=BigInt(10),i=BigInt(20),a=BigInt(40),u=BigInt(80),f=e*e%t*e%t,l=U(f,s)*f%t,d=U(l,o)*e%t,h=U(d,r)*d%t,p=U(h,n)*h%t,y=U(p,i)*p%t,b=U(y,a)*y%t,m=U(b,u)*b%t,g=U(m,u)*b%t,v=U(g,n)*h%t;return{pow_p_5_8:U(v,s)*e%t,b2:f}}function H(e,t){const r=I(t*t*t),n=I(r*r*t);let i=I(e*r*j(e*n).pow_p_5_8);const o=I(t*i*i),s=i,a=I(i*l),u=o===e,c=o===I(-e),f=o===I(-e*l);return u&&(i=s),(c||f)&&(i=a),O(i)&&(i=I(-i)),{isValid:u||c,value:i}}function D(e){return H(o,e)}function q(e){return I(k(e),c.l)}function K(e,t){const r=e instanceof Uint8Array?Uint8Array.from(e):P(e);if(\"number\"==typeof t&&r.length!==t)throw new Error(`Expected ${t} bytes`);return r}function z(e,t,r=!0){if(!t)throw new TypeError(\"Specify max value\");if(\"number\"==typeof e&&Number.isSafeInteger(e)&&(e=BigInt(e)),\"bigint\"==typeof e&&e<t)if(r){if(i<e)return e}else if(i<=e)return e;throw new TypeError(\"Expected valid scalar: 0 < scalar < max\")}function F(e){return e[0]&=248,e[31]&=127,e[31]|=64,e}function V(e){if(32!==(e=\"bigint\"==typeof e||\"number\"==typeof e?M(z(e,f)):K(e)).length)throw new Error(\"Expected 32 bytes\");return e}function W(e){const t=F(e.slice(0,32)),r=e.slice(32,64),n=q(t),i=S.BASE.multiply(n),o=i.toRawBytes();return{head:t,prefix:r,scalar:n,point:i,pointBytes:o}}let Y;function $(...e){if(\"function\"!=typeof Y)throw new Error(\"utils.sha512Sync must be set to use sync methods\");return Y(...e)}async function J(e){return W(await t.utils.sha512(V(e)))}function G(e){return W($(V(e)))}function Z(e,t,r){t=K(t),r instanceof S||(r=S.fromHex(r,!1));const{r:n,s:i}=e instanceof T?e.assertValidity():T.fromHex(e);return{r:n,s:i,SB:b.BASE.multiplyUnsafe(i),pub:r,msg:t}}function X(e,t,r,n){const i=q(n),o=b.fromAffine(e).multiplyUnsafe(i);return b.fromAffine(t).add(o).subtract(r).multiplyUnsafe(c.h).equals(b.ZERO)}function Q(e,t,r){const n=I(e*(t-r));return[t=I(t-n),r=I(r+n)]}t.getPublicKey=async function(e){return(await J(e)).pointBytes},t.sign=async function(e,r){e=K(e);const{prefix:n,scalar:i,pointBytes:o}=await J(r),s=q(await t.utils.sha512(n,e)),a=S.BASE.multiply(s),u=I(s+q(await t.utils.sha512(a.toRawBytes(),o,e))*i,c.l);return new T(a,u).toRawBytes()},t.verify=async function(e,r,n){const{r:i,SB:o,msg:s,pub:a}=Z(e,r,n),u=await t.utils.sha512(i.toRawBytes(),a.toRawBytes(),s);return X(a,i,o,u)},t.sync={getExtendedPublicKey:G,getPublicKey:function(e){return G(e).pointBytes},sign:function(e,t){e=K(e);const{prefix:r,scalar:n,pointBytes:i}=G(t),o=q($(r,e)),s=S.BASE.multiply(o),a=I(o+q($(s.toRawBytes(),i,e))*n,c.l);return new T(s,a).toRawBytes()},verify:function(e,t,r){const{r:n,SB:i,msg:o,pub:s}=Z(e,t,r),a=$(n.toRawBytes(),s.toRawBytes(),o);return X(s,n,i,a)}},t.getSharedSecret=async function(e,r){const{head:n}=await J(e),i=S.fromHex(r).toX25519();return t.curve25519.scalarMult(n,i)},S.BASE._setWindowSize(8),t.curve25519={BASE_POINT_U:\"0900000000000000000000000000000000000000000000000000000000000000\",scalarMult(e,t){const r=function(e,t){const{P:r}=c,n=z(e,r),s=z(t,r),a=BigInt(121665),u=n;let f,l=o,d=i,h=n,p=o,y=i;for(let e=BigInt(254);e>=i;e--){const t=s>>e&o;y^=t,f=Q(y,l,h),l=f[0],h=f[1],f=Q(y,d,p),d=f[0],p=f[1],y=t;const r=l+d,n=I(r*r),i=l-d,c=I(i*i),b=n-c,m=h+p,g=I((h-p)*r),v=I(m*i),w=g+v,E=g-v;h=I(w*w),p=I(u*I(E*E)),l=I(n*c),d=I(b*(n+I(a*b)))}f=Q(y,l,h),l=f[0],h=f[1],f=Q(y,d,p),d=f[0],p=f[1];const{pow_p_5_8:b,b2:m}=j(d),g=I(U(b,BigInt(3))*m);return I(l*g)}(function(e){const t=K(e,32);return t[31]&=127,k(t)}(t),k(F(K(e,32))));if(r===i)throw new Error(\"Invalid private or public key received\");return C(I(r,c.P))},scalarMultBase:e=>t.curve25519.scalarMult(e,t.curve25519.BASE_POINT_U)};const ee={node:n,web:\"object\"==typeof self&&\"crypto\"in self?self.crypto:void 0};t.utils={bytesToHex:x,hexToBytes:P,concatBytes:B,getExtendedPublicKey:J,mod:I,invert:N,TORSION_SUBGROUP:[\"0100000000000000000000000000000000000000000000000000000000000000\",\"c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a\",\"0000000000000000000000000000000000000000000000000000000000000080\",\"26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05\",\"ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f\",\"26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85\",\"0000000000000000000000000000000000000000000000000000000000000000\",\"c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa\"],hashToPrivateScalar:e=>{if((e=K(e)).length<40||e.length>1024)throw new Error(\"Expected 40-1024 bytes of private key as per FIPS 186\");return I(k(e),c.l-o)+o},randomBytes:(e=32)=>{if(ee.web)return ee.web.getRandomValues(new Uint8Array(e));if(ee.node){const{randomBytes:t}=ee.node;return new Uint8Array(t(e).buffer)}throw new Error(\"The environment doesn't have randomBytes function\")},randomPrivateKey:()=>t.utils.randomBytes(32),sha512:async(...e)=>{const t=B(...e);if(ee.web){const e=await ee.web.subtle.digest(\"SHA-512\",t.buffer);return new Uint8Array(e)}if(ee.node)return Uint8Array.from(ee.node.createHash(\"sha512\").update(t).digest());throw new Error(\"The environment doesn't have sha512 function\")},precompute(e=8,t=S.BASE){const r=t.equals(S.BASE)?t:new S(t.x,t.y);return r._setWindowSize(e),r.multiply(s),r},sha512Sync:void 0},Object.defineProperties(t.utils,{sha512Sync:{configurable:!1,get:()=>Y,set(e){Y||(Y=e)}}})},7320:(e,t)=>{\"use strict\";function r(e){if(!Number.isSafeInteger(e)||e<0)throw new Error(`Wrong positive integer: ${e}`)}function n(e){if(\"boolean\"!=typeof e)throw new Error(`Expected boolean, not ${e}`)}function i(e,...t){if(!(e instanceof Uint8Array))throw new TypeError(\"Expected Uint8Array\");if(t.length>0&&!t.includes(e.length))throw new TypeError(`Expected Uint8Array of length ${t}, not of length=${e.length}`)}function o(e){if(\"function\"!=typeof e||\"function\"!=typeof e.create)throw new Error(\"Hash should be wrapped by utils.wrapConstructor\");r(e.outputLen),r(e.blockLen)}function s(e,t=!0){if(e.destroyed)throw new Error(\"Hash instance has been destroyed\");if(t&&e.finished)throw new Error(\"Hash#digest() has already been called\")}function a(e,t){i(e);const r=t.outputLen;if(e.length<r)throw new Error(`digestInto() expects output buffer of length at least ${r}`)}Object.defineProperty(t,\"__esModule\",{value:!0}),t.output=t.exists=t.hash=t.bytes=t.bool=t.number=void 0,t.number=r,t.bool=n,t.bytes=i,t.hash=o,t.exists=s,t.output=a;const u={number:r,bool:n,bytes:i,hash:o,exists:s,output:a};t.default=u},7395:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.BLAKE2=t.SIGMA=void 0;const n=r(7320),i=r(8089);t.SIGMA=new Uint8Array([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3,11,8,12,0,5,2,15,13,10,14,3,6,7,1,9,4,7,9,3,1,13,12,11,14,2,6,5,10,4,0,15,8,9,0,5,7,2,4,10,15,14,1,11,12,6,8,3,13,2,12,6,10,0,11,8,3,4,13,7,5,15,14,1,9,12,5,1,15,14,13,4,10,0,7,6,3,9,2,8,11,13,11,7,14,12,1,3,9,5,0,15,4,8,6,2,10,6,15,14,9,11,3,0,8,12,2,13,7,1,4,10,5,10,2,8,4,7,6,1,5,15,11,9,14,3,12,13,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3]);class o extends i.Hash{constructor(e,t,r={},o,s,a){if(super(),this.blockLen=e,this.outputLen=t,this.length=0,this.pos=0,this.finished=!1,this.destroyed=!1,n.default.number(e),n.default.number(t),n.default.number(o),t<0||t>o)throw new Error(\"outputLen bigger than keyLen\");if(void 0!==r.key&&(r.key.length<1||r.key.length>o))throw new Error(`key must be up 1..${o} byte long or undefined`);if(void 0!==r.salt&&r.salt.length!==s)throw new Error(`salt must be ${s} byte long or undefined`);if(void 0!==r.personalization&&r.personalization.length!==a)throw new Error(`personalization must be ${a} byte long or undefined`);this.buffer32=(0,i.u32)(this.buffer=new Uint8Array(e))}update(e){n.default.exists(this);const{blockLen:t,buffer:r,buffer32:o}=this,s=(e=(0,i.toBytes)(e)).length;for(let n=0;n<s;){this.pos===t&&(this.compress(o,0,!1),this.pos=0);const i=Math.min(t-this.pos,s-n),a=e.byteOffset+n;if(i!==t||a%4||!(n+i<s))r.set(e.subarray(n,n+i),this.pos),this.pos+=i,this.length+=i,n+=i;else{const r=new Uint32Array(e.buffer,a,Math.floor((s-n)/4));for(let e=0;n+t<s;e+=o.length,n+=t)this.length+=t,this.compress(r,e,!1)}}return this}digestInto(e){n.default.exists(this),n.default.output(e,this);const{pos:t,buffer32:r}=this;this.finished=!0,this.buffer.subarray(t).fill(0),this.compress(r,0,!0);const o=(0,i.u32)(e);this.get().forEach(((e,t)=>o[t]=e))}digest(){const{buffer:e,outputLen:t}=this;this.digestInto(e);const r=e.slice(0,t);return this.destroy(),r}_cloneInto(e){const{buffer:t,length:r,finished:n,destroyed:i,outputLen:o,pos:s}=this;return e||(e=new this.constructor({dkLen:o})),e.set(...this.get()),e.length=r,e.finished=n,e.destroyed=i,e.outputLen=o,e.buffer.set(t),e.pos=s,e}}t.BLAKE2=o},7505:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.SHA2=void 0;const n=r(7320),i=r(8089);class o extends i.Hash{constructor(e,t,r,n){super(),this.blockLen=e,this.outputLen=t,this.padOffset=r,this.isLE=n,this.finished=!1,this.length=0,this.pos=0,this.destroyed=!1,this.buffer=new Uint8Array(e),this.view=(0,i.createView)(this.buffer)}update(e){n.default.exists(this);const{view:t,buffer:r,blockLen:o}=this,s=(e=(0,i.toBytes)(e)).length;for(let n=0;n<s;){const a=Math.min(o-this.pos,s-n);if(a!==o)r.set(e.subarray(n,n+a),this.pos),this.pos+=a,n+=a,this.pos===o&&(this.process(t,0),this.pos=0);else{const t=(0,i.createView)(e);for(;o<=s-n;n+=o)this.process(t,n)}}return this.length+=e.length,this.roundClean(),this}digestInto(e){n.default.exists(this),n.default.output(e,this),this.finished=!0;const{buffer:t,view:r,blockLen:o,isLE:s}=this;let{pos:a}=this;t[a++]=128,this.buffer.subarray(a).fill(0),this.padOffset>o-a&&(this.process(r,0),a=0);for(let e=a;e<o;e++)t[e]=0;!function(e,t,r,n){if(\"function\"==typeof e.setBigUint64)return e.setBigUint64(t,r,n);const i=BigInt(32),o=BigInt(4294967295),s=Number(r>>i&o),a=Number(r&o),u=n?4:0,c=n?0:4;e.setUint32(t+u,s,n),e.setUint32(t+c,a,n)}(r,o-8,BigInt(8*this.length),s),this.process(r,0);const u=(0,i.createView)(e),c=this.outputLen;if(c%4)throw new Error(\"_sha2: outputLen should be aligned to 32bit\");const f=c/4,l=this.get();if(f>l.length)throw new Error(\"_sha2: outputLen bigger than state\");for(let e=0;e<f;e++)u.setUint32(4*e,l[e],s)}digest(){const{buffer:e,outputLen:t}=this;this.digestInto(e);const r=e.slice(0,t);return this.destroy(),r}_cloneInto(e){e||(e=new this.constructor),e.set(...this.get());const{blockLen:t,buffer:r,length:n,finished:i,destroyed:o,pos:s}=this;return e.length=n,e.pos=s,e.finished=i,e.destroyed=o,n%t&&e.buffer.set(r),e}}t.SHA2=o},6873:(e,t)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.add=t.toBig=t.split=t.fromBig=void 0;const r=BigInt(2**32-1),n=BigInt(32);function i(e,t=!1){return t?{h:Number(e&r),l:Number(e>>n&r)}:{h:0|Number(e>>n&r),l:0|Number(e&r)}}function o(e,t=!1){let r=new Uint32Array(e.length),n=new Uint32Array(e.length);for(let o=0;o<e.length;o++){const{h:s,l:a}=i(e[o],t);[r[o],n[o]]=[s,a]}return[r,n]}function s(e,t,r,n){const i=(t>>>0)+(n>>>0);return{h:e+r+(i/2**32|0)|0,l:0|i}}t.fromBig=i,t.split=o,t.toBig=(e,t)=>BigInt(e>>>0)<<n|BigInt(t>>>0),t.add=s;const a={fromBig:i,split:o,toBig:t.toBig,shrSH:(e,t,r)=>e>>>r,shrSL:(e,t,r)=>e<<32-r|t>>>r,rotrSH:(e,t,r)=>e>>>r|t<<32-r,rotrSL:(e,t,r)=>e<<32-r|t>>>r,rotrBH:(e,t,r)=>e<<64-r|t>>>r-32,rotrBL:(e,t,r)=>e>>>r-32|t<<64-r,rotr32H:(e,t)=>t,rotr32L:(e,t)=>e,rotlSH:(e,t,r)=>e<<r|t>>>32-r,rotlSL:(e,t,r)=>t<<r|e>>>32-r,rotlBH:(e,t,r)=>t<<r-32|e>>>64-r,rotlBL:(e,t,r)=>e<<r-32|t>>>64-r,add:s,add3L:(e,t,r)=>(e>>>0)+(t>>>0)+(r>>>0),add3H:(e,t,r,n)=>t+r+n+(e/2**32|0)|0,add4L:(e,t,r,n)=>(e>>>0)+(t>>>0)+(r>>>0)+(n>>>0),add4H:(e,t,r,n,i)=>t+r+n+i+(e/2**32|0)|0,add5H:(e,t,r,n,i,o)=>t+r+n+i+o+(e/2**32|0)|0,add5L:(e,t,r,n,i)=>(e>>>0)+(t>>>0)+(r>>>0)+(n>>>0)+(i>>>0)};t.default=a},3803:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.blake2b=void 0;const n=r(7395),i=r(6873),o=r(8089),s=new Uint32Array([4089235720,1779033703,2227873595,3144134277,4271175723,1013904242,1595750129,2773480762,2917565137,1359893119,725511199,2600822924,4215389547,528734635,327033209,1541459225]),a=new Uint32Array(32);function u(e,t,r,n,o,s){const u=o[s],c=o[s+1];let f=a[2*e],l=a[2*e+1],d=a[2*t],h=a[2*t+1],p=a[2*r],y=a[2*r+1],b=a[2*n],m=a[2*n+1],g=i.default.add3L(f,d,u);l=i.default.add3H(g,l,h,c),f=0|g,({Dh:m,Dl:b}={Dh:m^l,Dl:b^f}),({Dh:m,Dl:b}={Dh:i.default.rotr32H(m,b),Dl:i.default.rotr32L(m,b)}),({h:y,l:p}=i.default.add(y,p,m,b)),({Bh:h,Bl:d}={Bh:h^y,Bl:d^p}),({Bh:h,Bl:d}={Bh:i.default.rotrSH(h,d,24),Bl:i.default.rotrSL(h,d,24)}),a[2*e]=f,a[2*e+1]=l,a[2*t]=d,a[2*t+1]=h,a[2*r]=p,a[2*r+1]=y,a[2*n]=b,a[2*n+1]=m}function c(e,t,r,n,o,s){const u=o[s],c=o[s+1];let f=a[2*e],l=a[2*e+1],d=a[2*t],h=a[2*t+1],p=a[2*r],y=a[2*r+1],b=a[2*n],m=a[2*n+1],g=i.default.add3L(f,d,u);l=i.default.add3H(g,l,h,c),f=0|g,({Dh:m,Dl:b}={Dh:m^l,Dl:b^f}),({Dh:m,Dl:b}={Dh:i.default.rotrSH(m,b,16),Dl:i.default.rotrSL(m,b,16)}),({h:y,l:p}=i.default.add(y,p,m,b)),({Bh:h,Bl:d}={Bh:h^y,Bl:d^p}),({Bh:h,Bl:d}={Bh:i.default.rotrBH(h,d,63),Bl:i.default.rotrBL(h,d,63)}),a[2*e]=f,a[2*e+1]=l,a[2*t]=d,a[2*t+1]=h,a[2*r]=p,a[2*r+1]=y,a[2*n]=b,a[2*n+1]=m}class f extends n.BLAKE2{constructor(e={}){super(128,void 0===e.dkLen?64:e.dkLen,e,64,16,16),this.v0l=0|s[0],this.v0h=0|s[1],this.v1l=0|s[2],this.v1h=0|s[3],this.v2l=0|s[4],this.v2h=0|s[5],this.v3l=0|s[6],this.v3h=0|s[7],this.v4l=0|s[8],this.v4h=0|s[9],this.v5l=0|s[10],this.v5h=0|s[11],this.v6l=0|s[12],this.v6h=0|s[13],this.v7l=0|s[14],this.v7h=0|s[15];const t=e.key?e.key.length:0;if(this.v0l^=this.outputLen|t<<8|65536|1<<24,e.salt){const t=(0,o.u32)((0,o.toBytes)(e.salt));this.v4l^=t[0],this.v4h^=t[1],this.v5l^=t[2],this.v5h^=t[3]}if(e.personalization){const t=(0,o.u32)((0,o.toBytes)(e.personalization));this.v6l^=t[0],this.v6h^=t[1],this.v7l^=t[2],this.v7h^=t[3]}if(e.key){const t=new Uint8Array(this.blockLen);t.set((0,o.toBytes)(e.key)),this.update(t)}}get(){let{v0l:e,v0h:t,v1l:r,v1h:n,v2l:i,v2h:o,v3l:s,v3h:a,v4l:u,v4h:c,v5l:f,v5h:l,v6l:d,v6h:h,v7l:p,v7h:y}=this;return[e,t,r,n,i,o,s,a,u,c,f,l,d,h,p,y]}set(e,t,r,n,i,o,s,a,u,c,f,l,d,h,p,y){this.v0l=0|e,this.v0h=0|t,this.v1l=0|r,this.v1h=0|n,this.v2l=0|i,this.v2h=0|o,this.v3l=0|s,this.v3h=0|a,this.v4l=0|u,this.v4h=0|c,this.v5l=0|f,this.v5h=0|l,this.v6l=0|d,this.v6h=0|h,this.v7l=0|p,this.v7h=0|y}compress(e,t,r){this.get().forEach(((e,t)=>a[t]=e)),a.set(s,16);let{h:o,l:f}=i.default.fromBig(BigInt(this.length));a[24]=s[8]^f,a[25]=s[9]^o,r&&(a[28]=~a[28],a[29]=~a[29]);let l=0;const d=n.SIGMA;for(let r=0;r<12;r++)u(0,4,8,12,e,t+2*d[l++]),c(0,4,8,12,e,t+2*d[l++]),u(1,5,9,13,e,t+2*d[l++]),c(1,5,9,13,e,t+2*d[l++]),u(2,6,10,14,e,t+2*d[l++]),c(2,6,10,14,e,t+2*d[l++]),u(3,7,11,15,e,t+2*d[l++]),c(3,7,11,15,e,t+2*d[l++]),u(0,5,10,15,e,t+2*d[l++]),c(0,5,10,15,e,t+2*d[l++]),u(1,6,11,12,e,t+2*d[l++]),c(1,6,11,12,e,t+2*d[l++]),u(2,7,8,13,e,t+2*d[l++]),c(2,7,8,13,e,t+2*d[l++]),u(3,4,9,14,e,t+2*d[l++]),c(3,4,9,14,e,t+2*d[l++]);this.v0l^=a[0]^a[16],this.v0h^=a[1]^a[17],this.v1l^=a[2]^a[18],this.v1h^=a[3]^a[19],this.v2l^=a[4]^a[20],this.v2h^=a[5]^a[21],this.v3l^=a[6]^a[22],this.v3h^=a[7]^a[23],this.v4l^=a[8]^a[24],this.v4h^=a[9]^a[25],this.v5l^=a[10]^a[26],this.v5h^=a[11]^a[27],this.v6l^=a[12]^a[28],this.v6h^=a[13]^a[29],this.v7l^=a[14]^a[30],this.v7h^=a[15]^a[31],a.fill(0)}destroy(){this.destroyed=!0,this.buffer32.fill(0),this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)}}t.blake2b=(0,o.wrapConstructorWithOpts)((e=>new f(e)))},1945:(e,t)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.crypto=void 0,t.crypto=\"object\"==typeof globalThis&&\"crypto\"in globalThis?globalThis.crypto:void 0},9569:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.hmac=void 0;const n=r(7320),i=r(8089);class o extends i.Hash{constructor(e,t){super(),this.finished=!1,this.destroyed=!1,n.default.hash(e);const r=(0,i.toBytes)(t);if(this.iHash=e.create(),\"function\"!=typeof this.iHash.update)throw new TypeError(\"Expected instance of class which extends utils.Hash\");this.blockLen=this.iHash.blockLen,this.outputLen=this.iHash.outputLen;const o=this.blockLen,s=new Uint8Array(o);s.set(r.length>o?e.create().update(r).digest():r);for(let e=0;e<s.length;e++)s[e]^=54;this.iHash.update(s),this.oHash=e.create();for(let e=0;e<s.length;e++)s[e]^=106;this.oHash.update(s),s.fill(0)}update(e){return n.default.exists(this),this.iHash.update(e),this}digestInto(e){n.default.exists(this),n.default.bytes(e,this.outputLen),this.finished=!0,this.iHash.digestInto(e),this.oHash.update(e),this.oHash.digestInto(e),this.destroy()}digest(){const e=new Uint8Array(this.oHash.outputLen);return this.digestInto(e),e}_cloneInto(e){e||(e=Object.create(Object.getPrototypeOf(this),{}));const{oHash:t,iHash:r,finished:n,destroyed:i,blockLen:o,outputLen:s}=this;return e.finished=n,e.destroyed=i,e.blockLen=o,e.outputLen=s,e.oHash=t._cloneInto(e.oHash),e.iHash=r._cloneInto(e.iHash),e}destroy(){this.destroyed=!0,this.oHash.destroy(),this.iHash.destroy()}}t.hmac=(e,t,r)=>new o(e,t).update(r).digest(),t.hmac.create=(e,t)=>new o(e,t)},9023:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.pbkdf2Async=t.pbkdf2=void 0;const n=r(7320),i=r(9569),o=r(8089);function s(e,t,r,s){n.default.hash(e);const a=(0,o.checkOpts)({dkLen:32,asyncTick:10},s),{c:u,dkLen:c,asyncTick:f}=a;if(n.default.number(u),n.default.number(c),n.default.number(f),u<1)throw new Error(\"PBKDF2: iterations (c) should be >= 1\");const l=(0,o.toBytes)(t),d=(0,o.toBytes)(r),h=new Uint8Array(c),p=i.hmac.create(e,l),y=p._cloneInto().update(d);return{c:u,dkLen:c,asyncTick:f,DK:h,PRF:p,PRFSalt:y}}function a(e,t,r,n,i){return e.destroy(),t.destroy(),n&&n.destroy(),i.fill(0),r}t.pbkdf2=function(e,t,r,n){const{c:i,dkLen:u,DK:c,PRF:f,PRFSalt:l}=s(e,t,r,n);let d;const h=new Uint8Array(4),p=(0,o.createView)(h),y=new Uint8Array(f.outputLen);for(let e=1,t=0;t<u;e++,t+=f.outputLen){const r=c.subarray(t,t+f.outputLen);p.setInt32(0,e,!1),(d=l._cloneInto(d)).update(h).digestInto(y),r.set(y.subarray(0,r.length));for(let e=1;e<i;e++){f._cloneInto(d).update(y).digestInto(y);for(let e=0;e<r.length;e++)r[e]^=y[e]}}return a(f,l,c,d,y)},t.pbkdf2Async=async function(e,t,r,n){const{c:i,dkLen:u,asyncTick:c,DK:f,PRF:l,PRFSalt:d}=s(e,t,r,n);let h;const p=new Uint8Array(4),y=(0,o.createView)(p),b=new Uint8Array(l.outputLen);for(let e=1,t=0;t<u;e++,t+=l.outputLen){const r=f.subarray(t,t+l.outputLen);y.setInt32(0,e,!1),(h=d._cloneInto(h)).update(p).digestInto(b),r.set(b.subarray(0,r.length)),await(0,o.asyncLoop)(i-1,c,(e=>{l._cloneInto(h).update(b).digestInto(b);for(let e=0;e<r.length;e++)r[e]^=b[e]}))}return a(l,d,f,h,b)}},830:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.ripemd160=t.RIPEMD160=void 0;const n=r(7505),i=r(8089),o=new Uint8Array([7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8]),s=Uint8Array.from({length:16},((e,t)=>t)),a=s.map((e=>(9*e+5)%16));let u=[s],c=[a];for(let e=0;e<4;e++)for(let t of[u,c])t.push(t[e].map((e=>o[e])));const f=[[11,14,15,12,5,8,7,9,11,13,14,15,6,7,9,8],[12,13,11,15,6,9,9,7,12,15,11,13,7,8,7,7],[13,15,14,11,7,7,6,8,13,14,13,12,5,5,6,9],[14,11,12,14,8,6,5,5,15,12,15,14,9,9,8,6],[15,12,13,13,9,5,8,6,14,11,12,11,8,6,5,5]].map((e=>new Uint8Array(e))),l=u.map(((e,t)=>e.map((e=>f[t][e])))),d=c.map(((e,t)=>e.map((e=>f[t][e])))),h=new Uint32Array([0,1518500249,1859775393,2400959708,2840853838]),p=new Uint32Array([1352829926,1548603684,1836072691,2053994217,0]),y=(e,t)=>e<<t|e>>>32-t;function b(e,t,r,n){return 0===e?t^r^n:1===e?t&r|~t&n:2===e?(t|~r)^n:3===e?t&n|r&~n:t^(r|~n)}const m=new Uint32Array(16);class g extends n.SHA2{constructor(){super(64,20,8,!0),this.h0=1732584193,this.h1=-271733879,this.h2=-1732584194,this.h3=271733878,this.h4=-1009589776}get(){const{h0:e,h1:t,h2:r,h3:n,h4:i}=this;return[e,t,r,n,i]}set(e,t,r,n,i){this.h0=0|e,this.h1=0|t,this.h2=0|r,this.h3=0|n,this.h4=0|i}process(e,t){for(let r=0;r<16;r++,t+=4)m[r]=e.getUint32(t,!0);let r=0|this.h0,n=r,i=0|this.h1,o=i,s=0|this.h2,a=s,f=0|this.h3,g=f,v=0|this.h4,w=v;for(let e=0;e<5;e++){const t=4-e,E=h[e],_=p[e],S=u[e],T=c[e],B=l[e],A=d[e];for(let t=0;t<16;t++){const n=y(r+b(e,i,s,f)+m[S[t]]+E,B[t])+v|0;r=v,v=f,f=0|y(s,10),s=i,i=n}for(let e=0;e<16;e++){const r=y(n+b(t,o,a,g)+m[T[e]]+_,A[e])+w|0;n=w,w=g,g=0|y(a,10),a=o,o=r}}this.set(this.h1+s+g|0,this.h2+f+w|0,this.h3+v+n|0,this.h4+r+o|0,this.h0+i+a|0)}roundClean(){m.fill(0)}destroy(){this.destroyed=!0,this.buffer.fill(0),this.set(0,0,0,0,0)}}t.RIPEMD160=g,t.ripemd160=(0,i.wrapConstructor)((()=>new g))},3061:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.sha224=t.sha256=void 0;const n=r(7505),i=r(8089),o=(e,t,r)=>e&t^e&r^t&r,s=new Uint32Array([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]),a=new Uint32Array([1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225]),u=new Uint32Array(64);class c extends n.SHA2{constructor(){super(64,32,8,!1),this.A=0|a[0],this.B=0|a[1],this.C=0|a[2],this.D=0|a[3],this.E=0|a[4],this.F=0|a[5],this.G=0|a[6],this.H=0|a[7]}get(){const{A:e,B:t,C:r,D:n,E:i,F:o,G:s,H:a}=this;return[e,t,r,n,i,o,s,a]}set(e,t,r,n,i,o,s,a){this.A=0|e,this.B=0|t,this.C=0|r,this.D=0|n,this.E=0|i,this.F=0|o,this.G=0|s,this.H=0|a}process(e,t){for(let r=0;r<16;r++,t+=4)u[r]=e.getUint32(t,!1);for(let e=16;e<64;e++){const t=u[e-15],r=u[e-2],n=(0,i.rotr)(t,7)^(0,i.rotr)(t,18)^t>>>3,o=(0,i.rotr)(r,17)^(0,i.rotr)(r,19)^r>>>10;u[e]=o+u[e-7]+n+u[e-16]|0}let{A:r,B:n,C:a,D:c,E:f,F:l,G:d,H:h}=this;for(let e=0;e<64;e++){const t=h+((0,i.rotr)(f,6)^(0,i.rotr)(f,11)^(0,i.rotr)(f,25))+((p=f)&l^~p&d)+s[e]+u[e]|0,y=((0,i.rotr)(r,2)^(0,i.rotr)(r,13)^(0,i.rotr)(r,22))+o(r,n,a)|0;h=d,d=l,l=f,f=c+t|0,c=a,a=n,n=r,r=t+y|0}var p;r=r+this.A|0,n=n+this.B|0,a=a+this.C|0,c=c+this.D|0,f=f+this.E|0,l=l+this.F|0,d=d+this.G|0,h=h+this.H|0,this.set(r,n,a,c,f,l,d,h)}roundClean(){u.fill(0)}destroy(){this.set(0,0,0,0,0,0,0,0),this.buffer.fill(0)}}class f extends c{constructor(){super(),this.A=-1056596264,this.B=914150663,this.C=812702999,this.D=-150054599,this.E=-4191439,this.F=1750603025,this.G=1694076839,this.H=-1090891868,this.outputLen=28}}t.sha256=(0,i.wrapConstructor)((()=>new c)),t.sha224=(0,i.wrapConstructor)((()=>new f))},6262:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.sha384=t.sha512_256=t.sha512_224=t.sha512=t.SHA512=void 0;const n=r(7505),i=r(6873),o=r(8089),[s,a]=i.default.split([\"0x428a2f98d728ae22\",\"0x7137449123ef65cd\",\"0xb5c0fbcfec4d3b2f\",\"0xe9b5dba58189dbbc\",\"0x3956c25bf348b538\",\"0x59f111f1b605d019\",\"0x923f82a4af194f9b\",\"0xab1c5ed5da6d8118\",\"0xd807aa98a3030242\",\"0x12835b0145706fbe\",\"0x243185be4ee4b28c\",\"0x550c7dc3d5ffb4e2\",\"0x72be5d74f27b896f\",\"0x80deb1fe3b1696b1\",\"0x9bdc06a725c71235\",\"0xc19bf174cf692694\",\"0xe49b69c19ef14ad2\",\"0xefbe4786384f25e3\",\"0x0fc19dc68b8cd5b5\",\"0x240ca1cc77ac9c65\",\"0x2de92c6f592b0275\",\"0x4a7484aa6ea6e483\",\"0x5cb0a9dcbd41fbd4\",\"0x76f988da831153b5\",\"0x983e5152ee66dfab\",\"0xa831c66d2db43210\",\"0xb00327c898fb213f\",\"0xbf597fc7beef0ee4\",\"0xc6e00bf33da88fc2\",\"0xd5a79147930aa725\",\"0x06ca6351e003826f\",\"0x142929670a0e6e70\",\"0x27b70a8546d22ffc\",\"0x2e1b21385c26c926\",\"0x4d2c6dfc5ac42aed\",\"0x53380d139d95b3df\",\"0x650a73548baf63de\",\"0x766a0abb3c77b2a8\",\"0x81c2c92e47edaee6\",\"0x92722c851482353b\",\"0xa2bfe8a14cf10364\",\"0xa81a664bbc423001\",\"0xc24b8b70d0f89791\",\"0xc76c51a30654be30\",\"0xd192e819d6ef5218\",\"0xd69906245565a910\",\"0xf40e35855771202a\",\"0x106aa07032bbd1b8\",\"0x19a4c116b8d2d0c8\",\"0x1e376c085141ab53\",\"0x2748774cdf8eeb99\",\"0x34b0bcb5e19b48a8\",\"0x391c0cb3c5c95a63\",\"0x4ed8aa4ae3418acb\",\"0x5b9cca4f7763e373\",\"0x682e6ff3d6b2b8a3\",\"0x748f82ee5defb2fc\",\"0x78a5636f43172f60\",\"0x84c87814a1f0ab72\",\"0x8cc702081a6439ec\",\"0x90befffa23631e28\",\"0xa4506cebde82bde9\",\"0xbef9a3f7b2c67915\",\"0xc67178f2e372532b\",\"0xca273eceea26619c\",\"0xd186b8c721c0c207\",\"0xeada7dd6cde0eb1e\",\"0xf57d4f7fee6ed178\",\"0x06f067aa72176fba\",\"0x0a637dc5a2c898a6\",\"0x113f9804bef90dae\",\"0x1b710b35131c471b\",\"0x28db77f523047d84\",\"0x32caab7b40c72493\",\"0x3c9ebe0a15c9bebc\",\"0x431d67c49c100d4c\",\"0x4cc5d4becb3e42b6\",\"0x597f299cfc657e2a\",\"0x5fcb6fab3ad6faec\",\"0x6c44198c4a475817\"].map((e=>BigInt(e)))),u=new Uint32Array(80),c=new Uint32Array(80);class f extends n.SHA2{constructor(){super(128,64,16,!1),this.Ah=1779033703,this.Al=-205731576,this.Bh=-1150833019,this.Bl=-2067093701,this.Ch=1013904242,this.Cl=-23791573,this.Dh=-1521486534,this.Dl=1595750129,this.Eh=1359893119,this.El=-1377402159,this.Fh=-1694144372,this.Fl=725511199,this.Gh=528734635,this.Gl=-79577749,this.Hh=1541459225,this.Hl=327033209}get(){const{Ah:e,Al:t,Bh:r,Bl:n,Ch:i,Cl:o,Dh:s,Dl:a,Eh:u,El:c,Fh:f,Fl:l,Gh:d,Gl:h,Hh:p,Hl:y}=this;return[e,t,r,n,i,o,s,a,u,c,f,l,d,h,p,y]}set(e,t,r,n,i,o,s,a,u,c,f,l,d,h,p,y){this.Ah=0|e,this.Al=0|t,this.Bh=0|r,this.Bl=0|n,this.Ch=0|i,this.Cl=0|o,this.Dh=0|s,this.Dl=0|a,this.Eh=0|u,this.El=0|c,this.Fh=0|f,this.Fl=0|l,this.Gh=0|d,this.Gl=0|h,this.Hh=0|p,this.Hl=0|y}process(e,t){for(let r=0;r<16;r++,t+=4)u[r]=e.getUint32(t),c[r]=e.getUint32(t+=4);for(let e=16;e<80;e++){const t=0|u[e-15],r=0|c[e-15],n=i.default.rotrSH(t,r,1)^i.default.rotrSH(t,r,8)^i.default.shrSH(t,r,7),o=i.default.rotrSL(t,r,1)^i.default.rotrSL(t,r,8)^i.default.shrSL(t,r,7),s=0|u[e-2],a=0|c[e-2],f=i.default.rotrSH(s,a,19)^i.default.rotrBH(s,a,61)^i.default.shrSH(s,a,6),l=i.default.rotrSL(s,a,19)^i.default.rotrBL(s,a,61)^i.default.shrSL(s,a,6),d=i.default.add4L(o,l,c[e-7],c[e-16]),h=i.default.add4H(d,n,f,u[e-7],u[e-16]);u[e]=0|h,c[e]=0|d}let{Ah:r,Al:n,Bh:o,Bl:f,Ch:l,Cl:d,Dh:h,Dl:p,Eh:y,El:b,Fh:m,Fl:g,Gh:v,Gl:w,Hh:E,Hl:_}=this;for(let e=0;e<80;e++){const t=i.default.rotrSH(y,b,14)^i.default.rotrSH(y,b,18)^i.default.rotrBH(y,b,41),S=i.default.rotrSL(y,b,14)^i.default.rotrSL(y,b,18)^i.default.rotrBL(y,b,41),T=y&m^~y&v,B=b&g^~b&w,A=i.default.add5L(_,S,B,a[e],c[e]),x=i.default.add5H(A,E,t,T,s[e],u[e]),P=0|A,M=i.default.rotrSH(r,n,28)^i.default.rotrBH(r,n,34)^i.default.rotrBH(r,n,39),C=i.default.rotrSL(r,n,28)^i.default.rotrBL(r,n,34)^i.default.rotrBL(r,n,39),O=r&o^r&l^o&l,k=n&f^n&d^f&d;E=0|v,_=0|w,v=0|m,w=0|g,m=0|y,g=0|b,({h:y,l:b}=i.default.add(0|h,0|p,0|x,0|P)),h=0|l,p=0|d,l=0|o,d=0|f,o=0|r,f=0|n;const R=i.default.add3L(P,C,k);r=i.default.add3H(R,x,M,O),n=0|R}({h:r,l:n}=i.default.add(0|this.Ah,0|this.Al,0|r,0|n)),({h:o,l:f}=i.default.add(0|this.Bh,0|this.Bl,0|o,0|f)),({h:l,l:d}=i.default.add(0|this.Ch,0|this.Cl,0|l,0|d)),({h,l:p}=i.default.add(0|this.Dh,0|this.Dl,0|h,0|p)),({h:y,l:b}=i.default.add(0|this.Eh,0|this.El,0|y,0|b)),({h:m,l:g}=i.default.add(0|this.Fh,0|this.Fl,0|m,0|g)),({h:v,l:w}=i.default.add(0|this.Gh,0|this.Gl,0|v,0|w)),({h:E,l:_}=i.default.add(0|this.Hh,0|this.Hl,0|E,0|_)),this.set(r,n,o,f,l,d,h,p,y,b,m,g,v,w,E,_)}roundClean(){u.fill(0),c.fill(0)}destroy(){this.buffer.fill(0),this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)}}t.SHA512=f;class l extends f{constructor(){super(),this.Ah=-1942145080,this.Al=424955298,this.Bh=1944164710,this.Bl=-1982016298,this.Ch=502970286,this.Cl=855612546,this.Dh=1738396948,this.Dl=1479516111,this.Eh=258812777,this.El=2077511080,this.Fh=2011393907,this.Fl=79989058,this.Gh=1067287976,this.Gl=1780299464,this.Hh=286451373,this.Hl=-1848208735,this.outputLen=28}}class d extends f{constructor(){super(),this.Ah=573645204,this.Al=-64227540,this.Bh=-1621794909,this.Bl=-934517566,this.Ch=596883563,this.Cl=1867755857,this.Dh=-1774684391,this.Dl=1497426621,this.Eh=-1775747358,this.El=-1467023389,this.Fh=-1101128155,this.Fl=1401305490,this.Gh=721525244,this.Gl=746961066,this.Hh=246885852,this.Hl=-2117784414,this.outputLen=32}}class h extends f{constructor(){super(),this.Ah=-876896931,this.Al=-1056596264,this.Bh=1654270250,this.Bl=914150663,this.Ch=-1856437926,this.Cl=812702999,this.Dh=355462360,this.Dl=-150054599,this.Eh=1731405415,this.El=-4191439,this.Fh=-1900787065,this.Fl=1750603025,this.Gh=-619958771,this.Gl=1694076839,this.Hh=1203062813,this.Hl=-1090891868,this.outputLen=48}}t.sha512=(0,o.wrapConstructor)((()=>new f)),t.sha512_224=(0,o.wrapConstructor)((()=>new l)),t.sha512_256=(0,o.wrapConstructor)((()=>new d)),t.sha384=(0,o.wrapConstructor)((()=>new h))},8089:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.randomBytes=t.wrapConstructorWithOpts=t.wrapConstructor=t.checkOpts=t.Hash=t.concatBytes=t.toBytes=t.utf8ToBytes=t.asyncLoop=t.nextTick=t.hexToBytes=t.bytesToHex=t.isLE=t.rotr=t.createView=t.u32=t.u8=void 0;const n=r(1945);if(t.u8=e=>new Uint8Array(e.buffer,e.byteOffset,e.byteLength),t.u32=e=>new Uint32Array(e.buffer,e.byteOffset,Math.floor(e.byteLength/4)),t.createView=e=>new DataView(e.buffer,e.byteOffset,e.byteLength),t.rotr=(e,t)=>e<<32-t|e>>>t,t.isLE=68===new Uint8Array(new Uint32Array([287454020]).buffer)[0],!t.isLE)throw new Error(\"Non little-endian hardware is not supported\");const i=Array.from({length:256},((e,t)=>t.toString(16).padStart(2,\"0\")));function o(e){if(\"string\"!=typeof e)throw new TypeError(\"utf8ToBytes expected string, got \"+typeof e);return(new TextEncoder).encode(e)}function s(e){if(\"string\"==typeof e&&(e=o(e)),!(e instanceof Uint8Array))throw new TypeError(`Expected input type is Uint8Array (got ${typeof e})`);return e}t.bytesToHex=function(e){if(!(e instanceof Uint8Array))throw new Error(\"Uint8Array expected\");let t=\"\";for(let r=0;r<e.length;r++)t+=i[e[r]];return t},t.hexToBytes=function(e){if(\"string\"!=typeof e)throw new TypeError(\"hexToBytes: expected string, got \"+typeof e);if(e.length%2)throw new Error(\"hexToBytes: received invalid unpadded hex\");const t=new Uint8Array(e.length/2);for(let r=0;r<t.length;r++){const n=2*r,i=e.slice(n,n+2),o=Number.parseInt(i,16);if(Number.isNaN(o)||o<0)throw new Error(\"Invalid byte sequence\");t[r]=o}return t},t.nextTick=async()=>{},t.asyncLoop=async function(e,r,n){let i=Date.now();for(let o=0;o<e;o++){n(o);const e=Date.now()-i;e>=0&&e<r||(await(0,t.nextTick)(),i+=e)}},t.utf8ToBytes=o,t.toBytes=s,t.concatBytes=function(...e){if(!e.every((e=>e instanceof Uint8Array)))throw new Error(\"Uint8Array list expected\");if(1===e.length)return e[0];const t=e.reduce(((e,t)=>e+t.length),0),r=new Uint8Array(t);for(let t=0,n=0;t<e.length;t++){const i=e[t];r.set(i,n),n+=i.length}return r},t.Hash=class{clone(){return this._cloneInto()}};t.checkOpts=function(e,t){if(void 0!==t&&(\"object\"!=typeof t||(r=t,\"[object Object]\"!==Object.prototype.toString.call(r)||r.constructor!==Object)))throw new TypeError(\"Options should be object or undefined\");var r;return Object.assign(e,t)},t.wrapConstructor=function(e){const t=t=>e().update(s(t)).digest(),r=e();return t.outputLen=r.outputLen,t.blockLen=r.blockLen,t.create=()=>e(),t},t.wrapConstructorWithOpts=function(e){const t=(t,r)=>e(r).update(s(t)).digest(),r=e({});return t.outputLen=r.outputLen,t.blockLen=r.blockLen,t.create=t=>e(t),t},t.randomBytes=function(e=32){if(n.crypto&&\"function\"==typeof n.crypto.getRandomValues)return n.crypto.getRandomValues(new Uint8Array(e));throw new Error(\"crypto.getRandomValues must be defined\")}},9656:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.utils=t.schnorr=t.verify=t.signSync=t.sign=t.getSharedSecret=t.recoverPublicKey=t.getPublicKey=t.Signature=t.Point=t.CURVE=void 0;const n=r(9159),i=BigInt(0),o=BigInt(1),s=BigInt(2),a=BigInt(3),u=BigInt(8),c=Object.freeze({a:i,b:BigInt(7),P:BigInt(\"0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f\"),n:BigInt(\"0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141\"),h:o,Gx:BigInt(\"55066263022277343669578718895168534326250603453777594175500187360389116729240\"),Gy:BigInt(\"32670510020758816978083085130507043184471273380659243275938904335757337482424\"),beta:BigInt(\"0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee\")});t.CURVE=c;const f=(e,t)=>(e+t/s)/t,l={beta:BigInt(\"0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee\"),splitScalar(e){const{n:t}=c,r=BigInt(\"0x3086d221a7d46bcde86c90e49284eb15\"),n=-o*BigInt(\"0xe4437ed6010e88286f547fa90abfe4c3\"),i=BigInt(\"0x114ca50f7a8e2f3f657c1108d9d44cfd8\"),s=r,a=BigInt(\"0x100000000000000000000000000000000\"),u=f(s*e,t),l=f(-n*e,t);let d=H(e-u*r-l*i,t),h=H(-u*n-l*s,t);const p=d>a,y=h>a;if(p&&(d=t-d),y&&(h=t-h),d>a||h>a)throw new Error(\"splitScalarEndo: Endomorphism failed, k=\"+e);return{k1neg:p,k1:d,k2neg:y,k2:h}}},d=32,h=32,p=d+1,y=2*d+1;function b(e){const{a:t,b:r}=c,n=H(e*e),i=H(n*e);return H(i+t*e+r)}const m=c.a===i;class g extends Error{constructor(e){super(e)}}function v(e){if(!(e instanceof w))throw new TypeError(\"JacobianPoint expected\")}class w{constructor(e,t,r){this.x=e,this.y=t,this.z=r}static fromAffine(e){if(!(e instanceof S))throw new TypeError(\"JacobianPoint#fromAffine: expected Point\");return e.equals(S.ZERO)?w.ZERO:new w(e.x,e.y,o)}static toAffineBatch(e){const t=function(e,t=c.P){const r=new Array(e.length),n=q(e.reduce(((e,n,o)=>n===i?e:(r[o]=e,H(e*n,t))),o),t);return e.reduceRight(((e,n,o)=>n===i?e:(r[o]=H(e*r[o],t),H(e*n,t))),n),r}(e.map((e=>e.z)));return e.map(((e,r)=>e.toAffine(t[r])))}static normalizeZ(e){return w.toAffineBatch(e).map(w.fromAffine)}equals(e){v(e);const{x:t,y:r,z:n}=this,{x:i,y:o,z:s}=e,a=H(n*n),u=H(s*s),c=H(t*u),f=H(i*a),l=H(H(r*s)*u),d=H(H(o*n)*a);return c===f&&l===d}negate(){return new w(this.x,H(-this.y),this.z)}double(){const{x:e,y:t,z:r}=this,n=H(e*e),i=H(t*t),o=H(i*i),c=e+i,f=H(s*(H(c*c)-n-o)),l=H(a*n),d=H(l*l),h=H(d-s*f),p=H(l*(f-h)-u*o),y=H(s*t*r);return new w(h,p,y)}add(e){v(e);const{x:t,y:r,z:n}=this,{x:o,y:a,z:u}=e;if(o===i||a===i)return this;if(t===i||r===i)return e;const c=H(n*n),f=H(u*u),l=H(t*f),d=H(o*c),h=H(H(r*u)*f),p=H(H(a*n)*c),y=H(d-l),b=H(p-h);if(y===i)return b===i?this.double():w.ZERO;const m=H(y*y),g=H(y*m),E=H(l*m),_=H(b*b-g-s*E),S=H(b*(E-_)-h*g),T=H(n*u*y);return new w(_,S,T)}subtract(e){return this.add(e.negate())}multiplyUnsafe(e){const t=w.ZERO;if(\"bigint\"==typeof e&&e===i)return t;let r=j(e);if(r===o)return this;if(!m){let e=t,n=this;for(;r>i;)r&o&&(e=e.add(n)),n=n.double(),r>>=o;return e}let{k1neg:n,k1:s,k2neg:a,k2:u}=l.splitScalar(r),c=t,f=t,d=this;for(;s>i||u>i;)s&o&&(c=c.add(d)),u&o&&(f=f.add(d)),d=d.double(),s>>=o,u>>=o;return n&&(c=c.negate()),a&&(f=f.negate()),f=new w(H(f.x*l.beta),f.y,f.z),c.add(f)}precomputeWindow(e){const t=m?128/e+1:256/e+1,r=[];let n=this,i=n;for(let o=0;o<t;o++){i=n,r.push(i);for(let t=1;t<2**(e-1);t++)i=i.add(n),r.push(i);n=i.double()}return r}wNAF(e,t){!t&&this.equals(w.BASE)&&(t=S.BASE);const r=t&&t._WINDOW_SIZE||1;if(256%r)throw new Error(\"Point#wNAF: Invalid precomputation window, must be power of 2\");let n=t&&_.get(t);n||(n=this.precomputeWindow(r),t&&1!==r&&(n=w.normalizeZ(n),_.set(t,n)));let i=w.ZERO,s=w.BASE;const a=1+(m?128/r:256/r),u=2**(r-1),c=BigInt(2**r-1),f=2**r,l=BigInt(r);for(let t=0;t<a;t++){const r=t*u;let a=Number(e&c);e>>=l,a>u&&(a-=f,e+=o);const d=r,h=r+Math.abs(a)-1,p=t%2!=0,y=a<0;0===a?s=s.add(E(p,n[d])):i=i.add(E(y,n[h]))}return{p:i,f:s}}multiply(e,t){let r,n,i=j(e);if(m){const{k1neg:e,k1:o,k2neg:s,k2:a}=l.splitScalar(i);let{p:u,f:c}=this.wNAF(o,t),{p:f,f:d}=this.wNAF(a,t);u=E(e,u),f=E(s,f),f=new w(H(f.x*l.beta),f.y,f.z),r=u.add(f),n=c.add(d)}else{const{p:e,f:o}=this.wNAF(i,t);r=e,n=o}return w.normalizeZ([r,n])[0]}toAffine(e){const{x:t,y:r,z:n}=this,i=this.equals(w.ZERO);null==e&&(e=i?u:q(n));const s=e,a=H(s*s),c=H(a*s),f=H(t*a),l=H(r*c),d=H(n*s);if(i)return S.ZERO;if(d!==o)throw new Error(\"invZ was invalid\");return new S(f,l)}}function E(e,t){const r=t.negate();return e?r:t}w.BASE=new w(c.Gx,c.Gy,o),w.ZERO=new w(i,o,i);const _=new WeakMap;class S{constructor(e,t){this.x=e,this.y=t}_setWindowSize(e){this._WINDOW_SIZE=e,_.delete(this)}hasEvenY(){return this.y%s===i}static fromCompressedHex(e){const t=32===e.length,r=N(t?e:e.subarray(1));if(!Y(r))throw new Error(\"Point is not on curve\");let n=function(e){const{P:t}=c,r=BigInt(6),n=BigInt(11),i=BigInt(22),o=BigInt(23),u=BigInt(44),f=BigInt(88),l=e*e*e%t,d=l*l*e%t,h=D(d,a)*d%t,p=D(h,a)*d%t,y=D(p,s)*l%t,b=D(y,n)*y%t,m=D(b,i)*b%t,g=D(m,u)*m%t,v=D(g,f)*g%t,w=D(v,u)*m%t,E=D(w,a)*d%t,_=D(E,o)*b%t,S=D(_,r)*l%t,T=D(S,s);if(T*T%t!==e)throw new Error(\"Cannot find square root\");return T}(b(r));const i=(n&o)===o;t?i&&(n=H(-n)):1==(1&e[0])!==i&&(n=H(-n));const u=new S(r,n);return u.assertValidity(),u}static fromUncompressedHex(e){const t=N(e.subarray(1,d+1)),r=N(e.subarray(d+1,2*d+1)),n=new S(t,r);return n.assertValidity(),n}static fromHex(e){const t=U(e),r=t.length,n=t[0];if(r===d)return this.fromCompressedHex(t);if(r===p&&(2===n||3===n))return this.fromCompressedHex(t);if(r===y&&4===n)return this.fromUncompressedHex(t);throw new Error(`Point.fromHex: received invalid point. Expected 32-${p} compressed bytes or ${y} uncompressed bytes, not ${r}`)}static fromPrivateKey(e){return S.BASE.multiply(J(e))}static fromSignature(e,t,r){const{r:n,s:i}=Z(t);if(![0,1,2,3].includes(r))throw new Error(\"Cannot recover: invalid recovery bit\");const o=K(U(e)),{n:s}=c,a=2===r||3===r?n+s:n,u=q(a,s),f=H(-o*u,s),l=H(i*u,s),d=1&r?\"03\":\"02\",h=S.fromHex(d+O(a)),p=S.BASE.multiplyAndAddUnsafe(h,f,l);if(!p)throw new Error(\"Cannot recover signature: point at infinify\");return p.assertValidity(),p}toRawBytes(e=!1){return I(this.toHex(e))}toHex(e=!1){const t=O(this.x);return e?`${this.hasEvenY()?\"02\":\"03\"}${t}`:`04${t}${O(this.y)}`}toHexX(){return this.toHex(!0).slice(2)}toRawX(){return this.toRawBytes(!0).slice(1)}assertValidity(){const e=\"Point is not on elliptic curve\",{x:t,y:r}=this;if(!Y(t)||!Y(r))throw new Error(e);const n=H(r*r);if(H(n-b(t))!==i)throw new Error(e)}equals(e){return this.x===e.x&&this.y===e.y}negate(){return new S(this.x,H(-this.y))}double(){return w.fromAffine(this).double().toAffine()}add(e){return w.fromAffine(this).add(w.fromAffine(e)).toAffine()}subtract(e){return this.add(e.negate())}multiply(e){return w.fromAffine(this).multiply(e,this).toAffine()}multiplyAndAddUnsafe(e,t,r){const n=w.fromAffine(this),s=t===i||t===o||this!==S.BASE?n.multiplyUnsafe(t):n.multiply(t),a=w.fromAffine(e).multiplyUnsafe(r),u=s.add(a);return u.equals(w.ZERO)?void 0:u.toAffine()}}function T(e){return Number.parseInt(e[0],16)>=8?\"00\"+e:e}function B(e){if(e.length<2||2!==e[0])throw new Error(`Invalid signature integer tag: ${M(e)}`);const t=e[1],r=e.subarray(2,t+2);if(!t||r.length!==t)throw new Error(\"Invalid signature integer: wrong length\");if(0===r[0]&&r[1]<=127)throw new Error(\"Invalid signature integer: trailing length\");return{data:N(r),left:e.subarray(t+2)}}t.Point=S,S.BASE=new S(c.Gx,c.Gy),S.ZERO=new S(i,i);class A{constructor(e,t){this.r=e,this.s=t,this.assertValidity()}static fromCompact(e){const t=e instanceof Uint8Array,r=\"Signature.fromCompact\";if(\"string\"!=typeof e&&!t)throw new TypeError(`${r}: Expected string or Uint8Array`);const n=t?M(e):e;if(128!==n.length)throw new Error(`${r}: Expected 64-byte hex`);return new A(L(n.slice(0,64)),L(n.slice(64,128)))}static fromDER(e){const t=e instanceof Uint8Array;if(\"string\"!=typeof e&&!t)throw new TypeError(\"Signature.fromDER: Expected string or Uint8Array\");const{r,s:n}=function(e){if(e.length<2||48!=e[0])throw new Error(`Invalid signature tag: ${M(e)}`);if(e[1]!==e.length-2)throw new Error(\"Invalid signature: incorrect length\");const{data:t,left:r}=B(e.subarray(2)),{data:n,left:i}=B(r);if(i.length)throw new Error(`Invalid signature: left bytes after parsing: ${M(i)}`);return{r:t,s:n}}(t?e:I(e));return new A(r,n)}static fromHex(e){return this.fromDER(e)}assertValidity(){const{r:e,s:t}=this;if(!W(e))throw new Error(\"Invalid Signature: r must be 0 < r < n\");if(!W(t))throw new Error(\"Invalid Signature: s must be 0 < s < n\")}hasHighS(){const e=c.n>>o;return this.s>e}normalizeS(){return this.hasHighS()?new A(this.r,H(-this.s,c.n)):this}toDERRawBytes(){return I(this.toDERHex())}toDERHex(){const e=T(R(this.s)),t=T(R(this.r)),r=e.length/2,n=t.length/2,i=R(r),o=R(n);return`30${R(n+r+4)}02${o}${t}02${i}${e}`}toRawBytes(){return this.toDERRawBytes()}toHex(){return this.toDERHex()}toCompactRawBytes(){return I(this.toCompactHex())}toCompactHex(){return O(this.r)+O(this.s)}}function x(...e){if(!e.every((e=>e instanceof Uint8Array)))throw new Error(\"Uint8Array list expected\");if(1===e.length)return e[0];const t=e.reduce(((e,t)=>e+t.length),0),r=new Uint8Array(t);for(let t=0,n=0;t<e.length;t++){const i=e[t];r.set(i,n),n+=i.length}return r}t.Signature=A;const P=Array.from({length:256},((e,t)=>t.toString(16).padStart(2,\"0\")));function M(e){if(!(e instanceof Uint8Array))throw new Error(\"Expected Uint8Array\");let t=\"\";for(let r=0;r<e.length;r++)t+=P[e[r]];return t}const C=BigInt(\"0x10000000000000000000000000000000000000000000000000000000000000000\");function O(e){if(\"bigint\"!=typeof e)throw new Error(\"Expected bigint\");if(!(i<=e&&e<C))throw new Error(\"Expected number 0 <= n < 2^256\");return e.toString(16).padStart(64,\"0\")}function k(e){const t=I(O(e));if(32!==t.length)throw new Error(\"Error: expected 32 bytes\");return t}function R(e){const t=e.toString(16);return 1&t.length?`0${t}`:t}function L(e){if(\"string\"!=typeof e)throw new TypeError(\"hexToNumber: expected string, got \"+typeof e);return BigInt(`0x${e}`)}function I(e){if(\"string\"!=typeof e)throw new TypeError(\"hexToBytes: expected string, got \"+typeof e);if(e.length%2)throw new Error(\"hexToBytes: received invalid unpadded hex\"+e.length);const t=new Uint8Array(e.length/2);for(let r=0;r<t.length;r++){const n=2*r,i=e.slice(n,n+2),o=Number.parseInt(i,16);if(Number.isNaN(o)||o<0)throw new Error(\"Invalid byte sequence\");t[r]=o}return t}function N(e){return L(M(e))}function U(e){return e instanceof Uint8Array?Uint8Array.from(e):I(e)}function j(e){if(\"number\"==typeof e&&Number.isSafeInteger(e)&&e>0)return BigInt(e);if(\"bigint\"==typeof e&&W(e))return e;throw new TypeError(\"Expected valid private scalar: 0 < scalar < curve.n\")}function H(e,t=c.P){const r=e%t;return r>=i?r:t+r}function D(e,t){const{P:r}=c;let n=e;for(;t-- >i;)n*=n,n%=r;return n}function q(e,t=c.P){if(e===i||t<=i)throw new Error(`invert: expected positive integers, got n=${e} mod=${t}`);let r=H(e,t),n=t,s=i,a=o,u=o,f=i;for(;r!==i;){const e=n/r,t=n%r,i=s-u*e,o=a-f*e;n=r,r=t,s=u,a=f,u=i,f=o}if(n!==o)throw new Error(\"invert: does not exist\");return H(s,t)}function K(e,t=!1){const r=function(e){const t=8*e.length-8*h,r=N(e);return t>0?r>>BigInt(t):r}(e);if(t)return r;const{n}=c;return r>=n?r-n:r}let z,F;class V{constructor(e,t){if(this.hashLen=e,this.qByteLen=t,\"number\"!=typeof e||e<2)throw new Error(\"hashLen must be a number\");if(\"number\"!=typeof t||t<2)throw new Error(\"qByteLen must be a number\");this.v=new Uint8Array(e).fill(1),this.k=new Uint8Array(e).fill(0),this.counter=0}hmac(...e){return t.utils.hmacSha256(this.k,...e)}hmacSync(...e){return F(this.k,...e)}checkSync(){if(\"function\"!=typeof F)throw new g(\"hmacSha256Sync needs to be set\")}incr(){if(this.counter>=1e3)throw new Error(\"Tried 1,000 k values for sign(), all were invalid\");this.counter+=1}async reseed(e=new Uint8Array){this.k=await this.hmac(this.v,Uint8Array.from([0]),e),this.v=await this.hmac(this.v),0!==e.length&&(this.k=await this.hmac(this.v,Uint8Array.from([1]),e),this.v=await this.hmac(this.v))}reseedSync(e=new Uint8Array){this.checkSync(),this.k=this.hmacSync(this.v,Uint8Array.from([0]),e),this.v=this.hmacSync(this.v),0!==e.length&&(this.k=this.hmacSync(this.v,Uint8Array.from([1]),e),this.v=this.hmacSync(this.v))}async generate(){this.incr();let e=0;const t=[];for(;e<this.qByteLen;){this.v=await this.hmac(this.v);const r=this.v.slice();t.push(r),e+=this.v.length}return x(...t)}generateSync(){this.checkSync(),this.incr();let e=0;const t=[];for(;e<this.qByteLen;){this.v=this.hmacSync(this.v);const r=this.v.slice();t.push(r),e+=this.v.length}return x(...t)}}function W(e){return i<e&&e<c.n}function Y(e){return i<e&&e<c.P}function $(e,t,r,n=!0){const{n:s}=c,a=K(e,!0);if(!W(a))return;const u=q(a,s),f=S.BASE.multiply(a),l=H(f.x,s);if(l===i)return;const d=H(u*H(t+r*l,s),s);if(d===i)return;let h=new A(l,d),p=(f.x===h.r?0:2)|Number(f.y&o);return n&&h.hasHighS()&&(h=h.normalizeS(),p^=1),{sig:h,recovery:p}}function J(e){let t;if(\"bigint\"==typeof e)t=e;else if(\"number\"==typeof e&&Number.isSafeInteger(e)&&e>0)t=BigInt(e);else if(\"string\"==typeof e){if(e.length!==2*h)throw new Error(\"Expected 32 bytes of private key\");t=L(e)}else{if(!(e instanceof Uint8Array))throw new TypeError(\"Expected valid private key\");if(e.length!==h)throw new Error(\"Expected 32 bytes of private key\");t=N(e)}if(!W(t))throw new Error(\"Expected private key: 0 < key < n\");return t}function G(e){return e instanceof S?(e.assertValidity(),e):S.fromHex(e)}function Z(e){if(e instanceof A)return e.assertValidity(),e;try{return A.fromDER(e)}catch(t){return A.fromCompact(e)}}function X(e){const t=e instanceof Uint8Array,r=\"string\"==typeof e,n=(t||r)&&e.length;return t?n===p||n===y:r?n===2*p||n===2*y:e instanceof S}function Q(e){return N(e.length>d?e.slice(0,d):e)}function ee(e){const t=Q(e),r=H(t,c.n);return te(r<i?t:r)}function te(e){return k(e)}function re(e,r,n){if(null==e)throw new Error(`sign: expected valid message hash, not \"${e}\"`);const i=U(e),o=J(r),s=[te(o),ee(i)];if(null!=n){!0===n&&(n=t.utils.randomBytes(d));const e=U(n);if(e.length!==d)throw new Error(`sign: Expected ${d} bytes of extra data`);s.push(e)}return{seed:x(...s),m:Q(i),d:o}}function ne(e,t){const{sig:r,recovery:n}=e,{der:i,recovered:o}=Object.assign({canonical:!0,der:!0},t),s=i?r.toDERRawBytes():r.toCompactRawBytes();return o?[s,n]:s}t.getPublicKey=function(e,t=!1){return S.fromPrivateKey(e).toRawBytes(t)},t.recoverPublicKey=function(e,t,r,n=!1){return S.fromSignature(e,t,r).toRawBytes(n)},t.getSharedSecret=function(e,t,r=!1){if(X(e))throw new TypeError(\"getSharedSecret: first arg must be private key\");if(!X(t))throw new TypeError(\"getSharedSecret: second arg must be public key\");const n=G(t);return n.assertValidity(),n.multiply(J(e)).toRawBytes(r)},t.sign=async function(e,t,r={}){const{seed:n,m:i,d:o}=re(e,t,r.extraEntropy),s=new V(32,h);let a;for(await s.reseed(n);!(a=$(await s.generate(),i,o,r.canonical));)await s.reseed();return ne(a,r)},t.signSync=function(e,t,r={}){const{seed:n,m:i,d:o}=re(e,t,r.extraEntropy),s=new V(32,h);let a;for(s.reseedSync(n);!(a=$(s.generateSync(),i,o,r.canonical));)s.reseedSync();return ne(a,r)};const ie={strict:!0};function oe(e){return H(N(e),c.n)}t.verify=function(e,t,r,n=ie){let i;try{i=Z(e),t=U(t)}catch(e){return!1}const{r:o,s}=i;if(n.strict&&i.hasHighS())return!1;const a=K(t);let u;try{u=G(r)}catch(e){return!1}const{n:f}=c,l=q(s,f),d=H(a*l,f),h=H(o*l,f),p=S.BASE.multiplyAndAddUnsafe(u,d,h);return!!p&&H(p.x,f)===o};class se{constructor(e,t){this.r=e,this.s=t,this.assertValidity()}static fromHex(e){const t=U(e);if(64!==t.length)throw new TypeError(`SchnorrSignature.fromHex: expected 64 bytes, not ${t.length}`);const r=N(t.subarray(0,32)),n=N(t.subarray(32,64));return new se(r,n)}assertValidity(){const{r:e,s:t}=this;if(!Y(e)||!W(t))throw new Error(\"Invalid signature\")}toHex(){return O(this.r)+O(this.s)}toRawBytes(){return I(this.toHex())}}class ae{constructor(e,r,n=t.utils.randomBytes()){if(null==e)throw new TypeError(`sign: Expected valid message, not \"${e}\"`);this.m=U(e);const{x:i,scalar:o}=this.getScalar(J(r));if(this.px=i,this.d=o,this.rand=U(n),32!==this.rand.length)throw new TypeError(\"sign: Expected 32 bytes of aux randomness\")}getScalar(e){const t=S.fromPrivateKey(e),r=t.hasEvenY()?e:c.n-e;return{point:t,scalar:r,x:t.toRawX()}}initNonce(e,t){return k(e^N(t))}finalizeNonce(e){const t=H(N(e),c.n);if(t===i)throw new Error(\"sign: Creation of signature failed. k is zero\");const{point:r,x:n,scalar:o}=this.getScalar(t);return{R:r,rx:n,k:o}}finalizeSig(e,t,r,n){return new se(e.x,H(t+r*n,c.n)).toRawBytes()}error(){throw new Error(\"sign: Invalid signature produced\")}async calc(){const{m:e,d:r,px:n,rand:i}=this,o=t.utils.taggedHash,s=this.initNonce(r,await o(he.aux,i)),{R:a,rx:u,k:c}=this.finalizeNonce(await o(he.nonce,s,n,e)),f=oe(await o(he.challenge,u,n,e)),l=this.finalizeSig(a,c,f,r);return await fe(l,e,n)||this.error(),l}calcSync(){const{m:e,d:r,px:n,rand:i}=this,o=t.utils.taggedHashSync,s=this.initNonce(r,o(he.aux,i)),{R:a,rx:u,k:c}=this.finalizeNonce(o(he.nonce,s,n,e)),f=oe(o(he.challenge,u,n,e)),l=this.finalizeSig(a,c,f,r);return le(l,e,n)||this.error(),l}}function ue(e,t,r){const n=e instanceof se,i=n?e:se.fromHex(e);return n&&i.assertValidity(),{...i,m:U(t),P:G(r)}}function ce(e,t,r,n){const i=S.BASE.multiplyAndAddUnsafe(t,J(r),H(-n,c.n));return!(!i||!i.hasEvenY()||i.x!==e)}async function fe(e,r,n){try{const{r:i,s:o,m:s,P:a}=ue(e,r,n),u=oe(await t.utils.taggedHash(he.challenge,k(i),a.toRawX(),s));return ce(i,a,o,u)}catch(e){return!1}}function le(e,r,n){try{const{r:i,s:o,m:s,P:a}=ue(e,r,n),u=oe(t.utils.taggedHashSync(he.challenge,k(i),a.toRawX(),s));return ce(i,a,o,u)}catch(e){if(e instanceof g)throw e;return!1}}t.schnorr={Signature:se,getPublicKey:function(e){return S.fromPrivateKey(e).toRawX()},sign:async function(e,t,r){return new ae(e,t,r).calc()},verify:fe,signSync:function(e,t,r){return new ae(e,t,r).calcSync()},verifySync:le},S.BASE._setWindowSize(8);const de={node:n,web:\"object\"==typeof self&&\"crypto\"in self?self.crypto:void 0},he={challenge:\"BIP0340/challenge\",aux:\"BIP0340/aux\",nonce:\"BIP0340/nonce\"},pe={};t.utils={bytesToHex:M,hexToBytes:I,concatBytes:x,mod:H,invert:q,isValidPrivateKey(e){try{return J(e),!0}catch(e){return!1}},_bigintTo32Bytes:k,_normalizePrivateKey:J,hashToPrivateKey:e=>{e=U(e);const t=h+8;if(e.length<t||e.length>1024)throw new Error(\"Expected valid bytes of private key as per FIPS 186\");return k(H(N(e),c.n-o)+o)},randomBytes:(e=32)=>{if(de.web)return de.web.getRandomValues(new Uint8Array(e));if(de.node){const{randomBytes:t}=de.node;return Uint8Array.from(t(e))}throw new Error(\"The environment doesn't have randomBytes function\")},randomPrivateKey:()=>t.utils.hashToPrivateKey(t.utils.randomBytes(h+8)),precompute(e=8,t=S.BASE){const r=t===S.BASE?t:new S(t.x,t.y);return r._setWindowSize(e),r.multiply(a),r},sha256:async(...e)=>{if(de.web){const t=await de.web.subtle.digest(\"SHA-256\",x(...e));return new Uint8Array(t)}if(de.node){const{createHash:t}=de.node,r=t(\"sha256\");return e.forEach((e=>r.update(e))),Uint8Array.from(r.digest())}throw new Error(\"The environment doesn't have sha256 function\")},hmacSha256:async(e,...t)=>{if(de.web){const r=await de.web.subtle.importKey(\"raw\",e,{name:\"HMAC\",hash:{name:\"SHA-256\"}},!1,[\"sign\"]),n=x(...t),i=await de.web.subtle.sign(\"HMAC\",r,n);return new Uint8Array(i)}if(de.node){const{createHmac:r}=de.node,n=r(\"sha256\",e);return t.forEach((e=>n.update(e))),Uint8Array.from(n.digest())}throw new Error(\"The environment doesn't have hmac-sha256 function\")},sha256Sync:void 0,hmacSha256Sync:void 0,taggedHash:async(e,...r)=>{let n=pe[e];if(void 0===n){const r=await t.utils.sha256(Uint8Array.from(e,(e=>e.charCodeAt(0))));n=x(r,r),pe[e]=n}return t.utils.sha256(n,...r)},taggedHashSync:(e,...t)=>{if(\"function\"!=typeof z)throw new g(\"sha256Sync is undefined, you need to set it\");let r=pe[e];if(void 0===r){const t=z(Uint8Array.from(e,(e=>e.charCodeAt(0))));r=x(t,t),pe[e]=r}return z(r,...t)},_JacobianPoint:w},Object.defineProperties(t.utils,{sha256Sync:{configurable:!1,get:()=>z,set(e){z||(z=e)}},hmacSha256Sync:{configurable:!1,get:()=>F,set(e){F||(F=e)}}})},2440:function(e,t){\"use strict\";var r=this&&this.__awaiter||function(e,t,r,n){return new(r||(r=Promise))((function(i,o){function s(e){try{u(n.next(e))}catch(e){o(e)}}function a(e){try{u(n.throw(e))}catch(e){o(e)}}function u(e){var t;e.done?i(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(s,a)}u((n=n.apply(e,t||[])).next())}))},n=this&&this.__generator||function(e,t){var r,n,i,o,s={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:a(0),throw:a(1),return:a(2)},\"function\"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function a(o){return function(a){return function(o){if(r)throw new TypeError(\"Generator is already executing.\");for(;s;)try{if(r=1,n&&(i=2&o[0]?n.return:o[0]?n.throw||((i=n.return)&&i.call(n),0):n.next)&&!(i=i.call(n,o[1])).done)return i;switch(n=0,i&&(o=[2&o[0],i.value]),o[0]){case 0:case 1:i=o;break;case 4:return s.label++,{value:o[1],done:!1};case 5:s.label++,n=o[1],o=[0];continue;case 7:o=s.ops.pop(),s.trys.pop();continue;default:if(!((i=(i=s.trys).length>0&&i[i.length-1])||6!==o[0]&&2!==o[0])){s=0;continue}if(3===o[0]&&(!i||o[1]>i[0]&&o[1]<i[3])){s.label=o[1];break}if(6===o[0]&&s.label<i[1]){s.label=i[1],i=o;break}if(i&&s.label<i[2]){s.label=i[2],s.ops.push(o);break}i[2]&&s.ops.pop(),s.trys.pop();continue}o=t.call(e,s)}catch(e){o=[6,e],n=0}finally{r=i=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,a])}}};Object.defineProperty(t,\"__esModule\",{value:!0});var i=function(){function e(e){this.requestManager=e}return e.prototype.startBatch=function(){return this.requestManager.startBatch()},e.prototype.stopBatch=function(){return this.requestManager.stopBatch()},e.prototype.request=function(e,t){return r(this,void 0,void 0,(function(){return n(this,(function(r){switch(r.label){case 0:return this.requestManager.connectPromise?[4,this.requestManager.connectPromise]:[3,2];case 1:r.sent(),r.label=2;case 2:return[2,this.requestManager.request(e,!1,t)]}}))}))},e.prototype.notify=function(e){return r(this,void 0,void 0,(function(){return n(this,(function(t){switch(t.label){case 0:return this.requestManager.connectPromise?[4,this.requestManager.connectPromise]:[3,2];case 1:t.sent(),t.label=2;case 2:return[2,this.requestManager.request(e,!0,null)]}}))}))},e.prototype.onNotification=function(e){this.requestManager.requestChannel.addListener(\"notification\",e)},e.prototype.onError=function(e){this.requestManager.requestChannel.addListener(\"error\",e)},e.prototype.close=function(){this.requestManager.close()},e}();t.default=i},9931:function(e,t){\"use strict\";var r,n=this&&this.__extends||(r=function(e,t){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])},r(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)});Object.defineProperty(t,\"__esModule\",{value:!0}),t.convertJSONToRPCError=t.JSONRPCError=t.ERR_UNKNOWN=t.ERR_MISSIING_ID=t.ERR_TIMEOUT=void 0,t.ERR_TIMEOUT=7777,t.ERR_MISSIING_ID=7878,t.ERR_UNKNOWN=7979;var i=function(e){function t(t,r,n){var i=this.constructor,o=e.call(this,t)||this;return o.message=t,o.code=r,o.data=n,Object.setPrototypeOf(o,i.prototype),o}return n(t,e),t}(Error);t.JSONRPCError=i,t.convertJSONToRPCError=function(e){if(e.error){var r=e.error,n=r.message,o=r.code,s=r.data;return new i(n,o,s)}return new i(\"Unknown error\",t.ERR_UNKNOWN,e)}},7182:(e,t)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.getNotifications=t.getBatchRequests=t.isNotification=void 0,t.isNotification=function(e){return void 0===e.request.id||null===e.request.id},t.getBatchRequests=function(e){return e instanceof Array?e.filter((function(e){return null!=e.request.request.id})).map((function(e){return e.request})):[]},t.getNotifications=function(e){return e instanceof Array?e.filter((function(e){return t.isNotification(e.request)})).map((function(e){return e.request})):t.isNotification(e)?[e]:[]}},2752:function(e,t,r){\"use strict\";var n=this&&this.__awaiter||function(e,t,r,n){return new(r||(r=Promise))((function(i,o){function s(e){try{u(n.next(e))}catch(e){o(e)}}function a(e){try{u(n.throw(e))}catch(e){o(e)}}function u(e){var t;e.done?i(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(s,a)}u((n=n.apply(e,t||[])).next())}))},i=this&&this.__generator||function(e,t){var r,n,i,o,s={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:a(0),throw:a(1),return:a(2)},\"function\"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function a(o){return function(a){return function(o){if(r)throw new TypeError(\"Generator is already executing.\");for(;s;)try{if(r=1,n&&(i=2&o[0]?n.return:o[0]?n.throw||((i=n.return)&&i.call(n),0):n.next)&&!(i=i.call(n,o[1])).done)return i;switch(n=0,i&&(o=[2&o[0],i.value]),o[0]){case 0:case 1:i=o;break;case 4:return s.label++,{value:o[1],done:!1};case 5:s.label++,n=o[1],o=[0];continue;case 7:o=s.ops.pop(),s.trys.pop();continue;default:if(!((i=(i=s.trys).length>0&&i[i.length-1])||6!==o[0]&&2!==o[0])){s=0;continue}if(3===o[0]&&(!i||o[1]>i[0]&&o[1]<i[3])){s.label=o[1];break}if(6===o[0]&&s.label<i[1]){s.label=i[1],i=o;break}if(i&&s.label<i[2]){s.label=i[2],s.ops.push(o);break}i[2]&&s.ops.pop(),s.trys.pop();continue}o=t.call(e,s)}catch(e){o=[6,e],n=0}finally{r=i=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,a])}}};Object.defineProperty(t,\"__esModule\",{value:!0}),t.defaultNextRequest=void 0;var o=r(7187);t.defaultNextRequest=function(){var e=-1;return function(){return++e}};var s=function(){function e(e,r){void 0===r&&(r=t.defaultNextRequest()),this.batch=[],this.batchStarted=!1,this.lastId=-1,this.transports=e,this.requests={},this.connectPromise=this.connect(),this.requestChannel=new o.EventEmitter,this.nextID=r}return e.prototype.connect=function(){var e=this;return Promise.all(this.transports.map((function(t){return n(e,void 0,void 0,(function(){return i(this,(function(e){switch(e.label){case 0:return t.subscribe(\"error\",this.handleError.bind(this)),t.subscribe(\"notification\",this.handleNotification.bind(this)),[4,t.connect()];case 1:return e.sent(),[2]}}))}))})))},e.prototype.getPrimaryTransport=function(){return this.transports[0]},e.prototype.request=function(e,t,r){return void 0===t&&(t=!1),n(this,void 0,void 0,(function(){var n,o,s,a=this;return i(this,(function(i){return n=this.nextID().toString(),o=t?null:n,s={request:this.makeRequest(e.method,e.params||[],o),internalID:n},this.batchStarted?[2,new Promise((function(e,t){a.batch.push({resolve:e,reject:t,request:s})}))]:[2,this.getPrimaryTransport().sendData(s,r)]}))}))},e.prototype.close=function(){this.requestChannel.removeAllListeners(),this.transports.forEach((function(e){e.unsubscribe(),e.close()}))},e.prototype.startBatch=function(){this.batchStarted=!0},e.prototype.stopBatch=function(){if(!1===this.batchStarted)throw new Error(\"cannot end that which has never started\");0!==this.batch.length?(this.getPrimaryTransport().sendData(this.batch),this.batch=[],this.batchStarted=!1):this.batchStarted=!1},e.prototype.makeRequest=function(e,t,r){return r?{jsonrpc:\"2.0\",id:r,method:e,params:t}:{jsonrpc:\"2.0\",method:e,params:t}},e.prototype.handleError=function(e){this.requestChannel.emit(\"error\",e)},e.prototype.handleNotification=function(e){this.requestChannel.emit(\"notification\",e)},e}();t.default=s},4927:function(e,t,r){\"use strict\";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,\"__esModule\",{value:!0}),t.PostMessageIframeTransport=t.PostMessageWindowTransport=t.JSONRPCError=t.WebSocketTransport=t.EventEmitterTransport=t.HTTPTransport=t.RequestManager=t.Client=void 0;var i=n(r(2752));t.RequestManager=i.default;var o=n(r(2300));t.EventEmitterTransport=o.default;var s=n(r(2855));t.HTTPTransport=s.default;var a=n(r(6628));t.WebSocketTransport=a.default;var u=n(r(6514));t.PostMessageWindowTransport=u.default;var c=n(r(5280));t.PostMessageIframeTransport=c.default;var f=r(9931);Object.defineProperty(t,\"JSONRPCError\",{enumerable:!0,get:function(){return f.JSONRPCError}});var l=n(r(2440));t.Client=l.default,t.default=l.default},2300:function(e,t,r){\"use strict\";var n,i=this&&this.__extends||(n=function(e,t){return n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])},n(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,\"__esModule\",{value:!0});var o=r(3629),s=r(7182),a=r(9931),u=function(e){function t(t,r,n){var i=e.call(this)||this;return i.connection=t,i.reqUri=r,i.resUri=n,i}return i(t,e),t.prototype.connect=function(){var e=this;return this.connection.on(this.resUri,(function(t){e.transportRequestManager.resolveResponse(t)})),Promise.resolve()},t.prototype.sendData=function(e,t){void 0===t&&(t=null);var r=this.transportRequestManager.addRequest(e,t),n=s.getNotifications(e),i=this.parseData(e);try{return this.connection.emit(this.reqUri,i),this.transportRequestManager.settlePendingRequest(n),r}catch(e){var o=new a.JSONRPCError(e.message,a.ERR_UNKNOWN,e);return this.transportRequestManager.settlePendingRequest(n,o),Promise.reject(o)}},t.prototype.close=function(){this.connection.removeAllListeners()},t}(o.Transport);t.default=u},2855:function(e,t,r){\"use strict\";var n,i=this&&this.__extends||(n=function(e,t){return n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])},n(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}),o=this&&this.__awaiter||function(e,t,r,n){return new(r||(r=Promise))((function(i,o){function s(e){try{u(n.next(e))}catch(e){o(e)}}function a(e){try{u(n.throw(e))}catch(e){o(e)}}function u(e){var t;e.done?i(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(s,a)}u((n=n.apply(e,t||[])).next())}))},s=this&&this.__generator||function(e,t){var r,n,i,o,s={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:a(0),throw:a(1),return:a(2)},\"function\"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function a(o){return function(a){return function(o){if(r)throw new TypeError(\"Generator is already executing.\");for(;s;)try{if(r=1,n&&(i=2&o[0]?n.return:o[0]?n.throw||((i=n.return)&&i.call(n),0):n.next)&&!(i=i.call(n,o[1])).done)return i;switch(n=0,i&&(o=[2&o[0],i.value]),o[0]){case 0:case 1:i=o;break;case 4:return s.label++,{value:o[1],done:!1};case 5:s.label++,n=o[1],o=[0];continue;case 7:o=s.ops.pop(),s.trys.pop();continue;default:if(!((i=(i=s.trys).length>0&&i[i.length-1])||6!==o[0]&&2!==o[0])){s=0;continue}if(3===o[0]&&(!i||o[1]>i[0]&&o[1]<i[3])){s.label=o[1];break}if(6===o[0]&&s.label<i[1]){s.label=i[1],i=o;break}if(i&&s.label<i[2]){s.label=i[2],s.ops.push(o);break}i[2]&&s.ops.pop(),s.trys.pop();continue}o=t.call(e,s)}catch(e){o=[6,e],n=0}finally{r=i=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,a])}}},a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,\"__esModule\",{value:!0}),t.HTTPTransport=void 0;var u=a(r(4301)),c=r(3629),f=r(7182),l=r(9931),d=function(e){function t(r,n){var i=e.call(this)||this;return i.onlyNotifications=function(e){return e instanceof Array?e.every((function(e){return null===e.request.request.id||void 0===e.request.request.id})):null===e.request.id||void 0===e.request.id},i.uri=r,i.credentials=n&&n.credentials,i.headers=t.setupHeaders(n&&n.headers),i.injectedFetcher=null==n?void 0:n.fetcher,i}return i(t,e),t.prototype.connect=function(){return Promise.resolve()},t.prototype.sendData=function(e,t){return void 0===t&&(t=null),o(this,void 0,void 0,(function(){var r,n,i,o,a,c,d,h;return s(this,(function(s){switch(s.label){case 0:r=this.transportRequestManager.addRequest(e,t),n=f.getNotifications(e),i=f.getBatchRequests(e),o=this.injectedFetcher||u.default,s.label=1;case 1:return s.trys.push([1,4,,5]),[4,o(this.uri,{method:\"POST\",headers:this.headers,body:JSON.stringify(this.parseData(e)),credentials:this.credentials})];case 2:return a=s.sent(),this.transportRequestManager.settlePendingRequest(n),this.onlyNotifications(e)?[2,Promise.resolve()]:[4,a.text()];case 3:return c=s.sent(),(h=this.transportRequestManager.resolveResponse(c))?(this.transportRequestManager.settlePendingRequest(i,h),[2,Promise.reject(h)]):[3,5];case 4:return d=s.sent(),h=new l.JSONRPCError(d.message,l.ERR_UNKNOWN,d),this.transportRequestManager.settlePendingRequest(n,h),this.transportRequestManager.settlePendingRequest(f.getBatchRequests(e),h),[2,Promise.reject(h)];case 5:return[2,r]}}))}))},t.prototype.close=function(){},t.setupHeaders=function(e){var t=new Headers(e);return t.set(\"Content-Type\",\"application/json\"),t},t}(c.Transport);t.HTTPTransport=d,t.default=d},5280:function(e,t,r){\"use strict\";var n,i=this&&this.__extends||(n=function(e,t){return n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])},n(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}),o=this&&this.__awaiter||function(e,t,r,n){return new(r||(r=Promise))((function(i,o){function s(e){try{u(n.next(e))}catch(e){o(e)}}function a(e){try{u(n.throw(e))}catch(e){o(e)}}function u(e){var t;e.done?i(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(s,a)}u((n=n.apply(e,t||[])).next())}))},s=this&&this.__generator||function(e,t){var r,n,i,o,s={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:a(0),throw:a(1),return:a(2)},\"function\"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function a(o){return function(a){return function(o){if(r)throw new TypeError(\"Generator is already executing.\");for(;s;)try{if(r=1,n&&(i=2&o[0]?n.return:o[0]?n.throw||((i=n.return)&&i.call(n),0):n.next)&&!(i=i.call(n,o[1])).done)return i;switch(n=0,i&&(o=[2&o[0],i.value]),o[0]){case 0:case 1:i=o;break;case 4:return s.label++,{value:o[1],done:!1};case 5:s.label++,n=o[1],o=[0];continue;case 7:o=s.ops.pop(),s.trys.pop();continue;default:if(!((i=(i=s.trys).length>0&&i[i.length-1])||6!==o[0]&&2!==o[0])){s=0;continue}if(3===o[0]&&(!i||o[1]>i[0]&&o[1]<i[3])){s.label=o[1];break}if(6===o[0]&&s.label<i[1]){s.label=i[1],i=o;break}if(i&&s.label<i[2]){s.label=i[2],s.ops.push(o);break}i[2]&&s.ops.pop(),s.trys.pop();continue}o=t.call(e,s)}catch(e){o=[6,e],n=0}finally{r=i=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,a])}}};Object.defineProperty(t,\"__esModule\",{value:!0});var a=r(3629),u=r(7182),c=function(e){function t(t){var r=e.call(this)||this;return r.messageHandler=function(e){r.transportRequestManager.resolveResponse(JSON.stringify(e.data))},r.uri=t,r.postMessageID=\"post-message-transport-\"+Math.random(),r}return i(t,e),t.prototype.createWindow=function(e){var t=this;return new Promise((function(r,n){var i,o=document.createElement(\"iframe\");o.setAttribute(\"id\",t.postMessageID),o.setAttribute(\"width\",\"0px\"),o.setAttribute(\"height\",\"0px\"),o.setAttribute(\"style\",\"visiblity:hidden;border:none;outline:none;\"),o.addEventListener(\"load\",(function(){r(i)})),o.setAttribute(\"src\",e),window.document.body.appendChild(o),i=o.contentWindow}))},t.prototype.connect=function(){var e=this,t=/^(http|https):\\/\\/.*$/;return new Promise((function(r,n){return o(e,void 0,void 0,(function(){var e;return s(this,(function(i){switch(i.label){case 0:return t.test(this.uri)||n(new Error(\"Bad URI\")),e=this,[4,this.createWindow(this.uri)];case 1:return e.frame=i.sent(),window.addEventListener(\"message\",this.messageHandler),r(),[2]}}))}))}))},t.prototype.sendData=function(e,t){return void 0===t&&(t=5e3),o(this,void 0,void 0,(function(){var t,r;return s(this,(function(n){return t=this.transportRequestManager.addRequest(e,null),r=u.getNotifications(e),this.frame&&(this.frame.postMessage(e.request,\"*\"),this.transportRequestManager.settlePendingRequest(r)),[2,t]}))}))},t.prototype.close=function(){var e=document.getElementById(this.postMessageID);null==e||e.remove(),window.removeEventListener(\"message\",this.messageHandler)},t}(a.Transport);t.default=c},6514:function(e,t,r){\"use strict\";var n,i=this&&this.__extends||(n=function(e,t){return n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])},n(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}),o=this&&this.__awaiter||function(e,t,r,n){return new(r||(r=Promise))((function(i,o){function s(e){try{u(n.next(e))}catch(e){o(e)}}function a(e){try{u(n.throw(e))}catch(e){o(e)}}function u(e){var t;e.done?i(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(s,a)}u((n=n.apply(e,t||[])).next())}))},s=this&&this.__generator||function(e,t){var r,n,i,o,s={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:a(0),throw:a(1),return:a(2)},\"function\"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function a(o){return function(a){return function(o){if(r)throw new TypeError(\"Generator is already executing.\");for(;s;)try{if(r=1,n&&(i=2&o[0]?n.return:o[0]?n.throw||((i=n.return)&&i.call(n),0):n.next)&&!(i=i.call(n,o[1])).done)return i;switch(n=0,i&&(o=[2&o[0],i.value]),o[0]){case 0:case 1:i=o;break;case 4:return s.label++,{value:o[1],done:!1};case 5:s.label++,n=o[1],o=[0];continue;case 7:o=s.ops.pop(),s.trys.pop();continue;default:if(!((i=(i=s.trys).length>0&&i[i.length-1])||6!==o[0]&&2!==o[0])){s=0;continue}if(3===o[0]&&(!i||o[1]>i[0]&&o[1]<i[3])){s.label=o[1];break}if(6===o[0]&&s.label<i[1]){s.label=i[1],i=o;break}if(i&&s.label<i[2]){s.label=i[2],s.ops.push(o);break}i[2]&&s.ops.pop(),s.trys.pop();continue}o=t.call(e,s)}catch(e){o=[6,e],n=0}finally{r=i=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,a])}}};Object.defineProperty(t,\"__esModule\",{value:!0});var a=r(3629),u=r(7182),c=function(e){function t(t){var r=e.call(this)||this;return r.messageHandler=function(e){r.transportRequestManager.resolveResponse(JSON.stringify(e.data))},r.uri=t,r.postMessageID=\"post-message-transport-\"+Math.random(),r}return i(t,e),t.prototype.createWindow=function(e){return new Promise((function(t,r){var n,i,o;i=e,o=window.screen.height,n=window.open(i,\"inspector:popup\",\"left=0,top=0,width=400,height=\"+o+\",resizable,scrollbars=yes,status=1\"),setTimeout((function(){t(n)}),3e3)}))},t.prototype.connect=function(){var e=this,t=/^(http|https):\\/\\/.*$/;return new Promise((function(r,n){return o(e,void 0,void 0,(function(){var e;return s(this,(function(i){switch(i.label){case 0:return t.test(this.uri)||n(new Error(\"Bad URI\")),e=this,[4,this.createWindow(this.uri)];case 1:return e.frame=i.sent(),window.addEventListener(\"message\",this.messageHandler),r(),[2]}}))}))}))},t.prototype.sendData=function(e,t){return void 0===t&&(t=5e3),o(this,void 0,void 0,(function(){var t,r;return s(this,(function(n){return t=this.transportRequestManager.addRequest(e,null),r=u.getNotifications(e),this.frame&&(this.frame.postMessage(e.request,this.uri),this.transportRequestManager.settlePendingRequest(r)),[2,t]}))}))},t.prototype.close=function(){this.frame&&(window.removeEventListener(\"message\",this.messageHandler),this.frame.close())},t}(a.Transport);t.default=c},3629:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.Transport=void 0;var n=r(7016),i=function(){function e(){this.transportRequestManager=new n.TransportRequestManager,this.transportRequestManager.transportEventChannel.on(\"error\",(function(){}))}return e.prototype.subscribe=function(e,t){this.transportRequestManager.transportEventChannel.addListener(e,t)},e.prototype.unsubscribe=function(e,t){if(!e)return this.transportRequestManager.transportEventChannel.removeAllListeners();e&&t&&this.transportRequestManager.transportEventChannel.removeListener(e,t)},e.prototype.parseData=function(e){return e instanceof Array?e.map((function(e){return e.request.request})):e.request},e}();t.Transport=i},7016:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.TransportRequestManager=void 0;var n=r(7187),i=r(9931),o=function(){function e(){this.pendingRequest={},this.pendingBatchRequest={},this.transportEventChannel=new n.EventEmitter}return e.prototype.addRequest=function(e,t){return this.transportEventChannel.emit(\"pending\",e),e instanceof Array?(this.addBatchReq(e,t),Promise.resolve()):this.addReq(e.internalID,t)},e.prototype.settlePendingRequest=function(e,t){var r=this;e.forEach((function(e){var n=r.pendingRequest[e.internalID];delete r.pendingBatchRequest[e.internalID],void 0!==n&&(t?n.reject(t):(n.resolve(),null!==e.request.id&&void 0!==e.request.id||delete r.pendingRequest[e.internalID]))}))},e.prototype.isPendingRequest=function(e){return this.pendingRequest.hasOwnProperty(e)},e.prototype.resolveResponse=function(e,t){void 0===t&&(t=!0);var r=e;try{if(r=JSON.parse(e),!1===this.checkJSONRPC(r))return;return r instanceof Array?this.resolveBatch(r,t):this.resolveRes(r,t)}catch(r){var n=new i.JSONRPCError(\"Bad response format\",i.ERR_UNKNOWN,e);return t&&this.transportEventChannel.emit(\"error\",n),n}},e.prototype.addBatchReq=function(e,t){var r=this;return e.forEach((function(e){var t=e.resolve,n=e.reject,i=e.request.internalID;r.pendingBatchRequest[i]=!0,r.pendingRequest[i]={resolve:t,reject:n}})),Promise.resolve()},e.prototype.addReq=function(e,t){var r=this;return new Promise((function(n,i){null!==t&&t&&r.setRequestTimeout(e,t,i),r.pendingRequest[e]={resolve:n,reject:i}}))},e.prototype.checkJSONRPC=function(e){var t=[e];return e instanceof Array&&(t=e),t.every((function(e){return void 0!==e.result||void 0!==e.error||void 0!==e.method}))},e.prototype.processResult=function(e,t){if(e.error){var r=i.convertJSONToRPCError(e);t.reject(r)}else t.resolve(e.result)},e.prototype.resolveBatch=function(e,t){var r=this,n=e.map((function(e){return r.resolveRes(e,t)})).filter((function(e){return e}));if(n.length>0)return n[0]},e.prototype.resolveRes=function(e,t){var r,n=e.id,o=e.error,s=this.pendingRequest[n];return s?(delete this.pendingRequest[n],this.processResult(e,s),void this.transportEventChannel.emit(\"response\",e)):void 0!==n||void 0!==o?(o&&(r=i.convertJSONToRPCError(e)),t&&o&&r&&this.transportEventChannel.emit(\"error\",r),r):void this.transportEventChannel.emit(\"notification\",e)},e.prototype.setRequestTimeout=function(e,t,r){var n=this;setTimeout((function(){delete n.pendingRequest[e],r(new i.JSONRPCError(\"Request timeout request took longer than \"+t+\" ms to resolve\",i.ERR_TIMEOUT))}),t)},e}();t.TransportRequestManager=o},6628:function(e,t,r){\"use strict\";var n,i=this&&this.__extends||(n=function(e,t){return n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])},n(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}),o=this&&this.__awaiter||function(e,t,r,n){return new(r||(r=Promise))((function(i,o){function s(e){try{u(n.next(e))}catch(e){o(e)}}function a(e){try{u(n.throw(e))}catch(e){o(e)}}function u(e){var t;e.done?i(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(s,a)}u((n=n.apply(e,t||[])).next())}))},s=this&&this.__generator||function(e,t){var r,n,i,o,s={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:a(0),throw:a(1),return:a(2)},\"function\"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function a(o){return function(a){return function(o){if(r)throw new TypeError(\"Generator is already executing.\");for(;s;)try{if(r=1,n&&(i=2&o[0]?n.return:o[0]?n.throw||((i=n.return)&&i.call(n),0):n.next)&&!(i=i.call(n,o[1])).done)return i;switch(n=0,i&&(o=[2&o[0],i.value]),o[0]){case 0:case 1:i=o;break;case 4:return s.label++,{value:o[1],done:!1};case 5:s.label++,n=o[1],o=[0];continue;case 7:o=s.ops.pop(),s.trys.pop();continue;default:if(!((i=(i=s.trys).length>0&&i[i.length-1])||6!==o[0]&&2!==o[0])){s=0;continue}if(3===o[0]&&(!i||o[1]>i[0]&&o[1]<i[3])){s.label=o[1];break}if(6===o[0]&&s.label<i[1]){s.label=i[1],i=o;break}if(i&&s.label<i[2]){s.label=i[2],s.ops.push(o);break}i[2]&&s.ops.pop(),s.trys.pop();continue}o=t.call(e,s)}catch(e){o=[6,e],n=0}finally{r=i=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,a])}}},a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,\"__esModule\",{value:!0});var u=a(r(6792)),c=r(3629),f=r(7182),l=r(9931),d=function(e){function t(t){var r=e.call(this)||this;return r.uri=t,r.connection=new u.default(t),r}return i(t,e),t.prototype.connect=function(){var e=this;return new Promise((function(t,r){var n=function(){e.connection.removeEventListener(\"open\",n),t()};e.connection.addEventListener(\"open\",n),e.connection.addEventListener(\"message\",(function(t){var r=t.data;e.transportRequestManager.resolveResponse(r)}))}))},t.prototype.sendData=function(e,t){return void 0===t&&(t=5e3),o(this,void 0,void 0,(function(){var r,n,i;return s(this,(function(o){r=this.transportRequestManager.addRequest(e,t),n=f.getNotifications(e);try{this.connection.send(JSON.stringify(this.parseData(e))),this.transportRequestManager.settlePendingRequest(n)}catch(t){i=new l.JSONRPCError(t.message,l.ERR_UNKNOWN,t),this.transportRequestManager.settlePendingRequest(n,i),this.transportRequestManager.settlePendingRequest(f.getBatchRequests(e),i),r=Promise.reject(i)}return[2,r]}))}))},t.prototype.close=function(){this.connection.close()},t}(c.Transport);t.default=d},9187:(e,t)=>{\"use strict\";function r(e){if(!Number.isSafeInteger(e))throw new Error(`Wrong integer: ${e}`)}function n(...e){const t=(e,t)=>r=>e(t(r));return{encode:Array.from(e).reverse().reduce(((e,r)=>e?t(e,r.encode):r.encode),void 0),decode:e.reduce(((e,r)=>e?t(e,r.decode):r.decode),void 0)}}function i(e){return{encode:t=>{if(!Array.isArray(t)||t.length&&\"number\"!=typeof t[0])throw new Error(\"alphabet.encode input should be an array of numbers\");return t.map((t=>{if(r(t),t<0||t>=e.length)throw new Error(`Digit index outside alphabet: ${t} (alphabet: ${e.length})`);return e[t]}))},decode:t=>{if(!Array.isArray(t)||t.length&&\"string\"!=typeof t[0])throw new Error(\"alphabet.decode input should be array of strings\");return t.map((t=>{if(\"string\"!=typeof t)throw new Error(`alphabet.decode: not string element=${t}`);const r=e.indexOf(t);if(-1===r)throw new Error(`Unknown letter: \"${t}\". Allowed: ${e}`);return r}))}}}function o(e=\"\"){if(\"string\"!=typeof e)throw new Error(\"join separator should be string\");return{encode:t=>{if(!Array.isArray(t)||t.length&&\"string\"!=typeof t[0])throw new Error(\"join.encode input should be array of strings\");for(let e of t)if(\"string\"!=typeof e)throw new Error(`join.encode: non-string input=${e}`);return t.join(e)},decode:t=>{if(\"string\"!=typeof t)throw new Error(\"join.decode input should be string\");return t.split(e)}}}function s(e,t=\"=\"){if(r(e),\"string\"!=typeof t)throw new Error(\"padding chr should be string\");return{encode(r){if(!Array.isArray(r)||r.length&&\"string\"!=typeof r[0])throw new Error(\"padding.encode input should be array of strings\");for(let e of r)if(\"string\"!=typeof e)throw new Error(`padding.encode: non-string input=${e}`);for(;r.length*e%8;)r.push(t);return r},decode(r){if(!Array.isArray(r)||r.length&&\"string\"!=typeof r[0])throw new Error(\"padding.encode input should be array of strings\");for(let e of r)if(\"string\"!=typeof e)throw new Error(`padding.decode: non-string input=${e}`);let n=r.length;if(n*e%8)throw new Error(\"Invalid padding: string should have whole number of bytes\");for(;n>0&&r[n-1]===t;n--)if(!((n-1)*e%8))throw new Error(\"Invalid padding: string has too much padding\");return r.slice(0,n)}}}function a(e){if(\"function\"!=typeof e)throw new Error(\"normalize fn should be function\");return{encode:e=>e,decode:t=>e(t)}}function u(e,t,n){if(t<2)throw new Error(`convertRadix: wrong from=${t}, base cannot be less than 2`);if(n<2)throw new Error(`convertRadix: wrong to=${n}, base cannot be less than 2`);if(!Array.isArray(e))throw new Error(\"convertRadix: data should be array\");if(!e.length)return[];let i=0;const o=[],s=Array.from(e);for(s.forEach((e=>{if(r(e),e<0||e>=t)throw new Error(`Wrong integer: ${e}`)}));;){let e=0,r=!0;for(let o=i;o<s.length;o++){const a=s[o],u=t*e+a;if(!Number.isSafeInteger(u)||t*e/t!==e||u-a!=t*e)throw new Error(\"convertRadix: carry overflow\");if(e=u%n,s[o]=Math.floor(u/n),!Number.isSafeInteger(s[o])||s[o]*n+e!==u)throw new Error(\"convertRadix: carry overflow\");r&&(s[o]?r=!1:i=o)}if(o.push(e),r)break}for(let t=0;t<e.length-1&&0===e[t];t++)o.push(0);return o.reverse()}Object.defineProperty(t,\"__esModule\",{value:!0}),t.bytes=t.stringToBytes=t.str=t.bytesToString=t.hex=t.utf8=t.bech32m=t.bech32=t.base58check=t.base58xmr=t.base58xrp=t.base58flickr=t.base58=t.base64url=t.base64=t.base32crockford=t.base32hex=t.base32=t.base16=t.utils=t.assertNumber=void 0,t.assertNumber=r;const c=(e,t)=>t?c(t,e%t):e,f=(e,t)=>e+(t-c(e,t));function l(e,t,n,i){if(!Array.isArray(e))throw new Error(\"convertRadix2: data should be array\");if(t<=0||t>32)throw new Error(`convertRadix2: wrong from=${t}`);if(n<=0||n>32)throw new Error(`convertRadix2: wrong to=${n}`);if(f(t,n)>32)throw new Error(`convertRadix2: carry overflow from=${t} to=${n} carryBits=${f(t,n)}`);let o=0,s=0;const a=2**n-1,u=[];for(const i of e){if(r(i),i>=2**t)throw new Error(`convertRadix2: invalid data word=${i} from=${t}`);if(o=o<<t|i,s+t>32)throw new Error(`convertRadix2: carry overflow pos=${s} from=${t}`);for(s+=t;s>=n;s-=n)u.push((o>>s-n&a)>>>0);o&=2**s-1}if(o=o<<n-s&a,!i&&s>=t)throw new Error(\"Excess padding\");if(!i&&o)throw new Error(`Non-zero padding: ${o}`);return i&&s>0&&u.push(o>>>0),u}function d(e){return r(e),{encode:t=>{if(!(t instanceof Uint8Array))throw new Error(\"radix.encode input should be Uint8Array\");return u(Array.from(t),256,e)},decode:t=>{if(!Array.isArray(t)||t.length&&\"number\"!=typeof t[0])throw new Error(\"radix.decode input should be array of strings\");return Uint8Array.from(u(t,e,256))}}}function h(e,t=!1){if(r(e),e<=0||e>32)throw new Error(\"radix2: bits should be in (0..32]\");if(f(8,e)>32||f(e,8)>32)throw new Error(\"radix2: carry overflow\");return{encode:r=>{if(!(r instanceof Uint8Array))throw new Error(\"radix2.encode input should be Uint8Array\");return l(Array.from(r),8,e,!t)},decode:r=>{if(!Array.isArray(r)||r.length&&\"number\"!=typeof r[0])throw new Error(\"radix2.decode input should be array of strings\");return Uint8Array.from(l(r,e,8,t))}}}function p(e){if(\"function\"!=typeof e)throw new Error(\"unsafeWrapper fn should be function\");return function(...t){try{return e.apply(null,t)}catch(e){}}}function y(e,t){if(r(e),\"function\"!=typeof t)throw new Error(\"checksum fn should be function\");return{encode(r){if(!(r instanceof Uint8Array))throw new Error(\"checksum.encode: input should be Uint8Array\");const n=t(r).slice(0,e),i=new Uint8Array(r.length+e);return i.set(r),i.set(n,r.length),i},decode(r){if(!(r instanceof Uint8Array))throw new Error(\"checksum.decode: input should be Uint8Array\");const n=r.slice(0,-e),i=t(n).slice(0,e),o=r.slice(-e);for(let t=0;t<e;t++)if(i[t]!==o[t])throw new Error(\"Invalid checksum\");return n}}}t.utils={alphabet:i,chain:n,checksum:y,radix:d,radix2:h,join:o,padding:s},t.base16=n(h(4),i(\"0123456789ABCDEF\"),o(\"\")),t.base32=n(h(5),i(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\"),s(5),o(\"\")),t.base32hex=n(h(5),i(\"0123456789ABCDEFGHIJKLMNOPQRSTUV\"),s(5),o(\"\")),t.base32crockford=n(h(5),i(\"0123456789ABCDEFGHJKMNPQRSTVWXYZ\"),o(\"\"),a((e=>e.toUpperCase().replace(/O/g,\"0\").replace(/[IL]/g,\"1\")))),t.base64=n(h(6),i(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\"),s(6),o(\"\")),t.base64url=n(h(6),i(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_\"),s(6),o(\"\"));const b=e=>n(d(58),i(e),o(\"\"));t.base58=b(\"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\"),t.base58flickr=b(\"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ\"),t.base58xrp=b(\"rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz\");const m=[0,2,3,5,6,7,9,10,11];t.base58xmr={encode(e){let r=\"\";for(let n=0;n<e.length;n+=8){const i=e.subarray(n,n+8);r+=t.base58.encode(i).padStart(m[i.length],\"1\")}return r},decode(e){let r=[];for(let n=0;n<e.length;n+=11){const i=e.slice(n,n+11),o=m.indexOf(i.length),s=t.base58.decode(i);for(let e=0;e<s.length-o;e++)if(0!==s[e])throw new Error(\"base58xmr: wrong padding\");r=r.concat(Array.from(s.slice(s.length-o)))}return Uint8Array.from(r)}},t.base58check=e=>n(y(4,(t=>e(e(t)))),t.base58);const g=n(i(\"qpzry9x8gf2tvdw0s3jn54khce6mua7l\"),o(\"\")),v=[996825010,642813549,513874426,1027748829,705979059];function w(e){const t=e>>25;let r=(33554431&e)<<5;for(let e=0;e<v.length;e++)1==(t>>e&1)&&(r^=v[e]);return r}function E(e,t,r=1){const n=e.length;let i=1;for(let t=0;t<n;t++){const r=e.charCodeAt(t);if(r<33||r>126)throw new Error(`Invalid prefix (${e})`);i=w(i)^r>>5}i=w(i);for(let t=0;t<n;t++)i=w(i)^31&e.charCodeAt(t);for(let e of t)i=w(i)^e;for(let e=0;e<6;e++)i=w(i);return i^=r,g.encode(l([i%2**30],30,5,!1))}function _(e){const t=\"bech32\"===e?1:734539939,r=h(5),n=r.decode,i=r.encode,o=p(n);function s(e,r=90){if(\"string\"!=typeof e)throw new Error(\"bech32.decode input should be string, not \"+typeof e);if(e.length<8||!1!==r&&e.length>r)throw new TypeError(`Wrong string length: ${e.length} (${e}). Expected (8..${r})`);const n=e.toLowerCase();if(e!==n&&e!==e.toUpperCase())throw new Error(\"String must be lowercase or uppercase\");const i=(e=n).lastIndexOf(\"1\");if(0===i||-1===i)throw new Error('Letter \"1\" must be present between prefix and data only');const o=e.slice(0,i),s=e.slice(i+1);if(s.length<6)throw new Error(\"Data must be at least 6 characters long\");const a=g.decode(s).slice(0,-6),u=E(o,a,t);if(!s.endsWith(u))throw new Error(`Invalid checksum in ${e}: expected \"${u}\"`);return{prefix:o,words:a}}return{encode:function(e,r,n=90){if(\"string\"!=typeof e)throw new Error(\"bech32.encode prefix should be string, not \"+typeof e);if(!Array.isArray(r)||r.length&&\"number\"!=typeof r[0])throw new Error(\"bech32.encode words should be array of numbers, not \"+typeof r);const i=e.length+7+r.length;if(!1!==n&&i>n)throw new TypeError(`Length ${i} exceeds limit ${n}`);return`${e=e.toLowerCase()}1${g.encode(r)}${E(e,r,t)}`},decode:s,decodeToBytes:function(e){const{prefix:t,words:r}=s(e,!1);return{prefix:t,words:r,bytes:n(r)}},decodeUnsafe:p(s),fromWords:n,fromWordsUnsafe:o,toWords:i}}t.bech32=_(\"bech32\"),t.bech32m=_(\"bech32m\"),t.utf8={encode:e=>(new TextDecoder).decode(e),decode:e=>(new TextEncoder).encode(e)},t.hex=n(h(4),i(\"0123456789abcdef\"),o(\"\"),a((e=>{if(\"string\"!=typeof e||e.length%2)throw new TypeError(`hex.decode: expected string, got ${typeof e} with length ${e.length}`);return e.toLowerCase()})));const S={utf8:t.utf8,hex:t.hex,base16:t.base16,base32:t.base32,base64:t.base64,base64url:t.base64url,base58:t.base58,base58xmr:t.base58xmr},T=`Invalid encoding type. Available types: ${Object.keys(S).join(\", \")}`;t.bytesToString=(e,t)=>{if(\"string\"!=typeof e||!S.hasOwnProperty(e))throw new TypeError(T);if(!(t instanceof Uint8Array))throw new TypeError(\"bytesToString() expects Uint8Array\");return S[e].encode(t)},t.str=t.bytesToString,t.stringToBytes=(e,t)=>{if(!S.hasOwnProperty(e))throw new TypeError(T);if(\"string\"!=typeof t)throw new TypeError(\"stringToBytes() expects string\");return S[e].decode(t)},t.bytes=t.stringToBytes},1869:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.HDKey=t.HARDENED_OFFSET=void 0;const n=r(9569),i=r(830),o=r(3061),s=r(6262),a=r(7320),u=r(8089),c=r(3497),f=r(4632),l=r(9187),d=c.secp256k1.ProjectivePoint,h=(0,l.base58check)(o.sha256);function p(e){return BigInt(`0x${(0,u.bytesToHex)(e)}`)}const y=(0,u.utf8ToBytes)(\"Bitcoin seed\"),b={private:76066276,public:76067358};t.HARDENED_OFFSET=2147483648;const m=e=>{if(!Number.isSafeInteger(e)||e<0||e>2**32-1)throw new Error(`Invalid number=${e}. Should be from 0 to 2 ** 32 - 1`);const t=new Uint8Array(4);return(0,u.createView)(t).setUint32(0,e,!1),t};class g{get fingerprint(){if(!this.pubHash)throw new Error(\"No publicKey set!\");return e=this.pubHash,(0,u.createView)(e).getUint32(0,!1);var e}get identifier(){return this.pubHash}get pubKeyHash(){return this.pubHash}get privateKey(){return this.privKeyBytes||null}get publicKey(){return this.pubKey||null}get privateExtendedKey(){const e=this.privateKey;if(!e)throw new Error(\"No private key\");return h.encode(this.serialize(this.versions.private,(0,u.concatBytes)(new Uint8Array([0]),e)))}get publicExtendedKey(){if(!this.pubKey)throw new Error(\"No public key\");return h.encode(this.serialize(this.versions.public,this.pubKey))}static fromMasterSeed(e,t=b){if((0,a.bytes)(e),8*e.length<128||8*e.length>512)throw new Error(`HDKey: wrong seed length=${e.length}. Should be between 128 and 512 bits; 256 bits is advised)`);const r=(0,n.hmac)(s.sha512,y,e);return new g({versions:t,chainCode:r.slice(32),privateKey:r.slice(0,32)})}static fromExtendedKey(e,t=b){const r=h.decode(e),n=(0,u.createView)(r),i=n.getUint32(0,!1),o={versions:t,depth:r[4],parentFingerprint:n.getUint32(5,!1),index:n.getUint32(9,!1),chainCode:r.slice(13,45)},s=r.slice(45),a=0===s[0];if(i!==t[a?\"private\":\"public\"])throw new Error(\"Version mismatch\");return new g(a?{...o,privateKey:s.slice(1)}:{...o,publicKey:s})}static fromJSON(e){return g.fromExtendedKey(e.xpriv)}constructor(e){if(this.depth=0,this.index=0,this.chainCode=null,this.parentFingerprint=0,!e||\"object\"!=typeof e)throw new Error(\"HDKey.constructor must not be called directly\");if(this.versions=e.versions||b,this.depth=e.depth||0,this.chainCode=e.chainCode,this.index=e.index||0,this.parentFingerprint=e.parentFingerprint||0,!this.depth&&(this.parentFingerprint||this.index))throw new Error(\"HDKey: zero depth with non-zero index/parent fingerprint\");if(e.publicKey&&e.privateKey)throw new Error(\"HDKey: publicKey and privateKey at same time.\");if(e.privateKey){if(!c.secp256k1.utils.isValidPrivateKey(e.privateKey))throw new Error(\"Invalid private key\");this.privKey=\"bigint\"==typeof e.privateKey?e.privateKey:p(e.privateKey),this.privKeyBytes=(t=this.privKey,(0,u.hexToBytes)(t.toString(16).padStart(64,\"0\"))),this.pubKey=c.secp256k1.getPublicKey(e.privateKey,!0)}else{if(!e.publicKey)throw new Error(\"HDKey: no public or private key provided\");this.pubKey=d.fromHex(e.publicKey).toRawBytes(!0)}var t,r;this.pubHash=(r=this.pubKey,(0,i.ripemd160)((0,o.sha256)(r)))}derive(e){if(!/^[mM]'?/.test(e))throw new Error('Path must start with \"m\" or \"M\"');if(/^[mM]'?$/.test(e))return this;const r=e.replace(/^[mM]'?\\//,\"\").split(\"/\");let n=this;for(const e of r){const r=/^(\\d+)('?)$/.exec(e);if(!r||3!==r.length)throw new Error(`Invalid child index: ${e}`);let i=+r[1];if(!Number.isSafeInteger(i)||i>=t.HARDENED_OFFSET)throw new Error(\"Invalid index\");\"'\"===r[2]&&(i+=t.HARDENED_OFFSET),n=n.deriveChild(i)}return n}deriveChild(e){if(!this.pubKey||!this.chainCode)throw new Error(\"No publicKey or chainCode set\");let r=m(e);if(e>=t.HARDENED_OFFSET){const e=this.privateKey;if(!e)throw new Error(\"Could not derive hardened child key\");r=(0,u.concatBytes)(new Uint8Array([0]),e,r)}else r=(0,u.concatBytes)(this.pubKey,r);const i=(0,n.hmac)(s.sha512,this.chainCode,r),o=p(i.slice(0,32)),a=i.slice(32);if(!c.secp256k1.utils.isValidPrivateKey(o))throw new Error(\"Tweak bigger than curve order\");const l={versions:this.versions,chainCode:a,depth:this.depth+1,parentFingerprint:this.fingerprint,index:e};try{if(this.privateKey){const e=(0,f.mod)(this.privKey+o,c.secp256k1.CURVE.n);if(!c.secp256k1.utils.isValidPrivateKey(e))throw new Error(\"The tweak was out of range or the resulted private key is invalid\");l.privateKey=e}else{const e=d.fromHex(this.pubKey).add(d.fromPrivateKey(o));if(e.equals(d.ZERO))throw new Error(\"The tweak was equal to negative P, which made the result key invalid\");l.publicKey=e.toRawBytes(!0)}return new g(l)}catch(t){return this.deriveChild(e+1)}}sign(e){if(!this.privateKey)throw new Error(\"No privateKey set!\");return(0,a.bytes)(e,32),c.secp256k1.sign(e,this.privKey).toCompactRawBytes()}verify(e,t){if((0,a.bytes)(e,32),(0,a.bytes)(t,64),!this.publicKey)throw new Error(\"No publicKey set!\");let r;try{r=c.secp256k1.Signature.fromCompact(t)}catch(e){return!1}return c.secp256k1.verify(r,e,this.publicKey)}wipePrivateData(){return this.privKey=void 0,this.privKeyBytes&&(this.privKeyBytes.fill(0),this.privKeyBytes=void 0),this}toJSON(){return{xpriv:this.privateExtendedKey,xpub:this.publicExtendedKey}}serialize(e,t){if(!this.chainCode)throw new Error(\"No chainCode set\");return(0,a.bytes)(t,33),(0,u.concatBytes)(m(e),new Uint8Array([this.depth]),m(this.parentFingerprint),m(this.index),this.chainCode,t)}}t.HDKey=g},7286:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.mnemonicToSeedSync=t.mnemonicToSeed=t.validateMnemonic=t.entropyToMnemonic=t.mnemonicToEntropy=t.generateMnemonic=void 0;const n=r(7320),i=r(9023),o=r(3061),s=r(6262),a=r(8089),u=r(9187),c=e=>\"あいこくしん\"===e[0];function f(e){if(\"string\"!=typeof e)throw new TypeError(\"Invalid mnemonic type: \"+typeof e);return e.normalize(\"NFKD\")}function l(e){const t=f(e),r=t.split(\" \");if(![12,15,18,21,24].includes(r.length))throw new Error(\"Invalid mnemonic\");return{nfkd:t,words:r}}function d(e){n.default.bytes(e,16,20,24,28,32)}t.generateMnemonic=function(e,t=128){if(n.default.number(t),t%32!=0||t>256)throw new TypeError(\"Invalid entropy\");return b((0,a.randomBytes)(t/8),e)};const h=e=>{const t=8-e.length/4;return new Uint8Array([(0,o.sha256)(e)[0]>>t<<t])};function p(e){if(!Array.isArray(e)||2048!==e.length||\"string\"!=typeof e[0])throw new Error(\"Worlist: expected array of 2048 strings\");return e.forEach((e=>{if(\"string\"!=typeof e)throw new Error(`Wordlist: non-string element: ${e}`)})),u.utils.chain(u.utils.checksum(1,h),u.utils.radix2(11,!0),u.utils.alphabet(e))}function y(e,t){const{words:r}=l(e),n=p(t).decode(r);return d(n),n}function b(e,t){return d(e),p(t).encode(e).join(c(t)?\"　\":\" \")}t.mnemonicToEntropy=y,t.entropyToMnemonic=b,t.validateMnemonic=function(e,t){try{y(e,t)}catch(e){return!1}return!0};const m=e=>f(`mnemonic${e}`);t.mnemonicToSeed=function(e,t=\"\"){return(0,i.pbkdf2Async)(s.sha512,l(e).nfkd,m(t),{c:2048,dkLen:64})},t.mnemonicToSeedSync=function(e,t=\"\"){return(0,i.pbkdf2)(s.sha512,l(e).nfkd,m(t),{c:2048,dkLen:64})}},1083:(e,t)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.wordlist=void 0,t.wordlist=\"abandon\\nability\\nable\\nabout\\nabove\\nabsent\\nabsorb\\nabstract\\nabsurd\\nabuse\\naccess\\naccident\\naccount\\naccuse\\nachieve\\nacid\\nacoustic\\nacquire\\nacross\\nact\\naction\\nactor\\nactress\\nactual\\nadapt\\nadd\\naddict\\naddress\\nadjust\\nadmit\\nadult\\nadvance\\nadvice\\naerobic\\naffair\\nafford\\nafraid\\nagain\\nage\\nagent\\nagree\\nahead\\naim\\nair\\nairport\\naisle\\nalarm\\nalbum\\nalcohol\\nalert\\nalien\\nall\\nalley\\nallow\\nalmost\\nalone\\nalpha\\nalready\\nalso\\nalter\\nalways\\namateur\\namazing\\namong\\namount\\namused\\nanalyst\\nanchor\\nancient\\nanger\\nangle\\nangry\\nanimal\\nankle\\nannounce\\nannual\\nanother\\nanswer\\nantenna\\nantique\\nanxiety\\nany\\napart\\napology\\nappear\\napple\\napprove\\napril\\narch\\narctic\\narea\\narena\\nargue\\narm\\narmed\\narmor\\narmy\\naround\\narrange\\narrest\\narrive\\narrow\\nart\\nartefact\\nartist\\nartwork\\nask\\naspect\\nassault\\nasset\\nassist\\nassume\\nasthma\\nathlete\\natom\\nattack\\nattend\\nattitude\\nattract\\nauction\\naudit\\naugust\\naunt\\nauthor\\nauto\\nautumn\\naverage\\navocado\\navoid\\nawake\\naware\\naway\\nawesome\\nawful\\nawkward\\naxis\\nbaby\\nbachelor\\nbacon\\nbadge\\nbag\\nbalance\\nbalcony\\nball\\nbamboo\\nbanana\\nbanner\\nbar\\nbarely\\nbargain\\nbarrel\\nbase\\nbasic\\nbasket\\nbattle\\nbeach\\nbean\\nbeauty\\nbecause\\nbecome\\nbeef\\nbefore\\nbegin\\nbehave\\nbehind\\nbelieve\\nbelow\\nbelt\\nbench\\nbenefit\\nbest\\nbetray\\nbetter\\nbetween\\nbeyond\\nbicycle\\nbid\\nbike\\nbind\\nbiology\\nbird\\nbirth\\nbitter\\nblack\\nblade\\nblame\\nblanket\\nblast\\nbleak\\nbless\\nblind\\nblood\\nblossom\\nblouse\\nblue\\nblur\\nblush\\nboard\\nboat\\nbody\\nboil\\nbomb\\nbone\\nbonus\\nbook\\nboost\\nborder\\nboring\\nborrow\\nboss\\nbottom\\nbounce\\nbox\\nboy\\nbracket\\nbrain\\nbrand\\nbrass\\nbrave\\nbread\\nbreeze\\nbrick\\nbridge\\nbrief\\nbright\\nbring\\nbrisk\\nbroccoli\\nbroken\\nbronze\\nbroom\\nbrother\\nbrown\\nbrush\\nbubble\\nbuddy\\nbudget\\nbuffalo\\nbuild\\nbulb\\nbulk\\nbullet\\nbundle\\nbunker\\nburden\\nburger\\nburst\\nbus\\nbusiness\\nbusy\\nbutter\\nbuyer\\nbuzz\\ncabbage\\ncabin\\ncable\\ncactus\\ncage\\ncake\\ncall\\ncalm\\ncamera\\ncamp\\ncan\\ncanal\\ncancel\\ncandy\\ncannon\\ncanoe\\ncanvas\\ncanyon\\ncapable\\ncapital\\ncaptain\\ncar\\ncarbon\\ncard\\ncargo\\ncarpet\\ncarry\\ncart\\ncase\\ncash\\ncasino\\ncastle\\ncasual\\ncat\\ncatalog\\ncatch\\ncategory\\ncattle\\ncaught\\ncause\\ncaution\\ncave\\nceiling\\ncelery\\ncement\\ncensus\\ncentury\\ncereal\\ncertain\\nchair\\nchalk\\nchampion\\nchange\\nchaos\\nchapter\\ncharge\\nchase\\nchat\\ncheap\\ncheck\\ncheese\\nchef\\ncherry\\nchest\\nchicken\\nchief\\nchild\\nchimney\\nchoice\\nchoose\\nchronic\\nchuckle\\nchunk\\nchurn\\ncigar\\ncinnamon\\ncircle\\ncitizen\\ncity\\ncivil\\nclaim\\nclap\\nclarify\\nclaw\\nclay\\nclean\\nclerk\\nclever\\nclick\\nclient\\ncliff\\nclimb\\nclinic\\nclip\\nclock\\nclog\\nclose\\ncloth\\ncloud\\nclown\\nclub\\nclump\\ncluster\\nclutch\\ncoach\\ncoast\\ncoconut\\ncode\\ncoffee\\ncoil\\ncoin\\ncollect\\ncolor\\ncolumn\\ncombine\\ncome\\ncomfort\\ncomic\\ncommon\\ncompany\\nconcert\\nconduct\\nconfirm\\ncongress\\nconnect\\nconsider\\ncontrol\\nconvince\\ncook\\ncool\\ncopper\\ncopy\\ncoral\\ncore\\ncorn\\ncorrect\\ncost\\ncotton\\ncouch\\ncountry\\ncouple\\ncourse\\ncousin\\ncover\\ncoyote\\ncrack\\ncradle\\ncraft\\ncram\\ncrane\\ncrash\\ncrater\\ncrawl\\ncrazy\\ncream\\ncredit\\ncreek\\ncrew\\ncricket\\ncrime\\ncrisp\\ncritic\\ncrop\\ncross\\ncrouch\\ncrowd\\ncrucial\\ncruel\\ncruise\\ncrumble\\ncrunch\\ncrush\\ncry\\ncrystal\\ncube\\nculture\\ncup\\ncupboard\\ncurious\\ncurrent\\ncurtain\\ncurve\\ncushion\\ncustom\\ncute\\ncycle\\ndad\\ndamage\\ndamp\\ndance\\ndanger\\ndaring\\ndash\\ndaughter\\ndawn\\nday\\ndeal\\ndebate\\ndebris\\ndecade\\ndecember\\ndecide\\ndecline\\ndecorate\\ndecrease\\ndeer\\ndefense\\ndefine\\ndefy\\ndegree\\ndelay\\ndeliver\\ndemand\\ndemise\\ndenial\\ndentist\\ndeny\\ndepart\\ndepend\\ndeposit\\ndepth\\ndeputy\\nderive\\ndescribe\\ndesert\\ndesign\\ndesk\\ndespair\\ndestroy\\ndetail\\ndetect\\ndevelop\\ndevice\\ndevote\\ndiagram\\ndial\\ndiamond\\ndiary\\ndice\\ndiesel\\ndiet\\ndiffer\\ndigital\\ndignity\\ndilemma\\ndinner\\ndinosaur\\ndirect\\ndirt\\ndisagree\\ndiscover\\ndisease\\ndish\\ndismiss\\ndisorder\\ndisplay\\ndistance\\ndivert\\ndivide\\ndivorce\\ndizzy\\ndoctor\\ndocument\\ndog\\ndoll\\ndolphin\\ndomain\\ndonate\\ndonkey\\ndonor\\ndoor\\ndose\\ndouble\\ndove\\ndraft\\ndragon\\ndrama\\ndrastic\\ndraw\\ndream\\ndress\\ndrift\\ndrill\\ndrink\\ndrip\\ndrive\\ndrop\\ndrum\\ndry\\nduck\\ndumb\\ndune\\nduring\\ndust\\ndutch\\nduty\\ndwarf\\ndynamic\\neager\\neagle\\nearly\\nearn\\nearth\\neasily\\neast\\neasy\\necho\\necology\\neconomy\\nedge\\nedit\\neducate\\neffort\\negg\\neight\\neither\\nelbow\\nelder\\nelectric\\nelegant\\nelement\\nelephant\\nelevator\\nelite\\nelse\\nembark\\nembody\\nembrace\\nemerge\\nemotion\\nemploy\\nempower\\nempty\\nenable\\nenact\\nend\\nendless\\nendorse\\nenemy\\nenergy\\nenforce\\nengage\\nengine\\nenhance\\nenjoy\\nenlist\\nenough\\nenrich\\nenroll\\nensure\\nenter\\nentire\\nentry\\nenvelope\\nepisode\\nequal\\nequip\\nera\\nerase\\nerode\\nerosion\\nerror\\nerupt\\nescape\\nessay\\nessence\\nestate\\neternal\\nethics\\nevidence\\nevil\\nevoke\\nevolve\\nexact\\nexample\\nexcess\\nexchange\\nexcite\\nexclude\\nexcuse\\nexecute\\nexercise\\nexhaust\\nexhibit\\nexile\\nexist\\nexit\\nexotic\\nexpand\\nexpect\\nexpire\\nexplain\\nexpose\\nexpress\\nextend\\nextra\\neye\\neyebrow\\nfabric\\nface\\nfaculty\\nfade\\nfaint\\nfaith\\nfall\\nfalse\\nfame\\nfamily\\nfamous\\nfan\\nfancy\\nfantasy\\nfarm\\nfashion\\nfat\\nfatal\\nfather\\nfatigue\\nfault\\nfavorite\\nfeature\\nfebruary\\nfederal\\nfee\\nfeed\\nfeel\\nfemale\\nfence\\nfestival\\nfetch\\nfever\\nfew\\nfiber\\nfiction\\nfield\\nfigure\\nfile\\nfilm\\nfilter\\nfinal\\nfind\\nfine\\nfinger\\nfinish\\nfire\\nfirm\\nfirst\\nfiscal\\nfish\\nfit\\nfitness\\nfix\\nflag\\nflame\\nflash\\nflat\\nflavor\\nflee\\nflight\\nflip\\nfloat\\nflock\\nfloor\\nflower\\nfluid\\nflush\\nfly\\nfoam\\nfocus\\nfog\\nfoil\\nfold\\nfollow\\nfood\\nfoot\\nforce\\nforest\\nforget\\nfork\\nfortune\\nforum\\nforward\\nfossil\\nfoster\\nfound\\nfox\\nfragile\\nframe\\nfrequent\\nfresh\\nfriend\\nfringe\\nfrog\\nfront\\nfrost\\nfrown\\nfrozen\\nfruit\\nfuel\\nfun\\nfunny\\nfurnace\\nfury\\nfuture\\ngadget\\ngain\\ngalaxy\\ngallery\\ngame\\ngap\\ngarage\\ngarbage\\ngarden\\ngarlic\\ngarment\\ngas\\ngasp\\ngate\\ngather\\ngauge\\ngaze\\ngeneral\\ngenius\\ngenre\\ngentle\\ngenuine\\ngesture\\nghost\\ngiant\\ngift\\ngiggle\\nginger\\ngiraffe\\ngirl\\ngive\\nglad\\nglance\\nglare\\nglass\\nglide\\nglimpse\\nglobe\\ngloom\\nglory\\nglove\\nglow\\nglue\\ngoat\\ngoddess\\ngold\\ngood\\ngoose\\ngorilla\\ngospel\\ngossip\\ngovern\\ngown\\ngrab\\ngrace\\ngrain\\ngrant\\ngrape\\ngrass\\ngravity\\ngreat\\ngreen\\ngrid\\ngrief\\ngrit\\ngrocery\\ngroup\\ngrow\\ngrunt\\nguard\\nguess\\nguide\\nguilt\\nguitar\\ngun\\ngym\\nhabit\\nhair\\nhalf\\nhammer\\nhamster\\nhand\\nhappy\\nharbor\\nhard\\nharsh\\nharvest\\nhat\\nhave\\nhawk\\nhazard\\nhead\\nhealth\\nheart\\nheavy\\nhedgehog\\nheight\\nhello\\nhelmet\\nhelp\\nhen\\nhero\\nhidden\\nhigh\\nhill\\nhint\\nhip\\nhire\\nhistory\\nhobby\\nhockey\\nhold\\nhole\\nholiday\\nhollow\\nhome\\nhoney\\nhood\\nhope\\nhorn\\nhorror\\nhorse\\nhospital\\nhost\\nhotel\\nhour\\nhover\\nhub\\nhuge\\nhuman\\nhumble\\nhumor\\nhundred\\nhungry\\nhunt\\nhurdle\\nhurry\\nhurt\\nhusband\\nhybrid\\nice\\nicon\\nidea\\nidentify\\nidle\\nignore\\nill\\nillegal\\nillness\\nimage\\nimitate\\nimmense\\nimmune\\nimpact\\nimpose\\nimprove\\nimpulse\\ninch\\ninclude\\nincome\\nincrease\\nindex\\nindicate\\nindoor\\nindustry\\ninfant\\ninflict\\ninform\\ninhale\\ninherit\\ninitial\\ninject\\ninjury\\ninmate\\ninner\\ninnocent\\ninput\\ninquiry\\ninsane\\ninsect\\ninside\\ninspire\\ninstall\\nintact\\ninterest\\ninto\\ninvest\\ninvite\\ninvolve\\niron\\nisland\\nisolate\\nissue\\nitem\\nivory\\njacket\\njaguar\\njar\\njazz\\njealous\\njeans\\njelly\\njewel\\njob\\njoin\\njoke\\njourney\\njoy\\njudge\\njuice\\njump\\njungle\\njunior\\njunk\\njust\\nkangaroo\\nkeen\\nkeep\\nketchup\\nkey\\nkick\\nkid\\nkidney\\nkind\\nkingdom\\nkiss\\nkit\\nkitchen\\nkite\\nkitten\\nkiwi\\nknee\\nknife\\nknock\\nknow\\nlab\\nlabel\\nlabor\\nladder\\nlady\\nlake\\nlamp\\nlanguage\\nlaptop\\nlarge\\nlater\\nlatin\\nlaugh\\nlaundry\\nlava\\nlaw\\nlawn\\nlawsuit\\nlayer\\nlazy\\nleader\\nleaf\\nlearn\\nleave\\nlecture\\nleft\\nleg\\nlegal\\nlegend\\nleisure\\nlemon\\nlend\\nlength\\nlens\\nleopard\\nlesson\\nletter\\nlevel\\nliar\\nliberty\\nlibrary\\nlicense\\nlife\\nlift\\nlight\\nlike\\nlimb\\nlimit\\nlink\\nlion\\nliquid\\nlist\\nlittle\\nlive\\nlizard\\nload\\nloan\\nlobster\\nlocal\\nlock\\nlogic\\nlonely\\nlong\\nloop\\nlottery\\nloud\\nlounge\\nlove\\nloyal\\nlucky\\nluggage\\nlumber\\nlunar\\nlunch\\nluxury\\nlyrics\\nmachine\\nmad\\nmagic\\nmagnet\\nmaid\\nmail\\nmain\\nmajor\\nmake\\nmammal\\nman\\nmanage\\nmandate\\nmango\\nmansion\\nmanual\\nmaple\\nmarble\\nmarch\\nmargin\\nmarine\\nmarket\\nmarriage\\nmask\\nmass\\nmaster\\nmatch\\nmaterial\\nmath\\nmatrix\\nmatter\\nmaximum\\nmaze\\nmeadow\\nmean\\nmeasure\\nmeat\\nmechanic\\nmedal\\nmedia\\nmelody\\nmelt\\nmember\\nmemory\\nmention\\nmenu\\nmercy\\nmerge\\nmerit\\nmerry\\nmesh\\nmessage\\nmetal\\nmethod\\nmiddle\\nmidnight\\nmilk\\nmillion\\nmimic\\nmind\\nminimum\\nminor\\nminute\\nmiracle\\nmirror\\nmisery\\nmiss\\nmistake\\nmix\\nmixed\\nmixture\\nmobile\\nmodel\\nmodify\\nmom\\nmoment\\nmonitor\\nmonkey\\nmonster\\nmonth\\nmoon\\nmoral\\nmore\\nmorning\\nmosquito\\nmother\\nmotion\\nmotor\\nmountain\\nmouse\\nmove\\nmovie\\nmuch\\nmuffin\\nmule\\nmultiply\\nmuscle\\nmuseum\\nmushroom\\nmusic\\nmust\\nmutual\\nmyself\\nmystery\\nmyth\\nnaive\\nname\\nnapkin\\nnarrow\\nnasty\\nnation\\nnature\\nnear\\nneck\\nneed\\nnegative\\nneglect\\nneither\\nnephew\\nnerve\\nnest\\nnet\\nnetwork\\nneutral\\nnever\\nnews\\nnext\\nnice\\nnight\\nnoble\\nnoise\\nnominee\\nnoodle\\nnormal\\nnorth\\nnose\\nnotable\\nnote\\nnothing\\nnotice\\nnovel\\nnow\\nnuclear\\nnumber\\nnurse\\nnut\\noak\\nobey\\nobject\\noblige\\nobscure\\nobserve\\nobtain\\nobvious\\noccur\\nocean\\noctober\\nodor\\noff\\noffer\\noffice\\noften\\noil\\nokay\\nold\\nolive\\nolympic\\nomit\\nonce\\none\\nonion\\nonline\\nonly\\nopen\\nopera\\nopinion\\noppose\\noption\\norange\\norbit\\norchard\\norder\\nordinary\\norgan\\norient\\noriginal\\norphan\\nostrich\\nother\\noutdoor\\nouter\\noutput\\noutside\\noval\\noven\\nover\\nown\\nowner\\noxygen\\noyster\\nozone\\npact\\npaddle\\npage\\npair\\npalace\\npalm\\npanda\\npanel\\npanic\\npanther\\npaper\\nparade\\nparent\\npark\\nparrot\\nparty\\npass\\npatch\\npath\\npatient\\npatrol\\npattern\\npause\\npave\\npayment\\npeace\\npeanut\\npear\\npeasant\\npelican\\npen\\npenalty\\npencil\\npeople\\npepper\\nperfect\\npermit\\nperson\\npet\\nphone\\nphoto\\nphrase\\nphysical\\npiano\\npicnic\\npicture\\npiece\\npig\\npigeon\\npill\\npilot\\npink\\npioneer\\npipe\\npistol\\npitch\\npizza\\nplace\\nplanet\\nplastic\\nplate\\nplay\\nplease\\npledge\\npluck\\nplug\\nplunge\\npoem\\npoet\\npoint\\npolar\\npole\\npolice\\npond\\npony\\npool\\npopular\\nportion\\nposition\\npossible\\npost\\npotato\\npottery\\npoverty\\npowder\\npower\\npractice\\npraise\\npredict\\nprefer\\nprepare\\npresent\\npretty\\nprevent\\nprice\\npride\\nprimary\\nprint\\npriority\\nprison\\nprivate\\nprize\\nproblem\\nprocess\\nproduce\\nprofit\\nprogram\\nproject\\npromote\\nproof\\nproperty\\nprosper\\nprotect\\nproud\\nprovide\\npublic\\npudding\\npull\\npulp\\npulse\\npumpkin\\npunch\\npupil\\npuppy\\npurchase\\npurity\\npurpose\\npurse\\npush\\nput\\npuzzle\\npyramid\\nquality\\nquantum\\nquarter\\nquestion\\nquick\\nquit\\nquiz\\nquote\\nrabbit\\nraccoon\\nrace\\nrack\\nradar\\nradio\\nrail\\nrain\\nraise\\nrally\\nramp\\nranch\\nrandom\\nrange\\nrapid\\nrare\\nrate\\nrather\\nraven\\nraw\\nrazor\\nready\\nreal\\nreason\\nrebel\\nrebuild\\nrecall\\nreceive\\nrecipe\\nrecord\\nrecycle\\nreduce\\nreflect\\nreform\\nrefuse\\nregion\\nregret\\nregular\\nreject\\nrelax\\nrelease\\nrelief\\nrely\\nremain\\nremember\\nremind\\nremove\\nrender\\nrenew\\nrent\\nreopen\\nrepair\\nrepeat\\nreplace\\nreport\\nrequire\\nrescue\\nresemble\\nresist\\nresource\\nresponse\\nresult\\nretire\\nretreat\\nreturn\\nreunion\\nreveal\\nreview\\nreward\\nrhythm\\nrib\\nribbon\\nrice\\nrich\\nride\\nridge\\nrifle\\nright\\nrigid\\nring\\nriot\\nripple\\nrisk\\nritual\\nrival\\nriver\\nroad\\nroast\\nrobot\\nrobust\\nrocket\\nromance\\nroof\\nrookie\\nroom\\nrose\\nrotate\\nrough\\nround\\nroute\\nroyal\\nrubber\\nrude\\nrug\\nrule\\nrun\\nrunway\\nrural\\nsad\\nsaddle\\nsadness\\nsafe\\nsail\\nsalad\\nsalmon\\nsalon\\nsalt\\nsalute\\nsame\\nsample\\nsand\\nsatisfy\\nsatoshi\\nsauce\\nsausage\\nsave\\nsay\\nscale\\nscan\\nscare\\nscatter\\nscene\\nscheme\\nschool\\nscience\\nscissors\\nscorpion\\nscout\\nscrap\\nscreen\\nscript\\nscrub\\nsea\\nsearch\\nseason\\nseat\\nsecond\\nsecret\\nsection\\nsecurity\\nseed\\nseek\\nsegment\\nselect\\nsell\\nseminar\\nsenior\\nsense\\nsentence\\nseries\\nservice\\nsession\\nsettle\\nsetup\\nseven\\nshadow\\nshaft\\nshallow\\nshare\\nshed\\nshell\\nsheriff\\nshield\\nshift\\nshine\\nship\\nshiver\\nshock\\nshoe\\nshoot\\nshop\\nshort\\nshoulder\\nshove\\nshrimp\\nshrug\\nshuffle\\nshy\\nsibling\\nsick\\nside\\nsiege\\nsight\\nsign\\nsilent\\nsilk\\nsilly\\nsilver\\nsimilar\\nsimple\\nsince\\nsing\\nsiren\\nsister\\nsituate\\nsix\\nsize\\nskate\\nsketch\\nski\\nskill\\nskin\\nskirt\\nskull\\nslab\\nslam\\nsleep\\nslender\\nslice\\nslide\\nslight\\nslim\\nslogan\\nslot\\nslow\\nslush\\nsmall\\nsmart\\nsmile\\nsmoke\\nsmooth\\nsnack\\nsnake\\nsnap\\nsniff\\nsnow\\nsoap\\nsoccer\\nsocial\\nsock\\nsoda\\nsoft\\nsolar\\nsoldier\\nsolid\\nsolution\\nsolve\\nsomeone\\nsong\\nsoon\\nsorry\\nsort\\nsoul\\nsound\\nsoup\\nsource\\nsouth\\nspace\\nspare\\nspatial\\nspawn\\nspeak\\nspecial\\nspeed\\nspell\\nspend\\nsphere\\nspice\\nspider\\nspike\\nspin\\nspirit\\nsplit\\nspoil\\nsponsor\\nspoon\\nsport\\nspot\\nspray\\nspread\\nspring\\nspy\\nsquare\\nsqueeze\\nsquirrel\\nstable\\nstadium\\nstaff\\nstage\\nstairs\\nstamp\\nstand\\nstart\\nstate\\nstay\\nsteak\\nsteel\\nstem\\nstep\\nstereo\\nstick\\nstill\\nsting\\nstock\\nstomach\\nstone\\nstool\\nstory\\nstove\\nstrategy\\nstreet\\nstrike\\nstrong\\nstruggle\\nstudent\\nstuff\\nstumble\\nstyle\\nsubject\\nsubmit\\nsubway\\nsuccess\\nsuch\\nsudden\\nsuffer\\nsugar\\nsuggest\\nsuit\\nsummer\\nsun\\nsunny\\nsunset\\nsuper\\nsupply\\nsupreme\\nsure\\nsurface\\nsurge\\nsurprise\\nsurround\\nsurvey\\nsuspect\\nsustain\\nswallow\\nswamp\\nswap\\nswarm\\nswear\\nsweet\\nswift\\nswim\\nswing\\nswitch\\nsword\\nsymbol\\nsymptom\\nsyrup\\nsystem\\ntable\\ntackle\\ntag\\ntail\\ntalent\\ntalk\\ntank\\ntape\\ntarget\\ntask\\ntaste\\ntattoo\\ntaxi\\nteach\\nteam\\ntell\\nten\\ntenant\\ntennis\\ntent\\nterm\\ntest\\ntext\\nthank\\nthat\\ntheme\\nthen\\ntheory\\nthere\\nthey\\nthing\\nthis\\nthought\\nthree\\nthrive\\nthrow\\nthumb\\nthunder\\nticket\\ntide\\ntiger\\ntilt\\ntimber\\ntime\\ntiny\\ntip\\ntired\\ntissue\\ntitle\\ntoast\\ntobacco\\ntoday\\ntoddler\\ntoe\\ntogether\\ntoilet\\ntoken\\ntomato\\ntomorrow\\ntone\\ntongue\\ntonight\\ntool\\ntooth\\ntop\\ntopic\\ntopple\\ntorch\\ntornado\\ntortoise\\ntoss\\ntotal\\ntourist\\ntoward\\ntower\\ntown\\ntoy\\ntrack\\ntrade\\ntraffic\\ntragic\\ntrain\\ntransfer\\ntrap\\ntrash\\ntravel\\ntray\\ntreat\\ntree\\ntrend\\ntrial\\ntribe\\ntrick\\ntrigger\\ntrim\\ntrip\\ntrophy\\ntrouble\\ntruck\\ntrue\\ntruly\\ntrumpet\\ntrust\\ntruth\\ntry\\ntube\\ntuition\\ntumble\\ntuna\\ntunnel\\nturkey\\nturn\\nturtle\\ntwelve\\ntwenty\\ntwice\\ntwin\\ntwist\\ntwo\\ntype\\ntypical\\nugly\\numbrella\\nunable\\nunaware\\nuncle\\nuncover\\nunder\\nundo\\nunfair\\nunfold\\nunhappy\\nuniform\\nunique\\nunit\\nuniverse\\nunknown\\nunlock\\nuntil\\nunusual\\nunveil\\nupdate\\nupgrade\\nuphold\\nupon\\nupper\\nupset\\nurban\\nurge\\nusage\\nuse\\nused\\nuseful\\nuseless\\nusual\\nutility\\nvacant\\nvacuum\\nvague\\nvalid\\nvalley\\nvalve\\nvan\\nvanish\\nvapor\\nvarious\\nvast\\nvault\\nvehicle\\nvelvet\\nvendor\\nventure\\nvenue\\nverb\\nverify\\nversion\\nvery\\nvessel\\nveteran\\nviable\\nvibrant\\nvicious\\nvictory\\nvideo\\nview\\nvillage\\nvintage\\nviolin\\nvirtual\\nvirus\\nvisa\\nvisit\\nvisual\\nvital\\nvivid\\nvocal\\nvoice\\nvoid\\nvolcano\\nvolume\\nvote\\nvoyage\\nwage\\nwagon\\nwait\\nwalk\\nwall\\nwalnut\\nwant\\nwarfare\\nwarm\\nwarrior\\nwash\\nwasp\\nwaste\\nwater\\nwave\\nway\\nwealth\\nweapon\\nwear\\nweasel\\nweather\\nweb\\nwedding\\nweekend\\nweird\\nwelcome\\nwest\\nwet\\nwhale\\nwhat\\nwheat\\nwheel\\nwhen\\nwhere\\nwhip\\nwhisper\\nwide\\nwidth\\nwife\\nwild\\nwill\\nwin\\nwindow\\nwine\\nwing\\nwink\\nwinner\\nwinter\\nwire\\nwisdom\\nwise\\nwish\\nwitness\\nwolf\\nwoman\\nwonder\\nwood\\nwool\\nword\\nwork\\nworld\\nworry\\nworth\\nwrap\\nwreck\\nwrestle\\nwrist\\nwrite\\nwrong\\nyard\\nyear\\nyellow\\nyou\\nyoung\\nyouth\\nzebra\\nzero\\nzone\\nzoo\".split(\"\\n\")},9809:(e,t,r)=>{\"use strict\";const n=t;n.bignum=r(3550),n.define=r(2500).define,n.base=r(1979),n.constants=r(6826),n.decoders=r(8307),n.encoders=r(6579)},2500:(e,t,r)=>{\"use strict\";const n=r(6579),i=r(8307),o=r(5717);function s(e,t){this.name=e,this.body=t,this.decoders={},this.encoders={}}t.define=function(e,t){return new s(e,t)},s.prototype._createNamed=function(e){const t=this.name;function r(e){this._initNamed(e,t)}return o(r,e),r.prototype._initNamed=function(t,r){e.call(this,t,r)},new r(this)},s.prototype._getDecoder=function(e){return e=e||\"der\",this.decoders.hasOwnProperty(e)||(this.decoders[e]=this._createNamed(i[e])),this.decoders[e]},s.prototype.decode=function(e,t,r){return this._getDecoder(t).decode(e,r)},s.prototype._getEncoder=function(e){return e=e||\"der\",this.encoders.hasOwnProperty(e)||(this.encoders[e]=this._createNamed(n[e])),this.encoders[e]},s.prototype.encode=function(e,t,r){return this._getEncoder(t).encode(e,r)}},6625:(e,t,r)=>{\"use strict\";const n=r(5717),i=r(8465).b,o=r(2399).Buffer;function s(e,t){i.call(this,t),o.isBuffer(e)?(this.base=e,this.offset=0,this.length=e.length):this.error(\"Input not Buffer\")}function a(e,t){if(Array.isArray(e))this.length=0,this.value=e.map((function(e){return a.isEncoderBuffer(e)||(e=new a(e,t)),this.length+=e.length,e}),this);else if(\"number\"==typeof e){if(!(0<=e&&e<=255))return t.error(\"non-byte EncoderBuffer value\");this.value=e,this.length=1}else if(\"string\"==typeof e)this.value=e,this.length=o.byteLength(e);else{if(!o.isBuffer(e))return t.error(\"Unsupported type: \"+typeof e);this.value=e,this.length=e.length}}n(s,i),t.C=s,s.isDecoderBuffer=function(e){return e instanceof s||\"object\"==typeof e&&o.isBuffer(e.base)&&\"DecoderBuffer\"===e.constructor.name&&\"number\"==typeof e.offset&&\"number\"==typeof e.length&&\"function\"==typeof e.save&&\"function\"==typeof e.restore&&\"function\"==typeof e.isEmpty&&\"function\"==typeof e.readUInt8&&\"function\"==typeof e.skip&&\"function\"==typeof e.raw},s.prototype.save=function(){return{offset:this.offset,reporter:i.prototype.save.call(this)}},s.prototype.restore=function(e){const t=new s(this.base);return t.offset=e.offset,t.length=this.offset,this.offset=e.offset,i.prototype.restore.call(this,e.reporter),t},s.prototype.isEmpty=function(){return this.offset===this.length},s.prototype.readUInt8=function(e){return this.offset+1<=this.length?this.base.readUInt8(this.offset++,!0):this.error(e||\"DecoderBuffer overrun\")},s.prototype.skip=function(e,t){if(!(this.offset+e<=this.length))return this.error(t||\"DecoderBuffer overrun\");const r=new s(this.base);return r._reporterState=this._reporterState,r.offset=this.offset,r.length=this.offset+e,this.offset+=e,r},s.prototype.raw=function(e){return this.base.slice(e?e.offset:this.offset,this.length)},t.R=a,a.isEncoderBuffer=function(e){return e instanceof a||\"object\"==typeof e&&\"EncoderBuffer\"===e.constructor.name&&\"number\"==typeof e.length&&\"function\"==typeof e.join},a.prototype.join=function(e,t){return e||(e=o.alloc(this.length)),t||(t=0),0===this.length||(Array.isArray(this.value)?this.value.forEach((function(r){r.join(e,t),t+=r.length})):(\"number\"==typeof this.value?e[t]=this.value:\"string\"==typeof this.value?e.write(this.value,t):o.isBuffer(this.value)&&this.value.copy(e,t),t+=this.length)),e}},1979:(e,t,r)=>{\"use strict\";const n=t;n.Reporter=r(8465).b,n.DecoderBuffer=r(6625).C,n.EncoderBuffer=r(6625).R,n.Node=r(1949)},1949:(e,t,r)=>{\"use strict\";const n=r(8465).b,i=r(6625).R,o=r(6625).C,s=r(9746),a=[\"seq\",\"seqof\",\"set\",\"setof\",\"objid\",\"bool\",\"gentime\",\"utctime\",\"null_\",\"enum\",\"int\",\"objDesc\",\"bitstr\",\"bmpstr\",\"charstr\",\"genstr\",\"graphstr\",\"ia5str\",\"iso646str\",\"numstr\",\"octstr\",\"printstr\",\"t61str\",\"unistr\",\"utf8str\",\"videostr\"],u=[\"key\",\"obj\",\"use\",\"optional\",\"explicit\",\"implicit\",\"def\",\"choice\",\"any\",\"contains\"].concat(a);function c(e,t,r){const n={};this._baseState=n,n.name=r,n.enc=e,n.parent=t||null,n.children=null,n.tag=null,n.args=null,n.reverseArgs=null,n.choice=null,n.optional=!1,n.any=!1,n.obj=!1,n.use=null,n.useDecoder=null,n.key=null,n.default=null,n.explicit=null,n.implicit=null,n.contains=null,n.parent||(n.children=[],this._wrap())}e.exports=c;const f=[\"enc\",\"parent\",\"children\",\"tag\",\"args\",\"reverseArgs\",\"choice\",\"optional\",\"any\",\"obj\",\"use\",\"alteredUse\",\"key\",\"default\",\"explicit\",\"implicit\",\"contains\"];c.prototype.clone=function(){const e=this._baseState,t={};f.forEach((function(r){t[r]=e[r]}));const r=new this.constructor(t.parent);return r._baseState=t,r},c.prototype._wrap=function(){const e=this._baseState;u.forEach((function(t){this[t]=function(){const r=new this.constructor(this);return e.children.push(r),r[t].apply(r,arguments)}}),this)},c.prototype._init=function(e){const t=this._baseState;s(null===t.parent),e.call(this),t.children=t.children.filter((function(e){return e._baseState.parent===this}),this),s.equal(t.children.length,1,\"Root node can have only one child\")},c.prototype._useArgs=function(e){const t=this._baseState,r=e.filter((function(e){return e instanceof this.constructor}),this);e=e.filter((function(e){return!(e instanceof this.constructor)}),this),0!==r.length&&(s(null===t.children),t.children=r,r.forEach((function(e){e._baseState.parent=this}),this)),0!==e.length&&(s(null===t.args),t.args=e,t.reverseArgs=e.map((function(e){if(\"object\"!=typeof e||e.constructor!==Object)return e;const t={};return Object.keys(e).forEach((function(r){r==(0|r)&&(r|=0);const n=e[r];t[n]=r})),t})))},[\"_peekTag\",\"_decodeTag\",\"_use\",\"_decodeStr\",\"_decodeObjid\",\"_decodeTime\",\"_decodeNull\",\"_decodeInt\",\"_decodeBool\",\"_decodeList\",\"_encodeComposite\",\"_encodeStr\",\"_encodeObjid\",\"_encodeTime\",\"_encodeNull\",\"_encodeInt\",\"_encodeBool\"].forEach((function(e){c.prototype[e]=function(){const t=this._baseState;throw new Error(e+\" not implemented for encoding: \"+t.enc)}})),a.forEach((function(e){c.prototype[e]=function(){const t=this._baseState,r=Array.prototype.slice.call(arguments);return s(null===t.tag),t.tag=e,this._useArgs(r),this}})),c.prototype.use=function(e){s(e);const t=this._baseState;return s(null===t.use),t.use=e,this},c.prototype.optional=function(){return this._baseState.optional=!0,this},c.prototype.def=function(e){const t=this._baseState;return s(null===t.default),t.default=e,t.optional=!0,this},c.prototype.explicit=function(e){const t=this._baseState;return s(null===t.explicit&&null===t.implicit),t.explicit=e,this},c.prototype.implicit=function(e){const t=this._baseState;return s(null===t.explicit&&null===t.implicit),t.implicit=e,this},c.prototype.obj=function(){const e=this._baseState,t=Array.prototype.slice.call(arguments);return e.obj=!0,0!==t.length&&this._useArgs(t),this},c.prototype.key=function(e){const t=this._baseState;return s(null===t.key),t.key=e,this},c.prototype.any=function(){return this._baseState.any=!0,this},c.prototype.choice=function(e){const t=this._baseState;return s(null===t.choice),t.choice=e,this._useArgs(Object.keys(e).map((function(t){return e[t]}))),this},c.prototype.contains=function(e){const t=this._baseState;return s(null===t.use),t.contains=e,this},c.prototype._decode=function(e,t){const r=this._baseState;if(null===r.parent)return e.wrapResult(r.children[0]._decode(e,t));let n,i=r.default,s=!0,a=null;if(null!==r.key&&(a=e.enterKey(r.key)),r.optional){let n=null;if(null!==r.explicit?n=r.explicit:null!==r.implicit?n=r.implicit:null!==r.tag&&(n=r.tag),null!==n||r.any){if(s=this._peekTag(e,n,r.any),e.isError(s))return s}else{const n=e.save();try{null===r.choice?this._decodeGeneric(r.tag,e,t):this._decodeChoice(e,t),s=!0}catch(e){s=!1}e.restore(n)}}if(r.obj&&s&&(n=e.enterObject()),s){if(null!==r.explicit){const t=this._decodeTag(e,r.explicit);if(e.isError(t))return t;e=t}const n=e.offset;if(null===r.use&&null===r.choice){let t;r.any&&(t=e.save());const n=this._decodeTag(e,null!==r.implicit?r.implicit:r.tag,r.any);if(e.isError(n))return n;r.any?i=e.raw(t):e=n}if(t&&t.track&&null!==r.tag&&t.track(e.path(),n,e.length,\"tagged\"),t&&t.track&&null!==r.tag&&t.track(e.path(),e.offset,e.length,\"content\"),r.any||(i=null===r.choice?this._decodeGeneric(r.tag,e,t):this._decodeChoice(e,t)),e.isError(i))return i;if(r.any||null!==r.choice||null===r.children||r.children.forEach((function(r){r._decode(e,t)})),r.contains&&(\"octstr\"===r.tag||\"bitstr\"===r.tag)){const n=new o(i);i=this._getUse(r.contains,e._reporterState.obj)._decode(n,t)}}return r.obj&&s&&(i=e.leaveObject(n)),null===r.key||null===i&&!0!==s?null!==a&&e.exitKey(a):e.leaveKey(a,r.key,i),i},c.prototype._decodeGeneric=function(e,t,r){const n=this._baseState;return\"seq\"===e||\"set\"===e?null:\"seqof\"===e||\"setof\"===e?this._decodeList(t,e,n.args[0],r):/str$/.test(e)?this._decodeStr(t,e,r):\"objid\"===e&&n.args?this._decodeObjid(t,n.args[0],n.args[1],r):\"objid\"===e?this._decodeObjid(t,null,null,r):\"gentime\"===e||\"utctime\"===e?this._decodeTime(t,e,r):\"null_\"===e?this._decodeNull(t,r):\"bool\"===e?this._decodeBool(t,r):\"objDesc\"===e?this._decodeStr(t,e,r):\"int\"===e||\"enum\"===e?this._decodeInt(t,n.args&&n.args[0],r):null!==n.use?this._getUse(n.use,t._reporterState.obj)._decode(t,r):t.error(\"unknown tag: \"+e)},c.prototype._getUse=function(e,t){const r=this._baseState;return r.useDecoder=this._use(e,t),s(null===r.useDecoder._baseState.parent),r.useDecoder=r.useDecoder._baseState.children[0],r.implicit!==r.useDecoder._baseState.implicit&&(r.useDecoder=r.useDecoder.clone(),r.useDecoder._baseState.implicit=r.implicit),r.useDecoder},c.prototype._decodeChoice=function(e,t){const r=this._baseState;let n=null,i=!1;return Object.keys(r.choice).some((function(o){const s=e.save(),a=r.choice[o];try{const r=a._decode(e,t);if(e.isError(r))return!1;n={type:o,value:r},i=!0}catch(t){return e.restore(s),!1}return!0}),this),i?n:e.error(\"Choice not matched\")},c.prototype._createEncoderBuffer=function(e){return new i(e,this.reporter)},c.prototype._encode=function(e,t,r){const n=this._baseState;if(null!==n.default&&n.default===e)return;const i=this._encodeValue(e,t,r);return void 0===i||this._skipDefault(i,t,r)?void 0:i},c.prototype._encodeValue=function(e,t,r){const i=this._baseState;if(null===i.parent)return i.children[0]._encode(e,t||new n);let o=null;if(this.reporter=t,i.optional&&void 0===e){if(null===i.default)return;e=i.default}let s=null,a=!1;if(i.any)o=this._createEncoderBuffer(e);else if(i.choice)o=this._encodeChoice(e,t);else if(i.contains)s=this._getUse(i.contains,r)._encode(e,t),a=!0;else if(i.children)s=i.children.map((function(r){if(\"null_\"===r._baseState.tag)return r._encode(null,t,e);if(null===r._baseState.key)return t.error(\"Child should have a key\");const n=t.enterKey(r._baseState.key);if(\"object\"!=typeof e)return t.error(\"Child expected, but input is not object\");const i=r._encode(e[r._baseState.key],t,e);return t.leaveKey(n),i}),this).filter((function(e){return e})),s=this._createEncoderBuffer(s);else if(\"seqof\"===i.tag||\"setof\"===i.tag){if(!i.args||1!==i.args.length)return t.error(\"Too many args for : \"+i.tag);if(!Array.isArray(e))return t.error(\"seqof/setof, but data is not Array\");const r=this.clone();r._baseState.implicit=null,s=this._createEncoderBuffer(e.map((function(r){const n=this._baseState;return this._getUse(n.args[0],e)._encode(r,t)}),r))}else null!==i.use?o=this._getUse(i.use,r)._encode(e,t):(s=this._encodePrimitive(i.tag,e),a=!0);if(!i.any&&null===i.choice){const e=null!==i.implicit?i.implicit:i.tag,r=null===i.implicit?\"universal\":\"context\";null===e?null===i.use&&t.error(\"Tag could be omitted only for .use()\"):null===i.use&&(o=this._encodeComposite(e,a,r,s))}return null!==i.explicit&&(o=this._encodeComposite(i.explicit,!1,\"context\",o)),o},c.prototype._encodeChoice=function(e,t){const r=this._baseState,n=r.choice[e.type];return n||s(!1,e.type+\" not found in \"+JSON.stringify(Object.keys(r.choice))),n._encode(e.value,t)},c.prototype._encodePrimitive=function(e,t){const r=this._baseState;if(/str$/.test(e))return this._encodeStr(t,e);if(\"objid\"===e&&r.args)return this._encodeObjid(t,r.reverseArgs[0],r.args[1]);if(\"objid\"===e)return this._encodeObjid(t,null,null);if(\"gentime\"===e||\"utctime\"===e)return this._encodeTime(t,e);if(\"null_\"===e)return this._encodeNull();if(\"int\"===e||\"enum\"===e)return this._encodeInt(t,r.args&&r.reverseArgs[0]);if(\"bool\"===e)return this._encodeBool(t);if(\"objDesc\"===e)return this._encodeStr(t,e);throw new Error(\"Unsupported tag: \"+e)},c.prototype._isNumstr=function(e){return/^[0-9 ]*$/.test(e)},c.prototype._isPrintstr=function(e){return/^[A-Za-z0-9 '()+,-./:=?]*$/.test(e)}},8465:(e,t,r)=>{\"use strict\";const n=r(5717);function i(e){this._reporterState={obj:null,path:[],options:e||{},errors:[]}}function o(e,t){this.path=e,this.rethrow(t)}t.b=i,i.prototype.isError=function(e){return e instanceof o},i.prototype.save=function(){const e=this._reporterState;return{obj:e.obj,pathLen:e.path.length}},i.prototype.restore=function(e){const t=this._reporterState;t.obj=e.obj,t.path=t.path.slice(0,e.pathLen)},i.prototype.enterKey=function(e){return this._reporterState.path.push(e)},i.prototype.exitKey=function(e){const t=this._reporterState;t.path=t.path.slice(0,e-1)},i.prototype.leaveKey=function(e,t,r){const n=this._reporterState;this.exitKey(e),null!==n.obj&&(n.obj[t]=r)},i.prototype.path=function(){return this._reporterState.path.join(\"/\")},i.prototype.enterObject=function(){const e=this._reporterState,t=e.obj;return e.obj={},t},i.prototype.leaveObject=function(e){const t=this._reporterState,r=t.obj;return t.obj=e,r},i.prototype.error=function(e){let t;const r=this._reporterState,n=e instanceof o;if(t=n?e:new o(r.path.map((function(e){return\"[\"+JSON.stringify(e)+\"]\"})).join(\"\"),e.message||e,e.stack),!r.options.partial)throw t;return n||r.errors.push(t),t},i.prototype.wrapResult=function(e){const t=this._reporterState;return t.options.partial?{result:this.isError(e)?null:e,errors:t.errors}:e},n(o,Error),o.prototype.rethrow=function(e){if(this.message=e+\" at: \"+(this.path||\"(shallow)\"),Error.captureStackTrace&&Error.captureStackTrace(this,o),!this.stack)try{throw new Error(this.message)}catch(e){this.stack=e.stack}return this}},160:(e,t)=>{\"use strict\";function r(e){const t={};return Object.keys(e).forEach((function(r){(0|r)==r&&(r|=0);const n=e[r];t[n]=r})),t}t.tagClass={0:\"universal\",1:\"application\",2:\"context\",3:\"private\"},t.tagClassByName=r(t.tagClass),t.tag={0:\"end\",1:\"bool\",2:\"int\",3:\"bitstr\",4:\"octstr\",5:\"null_\",6:\"objid\",7:\"objDesc\",8:\"external\",9:\"real\",10:\"enum\",11:\"embed\",12:\"utf8str\",13:\"relativeOid\",16:\"seq\",17:\"set\",18:\"numstr\",19:\"printstr\",20:\"t61str\",21:\"videostr\",22:\"ia5str\",23:\"utctime\",24:\"gentime\",25:\"graphstr\",26:\"iso646str\",27:\"genstr\",28:\"unistr\",29:\"charstr\",30:\"bmpstr\"},t.tagByName=r(t.tag)},6826:(e,t,r)=>{\"use strict\";const n=t;n._reverse=function(e){const t={};return Object.keys(e).forEach((function(r){(0|r)==r&&(r|=0);const n=e[r];t[n]=r})),t},n.der=r(160)},1671:(e,t,r)=>{\"use strict\";const n=r(5717),i=r(3550),o=r(6625).C,s=r(1949),a=r(160);function u(e){this.enc=\"der\",this.name=e.name,this.entity=e,this.tree=new c,this.tree._init(e.body)}function c(e){s.call(this,\"der\",e)}function f(e,t){let r=e.readUInt8(t);if(e.isError(r))return r;const n=a.tagClass[r>>6],i=0==(32&r);if(31==(31&r)){let n=r;for(r=0;128==(128&n);){if(n=e.readUInt8(t),e.isError(n))return n;r<<=7,r|=127&n}}else r&=31;return{cls:n,primitive:i,tag:r,tagStr:a.tag[r]}}function l(e,t,r){let n=e.readUInt8(r);if(e.isError(n))return n;if(!t&&128===n)return null;if(0==(128&n))return n;const i=127&n;if(i>4)return e.error(\"length octect is too long\");n=0;for(let t=0;t<i;t++){n<<=8;const t=e.readUInt8(r);if(e.isError(t))return t;n|=t}return n}e.exports=u,u.prototype.decode=function(e,t){return o.isDecoderBuffer(e)||(e=new o(e,t)),this.tree._decode(e,t)},n(c,s),c.prototype._peekTag=function(e,t,r){if(e.isEmpty())return!1;const n=e.save(),i=f(e,'Failed to peek tag: \"'+t+'\"');return e.isError(i)?i:(e.restore(n),i.tag===t||i.tagStr===t||i.tagStr+\"of\"===t||r)},c.prototype._decodeTag=function(e,t,r){const n=f(e,'Failed to decode tag of \"'+t+'\"');if(e.isError(n))return n;let i=l(e,n.primitive,'Failed to get length of \"'+t+'\"');if(e.isError(i))return i;if(!r&&n.tag!==t&&n.tagStr!==t&&n.tagStr+\"of\"!==t)return e.error('Failed to match tag: \"'+t+'\"');if(n.primitive||null!==i)return e.skip(i,'Failed to match body of: \"'+t+'\"');const o=e.save(),s=this._skipUntilEnd(e,'Failed to skip indefinite length body: \"'+this.tag+'\"');return e.isError(s)?s:(i=e.offset-o.offset,e.restore(o),e.skip(i,'Failed to match body of: \"'+t+'\"'))},c.prototype._skipUntilEnd=function(e,t){for(;;){const r=f(e,t);if(e.isError(r))return r;const n=l(e,r.primitive,t);if(e.isError(n))return n;let i;if(i=r.primitive||null!==n?e.skip(n):this._skipUntilEnd(e,t),e.isError(i))return i;if(\"end\"===r.tagStr)break}},c.prototype._decodeList=function(e,t,r,n){const i=[];for(;!e.isEmpty();){const t=this._peekTag(e,\"end\");if(e.isError(t))return t;const o=r.decode(e,\"der\",n);if(e.isError(o)&&t)break;i.push(o)}return i},c.prototype._decodeStr=function(e,t){if(\"bitstr\"===t){const t=e.readUInt8();return e.isError(t)?t:{unused:t,data:e.raw()}}if(\"bmpstr\"===t){const t=e.raw();if(t.length%2==1)return e.error(\"Decoding of string type: bmpstr length mismatch\");let r=\"\";for(let e=0;e<t.length/2;e++)r+=String.fromCharCode(t.readUInt16BE(2*e));return r}if(\"numstr\"===t){const t=e.raw().toString(\"ascii\");return this._isNumstr(t)?t:e.error(\"Decoding of string type: numstr unsupported characters\")}if(\"octstr\"===t)return e.raw();if(\"objDesc\"===t)return e.raw();if(\"printstr\"===t){const t=e.raw().toString(\"ascii\");return this._isPrintstr(t)?t:e.error(\"Decoding of string type: printstr unsupported characters\")}return/str$/.test(t)?e.raw().toString():e.error(\"Decoding of string type: \"+t+\" unsupported\")},c.prototype._decodeObjid=function(e,t,r){let n;const i=[];let o=0,s=0;for(;!e.isEmpty();)s=e.readUInt8(),o<<=7,o|=127&s,0==(128&s)&&(i.push(o),o=0);128&s&&i.push(o);const a=i[0]/40|0,u=i[0]%40;if(n=r?i:[a,u].concat(i.slice(1)),t){let e=t[n.join(\" \")];void 0===e&&(e=t[n.join(\".\")]),void 0!==e&&(n=e)}return n},c.prototype._decodeTime=function(e,t){const r=e.raw().toString();let n,i,o,s,a,u;if(\"gentime\"===t)n=0|r.slice(0,4),i=0|r.slice(4,6),o=0|r.slice(6,8),s=0|r.slice(8,10),a=0|r.slice(10,12),u=0|r.slice(12,14);else{if(\"utctime\"!==t)return e.error(\"Decoding \"+t+\" time is not supported yet\");n=0|r.slice(0,2),i=0|r.slice(2,4),o=0|r.slice(4,6),s=0|r.slice(6,8),a=0|r.slice(8,10),u=0|r.slice(10,12),n=n<70?2e3+n:1900+n}return Date.UTC(n,i-1,o,s,a,u,0)},c.prototype._decodeNull=function(){return null},c.prototype._decodeBool=function(e){const t=e.readUInt8();return e.isError(t)?t:0!==t},c.prototype._decodeInt=function(e,t){const r=e.raw();let n=new i(r);return t&&(n=t[n.toString(10)]||n),n},c.prototype._use=function(e,t){return\"function\"==typeof e&&(e=e(t)),e._getDecoder(\"der\").tree}},8307:(e,t,r)=>{\"use strict\";const n=t;n.der=r(1671),n.pem=r(9631)},9631:(e,t,r)=>{\"use strict\";const n=r(5717),i=r(2399).Buffer,o=r(1671);function s(e){o.call(this,e),this.enc=\"pem\"}n(s,o),e.exports=s,s.prototype.decode=function(e,t){const r=e.toString().split(/[\\r\\n]+/g),n=t.label.toUpperCase(),s=/^-----(BEGIN|END) ([^-]+)-----$/;let a=-1,u=-1;for(let e=0;e<r.length;e++){const t=r[e].match(s);if(null!==t&&t[2]===n){if(-1!==a){if(\"END\"!==t[1])break;u=e;break}if(\"BEGIN\"!==t[1])break;a=e}}if(-1===a||-1===u)throw new Error(\"PEM section not found for: \"+n);const c=r.slice(a+1,u).join(\"\");c.replace(/[^a-z0-9+/=]+/gi,\"\");const f=i.from(c,\"base64\");return o.prototype.decode.call(this,f,t)}},6984:(e,t,r)=>{\"use strict\";const n=r(5717),i=r(2399).Buffer,o=r(1949),s=r(160);function a(e){this.enc=\"der\",this.name=e.name,this.entity=e,this.tree=new u,this.tree._init(e.body)}function u(e){o.call(this,\"der\",e)}function c(e){return e<10?\"0\"+e:e}e.exports=a,a.prototype.encode=function(e,t){return this.tree._encode(e,t).join()},n(u,o),u.prototype._encodeComposite=function(e,t,r,n){const o=function(e,t,r,n){let i;if(\"seqof\"===e?e=\"seq\":\"setof\"===e&&(e=\"set\"),s.tagByName.hasOwnProperty(e))i=s.tagByName[e];else{if(\"number\"!=typeof e||(0|e)!==e)return n.error(\"Unknown tag: \"+e);i=e}return i>=31?n.error(\"Multi-octet tag encoding unsupported\"):(t||(i|=32),i|=s.tagClassByName[r||\"universal\"]<<6,i)}(e,t,r,this.reporter);if(n.length<128){const e=i.alloc(2);return e[0]=o,e[1]=n.length,this._createEncoderBuffer([e,n])}let a=1;for(let e=n.length;e>=256;e>>=8)a++;const u=i.alloc(2+a);u[0]=o,u[1]=128|a;for(let e=1+a,t=n.length;t>0;e--,t>>=8)u[e]=255&t;return this._createEncoderBuffer([u,n])},u.prototype._encodeStr=function(e,t){if(\"bitstr\"===t)return this._createEncoderBuffer([0|e.unused,e.data]);if(\"bmpstr\"===t){const t=i.alloc(2*e.length);for(let r=0;r<e.length;r++)t.writeUInt16BE(e.charCodeAt(r),2*r);return this._createEncoderBuffer(t)}return\"numstr\"===t?this._isNumstr(e)?this._createEncoderBuffer(e):this.reporter.error(\"Encoding of string type: numstr supports only digits and space\"):\"printstr\"===t?this._isPrintstr(e)?this._createEncoderBuffer(e):this.reporter.error(\"Encoding of string type: printstr supports only latin upper and lower case letters, digits, space, apostrophe, left and rigth parenthesis, plus sign, comma, hyphen, dot, slash, colon, equal sign, question mark\"):/str$/.test(t)||\"objDesc\"===t?this._createEncoderBuffer(e):this.reporter.error(\"Encoding of string type: \"+t+\" unsupported\")},u.prototype._encodeObjid=function(e,t,r){if(\"string\"==typeof e){if(!t)return this.reporter.error(\"string objid given, but no values map found\");if(!t.hasOwnProperty(e))return this.reporter.error(\"objid not found in values map\");e=t[e].split(/[\\s.]+/g);for(let t=0;t<e.length;t++)e[t]|=0}else if(Array.isArray(e)){e=e.slice();for(let t=0;t<e.length;t++)e[t]|=0}if(!Array.isArray(e))return this.reporter.error(\"objid() should be either array or string, got: \"+JSON.stringify(e));if(!r){if(e[1]>=40)return this.reporter.error(\"Second objid identifier OOB\");e.splice(0,2,40*e[0]+e[1])}let n=0;for(let t=0;t<e.length;t++){let r=e[t];for(n++;r>=128;r>>=7)n++}const o=i.alloc(n);let s=o.length-1;for(let t=e.length-1;t>=0;t--){let r=e[t];for(o[s--]=127&r;(r>>=7)>0;)o[s--]=128|127&r}return this._createEncoderBuffer(o)},u.prototype._encodeTime=function(e,t){let r;const n=new Date(e);return\"gentime\"===t?r=[c(n.getUTCFullYear()),c(n.getUTCMonth()+1),c(n.getUTCDate()),c(n.getUTCHours()),c(n.getUTCMinutes()),c(n.getUTCSeconds()),\"Z\"].join(\"\"):\"utctime\"===t?r=[c(n.getUTCFullYear()%100),c(n.getUTCMonth()+1),c(n.getUTCDate()),c(n.getUTCHours()),c(n.getUTCMinutes()),c(n.getUTCSeconds()),\"Z\"].join(\"\"):this.reporter.error(\"Encoding \"+t+\" time is not supported yet\"),this._encodeStr(r,\"octstr\")},u.prototype._encodeNull=function(){return this._createEncoderBuffer(\"\")},u.prototype._encodeInt=function(e,t){if(\"string\"==typeof e){if(!t)return this.reporter.error(\"String int or enum given, but no values map\");if(!t.hasOwnProperty(e))return this.reporter.error(\"Values map doesn't contain: \"+JSON.stringify(e));e=t[e]}if(\"number\"!=typeof e&&!i.isBuffer(e)){const t=e.toArray();!e.sign&&128&t[0]&&t.unshift(0),e=i.from(t)}if(i.isBuffer(e)){let t=e.length;0===e.length&&t++;const r=i.alloc(t);return e.copy(r),0===e.length&&(r[0]=0),this._createEncoderBuffer(r)}if(e<128)return this._createEncoderBuffer(e);if(e<256)return this._createEncoderBuffer([0,e]);let r=1;for(let t=e;t>=256;t>>=8)r++;const n=new Array(r);for(let t=n.length-1;t>=0;t--)n[t]=255&e,e>>=8;return 128&n[0]&&n.unshift(0),this._createEncoderBuffer(i.from(n))},u.prototype._encodeBool=function(e){return this._createEncoderBuffer(e?255:0)},u.prototype._use=function(e,t){return\"function\"==typeof e&&(e=e(t)),e._getEncoder(\"der\").tree},u.prototype._skipDefault=function(e,t,r){const n=this._baseState;let i;if(null===n.default)return!1;const o=e.join();if(void 0===n.defaultBuffer&&(n.defaultBuffer=this._encodeValue(n.default,t,r).join()),o.length!==n.defaultBuffer.length)return!1;for(i=0;i<o.length;i++)if(o[i]!==n.defaultBuffer[i])return!1;return!0}},6579:(e,t,r)=>{\"use strict\";const n=t;n.der=r(6984),n.pem=r(2883)},2883:(e,t,r)=>{\"use strict\";const n=r(5717),i=r(6984);function o(e){i.call(this,e),this.enc=\"pem\"}n(o,i),e.exports=o,o.prototype.encode=function(e,t){const r=i.prototype.encode.call(this,e).toString(\"base64\"),n=[\"-----BEGIN \"+t.label+\"-----\"];for(let e=0;e<r.length;e+=64)n.push(r.slice(e,e+64));return n.push(\"-----END \"+t.label+\"-----\"),n.join(\"\\n\")}},9742:(e,t)=>{\"use strict\";t.byteLength=function(e){var t=u(e),r=t[0],n=t[1];return 3*(r+n)/4-n},t.toByteArray=function(e){var t,r,o=u(e),s=o[0],a=o[1],c=new i(function(e,t,r){return 3*(t+r)/4-r}(0,s,a)),f=0,l=a>0?s-4:s;for(r=0;r<l;r+=4)t=n[e.charCodeAt(r)]<<18|n[e.charCodeAt(r+1)]<<12|n[e.charCodeAt(r+2)]<<6|n[e.charCodeAt(r+3)],c[f++]=t>>16&255,c[f++]=t>>8&255,c[f++]=255&t;return 2===a&&(t=n[e.charCodeAt(r)]<<2|n[e.charCodeAt(r+1)]>>4,c[f++]=255&t),1===a&&(t=n[e.charCodeAt(r)]<<10|n[e.charCodeAt(r+1)]<<4|n[e.charCodeAt(r+2)]>>2,c[f++]=t>>8&255,c[f++]=255&t),c},t.fromByteArray=function(e){for(var t,n=e.length,i=n%3,o=[],s=16383,a=0,u=n-i;a<u;a+=s)o.push(c(e,a,a+s>u?u:a+s));return 1===i?(t=e[n-1],o.push(r[t>>2]+r[t<<4&63]+\"==\")):2===i&&(t=(e[n-2]<<8)+e[n-1],o.push(r[t>>10]+r[t>>4&63]+r[t<<2&63]+\"=\")),o.join(\"\")};for(var r=[],n=[],i=\"undefined\"!=typeof Uint8Array?Uint8Array:Array,o=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\",s=0,a=o.length;s<a;++s)r[s]=o[s],n[o.charCodeAt(s)]=s;function u(e){var t=e.length;if(t%4>0)throw new Error(\"Invalid string. Length must be a multiple of 4\");var r=e.indexOf(\"=\");return-1===r&&(r=t),[r,r===t?0:4-r%4]}function c(e,t,n){for(var i,o,s=[],a=t;a<n;a+=3)i=(e[a]<<16&16711680)+(e[a+1]<<8&65280)+(255&e[a+2]),s.push(r[(o=i)>>18&63]+r[o>>12&63]+r[o>>6&63]+r[63&o]);return s.join(\"\")}n[\"-\".charCodeAt(0)]=62,n[\"_\".charCodeAt(0)]=63},3550:function(e,t,r){!function(e,t){\"use strict\";function n(e,t){if(!e)throw new Error(t||\"Assertion failed\")}function i(e,t){e.super_=t;var r=function(){};r.prototype=t.prototype,e.prototype=new r,e.prototype.constructor=e}function o(e,t,r){if(o.isBN(e))return e;this.negative=0,this.words=null,this.length=0,this.red=null,null!==e&&(\"le\"!==t&&\"be\"!==t||(r=t,t=10),this._init(e||0,t||10,r||\"be\"))}var s;\"object\"==typeof e?e.exports=o:t.BN=o,o.BN=o,o.wordSize=26;try{s=\"undefined\"!=typeof window&&void 0!==window.Buffer?window.Buffer:r(6601).Buffer}catch(e){}function a(e,t){var r=e.charCodeAt(t);return r>=65&&r<=70?r-55:r>=97&&r<=102?r-87:r-48&15}function u(e,t,r){var n=a(e,r);return r-1>=t&&(n|=a(e,r-1)<<4),n}function c(e,t,r,n){for(var i=0,o=Math.min(e.length,r),s=t;s<o;s++){var a=e.charCodeAt(s)-48;i*=n,i+=a>=49?a-49+10:a>=17?a-17+10:a}return i}o.isBN=function(e){return e instanceof o||null!==e&&\"object\"==typeof e&&e.constructor.wordSize===o.wordSize&&Array.isArray(e.words)},o.max=function(e,t){return e.cmp(t)>0?e:t},o.min=function(e,t){return e.cmp(t)<0?e:t},o.prototype._init=function(e,t,r){if(\"number\"==typeof e)return this._initNumber(e,t,r);if(\"object\"==typeof e)return this._initArray(e,t,r);\"hex\"===t&&(t=16),n(t===(0|t)&&t>=2&&t<=36);var i=0;\"-\"===(e=e.toString().replace(/\\s+/g,\"\"))[0]&&(i++,this.negative=1),i<e.length&&(16===t?this._parseHex(e,i,r):(this._parseBase(e,t,i),\"le\"===r&&this._initArray(this.toArray(),t,r)))},o.prototype._initNumber=function(e,t,r){e<0&&(this.negative=1,e=-e),e<67108864?(this.words=[67108863&e],this.length=1):e<4503599627370496?(this.words=[67108863&e,e/67108864&67108863],this.length=2):(n(e<9007199254740992),this.words=[67108863&e,e/67108864&67108863,1],this.length=3),\"le\"===r&&this._initArray(this.toArray(),t,r)},o.prototype._initArray=function(e,t,r){if(n(\"number\"==typeof e.length),e.length<=0)return this.words=[0],this.length=1,this;this.length=Math.ceil(e.length/3),this.words=new Array(this.length);for(var i=0;i<this.length;i++)this.words[i]=0;var o,s,a=0;if(\"be\"===r)for(i=e.length-1,o=0;i>=0;i-=3)s=e[i]|e[i-1]<<8|e[i-2]<<16,this.words[o]|=s<<a&67108863,this.words[o+1]=s>>>26-a&67108863,(a+=24)>=26&&(a-=26,o++);else if(\"le\"===r)for(i=0,o=0;i<e.length;i+=3)s=e[i]|e[i+1]<<8|e[i+2]<<16,this.words[o]|=s<<a&67108863,this.words[o+1]=s>>>26-a&67108863,(a+=24)>=26&&(a-=26,o++);return this.strip()},o.prototype._parseHex=function(e,t,r){this.length=Math.ceil((e.length-t)/6),this.words=new Array(this.length);for(var n=0;n<this.length;n++)this.words[n]=0;var i,o=0,s=0;if(\"be\"===r)for(n=e.length-1;n>=t;n-=2)i=u(e,t,n)<<o,this.words[s]|=67108863&i,o>=18?(o-=18,s+=1,this.words[s]|=i>>>26):o+=8;else for(n=(e.length-t)%2==0?t+1:t;n<e.length;n+=2)i=u(e,t,n)<<o,this.words[s]|=67108863&i,o>=18?(o-=18,s+=1,this.words[s]|=i>>>26):o+=8;this.strip()},o.prototype._parseBase=function(e,t,r){this.words=[0],this.length=1;for(var n=0,i=1;i<=67108863;i*=t)n++;n--,i=i/t|0;for(var o=e.length-r,s=o%n,a=Math.min(o,o-s)+r,u=0,f=r;f<a;f+=n)u=c(e,f,f+n,t),this.imuln(i),this.words[0]+u<67108864?this.words[0]+=u:this._iaddn(u);if(0!==s){var l=1;for(u=c(e,f,e.length,t),f=0;f<s;f++)l*=t;this.imuln(l),this.words[0]+u<67108864?this.words[0]+=u:this._iaddn(u)}this.strip()},o.prototype.copy=function(e){e.words=new Array(this.length);for(var t=0;t<this.length;t++)e.words[t]=this.words[t];e.length=this.length,e.negative=this.negative,e.red=this.red},o.prototype.clone=function(){var e=new o(null);return this.copy(e),e},o.prototype._expand=function(e){for(;this.length<e;)this.words[this.length++]=0;return this},o.prototype.strip=function(){for(;this.length>1&&0===this.words[this.length-1];)this.length--;return this._normSign()},o.prototype._normSign=function(){return 1===this.length&&0===this.words[0]&&(this.negative=0),this},o.prototype.inspect=function(){return(this.red?\"<BN-R: \":\"<BN: \")+this.toString(16)+\">\"};var f=[\"\",\"0\",\"00\",\"000\",\"0000\",\"00000\",\"000000\",\"0000000\",\"00000000\",\"000000000\",\"0000000000\",\"00000000000\",\"000000000000\",\"0000000000000\",\"00000000000000\",\"000000000000000\",\"0000000000000000\",\"00000000000000000\",\"000000000000000000\",\"0000000000000000000\",\"00000000000000000000\",\"000000000000000000000\",\"0000000000000000000000\",\"00000000000000000000000\",\"000000000000000000000000\",\"0000000000000000000000000\"],l=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],d=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1e7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64e6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243e5,28629151,33554432,39135393,45435424,52521875,60466176];function h(e,t,r){r.negative=t.negative^e.negative;var n=e.length+t.length|0;r.length=n,n=n-1|0;var i=0|e.words[0],o=0|t.words[0],s=i*o,a=67108863&s,u=s/67108864|0;r.words[0]=a;for(var c=1;c<n;c++){for(var f=u>>>26,l=67108863&u,d=Math.min(c,t.length-1),h=Math.max(0,c-e.length+1);h<=d;h++){var p=c-h|0;f+=(s=(i=0|e.words[p])*(o=0|t.words[h])+l)/67108864|0,l=67108863&s}r.words[c]=0|l,u=0|f}return 0!==u?r.words[c]=0|u:r.length--,r.strip()}o.prototype.toString=function(e,t){var r;if(t=0|t||1,16===(e=e||10)||\"hex\"===e){r=\"\";for(var i=0,o=0,s=0;s<this.length;s++){var a=this.words[s],u=(16777215&(a<<i|o)).toString(16);r=0!=(o=a>>>24-i&16777215)||s!==this.length-1?f[6-u.length]+u+r:u+r,(i+=2)>=26&&(i-=26,s--)}for(0!==o&&(r=o.toString(16)+r);r.length%t!=0;)r=\"0\"+r;return 0!==this.negative&&(r=\"-\"+r),r}if(e===(0|e)&&e>=2&&e<=36){var c=l[e],h=d[e];r=\"\";var p=this.clone();for(p.negative=0;!p.isZero();){var y=p.modn(h).toString(e);r=(p=p.idivn(h)).isZero()?y+r:f[c-y.length]+y+r}for(this.isZero()&&(r=\"0\"+r);r.length%t!=0;)r=\"0\"+r;return 0!==this.negative&&(r=\"-\"+r),r}n(!1,\"Base should be between 2 and 36\")},o.prototype.toNumber=function(){var e=this.words[0];return 2===this.length?e+=67108864*this.words[1]:3===this.length&&1===this.words[2]?e+=4503599627370496+67108864*this.words[1]:this.length>2&&n(!1,\"Number can only safely store up to 53 bits\"),0!==this.negative?-e:e},o.prototype.toJSON=function(){return this.toString(16)},o.prototype.toBuffer=function(e,t){return n(void 0!==s),this.toArrayLike(s,e,t)},o.prototype.toArray=function(e,t){return this.toArrayLike(Array,e,t)},o.prototype.toArrayLike=function(e,t,r){var i=this.byteLength(),o=r||Math.max(1,i);n(i<=o,\"byte array longer than desired length\"),n(o>0,\"Requested array length <= 0\"),this.strip();var s,a,u=\"le\"===t,c=new e(o),f=this.clone();if(u){for(a=0;!f.isZero();a++)s=f.andln(255),f.iushrn(8),c[a]=s;for(;a<o;a++)c[a]=0}else{for(a=0;a<o-i;a++)c[a]=0;for(a=0;!f.isZero();a++)s=f.andln(255),f.iushrn(8),c[o-a-1]=s}return c},Math.clz32?o.prototype._countBits=function(e){return 32-Math.clz32(e)}:o.prototype._countBits=function(e){var t=e,r=0;return t>=4096&&(r+=13,t>>>=13),t>=64&&(r+=7,t>>>=7),t>=8&&(r+=4,t>>>=4),t>=2&&(r+=2,t>>>=2),r+t},o.prototype._zeroBits=function(e){if(0===e)return 26;var t=e,r=0;return 0==(8191&t)&&(r+=13,t>>>=13),0==(127&t)&&(r+=7,t>>>=7),0==(15&t)&&(r+=4,t>>>=4),0==(3&t)&&(r+=2,t>>>=2),0==(1&t)&&r++,r},o.prototype.bitLength=function(){var e=this.words[this.length-1],t=this._countBits(e);return 26*(this.length-1)+t},o.prototype.zeroBits=function(){if(this.isZero())return 0;for(var e=0,t=0;t<this.length;t++){var r=this._zeroBits(this.words[t]);if(e+=r,26!==r)break}return e},o.prototype.byteLength=function(){return Math.ceil(this.bitLength()/8)},o.prototype.toTwos=function(e){return 0!==this.negative?this.abs().inotn(e).iaddn(1):this.clone()},o.prototype.fromTwos=function(e){return this.testn(e-1)?this.notn(e).iaddn(1).ineg():this.clone()},o.prototype.isNeg=function(){return 0!==this.negative},o.prototype.neg=function(){return this.clone().ineg()},o.prototype.ineg=function(){return this.isZero()||(this.negative^=1),this},o.prototype.iuor=function(e){for(;this.length<e.length;)this.words[this.length++]=0;for(var t=0;t<e.length;t++)this.words[t]=this.words[t]|e.words[t];return this.strip()},o.prototype.ior=function(e){return n(0==(this.negative|e.negative)),this.iuor(e)},o.prototype.or=function(e){return this.length>e.length?this.clone().ior(e):e.clone().ior(this)},o.prototype.uor=function(e){return this.length>e.length?this.clone().iuor(e):e.clone().iuor(this)},o.prototype.iuand=function(e){var t;t=this.length>e.length?e:this;for(var r=0;r<t.length;r++)this.words[r]=this.words[r]&e.words[r];return this.length=t.length,this.strip()},o.prototype.iand=function(e){return n(0==(this.negative|e.negative)),this.iuand(e)},o.prototype.and=function(e){return this.length>e.length?this.clone().iand(e):e.clone().iand(this)},o.prototype.uand=function(e){return this.length>e.length?this.clone().iuand(e):e.clone().iuand(this)},o.prototype.iuxor=function(e){var t,r;this.length>e.length?(t=this,r=e):(t=e,r=this);for(var n=0;n<r.length;n++)this.words[n]=t.words[n]^r.words[n];if(this!==t)for(;n<t.length;n++)this.words[n]=t.words[n];return this.length=t.length,this.strip()},o.prototype.ixor=function(e){return n(0==(this.negative|e.negative)),this.iuxor(e)},o.prototype.xor=function(e){return this.length>e.length?this.clone().ixor(e):e.clone().ixor(this)},o.prototype.uxor=function(e){return this.length>e.length?this.clone().iuxor(e):e.clone().iuxor(this)},o.prototype.inotn=function(e){n(\"number\"==typeof e&&e>=0);var t=0|Math.ceil(e/26),r=e%26;this._expand(t),r>0&&t--;for(var i=0;i<t;i++)this.words[i]=67108863&~this.words[i];return r>0&&(this.words[i]=~this.words[i]&67108863>>26-r),this.strip()},o.prototype.notn=function(e){return this.clone().inotn(e)},o.prototype.setn=function(e,t){n(\"number\"==typeof e&&e>=0);var r=e/26|0,i=e%26;return this._expand(r+1),this.words[r]=t?this.words[r]|1<<i:this.words[r]&~(1<<i),this.strip()},o.prototype.iadd=function(e){var t,r,n;if(0!==this.negative&&0===e.negative)return this.negative=0,t=this.isub(e),this.negative^=1,this._normSign();if(0===this.negative&&0!==e.negative)return e.negative=0,t=this.isub(e),e.negative=1,t._normSign();this.length>e.length?(r=this,n=e):(r=e,n=this);for(var i=0,o=0;o<n.length;o++)t=(0|r.words[o])+(0|n.words[o])+i,this.words[o]=67108863&t,i=t>>>26;for(;0!==i&&o<r.length;o++)t=(0|r.words[o])+i,this.words[o]=67108863&t,i=t>>>26;if(this.length=r.length,0!==i)this.words[this.length]=i,this.length++;else if(r!==this)for(;o<r.length;o++)this.words[o]=r.words[o];return this},o.prototype.add=function(e){var t;return 0!==e.negative&&0===this.negative?(e.negative=0,t=this.sub(e),e.negative^=1,t):0===e.negative&&0!==this.negative?(this.negative=0,t=e.sub(this),this.negative=1,t):this.length>e.length?this.clone().iadd(e):e.clone().iadd(this)},o.prototype.isub=function(e){if(0!==e.negative){e.negative=0;var t=this.iadd(e);return e.negative=1,t._normSign()}if(0!==this.negative)return this.negative=0,this.iadd(e),this.negative=1,this._normSign();var r,n,i=this.cmp(e);if(0===i)return this.negative=0,this.length=1,this.words[0]=0,this;i>0?(r=this,n=e):(r=e,n=this);for(var o=0,s=0;s<n.length;s++)o=(t=(0|r.words[s])-(0|n.words[s])+o)>>26,this.words[s]=67108863&t;for(;0!==o&&s<r.length;s++)o=(t=(0|r.words[s])+o)>>26,this.words[s]=67108863&t;if(0===o&&s<r.length&&r!==this)for(;s<r.length;s++)this.words[s]=r.words[s];return this.length=Math.max(this.length,s),r!==this&&(this.negative=1),this.strip()},o.prototype.sub=function(e){return this.clone().isub(e)};var p=function(e,t,r){var n,i,o,s=e.words,a=t.words,u=r.words,c=0,f=0|s[0],l=8191&f,d=f>>>13,h=0|s[1],p=8191&h,y=h>>>13,b=0|s[2],m=8191&b,g=b>>>13,v=0|s[3],w=8191&v,E=v>>>13,_=0|s[4],S=8191&_,T=_>>>13,B=0|s[5],A=8191&B,x=B>>>13,P=0|s[6],M=8191&P,C=P>>>13,O=0|s[7],k=8191&O,R=O>>>13,L=0|s[8],I=8191&L,N=L>>>13,U=0|s[9],j=8191&U,H=U>>>13,D=0|a[0],q=8191&D,K=D>>>13,z=0|a[1],F=8191&z,V=z>>>13,W=0|a[2],Y=8191&W,$=W>>>13,J=0|a[3],G=8191&J,Z=J>>>13,X=0|a[4],Q=8191&X,ee=X>>>13,te=0|a[5],re=8191&te,ne=te>>>13,ie=0|a[6],oe=8191&ie,se=ie>>>13,ae=0|a[7],ue=8191&ae,ce=ae>>>13,fe=0|a[8],le=8191&fe,de=fe>>>13,he=0|a[9],pe=8191&he,ye=he>>>13;r.negative=e.negative^t.negative,r.length=19;var be=(c+(n=Math.imul(l,q))|0)+((8191&(i=(i=Math.imul(l,K))+Math.imul(d,q)|0))<<13)|0;c=((o=Math.imul(d,K))+(i>>>13)|0)+(be>>>26)|0,be&=67108863,n=Math.imul(p,q),i=(i=Math.imul(p,K))+Math.imul(y,q)|0,o=Math.imul(y,K);var me=(c+(n=n+Math.imul(l,F)|0)|0)+((8191&(i=(i=i+Math.imul(l,V)|0)+Math.imul(d,F)|0))<<13)|0;c=((o=o+Math.imul(d,V)|0)+(i>>>13)|0)+(me>>>26)|0,me&=67108863,n=Math.imul(m,q),i=(i=Math.imul(m,K))+Math.imul(g,q)|0,o=Math.imul(g,K),n=n+Math.imul(p,F)|0,i=(i=i+Math.imul(p,V)|0)+Math.imul(y,F)|0,o=o+Math.imul(y,V)|0;var ge=(c+(n=n+Math.imul(l,Y)|0)|0)+((8191&(i=(i=i+Math.imul(l,$)|0)+Math.imul(d,Y)|0))<<13)|0;c=((o=o+Math.imul(d,$)|0)+(i>>>13)|0)+(ge>>>26)|0,ge&=67108863,n=Math.imul(w,q),i=(i=Math.imul(w,K))+Math.imul(E,q)|0,o=Math.imul(E,K),n=n+Math.imul(m,F)|0,i=(i=i+Math.imul(m,V)|0)+Math.imul(g,F)|0,o=o+Math.imul(g,V)|0,n=n+Math.imul(p,Y)|0,i=(i=i+Math.imul(p,$)|0)+Math.imul(y,Y)|0,o=o+Math.imul(y,$)|0;var ve=(c+(n=n+Math.imul(l,G)|0)|0)+((8191&(i=(i=i+Math.imul(l,Z)|0)+Math.imul(d,G)|0))<<13)|0;c=((o=o+Math.imul(d,Z)|0)+(i>>>13)|0)+(ve>>>26)|0,ve&=67108863,n=Math.imul(S,q),i=(i=Math.imul(S,K))+Math.imul(T,q)|0,o=Math.imul(T,K),n=n+Math.imul(w,F)|0,i=(i=i+Math.imul(w,V)|0)+Math.imul(E,F)|0,o=o+Math.imul(E,V)|0,n=n+Math.imul(m,Y)|0,i=(i=i+Math.imul(m,$)|0)+Math.imul(g,Y)|0,o=o+Math.imul(g,$)|0,n=n+Math.imul(p,G)|0,i=(i=i+Math.imul(p,Z)|0)+Math.imul(y,G)|0,o=o+Math.imul(y,Z)|0;var we=(c+(n=n+Math.imul(l,Q)|0)|0)+((8191&(i=(i=i+Math.imul(l,ee)|0)+Math.imul(d,Q)|0))<<13)|0;c=((o=o+Math.imul(d,ee)|0)+(i>>>13)|0)+(we>>>26)|0,we&=67108863,n=Math.imul(A,q),i=(i=Math.imul(A,K))+Math.imul(x,q)|0,o=Math.imul(x,K),n=n+Math.imul(S,F)|0,i=(i=i+Math.imul(S,V)|0)+Math.imul(T,F)|0,o=o+Math.imul(T,V)|0,n=n+Math.imul(w,Y)|0,i=(i=i+Math.imul(w,$)|0)+Math.imul(E,Y)|0,o=o+Math.imul(E,$)|0,n=n+Math.imul(m,G)|0,i=(i=i+Math.imul(m,Z)|0)+Math.imul(g,G)|0,o=o+Math.imul(g,Z)|0,n=n+Math.imul(p,Q)|0,i=(i=i+Math.imul(p,ee)|0)+Math.imul(y,Q)|0,o=o+Math.imul(y,ee)|0;var Ee=(c+(n=n+Math.imul(l,re)|0)|0)+((8191&(i=(i=i+Math.imul(l,ne)|0)+Math.imul(d,re)|0))<<13)|0;c=((o=o+Math.imul(d,ne)|0)+(i>>>13)|0)+(Ee>>>26)|0,Ee&=67108863,n=Math.imul(M,q),i=(i=Math.imul(M,K))+Math.imul(C,q)|0,o=Math.imul(C,K),n=n+Math.imul(A,F)|0,i=(i=i+Math.imul(A,V)|0)+Math.imul(x,F)|0,o=o+Math.imul(x,V)|0,n=n+Math.imul(S,Y)|0,i=(i=i+Math.imul(S,$)|0)+Math.imul(T,Y)|0,o=o+Math.imul(T,$)|0,n=n+Math.imul(w,G)|0,i=(i=i+Math.imul(w,Z)|0)+Math.imul(E,G)|0,o=o+Math.imul(E,Z)|0,n=n+Math.imul(m,Q)|0,i=(i=i+Math.imul(m,ee)|0)+Math.imul(g,Q)|0,o=o+Math.imul(g,ee)|0,n=n+Math.imul(p,re)|0,i=(i=i+Math.imul(p,ne)|0)+Math.imul(y,re)|0,o=o+Math.imul(y,ne)|0;var _e=(c+(n=n+Math.imul(l,oe)|0)|0)+((8191&(i=(i=i+Math.imul(l,se)|0)+Math.imul(d,oe)|0))<<13)|0;c=((o=o+Math.imul(d,se)|0)+(i>>>13)|0)+(_e>>>26)|0,_e&=67108863,n=Math.imul(k,q),i=(i=Math.imul(k,K))+Math.imul(R,q)|0,o=Math.imul(R,K),n=n+Math.imul(M,F)|0,i=(i=i+Math.imul(M,V)|0)+Math.imul(C,F)|0,o=o+Math.imul(C,V)|0,n=n+Math.imul(A,Y)|0,i=(i=i+Math.imul(A,$)|0)+Math.imul(x,Y)|0,o=o+Math.imul(x,$)|0,n=n+Math.imul(S,G)|0,i=(i=i+Math.imul(S,Z)|0)+Math.imul(T,G)|0,o=o+Math.imul(T,Z)|0,n=n+Math.imul(w,Q)|0,i=(i=i+Math.imul(w,ee)|0)+Math.imul(E,Q)|0,o=o+Math.imul(E,ee)|0,n=n+Math.imul(m,re)|0,i=(i=i+Math.imul(m,ne)|0)+Math.imul(g,re)|0,o=o+Math.imul(g,ne)|0,n=n+Math.imul(p,oe)|0,i=(i=i+Math.imul(p,se)|0)+Math.imul(y,oe)|0,o=o+Math.imul(y,se)|0;var Se=(c+(n=n+Math.imul(l,ue)|0)|0)+((8191&(i=(i=i+Math.imul(l,ce)|0)+Math.imul(d,ue)|0))<<13)|0;c=((o=o+Math.imul(d,ce)|0)+(i>>>13)|0)+(Se>>>26)|0,Se&=67108863,n=Math.imul(I,q),i=(i=Math.imul(I,K))+Math.imul(N,q)|0,o=Math.imul(N,K),n=n+Math.imul(k,F)|0,i=(i=i+Math.imul(k,V)|0)+Math.imul(R,F)|0,o=o+Math.imul(R,V)|0,n=n+Math.imul(M,Y)|0,i=(i=i+Math.imul(M,$)|0)+Math.imul(C,Y)|0,o=o+Math.imul(C,$)|0,n=n+Math.imul(A,G)|0,i=(i=i+Math.imul(A,Z)|0)+Math.imul(x,G)|0,o=o+Math.imul(x,Z)|0,n=n+Math.imul(S,Q)|0,i=(i=i+Math.imul(S,ee)|0)+Math.imul(T,Q)|0,o=o+Math.imul(T,ee)|0,n=n+Math.imul(w,re)|0,i=(i=i+Math.imul(w,ne)|0)+Math.imul(E,re)|0,o=o+Math.imul(E,ne)|0,n=n+Math.imul(m,oe)|0,i=(i=i+Math.imul(m,se)|0)+Math.imul(g,oe)|0,o=o+Math.imul(g,se)|0,n=n+Math.imul(p,ue)|0,i=(i=i+Math.imul(p,ce)|0)+Math.imul(y,ue)|0,o=o+Math.imul(y,ce)|0;var Te=(c+(n=n+Math.imul(l,le)|0)|0)+((8191&(i=(i=i+Math.imul(l,de)|0)+Math.imul(d,le)|0))<<13)|0;c=((o=o+Math.imul(d,de)|0)+(i>>>13)|0)+(Te>>>26)|0,Te&=67108863,n=Math.imul(j,q),i=(i=Math.imul(j,K))+Math.imul(H,q)|0,o=Math.imul(H,K),n=n+Math.imul(I,F)|0,i=(i=i+Math.imul(I,V)|0)+Math.imul(N,F)|0,o=o+Math.imul(N,V)|0,n=n+Math.imul(k,Y)|0,i=(i=i+Math.imul(k,$)|0)+Math.imul(R,Y)|0,o=o+Math.imul(R,$)|0,n=n+Math.imul(M,G)|0,i=(i=i+Math.imul(M,Z)|0)+Math.imul(C,G)|0,o=o+Math.imul(C,Z)|0,n=n+Math.imul(A,Q)|0,i=(i=i+Math.imul(A,ee)|0)+Math.imul(x,Q)|0,o=o+Math.imul(x,ee)|0,n=n+Math.imul(S,re)|0,i=(i=i+Math.imul(S,ne)|0)+Math.imul(T,re)|0,o=o+Math.imul(T,ne)|0,n=n+Math.imul(w,oe)|0,i=(i=i+Math.imul(w,se)|0)+Math.imul(E,oe)|0,o=o+Math.imul(E,se)|0,n=n+Math.imul(m,ue)|0,i=(i=i+Math.imul(m,ce)|0)+Math.imul(g,ue)|0,o=o+Math.imul(g,ce)|0,n=n+Math.imul(p,le)|0,i=(i=i+Math.imul(p,de)|0)+Math.imul(y,le)|0,o=o+Math.imul(y,de)|0;var Be=(c+(n=n+Math.imul(l,pe)|0)|0)+((8191&(i=(i=i+Math.imul(l,ye)|0)+Math.imul(d,pe)|0))<<13)|0;c=((o=o+Math.imul(d,ye)|0)+(i>>>13)|0)+(Be>>>26)|0,Be&=67108863,n=Math.imul(j,F),i=(i=Math.imul(j,V))+Math.imul(H,F)|0,o=Math.imul(H,V),n=n+Math.imul(I,Y)|0,i=(i=i+Math.imul(I,$)|0)+Math.imul(N,Y)|0,o=o+Math.imul(N,$)|0,n=n+Math.imul(k,G)|0,i=(i=i+Math.imul(k,Z)|0)+Math.imul(R,G)|0,o=o+Math.imul(R,Z)|0,n=n+Math.imul(M,Q)|0,i=(i=i+Math.imul(M,ee)|0)+Math.imul(C,Q)|0,o=o+Math.imul(C,ee)|0,n=n+Math.imul(A,re)|0,i=(i=i+Math.imul(A,ne)|0)+Math.imul(x,re)|0,o=o+Math.imul(x,ne)|0,n=n+Math.imul(S,oe)|0,i=(i=i+Math.imul(S,se)|0)+Math.imul(T,oe)|0,o=o+Math.imul(T,se)|0,n=n+Math.imul(w,ue)|0,i=(i=i+Math.imul(w,ce)|0)+Math.imul(E,ue)|0,o=o+Math.imul(E,ce)|0,n=n+Math.imul(m,le)|0,i=(i=i+Math.imul(m,de)|0)+Math.imul(g,le)|0,o=o+Math.imul(g,de)|0;var Ae=(c+(n=n+Math.imul(p,pe)|0)|0)+((8191&(i=(i=i+Math.imul(p,ye)|0)+Math.imul(y,pe)|0))<<13)|0;c=((o=o+Math.imul(y,ye)|0)+(i>>>13)|0)+(Ae>>>26)|0,Ae&=67108863,n=Math.imul(j,Y),i=(i=Math.imul(j,$))+Math.imul(H,Y)|0,o=Math.imul(H,$),n=n+Math.imul(I,G)|0,i=(i=i+Math.imul(I,Z)|0)+Math.imul(N,G)|0,o=o+Math.imul(N,Z)|0,n=n+Math.imul(k,Q)|0,i=(i=i+Math.imul(k,ee)|0)+Math.imul(R,Q)|0,o=o+Math.imul(R,ee)|0,n=n+Math.imul(M,re)|0,i=(i=i+Math.imul(M,ne)|0)+Math.imul(C,re)|0,o=o+Math.imul(C,ne)|0,n=n+Math.imul(A,oe)|0,i=(i=i+Math.imul(A,se)|0)+Math.imul(x,oe)|0,o=o+Math.imul(x,se)|0,n=n+Math.imul(S,ue)|0,i=(i=i+Math.imul(S,ce)|0)+Math.imul(T,ue)|0,o=o+Math.imul(T,ce)|0,n=n+Math.imul(w,le)|0,i=(i=i+Math.imul(w,de)|0)+Math.imul(E,le)|0,o=o+Math.imul(E,de)|0;var xe=(c+(n=n+Math.imul(m,pe)|0)|0)+((8191&(i=(i=i+Math.imul(m,ye)|0)+Math.imul(g,pe)|0))<<13)|0;c=((o=o+Math.imul(g,ye)|0)+(i>>>13)|0)+(xe>>>26)|0,xe&=67108863,n=Math.imul(j,G),i=(i=Math.imul(j,Z))+Math.imul(H,G)|0,o=Math.imul(H,Z),n=n+Math.imul(I,Q)|0,i=(i=i+Math.imul(I,ee)|0)+Math.imul(N,Q)|0,o=o+Math.imul(N,ee)|0,n=n+Math.imul(k,re)|0,i=(i=i+Math.imul(k,ne)|0)+Math.imul(R,re)|0,o=o+Math.imul(R,ne)|0,n=n+Math.imul(M,oe)|0,i=(i=i+Math.imul(M,se)|0)+Math.imul(C,oe)|0,o=o+Math.imul(C,se)|0,n=n+Math.imul(A,ue)|0,i=(i=i+Math.imul(A,ce)|0)+Math.imul(x,ue)|0,o=o+Math.imul(x,ce)|0,n=n+Math.imul(S,le)|0,i=(i=i+Math.imul(S,de)|0)+Math.imul(T,le)|0,o=o+Math.imul(T,de)|0;var Pe=(c+(n=n+Math.imul(w,pe)|0)|0)+((8191&(i=(i=i+Math.imul(w,ye)|0)+Math.imul(E,pe)|0))<<13)|0;c=((o=o+Math.imul(E,ye)|0)+(i>>>13)|0)+(Pe>>>26)|0,Pe&=67108863,n=Math.imul(j,Q),i=(i=Math.imul(j,ee))+Math.imul(H,Q)|0,o=Math.imul(H,ee),n=n+Math.imul(I,re)|0,i=(i=i+Math.imul(I,ne)|0)+Math.imul(N,re)|0,o=o+Math.imul(N,ne)|0,n=n+Math.imul(k,oe)|0,i=(i=i+Math.imul(k,se)|0)+Math.imul(R,oe)|0,o=o+Math.imul(R,se)|0,n=n+Math.imul(M,ue)|0,i=(i=i+Math.imul(M,ce)|0)+Math.imul(C,ue)|0,o=o+Math.imul(C,ce)|0,n=n+Math.imul(A,le)|0,i=(i=i+Math.imul(A,de)|0)+Math.imul(x,le)|0,o=o+Math.imul(x,de)|0;var Me=(c+(n=n+Math.imul(S,pe)|0)|0)+((8191&(i=(i=i+Math.imul(S,ye)|0)+Math.imul(T,pe)|0))<<13)|0;c=((o=o+Math.imul(T,ye)|0)+(i>>>13)|0)+(Me>>>26)|0,Me&=67108863,n=Math.imul(j,re),i=(i=Math.imul(j,ne))+Math.imul(H,re)|0,o=Math.imul(H,ne),n=n+Math.imul(I,oe)|0,i=(i=i+Math.imul(I,se)|0)+Math.imul(N,oe)|0,o=o+Math.imul(N,se)|0,n=n+Math.imul(k,ue)|0,i=(i=i+Math.imul(k,ce)|0)+Math.imul(R,ue)|0,o=o+Math.imul(R,ce)|0,n=n+Math.imul(M,le)|0,i=(i=i+Math.imul(M,de)|0)+Math.imul(C,le)|0,o=o+Math.imul(C,de)|0;var Ce=(c+(n=n+Math.imul(A,pe)|0)|0)+((8191&(i=(i=i+Math.imul(A,ye)|0)+Math.imul(x,pe)|0))<<13)|0;c=((o=o+Math.imul(x,ye)|0)+(i>>>13)|0)+(Ce>>>26)|0,Ce&=67108863,n=Math.imul(j,oe),i=(i=Math.imul(j,se))+Math.imul(H,oe)|0,o=Math.imul(H,se),n=n+Math.imul(I,ue)|0,i=(i=i+Math.imul(I,ce)|0)+Math.imul(N,ue)|0,o=o+Math.imul(N,ce)|0,n=n+Math.imul(k,le)|0,i=(i=i+Math.imul(k,de)|0)+Math.imul(R,le)|0,o=o+Math.imul(R,de)|0;var Oe=(c+(n=n+Math.imul(M,pe)|0)|0)+((8191&(i=(i=i+Math.imul(M,ye)|0)+Math.imul(C,pe)|0))<<13)|0;c=((o=o+Math.imul(C,ye)|0)+(i>>>13)|0)+(Oe>>>26)|0,Oe&=67108863,n=Math.imul(j,ue),i=(i=Math.imul(j,ce))+Math.imul(H,ue)|0,o=Math.imul(H,ce),n=n+Math.imul(I,le)|0,i=(i=i+Math.imul(I,de)|0)+Math.imul(N,le)|0,o=o+Math.imul(N,de)|0;var ke=(c+(n=n+Math.imul(k,pe)|0)|0)+((8191&(i=(i=i+Math.imul(k,ye)|0)+Math.imul(R,pe)|0))<<13)|0;c=((o=o+Math.imul(R,ye)|0)+(i>>>13)|0)+(ke>>>26)|0,ke&=67108863,n=Math.imul(j,le),i=(i=Math.imul(j,de))+Math.imul(H,le)|0,o=Math.imul(H,de);var Re=(c+(n=n+Math.imul(I,pe)|0)|0)+((8191&(i=(i=i+Math.imul(I,ye)|0)+Math.imul(N,pe)|0))<<13)|0;c=((o=o+Math.imul(N,ye)|0)+(i>>>13)|0)+(Re>>>26)|0,Re&=67108863;var Le=(c+(n=Math.imul(j,pe))|0)+((8191&(i=(i=Math.imul(j,ye))+Math.imul(H,pe)|0))<<13)|0;return c=((o=Math.imul(H,ye))+(i>>>13)|0)+(Le>>>26)|0,Le&=67108863,u[0]=be,u[1]=me,u[2]=ge,u[3]=ve,u[4]=we,u[5]=Ee,u[6]=_e,u[7]=Se,u[8]=Te,u[9]=Be,u[10]=Ae,u[11]=xe,u[12]=Pe,u[13]=Me,u[14]=Ce,u[15]=Oe,u[16]=ke,u[17]=Re,u[18]=Le,0!==c&&(u[19]=c,r.length++),r};function y(e,t,r){return(new b).mulp(e,t,r)}function b(e,t){this.x=e,this.y=t}Math.imul||(p=h),o.prototype.mulTo=function(e,t){var r,n=this.length+e.length;return r=10===this.length&&10===e.length?p(this,e,t):n<63?h(this,e,t):n<1024?function(e,t,r){r.negative=t.negative^e.negative,r.length=e.length+t.length;for(var n=0,i=0,o=0;o<r.length-1;o++){var s=i;i=0;for(var a=67108863&n,u=Math.min(o,t.length-1),c=Math.max(0,o-e.length+1);c<=u;c++){var f=o-c,l=(0|e.words[f])*(0|t.words[c]),d=67108863&l;a=67108863&(d=d+a|0),i+=(s=(s=s+(l/67108864|0)|0)+(d>>>26)|0)>>>26,s&=67108863}r.words[o]=a,n=s,s=i}return 0!==n?r.words[o]=n:r.length--,r.strip()}(this,e,t):y(this,e,t),r},b.prototype.makeRBT=function(e){for(var t=new Array(e),r=o.prototype._countBits(e)-1,n=0;n<e;n++)t[n]=this.revBin(n,r,e);return t},b.prototype.revBin=function(e,t,r){if(0===e||e===r-1)return e;for(var n=0,i=0;i<t;i++)n|=(1&e)<<t-i-1,e>>=1;return n},b.prototype.permute=function(e,t,r,n,i,o){for(var s=0;s<o;s++)n[s]=t[e[s]],i[s]=r[e[s]]},b.prototype.transform=function(e,t,r,n,i,o){this.permute(o,e,t,r,n,i);for(var s=1;s<i;s<<=1)for(var a=s<<1,u=Math.cos(2*Math.PI/a),c=Math.sin(2*Math.PI/a),f=0;f<i;f+=a)for(var l=u,d=c,h=0;h<s;h++){var p=r[f+h],y=n[f+h],b=r[f+h+s],m=n[f+h+s],g=l*b-d*m;m=l*m+d*b,b=g,r[f+h]=p+b,n[f+h]=y+m,r[f+h+s]=p-b,n[f+h+s]=y-m,h!==a&&(g=u*l-c*d,d=u*d+c*l,l=g)}},b.prototype.guessLen13b=function(e,t){var r=1|Math.max(t,e),n=1&r,i=0;for(r=r/2|0;r;r>>>=1)i++;return 1<<i+1+n},b.prototype.conjugate=function(e,t,r){if(!(r<=1))for(var n=0;n<r/2;n++){var i=e[n];e[n]=e[r-n-1],e[r-n-1]=i,i=t[n],t[n]=-t[r-n-1],t[r-n-1]=-i}},b.prototype.normalize13b=function(e,t){for(var r=0,n=0;n<t/2;n++){var i=8192*Math.round(e[2*n+1]/t)+Math.round(e[2*n]/t)+r;e[n]=67108863&i,r=i<67108864?0:i/67108864|0}return e},b.prototype.convert13b=function(e,t,r,i){for(var o=0,s=0;s<t;s++)o+=0|e[s],r[2*s]=8191&o,o>>>=13,r[2*s+1]=8191&o,o>>>=13;for(s=2*t;s<i;++s)r[s]=0;n(0===o),n(0==(-8192&o))},b.prototype.stub=function(e){for(var t=new Array(e),r=0;r<e;r++)t[r]=0;return t},b.prototype.mulp=function(e,t,r){var n=2*this.guessLen13b(e.length,t.length),i=this.makeRBT(n),o=this.stub(n),s=new Array(n),a=new Array(n),u=new Array(n),c=new Array(n),f=new Array(n),l=new Array(n),d=r.words;d.length=n,this.convert13b(e.words,e.length,s,n),this.convert13b(t.words,t.length,c,n),this.transform(s,o,a,u,n,i),this.transform(c,o,f,l,n,i);for(var h=0;h<n;h++){var p=a[h]*f[h]-u[h]*l[h];u[h]=a[h]*l[h]+u[h]*f[h],a[h]=p}return this.conjugate(a,u,n),this.transform(a,u,d,o,n,i),this.conjugate(d,o,n),this.normalize13b(d,n),r.negative=e.negative^t.negative,r.length=e.length+t.length,r.strip()},o.prototype.mul=function(e){var t=new o(null);return t.words=new Array(this.length+e.length),this.mulTo(e,t)},o.prototype.mulf=function(e){var t=new o(null);return t.words=new Array(this.length+e.length),y(this,e,t)},o.prototype.imul=function(e){return this.clone().mulTo(e,this)},o.prototype.imuln=function(e){n(\"number\"==typeof e),n(e<67108864);for(var t=0,r=0;r<this.length;r++){var i=(0|this.words[r])*e,o=(67108863&i)+(67108863&t);t>>=26,t+=i/67108864|0,t+=o>>>26,this.words[r]=67108863&o}return 0!==t&&(this.words[r]=t,this.length++),this},o.prototype.muln=function(e){return this.clone().imuln(e)},o.prototype.sqr=function(){return this.mul(this)},o.prototype.isqr=function(){return this.imul(this.clone())},o.prototype.pow=function(e){var t=function(e){for(var t=new Array(e.bitLength()),r=0;r<t.length;r++){var n=r/26|0,i=r%26;t[r]=(e.words[n]&1<<i)>>>i}return t}(e);if(0===t.length)return new o(1);for(var r=this,n=0;n<t.length&&0===t[n];n++,r=r.sqr());if(++n<t.length)for(var i=r.sqr();n<t.length;n++,i=i.sqr())0!==t[n]&&(r=r.mul(i));return r},o.prototype.iushln=function(e){n(\"number\"==typeof e&&e>=0);var t,r=e%26,i=(e-r)/26,o=67108863>>>26-r<<26-r;if(0!==r){var s=0;for(t=0;t<this.length;t++){var a=this.words[t]&o,u=(0|this.words[t])-a<<r;this.words[t]=u|s,s=a>>>26-r}s&&(this.words[t]=s,this.length++)}if(0!==i){for(t=this.length-1;t>=0;t--)this.words[t+i]=this.words[t];for(t=0;t<i;t++)this.words[t]=0;this.length+=i}return this.strip()},o.prototype.ishln=function(e){return n(0===this.negative),this.iushln(e)},o.prototype.iushrn=function(e,t,r){var i;n(\"number\"==typeof e&&e>=0),i=t?(t-t%26)/26:0;var o=e%26,s=Math.min((e-o)/26,this.length),a=67108863^67108863>>>o<<o,u=r;if(i-=s,i=Math.max(0,i),u){for(var c=0;c<s;c++)u.words[c]=this.words[c];u.length=s}if(0===s);else if(this.length>s)for(this.length-=s,c=0;c<this.length;c++)this.words[c]=this.words[c+s];else this.words[0]=0,this.length=1;var f=0;for(c=this.length-1;c>=0&&(0!==f||c>=i);c--){var l=0|this.words[c];this.words[c]=f<<26-o|l>>>o,f=l&a}return u&&0!==f&&(u.words[u.length++]=f),0===this.length&&(this.words[0]=0,this.length=1),this.strip()},o.prototype.ishrn=function(e,t,r){return n(0===this.negative),this.iushrn(e,t,r)},o.prototype.shln=function(e){return this.clone().ishln(e)},o.prototype.ushln=function(e){return this.clone().iushln(e)},o.prototype.shrn=function(e){return this.clone().ishrn(e)},o.prototype.ushrn=function(e){return this.clone().iushrn(e)},o.prototype.testn=function(e){n(\"number\"==typeof e&&e>=0);var t=e%26,r=(e-t)/26,i=1<<t;return!(this.length<=r||!(this.words[r]&i))},o.prototype.imaskn=function(e){n(\"number\"==typeof e&&e>=0);var t=e%26,r=(e-t)/26;if(n(0===this.negative,\"imaskn works only with positive numbers\"),this.length<=r)return this;if(0!==t&&r++,this.length=Math.min(r,this.length),0!==t){var i=67108863^67108863>>>t<<t;this.words[this.length-1]&=i}return this.strip()},o.prototype.maskn=function(e){return this.clone().imaskn(e)},o.prototype.iaddn=function(e){return n(\"number\"==typeof e),n(e<67108864),e<0?this.isubn(-e):0!==this.negative?1===this.length&&(0|this.words[0])<e?(this.words[0]=e-(0|this.words[0]),this.negative=0,this):(this.negative=0,this.isubn(e),this.negative=1,this):this._iaddn(e)},o.prototype._iaddn=function(e){this.words[0]+=e;for(var t=0;t<this.length&&this.words[t]>=67108864;t++)this.words[t]-=67108864,t===this.length-1?this.words[t+1]=1:this.words[t+1]++;return this.length=Math.max(this.length,t+1),this},o.prototype.isubn=function(e){if(n(\"number\"==typeof e),n(e<67108864),e<0)return this.iaddn(-e);if(0!==this.negative)return this.negative=0,this.iaddn(e),this.negative=1,this;if(this.words[0]-=e,1===this.length&&this.words[0]<0)this.words[0]=-this.words[0],this.negative=1;else for(var t=0;t<this.length&&this.words[t]<0;t++)this.words[t]+=67108864,this.words[t+1]-=1;return this.strip()},o.prototype.addn=function(e){return this.clone().iaddn(e)},o.prototype.subn=function(e){return this.clone().isubn(e)},o.prototype.iabs=function(){return this.negative=0,this},o.prototype.abs=function(){return this.clone().iabs()},o.prototype._ishlnsubmul=function(e,t,r){var i,o,s=e.length+r;this._expand(s);var a=0;for(i=0;i<e.length;i++){o=(0|this.words[i+r])+a;var u=(0|e.words[i])*t;a=((o-=67108863&u)>>26)-(u/67108864|0),this.words[i+r]=67108863&o}for(;i<this.length-r;i++)a=(o=(0|this.words[i+r])+a)>>26,this.words[i+r]=67108863&o;if(0===a)return this.strip();for(n(-1===a),a=0,i=0;i<this.length;i++)a=(o=-(0|this.words[i])+a)>>26,this.words[i]=67108863&o;return this.negative=1,this.strip()},o.prototype._wordDiv=function(e,t){var r=(this.length,e.length),n=this.clone(),i=e,s=0|i.words[i.length-1];0!=(r=26-this._countBits(s))&&(i=i.ushln(r),n.iushln(r),s=0|i.words[i.length-1]);var a,u=n.length-i.length;if(\"mod\"!==t){(a=new o(null)).length=u+1,a.words=new Array(a.length);for(var c=0;c<a.length;c++)a.words[c]=0}var f=n.clone()._ishlnsubmul(i,1,u);0===f.negative&&(n=f,a&&(a.words[u]=1));for(var l=u-1;l>=0;l--){var d=67108864*(0|n.words[i.length+l])+(0|n.words[i.length+l-1]);for(d=Math.min(d/s|0,67108863),n._ishlnsubmul(i,d,l);0!==n.negative;)d--,n.negative=0,n._ishlnsubmul(i,1,l),n.isZero()||(n.negative^=1);a&&(a.words[l]=d)}return a&&a.strip(),n.strip(),\"div\"!==t&&0!==r&&n.iushrn(r),{div:a||null,mod:n}},o.prototype.divmod=function(e,t,r){return n(!e.isZero()),this.isZero()?{div:new o(0),mod:new o(0)}:0!==this.negative&&0===e.negative?(a=this.neg().divmod(e,t),\"mod\"!==t&&(i=a.div.neg()),\"div\"!==t&&(s=a.mod.neg(),r&&0!==s.negative&&s.iadd(e)),{div:i,mod:s}):0===this.negative&&0!==e.negative?(a=this.divmod(e.neg(),t),\"mod\"!==t&&(i=a.div.neg()),{div:i,mod:a.mod}):0!=(this.negative&e.negative)?(a=this.neg().divmod(e.neg(),t),\"div\"!==t&&(s=a.mod.neg(),r&&0!==s.negative&&s.isub(e)),{div:a.div,mod:s}):e.length>this.length||this.cmp(e)<0?{div:new o(0),mod:this}:1===e.length?\"div\"===t?{div:this.divn(e.words[0]),mod:null}:\"mod\"===t?{div:null,mod:new o(this.modn(e.words[0]))}:{div:this.divn(e.words[0]),mod:new o(this.modn(e.words[0]))}:this._wordDiv(e,t);var i,s,a},o.prototype.div=function(e){return this.divmod(e,\"div\",!1).div},o.prototype.mod=function(e){return this.divmod(e,\"mod\",!1).mod},o.prototype.umod=function(e){return this.divmod(e,\"mod\",!0).mod},o.prototype.divRound=function(e){var t=this.divmod(e);if(t.mod.isZero())return t.div;var r=0!==t.div.negative?t.mod.isub(e):t.mod,n=e.ushrn(1),i=e.andln(1),o=r.cmp(n);return o<0||1===i&&0===o?t.div:0!==t.div.negative?t.div.isubn(1):t.div.iaddn(1)},o.prototype.modn=function(e){n(e<=67108863);for(var t=(1<<26)%e,r=0,i=this.length-1;i>=0;i--)r=(t*r+(0|this.words[i]))%e;return r},o.prototype.idivn=function(e){n(e<=67108863);for(var t=0,r=this.length-1;r>=0;r--){var i=(0|this.words[r])+67108864*t;this.words[r]=i/e|0,t=i%e}return this.strip()},o.prototype.divn=function(e){return this.clone().idivn(e)},o.prototype.egcd=function(e){n(0===e.negative),n(!e.isZero());var t=this,r=e.clone();t=0!==t.negative?t.umod(e):t.clone();for(var i=new o(1),s=new o(0),a=new o(0),u=new o(1),c=0;t.isEven()&&r.isEven();)t.iushrn(1),r.iushrn(1),++c;for(var f=r.clone(),l=t.clone();!t.isZero();){for(var d=0,h=1;0==(t.words[0]&h)&&d<26;++d,h<<=1);if(d>0)for(t.iushrn(d);d-- >0;)(i.isOdd()||s.isOdd())&&(i.iadd(f),s.isub(l)),i.iushrn(1),s.iushrn(1);for(var p=0,y=1;0==(r.words[0]&y)&&p<26;++p,y<<=1);if(p>0)for(r.iushrn(p);p-- >0;)(a.isOdd()||u.isOdd())&&(a.iadd(f),u.isub(l)),a.iushrn(1),u.iushrn(1);t.cmp(r)>=0?(t.isub(r),i.isub(a),s.isub(u)):(r.isub(t),a.isub(i),u.isub(s))}return{a,b:u,gcd:r.iushln(c)}},o.prototype._invmp=function(e){n(0===e.negative),n(!e.isZero());var t=this,r=e.clone();t=0!==t.negative?t.umod(e):t.clone();for(var i,s=new o(1),a=new o(0),u=r.clone();t.cmpn(1)>0&&r.cmpn(1)>0;){for(var c=0,f=1;0==(t.words[0]&f)&&c<26;++c,f<<=1);if(c>0)for(t.iushrn(c);c-- >0;)s.isOdd()&&s.iadd(u),s.iushrn(1);for(var l=0,d=1;0==(r.words[0]&d)&&l<26;++l,d<<=1);if(l>0)for(r.iushrn(l);l-- >0;)a.isOdd()&&a.iadd(u),a.iushrn(1);t.cmp(r)>=0?(t.isub(r),s.isub(a)):(r.isub(t),a.isub(s))}return(i=0===t.cmpn(1)?s:a).cmpn(0)<0&&i.iadd(e),i},o.prototype.gcd=function(e){if(this.isZero())return e.abs();if(e.isZero())return this.abs();var t=this.clone(),r=e.clone();t.negative=0,r.negative=0;for(var n=0;t.isEven()&&r.isEven();n++)t.iushrn(1),r.iushrn(1);for(;;){for(;t.isEven();)t.iushrn(1);for(;r.isEven();)r.iushrn(1);var i=t.cmp(r);if(i<0){var o=t;t=r,r=o}else if(0===i||0===r.cmpn(1))break;t.isub(r)}return r.iushln(n)},o.prototype.invm=function(e){return this.egcd(e).a.umod(e)},o.prototype.isEven=function(){return 0==(1&this.words[0])},o.prototype.isOdd=function(){return 1==(1&this.words[0])},o.prototype.andln=function(e){return this.words[0]&e},o.prototype.bincn=function(e){n(\"number\"==typeof e);var t=e%26,r=(e-t)/26,i=1<<t;if(this.length<=r)return this._expand(r+1),this.words[r]|=i,this;for(var o=i,s=r;0!==o&&s<this.length;s++){var a=0|this.words[s];o=(a+=o)>>>26,a&=67108863,this.words[s]=a}return 0!==o&&(this.words[s]=o,this.length++),this},o.prototype.isZero=function(){return 1===this.length&&0===this.words[0]},o.prototype.cmpn=function(e){var t,r=e<0;if(0!==this.negative&&!r)return-1;if(0===this.negative&&r)return 1;if(this.strip(),this.length>1)t=1;else{r&&(e=-e),n(e<=67108863,\"Number is too big\");var i=0|this.words[0];t=i===e?0:i<e?-1:1}return 0!==this.negative?0|-t:t},o.prototype.cmp=function(e){if(0!==this.negative&&0===e.negative)return-1;if(0===this.negative&&0!==e.negative)return 1;var t=this.ucmp(e);return 0!==this.negative?0|-t:t},o.prototype.ucmp=function(e){if(this.length>e.length)return 1;if(this.length<e.length)return-1;for(var t=0,r=this.length-1;r>=0;r--){var n=0|this.words[r],i=0|e.words[r];if(n!==i){n<i?t=-1:n>i&&(t=1);break}}return t},o.prototype.gtn=function(e){return 1===this.cmpn(e)},o.prototype.gt=function(e){return 1===this.cmp(e)},o.prototype.gten=function(e){return this.cmpn(e)>=0},o.prototype.gte=function(e){return this.cmp(e)>=0},o.prototype.ltn=function(e){return-1===this.cmpn(e)},o.prototype.lt=function(e){return-1===this.cmp(e)},o.prototype.lten=function(e){return this.cmpn(e)<=0},o.prototype.lte=function(e){return this.cmp(e)<=0},o.prototype.eqn=function(e){return 0===this.cmpn(e)},o.prototype.eq=function(e){return 0===this.cmp(e)},o.red=function(e){return new S(e)},o.prototype.toRed=function(e){return n(!this.red,\"Already a number in reduction context\"),n(0===this.negative,\"red works only with positives\"),e.convertTo(this)._forceRed(e)},o.prototype.fromRed=function(){return n(this.red,\"fromRed works only with numbers in reduction context\"),this.red.convertFrom(this)},o.prototype._forceRed=function(e){return this.red=e,this},o.prototype.forceRed=function(e){return n(!this.red,\"Already a number in reduction context\"),this._forceRed(e)},o.prototype.redAdd=function(e){return n(this.red,\"redAdd works only with red numbers\"),this.red.add(this,e)},o.prototype.redIAdd=function(e){return n(this.red,\"redIAdd works only with red numbers\"),this.red.iadd(this,e)},o.prototype.redSub=function(e){return n(this.red,\"redSub works only with red numbers\"),this.red.sub(this,e)},o.prototype.redISub=function(e){return n(this.red,\"redISub works only with red numbers\"),this.red.isub(this,e)},o.prototype.redShl=function(e){return n(this.red,\"redShl works only with red numbers\"),this.red.shl(this,e)},o.prototype.redMul=function(e){return n(this.red,\"redMul works only with red numbers\"),this.red._verify2(this,e),this.red.mul(this,e)},o.prototype.redIMul=function(e){return n(this.red,\"redMul works only with red numbers\"),this.red._verify2(this,e),this.red.imul(this,e)},o.prototype.redSqr=function(){return n(this.red,\"redSqr works only with red numbers\"),this.red._verify1(this),this.red.sqr(this)},o.prototype.redISqr=function(){return n(this.red,\"redISqr works only with red numbers\"),this.red._verify1(this),this.red.isqr(this)},o.prototype.redSqrt=function(){return n(this.red,\"redSqrt works only with red numbers\"),this.red._verify1(this),this.red.sqrt(this)},o.prototype.redInvm=function(){return n(this.red,\"redInvm works only with red numbers\"),this.red._verify1(this),this.red.invm(this)},o.prototype.redNeg=function(){return n(this.red,\"redNeg works only with red numbers\"),this.red._verify1(this),this.red.neg(this)},o.prototype.redPow=function(e){return n(this.red&&!e.red,\"redPow(normalNum)\"),this.red._verify1(this),this.red.pow(this,e)};var m={k256:null,p224:null,p192:null,p25519:null};function g(e,t){this.name=e,this.p=new o(t,16),this.n=this.p.bitLength(),this.k=new o(1).iushln(this.n).isub(this.p),this.tmp=this._tmp()}function v(){g.call(this,\"k256\",\"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f\")}function w(){g.call(this,\"p224\",\"ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001\")}function E(){g.call(this,\"p192\",\"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff\")}function _(){g.call(this,\"25519\",\"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed\")}function S(e){if(\"string\"==typeof e){var t=o._prime(e);this.m=t.p,this.prime=t}else n(e.gtn(1),\"modulus must be greater than 1\"),this.m=e,this.prime=null}function T(e){S.call(this,e),this.shift=this.m.bitLength(),this.shift%26!=0&&(this.shift+=26-this.shift%26),this.r=new o(1).iushln(this.shift),this.r2=this.imod(this.r.sqr()),this.rinv=this.r._invmp(this.m),this.minv=this.rinv.mul(this.r).isubn(1).div(this.m),this.minv=this.minv.umod(this.r),this.minv=this.r.sub(this.minv)}g.prototype._tmp=function(){var e=new o(null);return e.words=new Array(Math.ceil(this.n/13)),e},g.prototype.ireduce=function(e){var t,r=e;do{this.split(r,this.tmp),t=(r=(r=this.imulK(r)).iadd(this.tmp)).bitLength()}while(t>this.n);var n=t<this.n?-1:r.ucmp(this.p);return 0===n?(r.words[0]=0,r.length=1):n>0?r.isub(this.p):void 0!==r.strip?r.strip():r._strip(),r},g.prototype.split=function(e,t){e.iushrn(this.n,0,t)},g.prototype.imulK=function(e){return e.imul(this.k)},i(v,g),v.prototype.split=function(e,t){for(var r=4194303,n=Math.min(e.length,9),i=0;i<n;i++)t.words[i]=e.words[i];if(t.length=n,e.length<=9)return e.words[0]=0,void(e.length=1);var o=e.words[9];for(t.words[t.length++]=o&r,i=10;i<e.length;i++){var s=0|e.words[i];e.words[i-10]=(s&r)<<4|o>>>22,o=s}o>>>=22,e.words[i-10]=o,0===o&&e.length>10?e.length-=10:e.length-=9},v.prototype.imulK=function(e){e.words[e.length]=0,e.words[e.length+1]=0,e.length+=2;for(var t=0,r=0;r<e.length;r++){var n=0|e.words[r];t+=977*n,e.words[r]=67108863&t,t=64*n+(t/67108864|0)}return 0===e.words[e.length-1]&&(e.length--,0===e.words[e.length-1]&&e.length--),e},i(w,g),i(E,g),i(_,g),_.prototype.imulK=function(e){for(var t=0,r=0;r<e.length;r++){var n=19*(0|e.words[r])+t,i=67108863&n;n>>>=26,e.words[r]=i,t=n}return 0!==t&&(e.words[e.length++]=t),e},o._prime=function(e){if(m[e])return m[e];var t;if(\"k256\"===e)t=new v;else if(\"p224\"===e)t=new w;else if(\"p192\"===e)t=new E;else{if(\"p25519\"!==e)throw new Error(\"Unknown prime \"+e);t=new _}return m[e]=t,t},S.prototype._verify1=function(e){n(0===e.negative,\"red works only with positives\"),n(e.red,\"red works only with red numbers\")},S.prototype._verify2=function(e,t){n(0==(e.negative|t.negative),\"red works only with positives\"),n(e.red&&e.red===t.red,\"red works only with red numbers\")},S.prototype.imod=function(e){return this.prime?this.prime.ireduce(e)._forceRed(this):e.umod(this.m)._forceRed(this)},S.prototype.neg=function(e){return e.isZero()?e.clone():this.m.sub(e)._forceRed(this)},S.prototype.add=function(e,t){this._verify2(e,t);var r=e.add(t);return r.cmp(this.m)>=0&&r.isub(this.m),r._forceRed(this)},S.prototype.iadd=function(e,t){this._verify2(e,t);var r=e.iadd(t);return r.cmp(this.m)>=0&&r.isub(this.m),r},S.prototype.sub=function(e,t){this._verify2(e,t);var r=e.sub(t);return r.cmpn(0)<0&&r.iadd(this.m),r._forceRed(this)},S.prototype.isub=function(e,t){this._verify2(e,t);var r=e.isub(t);return r.cmpn(0)<0&&r.iadd(this.m),r},S.prototype.shl=function(e,t){return this._verify1(e),this.imod(e.ushln(t))},S.prototype.imul=function(e,t){return this._verify2(e,t),this.imod(e.imul(t))},S.prototype.mul=function(e,t){return this._verify2(e,t),this.imod(e.mul(t))},S.prototype.isqr=function(e){return this.imul(e,e.clone())},S.prototype.sqr=function(e){return this.mul(e,e)},S.prototype.sqrt=function(e){if(e.isZero())return e.clone();var t=this.m.andln(3);if(n(t%2==1),3===t){var r=this.m.add(new o(1)).iushrn(2);return this.pow(e,r)}for(var i=this.m.subn(1),s=0;!i.isZero()&&0===i.andln(1);)s++,i.iushrn(1);n(!i.isZero());var a=new o(1).toRed(this),u=a.redNeg(),c=this.m.subn(1).iushrn(1),f=this.m.bitLength();for(f=new o(2*f*f).toRed(this);0!==this.pow(f,c).cmp(u);)f.redIAdd(u);for(var l=this.pow(f,i),d=this.pow(e,i.addn(1).iushrn(1)),h=this.pow(e,i),p=s;0!==h.cmp(a);){for(var y=h,b=0;0!==y.cmp(a);b++)y=y.redSqr();n(b<p);var m=this.pow(l,new o(1).iushln(p-b-1));d=d.redMul(m),l=m.redSqr(),h=h.redMul(l),p=b}return d},S.prototype.invm=function(e){var t=e._invmp(this.m);return 0!==t.negative?(t.negative=0,this.imod(t).redNeg()):this.imod(t)},S.prototype.pow=function(e,t){if(t.isZero())return new o(1).toRed(this);if(0===t.cmpn(1))return e.clone();var r=new Array(16);r[0]=new o(1).toRed(this),r[1]=e;for(var n=2;n<r.length;n++)r[n]=this.mul(r[n-1],e);var i=r[0],s=0,a=0,u=t.bitLength()%26;for(0===u&&(u=26),n=t.length-1;n>=0;n--){for(var c=t.words[n],f=u-1;f>=0;f--){var l=c>>f&1;i!==r[0]&&(i=this.sqr(i)),0!==l||0!==s?(s<<=1,s|=l,(4==++a||0===n&&0===f)&&(i=this.mul(i,r[s]),a=0,s=0)):a=0}u=26}return i},S.prototype.convertTo=function(e){var t=e.umod(this.m);return t===e?t.clone():t},S.prototype.convertFrom=function(e){var t=e.clone();return t.red=null,t},o.mont=function(e){return new T(e)},i(T,S),T.prototype.convertTo=function(e){return this.imod(e.ushln(this.shift))},T.prototype.convertFrom=function(e){var t=this.imod(e.mul(this.rinv));return t.red=null,t},T.prototype.imul=function(e,t){if(e.isZero()||t.isZero())return e.words[0]=0,e.length=1,e;var r=e.imul(t),n=r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),i=r.isub(n).iushrn(this.shift),o=i;return i.cmp(this.m)>=0?o=i.isub(this.m):i.cmpn(0)<0&&(o=i.iadd(this.m)),o._forceRed(this)},T.prototype.mul=function(e,t){if(e.isZero()||t.isZero())return new o(0)._forceRed(this);var r=e.mul(t),n=r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),i=r.isub(n).iushrn(this.shift),s=i;return i.cmp(this.m)>=0?s=i.isub(this.m):i.cmpn(0)<0&&(s=i.iadd(this.m)),s._forceRed(this)},T.prototype.invm=function(e){return this.imod(e._invmp(this.m).mul(this.r2))._forceRed(this)}}(e=r.nmd(e),this)},7376:(e,t,r)=>{var n;function i(e){this.rand=e}if(e.exports=function(e){return n||(n=new i(null)),n.generate(e)},e.exports.Rand=i,i.prototype.generate=function(e){return this._rand(e)},i.prototype._rand=function(e){if(this.rand.getBytes)return this.rand.getBytes(e);for(var t=new Uint8Array(e),r=0;r<t.length;r++)t[r]=this.rand.getByte();return t},\"object\"==typeof self)self.crypto&&self.crypto.getRandomValues?i.prototype._rand=function(e){var t=new Uint8Array(e);return self.crypto.getRandomValues(t),t}:self.msCrypto&&self.msCrypto.getRandomValues?i.prototype._rand=function(e){var t=new Uint8Array(e);return self.msCrypto.getRandomValues(t),t}:\"object\"==typeof window&&(i.prototype._rand=function(){throw new Error(\"Not implemented yet\")});else try{var o=r(9214);if(\"function\"!=typeof o.randomBytes)throw new Error(\"Not supported\");i.prototype._rand=function(e){return o.randomBytes(e)}}catch(e){}},8764:(e,t,r)=>{\"use strict\";const n=r(9742),i=r(645),o=\"function\"==typeof Symbol&&\"function\"==typeof Symbol.for?Symbol.for(\"nodejs.util.inspect.custom\"):null;t.Buffer=u,t.SlowBuffer=function(e){return+e!=e&&(e=0),u.alloc(+e)},t.INSPECT_MAX_BYTES=50;const s=2147483647;function a(e){if(e>s)throw new RangeError('The value \"'+e+'\" is invalid for option \"size\"');const t=new Uint8Array(e);return Object.setPrototypeOf(t,u.prototype),t}function u(e,t,r){if(\"number\"==typeof e){if(\"string\"==typeof t)throw new TypeError('The \"string\" argument must be of type string. Received type number');return l(e)}return c(e,t,r)}function c(e,t,r){if(\"string\"==typeof e)return function(e,t){if(\"string\"==typeof t&&\"\"!==t||(t=\"utf8\"),!u.isEncoding(t))throw new TypeError(\"Unknown encoding: \"+t);const r=0|y(e,t);let n=a(r);const i=n.write(e,t);return i!==r&&(n=n.slice(0,i)),n}(e,t);if(ArrayBuffer.isView(e))return function(e){if(J(e,Uint8Array)){const t=new Uint8Array(e);return h(t.buffer,t.byteOffset,t.byteLength)}return d(e)}(e);if(null==e)throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type \"+typeof e);if(J(e,ArrayBuffer)||e&&J(e.buffer,ArrayBuffer))return h(e,t,r);if(\"undefined\"!=typeof SharedArrayBuffer&&(J(e,SharedArrayBuffer)||e&&J(e.buffer,SharedArrayBuffer)))return h(e,t,r);if(\"number\"==typeof e)throw new TypeError('The \"value\" argument must not be of type number. Received type number');const n=e.valueOf&&e.valueOf();if(null!=n&&n!==e)return u.from(n,t,r);const i=function(e){if(u.isBuffer(e)){const t=0|p(e.length),r=a(t);return 0===r.length||e.copy(r,0,0,t),r}return void 0!==e.length?\"number\"!=typeof e.length||G(e.length)?a(0):d(e):\"Buffer\"===e.type&&Array.isArray(e.data)?d(e.data):void 0}(e);if(i)return i;if(\"undefined\"!=typeof Symbol&&null!=Symbol.toPrimitive&&\"function\"==typeof e[Symbol.toPrimitive])return u.from(e[Symbol.toPrimitive](\"string\"),t,r);throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type \"+typeof e)}function f(e){if(\"number\"!=typeof e)throw new TypeError('\"size\" argument must be of type number');if(e<0)throw new RangeError('The value \"'+e+'\" is invalid for option \"size\"')}function l(e){return f(e),a(e<0?0:0|p(e))}function d(e){const t=e.length<0?0:0|p(e.length),r=a(t);for(let n=0;n<t;n+=1)r[n]=255&e[n];return r}function h(e,t,r){if(t<0||e.byteLength<t)throw new RangeError('\"offset\" is outside of buffer bounds');if(e.byteLength<t+(r||0))throw new RangeError('\"length\" is outside of buffer bounds');let n;return n=void 0===t&&void 0===r?new Uint8Array(e):void 0===r?new Uint8Array(e,t):new Uint8Array(e,t,r),Object.setPrototypeOf(n,u.prototype),n}function p(e){if(e>=s)throw new RangeError(\"Attempt to allocate Buffer larger than maximum size: 0x\"+s.toString(16)+\" bytes\");return 0|e}function y(e,t){if(u.isBuffer(e))return e.length;if(ArrayBuffer.isView(e)||J(e,ArrayBuffer))return e.byteLength;if(\"string\"!=typeof e)throw new TypeError('The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof e);const r=e.length,n=arguments.length>2&&!0===arguments[2];if(!n&&0===r)return 0;let i=!1;for(;;)switch(t){case\"ascii\":case\"latin1\":case\"binary\":return r;case\"utf8\":case\"utf-8\":return W(e).length;case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return 2*r;case\"hex\":return r>>>1;case\"base64\":return Y(e).length;default:if(i)return n?-1:W(e).length;t=(\"\"+t).toLowerCase(),i=!0}}function b(e,t,r){let n=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return\"\";if((void 0===r||r>this.length)&&(r=this.length),r<=0)return\"\";if((r>>>=0)<=(t>>>=0))return\"\";for(e||(e=\"utf8\");;)switch(e){case\"hex\":return C(this,t,r);case\"utf8\":case\"utf-8\":return A(this,t,r);case\"ascii\":return P(this,t,r);case\"latin1\":case\"binary\":return M(this,t,r);case\"base64\":return B(this,t,r);case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return O(this,t,r);default:if(n)throw new TypeError(\"Unknown encoding: \"+e);e=(e+\"\").toLowerCase(),n=!0}}function m(e,t,r){const n=e[t];e[t]=e[r],e[r]=n}function g(e,t,r,n,i){if(0===e.length)return-1;if(\"string\"==typeof r?(n=r,r=0):r>2147483647?r=2147483647:r<-2147483648&&(r=-2147483648),G(r=+r)&&(r=i?0:e.length-1),r<0&&(r=e.length+r),r>=e.length){if(i)return-1;r=e.length-1}else if(r<0){if(!i)return-1;r=0}if(\"string\"==typeof t&&(t=u.from(t,n)),u.isBuffer(t))return 0===t.length?-1:v(e,t,r,n,i);if(\"number\"==typeof t)return t&=255,\"function\"==typeof Uint8Array.prototype.indexOf?i?Uint8Array.prototype.indexOf.call(e,t,r):Uint8Array.prototype.lastIndexOf.call(e,t,r):v(e,[t],r,n,i);throw new TypeError(\"val must be string, number or Buffer\")}function v(e,t,r,n,i){let o,s=1,a=e.length,u=t.length;if(void 0!==n&&(\"ucs2\"===(n=String(n).toLowerCase())||\"ucs-2\"===n||\"utf16le\"===n||\"utf-16le\"===n)){if(e.length<2||t.length<2)return-1;s=2,a/=2,u/=2,r/=2}function c(e,t){return 1===s?e[t]:e.readUInt16BE(t*s)}if(i){let n=-1;for(o=r;o<a;o++)if(c(e,o)===c(t,-1===n?0:o-n)){if(-1===n&&(n=o),o-n+1===u)return n*s}else-1!==n&&(o-=o-n),n=-1}else for(r+u>a&&(r=a-u),o=r;o>=0;o--){let r=!0;for(let n=0;n<u;n++)if(c(e,o+n)!==c(t,n)){r=!1;break}if(r)return o}return-1}function w(e,t,r,n){r=Number(r)||0;const i=e.length-r;n?(n=Number(n))>i&&(n=i):n=i;const o=t.length;let s;for(n>o/2&&(n=o/2),s=0;s<n;++s){const n=parseInt(t.substr(2*s,2),16);if(G(n))return s;e[r+s]=n}return s}function E(e,t,r,n){return $(W(t,e.length-r),e,r,n)}function _(e,t,r,n){return $(function(e){const t=[];for(let r=0;r<e.length;++r)t.push(255&e.charCodeAt(r));return t}(t),e,r,n)}function S(e,t,r,n){return $(Y(t),e,r,n)}function T(e,t,r,n){return $(function(e,t){let r,n,i;const o=[];for(let s=0;s<e.length&&!((t-=2)<0);++s)r=e.charCodeAt(s),n=r>>8,i=r%256,o.push(i),o.push(n);return o}(t,e.length-r),e,r,n)}function B(e,t,r){return 0===t&&r===e.length?n.fromByteArray(e):n.fromByteArray(e.slice(t,r))}function A(e,t,r){r=Math.min(e.length,r);const n=[];let i=t;for(;i<r;){const t=e[i];let o=null,s=t>239?4:t>223?3:t>191?2:1;if(i+s<=r){let r,n,a,u;switch(s){case 1:t<128&&(o=t);break;case 2:r=e[i+1],128==(192&r)&&(u=(31&t)<<6|63&r,u>127&&(o=u));break;case 3:r=e[i+1],n=e[i+2],128==(192&r)&&128==(192&n)&&(u=(15&t)<<12|(63&r)<<6|63&n,u>2047&&(u<55296||u>57343)&&(o=u));break;case 4:r=e[i+1],n=e[i+2],a=e[i+3],128==(192&r)&&128==(192&n)&&128==(192&a)&&(u=(15&t)<<18|(63&r)<<12|(63&n)<<6|63&a,u>65535&&u<1114112&&(o=u))}}null===o?(o=65533,s=1):o>65535&&(o-=65536,n.push(o>>>10&1023|55296),o=56320|1023&o),n.push(o),i+=s}return function(e){const t=e.length;if(t<=x)return String.fromCharCode.apply(String,e);let r=\"\",n=0;for(;n<t;)r+=String.fromCharCode.apply(String,e.slice(n,n+=x));return r}(n)}t.kMaxLength=s,u.TYPED_ARRAY_SUPPORT=function(){try{const e=new Uint8Array(1),t={foo:function(){return 42}};return Object.setPrototypeOf(t,Uint8Array.prototype),Object.setPrototypeOf(e,t),42===e.foo()}catch(e){return!1}}(),u.TYPED_ARRAY_SUPPORT||\"undefined\"==typeof console||\"function\"!=typeof console.error||console.error(\"This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.\"),Object.defineProperty(u.prototype,\"parent\",{enumerable:!0,get:function(){if(u.isBuffer(this))return this.buffer}}),Object.defineProperty(u.prototype,\"offset\",{enumerable:!0,get:function(){if(u.isBuffer(this))return this.byteOffset}}),u.poolSize=8192,u.from=function(e,t,r){return c(e,t,r)},Object.setPrototypeOf(u.prototype,Uint8Array.prototype),Object.setPrototypeOf(u,Uint8Array),u.alloc=function(e,t,r){return function(e,t,r){return f(e),e<=0?a(e):void 0!==t?\"string\"==typeof r?a(e).fill(t,r):a(e).fill(t):a(e)}(e,t,r)},u.allocUnsafe=function(e){return l(e)},u.allocUnsafeSlow=function(e){return l(e)},u.isBuffer=function(e){return null!=e&&!0===e._isBuffer&&e!==u.prototype},u.compare=function(e,t){if(J(e,Uint8Array)&&(e=u.from(e,e.offset,e.byteLength)),J(t,Uint8Array)&&(t=u.from(t,t.offset,t.byteLength)),!u.isBuffer(e)||!u.isBuffer(t))throw new TypeError('The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array');if(e===t)return 0;let r=e.length,n=t.length;for(let i=0,o=Math.min(r,n);i<o;++i)if(e[i]!==t[i]){r=e[i],n=t[i];break}return r<n?-1:n<r?1:0},u.isEncoding=function(e){switch(String(e).toLowerCase()){case\"hex\":case\"utf8\":case\"utf-8\":case\"ascii\":case\"latin1\":case\"binary\":case\"base64\":case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return!0;default:return!1}},u.concat=function(e,t){if(!Array.isArray(e))throw new TypeError('\"list\" argument must be an Array of Buffers');if(0===e.length)return u.alloc(0);let r;if(void 0===t)for(t=0,r=0;r<e.length;++r)t+=e[r].length;const n=u.allocUnsafe(t);let i=0;for(r=0;r<e.length;++r){let t=e[r];if(J(t,Uint8Array))i+t.length>n.length?(u.isBuffer(t)||(t=u.from(t)),t.copy(n,i)):Uint8Array.prototype.set.call(n,t,i);else{if(!u.isBuffer(t))throw new TypeError('\"list\" argument must be an Array of Buffers');t.copy(n,i)}i+=t.length}return n},u.byteLength=y,u.prototype._isBuffer=!0,u.prototype.swap16=function(){const e=this.length;if(e%2!=0)throw new RangeError(\"Buffer size must be a multiple of 16-bits\");for(let t=0;t<e;t+=2)m(this,t,t+1);return this},u.prototype.swap32=function(){const e=this.length;if(e%4!=0)throw new RangeError(\"Buffer size must be a multiple of 32-bits\");for(let t=0;t<e;t+=4)m(this,t,t+3),m(this,t+1,t+2);return this},u.prototype.swap64=function(){const e=this.length;if(e%8!=0)throw new RangeError(\"Buffer size must be a multiple of 64-bits\");for(let t=0;t<e;t+=8)m(this,t,t+7),m(this,t+1,t+6),m(this,t+2,t+5),m(this,t+3,t+4);return this},u.prototype.toString=function(){const e=this.length;return 0===e?\"\":0===arguments.length?A(this,0,e):b.apply(this,arguments)},u.prototype.toLocaleString=u.prototype.toString,u.prototype.equals=function(e){if(!u.isBuffer(e))throw new TypeError(\"Argument must be a Buffer\");return this===e||0===u.compare(this,e)},u.prototype.inspect=function(){let e=\"\";const r=t.INSPECT_MAX_BYTES;return e=this.toString(\"hex\",0,r).replace(/(.{2})/g,\"$1 \").trim(),this.length>r&&(e+=\" ... \"),\"<Buffer \"+e+\">\"},o&&(u.prototype[o]=u.prototype.inspect),u.prototype.compare=function(e,t,r,n,i){if(J(e,Uint8Array)&&(e=u.from(e,e.offset,e.byteLength)),!u.isBuffer(e))throw new TypeError('The \"target\" argument must be one of type Buffer or Uint8Array. Received type '+typeof e);if(void 0===t&&(t=0),void 0===r&&(r=e?e.length:0),void 0===n&&(n=0),void 0===i&&(i=this.length),t<0||r>e.length||n<0||i>this.length)throw new RangeError(\"out of range index\");if(n>=i&&t>=r)return 0;if(n>=i)return-1;if(t>=r)return 1;if(this===e)return 0;let o=(i>>>=0)-(n>>>=0),s=(r>>>=0)-(t>>>=0);const a=Math.min(o,s),c=this.slice(n,i),f=e.slice(t,r);for(let e=0;e<a;++e)if(c[e]!==f[e]){o=c[e],s=f[e];break}return o<s?-1:s<o?1:0},u.prototype.includes=function(e,t,r){return-1!==this.indexOf(e,t,r)},u.prototype.indexOf=function(e,t,r){return g(this,e,t,r,!0)},u.prototype.lastIndexOf=function(e,t,r){return g(this,e,t,r,!1)},u.prototype.write=function(e,t,r,n){if(void 0===t)n=\"utf8\",r=this.length,t=0;else if(void 0===r&&\"string\"==typeof t)n=t,r=this.length,t=0;else{if(!isFinite(t))throw new Error(\"Buffer.write(string, encoding, offset[, length]) is no longer supported\");t>>>=0,isFinite(r)?(r>>>=0,void 0===n&&(n=\"utf8\")):(n=r,r=void 0)}const i=this.length-t;if((void 0===r||r>i)&&(r=i),e.length>0&&(r<0||t<0)||t>this.length)throw new RangeError(\"Attempt to write outside buffer bounds\");n||(n=\"utf8\");let o=!1;for(;;)switch(n){case\"hex\":return w(this,e,t,r);case\"utf8\":case\"utf-8\":return E(this,e,t,r);case\"ascii\":case\"latin1\":case\"binary\":return _(this,e,t,r);case\"base64\":return S(this,e,t,r);case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return T(this,e,t,r);default:if(o)throw new TypeError(\"Unknown encoding: \"+n);n=(\"\"+n).toLowerCase(),o=!0}},u.prototype.toJSON=function(){return{type:\"Buffer\",data:Array.prototype.slice.call(this._arr||this,0)}};const x=4096;function P(e,t,r){let n=\"\";r=Math.min(e.length,r);for(let i=t;i<r;++i)n+=String.fromCharCode(127&e[i]);return n}function M(e,t,r){let n=\"\";r=Math.min(e.length,r);for(let i=t;i<r;++i)n+=String.fromCharCode(e[i]);return n}function C(e,t,r){const n=e.length;(!t||t<0)&&(t=0),(!r||r<0||r>n)&&(r=n);let i=\"\";for(let n=t;n<r;++n)i+=Z[e[n]];return i}function O(e,t,r){const n=e.slice(t,r);let i=\"\";for(let e=0;e<n.length-1;e+=2)i+=String.fromCharCode(n[e]+256*n[e+1]);return i}function k(e,t,r){if(e%1!=0||e<0)throw new RangeError(\"offset is not uint\");if(e+t>r)throw new RangeError(\"Trying to access beyond buffer length\")}function R(e,t,r,n,i,o){if(!u.isBuffer(e))throw new TypeError('\"buffer\" argument must be a Buffer instance');if(t>i||t<o)throw new RangeError('\"value\" argument is out of bounds');if(r+n>e.length)throw new RangeError(\"Index out of range\")}function L(e,t,r,n,i){K(t,n,i,e,r,7);let o=Number(t&BigInt(4294967295));e[r++]=o,o>>=8,e[r++]=o,o>>=8,e[r++]=o,o>>=8,e[r++]=o;let s=Number(t>>BigInt(32)&BigInt(4294967295));return e[r++]=s,s>>=8,e[r++]=s,s>>=8,e[r++]=s,s>>=8,e[r++]=s,r}function I(e,t,r,n,i){K(t,n,i,e,r,7);let o=Number(t&BigInt(4294967295));e[r+7]=o,o>>=8,e[r+6]=o,o>>=8,e[r+5]=o,o>>=8,e[r+4]=o;let s=Number(t>>BigInt(32)&BigInt(4294967295));return e[r+3]=s,s>>=8,e[r+2]=s,s>>=8,e[r+1]=s,s>>=8,e[r]=s,r+8}function N(e,t,r,n,i,o){if(r+n>e.length)throw new RangeError(\"Index out of range\");if(r<0)throw new RangeError(\"Index out of range\")}function U(e,t,r,n,o){return t=+t,r>>>=0,o||N(e,0,r,4),i.write(e,t,r,n,23,4),r+4}function j(e,t,r,n,o){return t=+t,r>>>=0,o||N(e,0,r,8),i.write(e,t,r,n,52,8),r+8}u.prototype.slice=function(e,t){const r=this.length;(e=~~e)<0?(e+=r)<0&&(e=0):e>r&&(e=r),(t=void 0===t?r:~~t)<0?(t+=r)<0&&(t=0):t>r&&(t=r),t<e&&(t=e);const n=this.subarray(e,t);return Object.setPrototypeOf(n,u.prototype),n},u.prototype.readUintLE=u.prototype.readUIntLE=function(e,t,r){e>>>=0,t>>>=0,r||k(e,t,this.length);let n=this[e],i=1,o=0;for(;++o<t&&(i*=256);)n+=this[e+o]*i;return n},u.prototype.readUintBE=u.prototype.readUIntBE=function(e,t,r){e>>>=0,t>>>=0,r||k(e,t,this.length);let n=this[e+--t],i=1;for(;t>0&&(i*=256);)n+=this[e+--t]*i;return n},u.prototype.readUint8=u.prototype.readUInt8=function(e,t){return e>>>=0,t||k(e,1,this.length),this[e]},u.prototype.readUint16LE=u.prototype.readUInt16LE=function(e,t){return e>>>=0,t||k(e,2,this.length),this[e]|this[e+1]<<8},u.prototype.readUint16BE=u.prototype.readUInt16BE=function(e,t){return e>>>=0,t||k(e,2,this.length),this[e]<<8|this[e+1]},u.prototype.readUint32LE=u.prototype.readUInt32LE=function(e,t){return e>>>=0,t||k(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},u.prototype.readUint32BE=u.prototype.readUInt32BE=function(e,t){return e>>>=0,t||k(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},u.prototype.readBigUInt64LE=X((function(e){z(e>>>=0,\"offset\");const t=this[e],r=this[e+7];void 0!==t&&void 0!==r||F(e,this.length-8);const n=t+256*this[++e]+65536*this[++e]+this[++e]*2**24,i=this[++e]+256*this[++e]+65536*this[++e]+r*2**24;return BigInt(n)+(BigInt(i)<<BigInt(32))})),u.prototype.readBigUInt64BE=X((function(e){z(e>>>=0,\"offset\");const t=this[e],r=this[e+7];void 0!==t&&void 0!==r||F(e,this.length-8);const n=t*2**24+65536*this[++e]+256*this[++e]+this[++e],i=this[++e]*2**24+65536*this[++e]+256*this[++e]+r;return(BigInt(n)<<BigInt(32))+BigInt(i)})),u.prototype.readIntLE=function(e,t,r){e>>>=0,t>>>=0,r||k(e,t,this.length);let n=this[e],i=1,o=0;for(;++o<t&&(i*=256);)n+=this[e+o]*i;return i*=128,n>=i&&(n-=Math.pow(2,8*t)),n},u.prototype.readIntBE=function(e,t,r){e>>>=0,t>>>=0,r||k(e,t,this.length);let n=t,i=1,o=this[e+--n];for(;n>0&&(i*=256);)o+=this[e+--n]*i;return i*=128,o>=i&&(o-=Math.pow(2,8*t)),o},u.prototype.readInt8=function(e,t){return e>>>=0,t||k(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},u.prototype.readInt16LE=function(e,t){e>>>=0,t||k(e,2,this.length);const r=this[e]|this[e+1]<<8;return 32768&r?4294901760|r:r},u.prototype.readInt16BE=function(e,t){e>>>=0,t||k(e,2,this.length);const r=this[e+1]|this[e]<<8;return 32768&r?4294901760|r:r},u.prototype.readInt32LE=function(e,t){return e>>>=0,t||k(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},u.prototype.readInt32BE=function(e,t){return e>>>=0,t||k(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},u.prototype.readBigInt64LE=X((function(e){z(e>>>=0,\"offset\");const t=this[e],r=this[e+7];void 0!==t&&void 0!==r||F(e,this.length-8);const n=this[e+4]+256*this[e+5]+65536*this[e+6]+(r<<24);return(BigInt(n)<<BigInt(32))+BigInt(t+256*this[++e]+65536*this[++e]+this[++e]*2**24)})),u.prototype.readBigInt64BE=X((function(e){z(e>>>=0,\"offset\");const t=this[e],r=this[e+7];void 0!==t&&void 0!==r||F(e,this.length-8);const n=(t<<24)+65536*this[++e]+256*this[++e]+this[++e];return(BigInt(n)<<BigInt(32))+BigInt(this[++e]*2**24+65536*this[++e]+256*this[++e]+r)})),u.prototype.readFloatLE=function(e,t){return e>>>=0,t||k(e,4,this.length),i.read(this,e,!0,23,4)},u.prototype.readFloatBE=function(e,t){return e>>>=0,t||k(e,4,this.length),i.read(this,e,!1,23,4)},u.prototype.readDoubleLE=function(e,t){return e>>>=0,t||k(e,8,this.length),i.read(this,e,!0,52,8)},u.prototype.readDoubleBE=function(e,t){return e>>>=0,t||k(e,8,this.length),i.read(this,e,!1,52,8)},u.prototype.writeUintLE=u.prototype.writeUIntLE=function(e,t,r,n){e=+e,t>>>=0,r>>>=0,n||R(this,e,t,r,Math.pow(2,8*r)-1,0);let i=1,o=0;for(this[t]=255&e;++o<r&&(i*=256);)this[t+o]=e/i&255;return t+r},u.prototype.writeUintBE=u.prototype.writeUIntBE=function(e,t,r,n){e=+e,t>>>=0,r>>>=0,n||R(this,e,t,r,Math.pow(2,8*r)-1,0);let i=r-1,o=1;for(this[t+i]=255&e;--i>=0&&(o*=256);)this[t+i]=e/o&255;return t+r},u.prototype.writeUint8=u.prototype.writeUInt8=function(e,t,r){return e=+e,t>>>=0,r||R(this,e,t,1,255,0),this[t]=255&e,t+1},u.prototype.writeUint16LE=u.prototype.writeUInt16LE=function(e,t,r){return e=+e,t>>>=0,r||R(this,e,t,2,65535,0),this[t]=255&e,this[t+1]=e>>>8,t+2},u.prototype.writeUint16BE=u.prototype.writeUInt16BE=function(e,t,r){return e=+e,t>>>=0,r||R(this,e,t,2,65535,0),this[t]=e>>>8,this[t+1]=255&e,t+2},u.prototype.writeUint32LE=u.prototype.writeUInt32LE=function(e,t,r){return e=+e,t>>>=0,r||R(this,e,t,4,4294967295,0),this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e,t+4},u.prototype.writeUint32BE=u.prototype.writeUInt32BE=function(e,t,r){return e=+e,t>>>=0,r||R(this,e,t,4,4294967295,0),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},u.prototype.writeBigUInt64LE=X((function(e,t=0){return L(this,e,t,BigInt(0),BigInt(\"0xffffffffffffffff\"))})),u.prototype.writeBigUInt64BE=X((function(e,t=0){return I(this,e,t,BigInt(0),BigInt(\"0xffffffffffffffff\"))})),u.prototype.writeIntLE=function(e,t,r,n){if(e=+e,t>>>=0,!n){const n=Math.pow(2,8*r-1);R(this,e,t,r,n-1,-n)}let i=0,o=1,s=0;for(this[t]=255&e;++i<r&&(o*=256);)e<0&&0===s&&0!==this[t+i-1]&&(s=1),this[t+i]=(e/o>>0)-s&255;return t+r},u.prototype.writeIntBE=function(e,t,r,n){if(e=+e,t>>>=0,!n){const n=Math.pow(2,8*r-1);R(this,e,t,r,n-1,-n)}let i=r-1,o=1,s=0;for(this[t+i]=255&e;--i>=0&&(o*=256);)e<0&&0===s&&0!==this[t+i+1]&&(s=1),this[t+i]=(e/o>>0)-s&255;return t+r},u.prototype.writeInt8=function(e,t,r){return e=+e,t>>>=0,r||R(this,e,t,1,127,-128),e<0&&(e=255+e+1),this[t]=255&e,t+1},u.prototype.writeInt16LE=function(e,t,r){return e=+e,t>>>=0,r||R(this,e,t,2,32767,-32768),this[t]=255&e,this[t+1]=e>>>8,t+2},u.prototype.writeInt16BE=function(e,t,r){return e=+e,t>>>=0,r||R(this,e,t,2,32767,-32768),this[t]=e>>>8,this[t+1]=255&e,t+2},u.prototype.writeInt32LE=function(e,t,r){return e=+e,t>>>=0,r||R(this,e,t,4,2147483647,-2147483648),this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24,t+4},u.prototype.writeInt32BE=function(e,t,r){return e=+e,t>>>=0,r||R(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},u.prototype.writeBigInt64LE=X((function(e,t=0){return L(this,e,t,-BigInt(\"0x8000000000000000\"),BigInt(\"0x7fffffffffffffff\"))})),u.prototype.writeBigInt64BE=X((function(e,t=0){return I(this,e,t,-BigInt(\"0x8000000000000000\"),BigInt(\"0x7fffffffffffffff\"))})),u.prototype.writeFloatLE=function(e,t,r){return U(this,e,t,!0,r)},u.prototype.writeFloatBE=function(e,t,r){return U(this,e,t,!1,r)},u.prototype.writeDoubleLE=function(e,t,r){return j(this,e,t,!0,r)},u.prototype.writeDoubleBE=function(e,t,r){return j(this,e,t,!1,r)},u.prototype.copy=function(e,t,r,n){if(!u.isBuffer(e))throw new TypeError(\"argument should be a Buffer\");if(r||(r=0),n||0===n||(n=this.length),t>=e.length&&(t=e.length),t||(t=0),n>0&&n<r&&(n=r),n===r)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError(\"targetStart out of bounds\");if(r<0||r>=this.length)throw new RangeError(\"Index out of range\");if(n<0)throw new RangeError(\"sourceEnd out of bounds\");n>this.length&&(n=this.length),e.length-t<n-r&&(n=e.length-t+r);const i=n-r;return this===e&&\"function\"==typeof Uint8Array.prototype.copyWithin?this.copyWithin(t,r,n):Uint8Array.prototype.set.call(e,this.subarray(r,n),t),i},u.prototype.fill=function(e,t,r,n){if(\"string\"==typeof e){if(\"string\"==typeof t?(n=t,t=0,r=this.length):\"string\"==typeof r&&(n=r,r=this.length),void 0!==n&&\"string\"!=typeof n)throw new TypeError(\"encoding must be a string\");if(\"string\"==typeof n&&!u.isEncoding(n))throw new TypeError(\"Unknown encoding: \"+n);if(1===e.length){const t=e.charCodeAt(0);(\"utf8\"===n&&t<128||\"latin1\"===n)&&(e=t)}}else\"number\"==typeof e?e&=255:\"boolean\"==typeof e&&(e=Number(e));if(t<0||this.length<t||this.length<r)throw new RangeError(\"Out of range index\");if(r<=t)return this;let i;if(t>>>=0,r=void 0===r?this.length:r>>>0,e||(e=0),\"number\"==typeof e)for(i=t;i<r;++i)this[i]=e;else{const o=u.isBuffer(e)?e:u.from(e,n),s=o.length;if(0===s)throw new TypeError('The value \"'+e+'\" is invalid for argument \"value\"');for(i=0;i<r-t;++i)this[i+t]=o[i%s]}return this};const H={};function D(e,t,r){H[e]=class extends r{constructor(){super(),Object.defineProperty(this,\"message\",{value:t.apply(this,arguments),writable:!0,configurable:!0}),this.name=`${this.name} [${e}]`,this.stack,delete this.name}get code(){return e}set code(e){Object.defineProperty(this,\"code\",{configurable:!0,enumerable:!0,value:e,writable:!0})}toString(){return`${this.name} [${e}]: ${this.message}`}}}function q(e){let t=\"\",r=e.length;const n=\"-\"===e[0]?1:0;for(;r>=n+4;r-=3)t=`_${e.slice(r-3,r)}${t}`;return`${e.slice(0,r)}${t}`}function K(e,t,r,n,i,o){if(e>r||e<t){const n=\"bigint\"==typeof t?\"n\":\"\";let i;throw i=o>3?0===t||t===BigInt(0)?`>= 0${n} and < 2${n} ** ${8*(o+1)}${n}`:`>= -(2${n} ** ${8*(o+1)-1}${n}) and < 2 ** ${8*(o+1)-1}${n}`:`>= ${t}${n} and <= ${r}${n}`,new H.ERR_OUT_OF_RANGE(\"value\",i,e)}!function(e,t,r){z(t,\"offset\"),void 0!==e[t]&&void 0!==e[t+r]||F(t,e.length-(r+1))}(n,i,o)}function z(e,t){if(\"number\"!=typeof e)throw new H.ERR_INVALID_ARG_TYPE(t,\"number\",e)}function F(e,t,r){if(Math.floor(e)!==e)throw z(e,r),new H.ERR_OUT_OF_RANGE(r||\"offset\",\"an integer\",e);if(t<0)throw new H.ERR_BUFFER_OUT_OF_BOUNDS;throw new H.ERR_OUT_OF_RANGE(r||\"offset\",`>= ${r?1:0} and <= ${t}`,e)}D(\"ERR_BUFFER_OUT_OF_BOUNDS\",(function(e){return e?`${e} is outside of buffer bounds`:\"Attempt to access memory outside buffer bounds\"}),RangeError),D(\"ERR_INVALID_ARG_TYPE\",(function(e,t){return`The \"${e}\" argument must be of type number. Received type ${typeof t}`}),TypeError),D(\"ERR_OUT_OF_RANGE\",(function(e,t,r){let n=`The value of \"${e}\" is out of range.`,i=r;return Number.isInteger(r)&&Math.abs(r)>2**32?i=q(String(r)):\"bigint\"==typeof r&&(i=String(r),(r>BigInt(2)**BigInt(32)||r<-(BigInt(2)**BigInt(32)))&&(i=q(i)),i+=\"n\"),n+=` It must be ${t}. Received ${i}`,n}),RangeError);const V=/[^+/0-9A-Za-z-_]/g;function W(e,t){let r;t=t||1/0;const n=e.length;let i=null;const o=[];for(let s=0;s<n;++s){if(r=e.charCodeAt(s),r>55295&&r<57344){if(!i){if(r>56319){(t-=3)>-1&&o.push(239,191,189);continue}if(s+1===n){(t-=3)>-1&&o.push(239,191,189);continue}i=r;continue}if(r<56320){(t-=3)>-1&&o.push(239,191,189),i=r;continue}r=65536+(i-55296<<10|r-56320)}else i&&(t-=3)>-1&&o.push(239,191,189);if(i=null,r<128){if((t-=1)<0)break;o.push(r)}else if(r<2048){if((t-=2)<0)break;o.push(r>>6|192,63&r|128)}else if(r<65536){if((t-=3)<0)break;o.push(r>>12|224,r>>6&63|128,63&r|128)}else{if(!(r<1114112))throw new Error(\"Invalid code point\");if((t-=4)<0)break;o.push(r>>18|240,r>>12&63|128,r>>6&63|128,63&r|128)}}return o}function Y(e){return n.toByteArray(function(e){if((e=(e=e.split(\"=\")[0]).trim().replace(V,\"\")).length<2)return\"\";for(;e.length%4!=0;)e+=\"=\";return e}(e))}function $(e,t,r,n){let i;for(i=0;i<n&&!(i+r>=t.length||i>=e.length);++i)t[i+r]=e[i];return i}function J(e,t){return e instanceof t||null!=e&&null!=e.constructor&&null!=e.constructor.name&&e.constructor.name===t.name}function G(e){return e!=e}const Z=function(){const e=\"0123456789abcdef\",t=new Array(256);for(let r=0;r<16;++r){const n=16*r;for(let i=0;i<16;++i)t[n+i]=e[r]+e[i]}return t}();function X(e){return\"undefined\"==typeof BigInt?Q:e}function Q(){throw new Error(\"BigInt not supported\")}},584:e=>{e.exports={100:\"Continue\",101:\"Switching Protocols\",102:\"Processing\",200:\"OK\",201:\"Created\",202:\"Accepted\",203:\"Non-Authoritative Information\",204:\"No Content\",205:\"Reset Content\",206:\"Partial Content\",207:\"Multi-Status\",208:\"Already Reported\",226:\"IM Used\",300:\"Multiple Choices\",301:\"Moved Permanently\",302:\"Found\",303:\"See Other\",304:\"Not Modified\",305:\"Use Proxy\",307:\"Temporary Redirect\",308:\"Permanent Redirect\",400:\"Bad Request\",401:\"Unauthorized\",402:\"Payment Required\",403:\"Forbidden\",404:\"Not Found\",405:\"Method Not Allowed\",406:\"Not Acceptable\",407:\"Proxy Authentication Required\",408:\"Request Timeout\",409:\"Conflict\",410:\"Gone\",411:\"Length Required\",412:\"Precondition Failed\",413:\"Payload Too Large\",414:\"URI Too Long\",415:\"Unsupported Media Type\",416:\"Range Not Satisfiable\",417:\"Expectation Failed\",418:\"I'm a teapot\",421:\"Misdirected Request\",422:\"Unprocessable Entity\",423:\"Locked\",424:\"Failed Dependency\",425:\"Unordered Collection\",426:\"Upgrade Required\",428:\"Precondition Required\",429:\"Too Many Requests\",431:\"Request Header Fields Too Large\",451:\"Unavailable For Legal Reasons\",500:\"Internal Server Error\",501:\"Not Implemented\",502:\"Bad Gateway\",503:\"Service Unavailable\",504:\"Gateway Timeout\",505:\"HTTP Version Not Supported\",506:\"Variant Also Negotiates\",507:\"Insufficient Storage\",508:\"Loop Detected\",509:\"Bandwidth Limit Exceeded\",510:\"Not Extended\",511:\"Network Authentication Required\"}},6266:(e,t,r)=>{\"use strict\";var n=t;n.version=r(8597).i8,n.utils=r(953),n.rand=r(7376),n.curve=r(8254),n.curves=r(5427),n.ec=r(7954),n.eddsa=r(5980)},4918:(e,t,r)=>{\"use strict\";var n=r(3550),i=r(953),o=i.getNAF,s=i.getJSF,a=i.assert;function u(e,t){this.type=e,this.p=new n(t.p,16),this.red=t.prime?n.red(t.prime):n.mont(this.p),this.zero=new n(0).toRed(this.red),this.one=new n(1).toRed(this.red),this.two=new n(2).toRed(this.red),this.n=t.n&&new n(t.n,16),this.g=t.g&&this.pointFromJSON(t.g,t.gRed),this._wnafT1=new Array(4),this._wnafT2=new Array(4),this._wnafT3=new Array(4),this._wnafT4=new Array(4),this._bitLength=this.n?this.n.bitLength():0;var r=this.n&&this.p.div(this.n);!r||r.cmpn(100)>0?this.redN=null:(this._maxwellTrick=!0,this.redN=this.n.toRed(this.red))}function c(e,t){this.curve=e,this.type=t,this.precomputed=null}e.exports=u,u.prototype.point=function(){throw new Error(\"Not implemented\")},u.prototype.validate=function(){throw new Error(\"Not implemented\")},u.prototype._fixedNafMul=function(e,t){a(e.precomputed);var r=e._getDoubles(),n=o(t,1,this._bitLength),i=(1<<r.step+1)-(r.step%2==0?2:1);i/=3;var s,u,c=[];for(s=0;s<n.length;s+=r.step){u=0;for(var f=s+r.step-1;f>=s;f--)u=(u<<1)+n[f];c.push(u)}for(var l=this.jpoint(null,null,null),d=this.jpoint(null,null,null),h=i;h>0;h--){for(s=0;s<c.length;s++)(u=c[s])===h?d=d.mixedAdd(r.points[s]):u===-h&&(d=d.mixedAdd(r.points[s].neg()));l=l.add(d)}return l.toP()},u.prototype._wnafMul=function(e,t){var r=4,n=e._getNAFPoints(r);r=n.wnd;for(var i=n.points,s=o(t,r,this._bitLength),u=this.jpoint(null,null,null),c=s.length-1;c>=0;c--){for(var f=0;c>=0&&0===s[c];c--)f++;if(c>=0&&f++,u=u.dblp(f),c<0)break;var l=s[c];a(0!==l),u=\"affine\"===e.type?l>0?u.mixedAdd(i[l-1>>1]):u.mixedAdd(i[-l-1>>1].neg()):l>0?u.add(i[l-1>>1]):u.add(i[-l-1>>1].neg())}return\"affine\"===e.type?u.toP():u},u.prototype._wnafMulAdd=function(e,t,r,n,i){var a,u,c,f=this._wnafT1,l=this._wnafT2,d=this._wnafT3,h=0;for(a=0;a<n;a++){var p=(c=t[a])._getNAFPoints(e);f[a]=p.wnd,l[a]=p.points}for(a=n-1;a>=1;a-=2){var y=a-1,b=a;if(1===f[y]&&1===f[b]){var m=[t[y],null,null,t[b]];0===t[y].y.cmp(t[b].y)?(m[1]=t[y].add(t[b]),m[2]=t[y].toJ().mixedAdd(t[b].neg())):0===t[y].y.cmp(t[b].y.redNeg())?(m[1]=t[y].toJ().mixedAdd(t[b]),m[2]=t[y].add(t[b].neg())):(m[1]=t[y].toJ().mixedAdd(t[b]),m[2]=t[y].toJ().mixedAdd(t[b].neg()));var g=[-3,-1,-5,-7,0,7,5,1,3],v=s(r[y],r[b]);for(h=Math.max(v[0].length,h),d[y]=new Array(h),d[b]=new Array(h),u=0;u<h;u++){var w=0|v[0][u],E=0|v[1][u];d[y][u]=g[3*(w+1)+(E+1)],d[b][u]=0,l[y]=m}}else d[y]=o(r[y],f[y],this._bitLength),d[b]=o(r[b],f[b],this._bitLength),h=Math.max(d[y].length,h),h=Math.max(d[b].length,h)}var _=this.jpoint(null,null,null),S=this._wnafT4;for(a=h;a>=0;a--){for(var T=0;a>=0;){var B=!0;for(u=0;u<n;u++)S[u]=0|d[u][a],0!==S[u]&&(B=!1);if(!B)break;T++,a--}if(a>=0&&T++,_=_.dblp(T),a<0)break;for(u=0;u<n;u++){var A=S[u];0!==A&&(A>0?c=l[u][A-1>>1]:A<0&&(c=l[u][-A-1>>1].neg()),_=\"affine\"===c.type?_.mixedAdd(c):_.add(c))}}for(a=0;a<n;a++)l[a]=null;return i?_:_.toP()},u.BasePoint=c,c.prototype.eq=function(){throw new Error(\"Not implemented\")},c.prototype.validate=function(){return this.curve.validate(this)},u.prototype.decodePoint=function(e,t){e=i.toArray(e,t);var r=this.p.byteLength();if((4===e[0]||6===e[0]||7===e[0])&&e.length-1==2*r)return 6===e[0]?a(e[e.length-1]%2==0):7===e[0]&&a(e[e.length-1]%2==1),this.point(e.slice(1,1+r),e.slice(1+r,1+2*r));if((2===e[0]||3===e[0])&&e.length-1===r)return this.pointFromX(e.slice(1,1+r),3===e[0]);throw new Error(\"Unknown point format\")},c.prototype.encodeCompressed=function(e){return this.encode(e,!0)},c.prototype._encode=function(e){var t=this.curve.p.byteLength(),r=this.getX().toArray(\"be\",t);return e?[this.getY().isEven()?2:3].concat(r):[4].concat(r,this.getY().toArray(\"be\",t))},c.prototype.encode=function(e,t){return i.encode(this._encode(t),e)},c.prototype.precompute=function(e){if(this.precomputed)return this;var t={doubles:null,naf:null,beta:null};return t.naf=this._getNAFPoints(8),t.doubles=this._getDoubles(4,e),t.beta=this._getBeta(),this.precomputed=t,this},c.prototype._hasDoubles=function(e){if(!this.precomputed)return!1;var t=this.precomputed.doubles;return!!t&&t.points.length>=Math.ceil((e.bitLength()+1)/t.step)},c.prototype._getDoubles=function(e,t){if(this.precomputed&&this.precomputed.doubles)return this.precomputed.doubles;for(var r=[this],n=this,i=0;i<t;i+=e){for(var o=0;o<e;o++)n=n.dbl();r.push(n)}return{step:e,points:r}},c.prototype._getNAFPoints=function(e){if(this.precomputed&&this.precomputed.naf)return this.precomputed.naf;for(var t=[this],r=(1<<e)-1,n=1===r?null:this.dbl(),i=1;i<r;i++)t[i]=t[i-1].add(n);return{wnd:e,points:t}},c.prototype._getBeta=function(){return null},c.prototype.dblp=function(e){for(var t=this,r=0;r<e;r++)t=t.dbl();return t}},1138:(e,t,r)=>{\"use strict\";var n=r(953),i=r(3550),o=r(5717),s=r(4918),a=n.assert;function u(e){this.twisted=1!=(0|e.a),this.mOneA=this.twisted&&-1==(0|e.a),this.extended=this.mOneA,s.call(this,\"edwards\",e),this.a=new i(e.a,16).umod(this.red.m),this.a=this.a.toRed(this.red),this.c=new i(e.c,16).toRed(this.red),this.c2=this.c.redSqr(),this.d=new i(e.d,16).toRed(this.red),this.dd=this.d.redAdd(this.d),a(!this.twisted||0===this.c.fromRed().cmpn(1)),this.oneC=1==(0|e.c)}function c(e,t,r,n,o){s.BasePoint.call(this,e,\"projective\"),null===t&&null===r&&null===n?(this.x=this.curve.zero,this.y=this.curve.one,this.z=this.curve.one,this.t=this.curve.zero,this.zOne=!0):(this.x=new i(t,16),this.y=new i(r,16),this.z=n?new i(n,16):this.curve.one,this.t=o&&new i(o,16),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.y.red||(this.y=this.y.toRed(this.curve.red)),this.z.red||(this.z=this.z.toRed(this.curve.red)),this.t&&!this.t.red&&(this.t=this.t.toRed(this.curve.red)),this.zOne=this.z===this.curve.one,this.curve.extended&&!this.t&&(this.t=this.x.redMul(this.y),this.zOne||(this.t=this.t.redMul(this.z.redInvm()))))}o(u,s),e.exports=u,u.prototype._mulA=function(e){return this.mOneA?e.redNeg():this.a.redMul(e)},u.prototype._mulC=function(e){return this.oneC?e:this.c.redMul(e)},u.prototype.jpoint=function(e,t,r,n){return this.point(e,t,r,n)},u.prototype.pointFromX=function(e,t){(e=new i(e,16)).red||(e=e.toRed(this.red));var r=e.redSqr(),n=this.c2.redSub(this.a.redMul(r)),o=this.one.redSub(this.c2.redMul(this.d).redMul(r)),s=n.redMul(o.redInvm()),a=s.redSqrt();if(0!==a.redSqr().redSub(s).cmp(this.zero))throw new Error(\"invalid point\");var u=a.fromRed().isOdd();return(t&&!u||!t&&u)&&(a=a.redNeg()),this.point(e,a)},u.prototype.pointFromY=function(e,t){(e=new i(e,16)).red||(e=e.toRed(this.red));var r=e.redSqr(),n=r.redSub(this.c2),o=r.redMul(this.d).redMul(this.c2).redSub(this.a),s=n.redMul(o.redInvm());if(0===s.cmp(this.zero)){if(t)throw new Error(\"invalid point\");return this.point(this.zero,e)}var a=s.redSqrt();if(0!==a.redSqr().redSub(s).cmp(this.zero))throw new Error(\"invalid point\");return a.fromRed().isOdd()!==t&&(a=a.redNeg()),this.point(a,e)},u.prototype.validate=function(e){if(e.isInfinity())return!0;e.normalize();var t=e.x.redSqr(),r=e.y.redSqr(),n=t.redMul(this.a).redAdd(r),i=this.c2.redMul(this.one.redAdd(this.d.redMul(t).redMul(r)));return 0===n.cmp(i)},o(c,s.BasePoint),u.prototype.pointFromJSON=function(e){return c.fromJSON(this,e)},u.prototype.point=function(e,t,r,n){return new c(this,e,t,r,n)},c.fromJSON=function(e,t){return new c(e,t[0],t[1],t[2])},c.prototype.inspect=function(){return this.isInfinity()?\"<EC Point Infinity>\":\"<EC Point x: \"+this.x.fromRed().toString(16,2)+\" y: \"+this.y.fromRed().toString(16,2)+\" z: \"+this.z.fromRed().toString(16,2)+\">\"},c.prototype.isInfinity=function(){return 0===this.x.cmpn(0)&&(0===this.y.cmp(this.z)||this.zOne&&0===this.y.cmp(this.curve.c))},c.prototype._extDbl=function(){var e=this.x.redSqr(),t=this.y.redSqr(),r=this.z.redSqr();r=r.redIAdd(r);var n=this.curve._mulA(e),i=this.x.redAdd(this.y).redSqr().redISub(e).redISub(t),o=n.redAdd(t),s=o.redSub(r),a=n.redSub(t),u=i.redMul(s),c=o.redMul(a),f=i.redMul(a),l=s.redMul(o);return this.curve.point(u,c,l,f)},c.prototype._projDbl=function(){var e,t,r,n,i,o,s=this.x.redAdd(this.y).redSqr(),a=this.x.redSqr(),u=this.y.redSqr();if(this.curve.twisted){var c=(n=this.curve._mulA(a)).redAdd(u);this.zOne?(e=s.redSub(a).redSub(u).redMul(c.redSub(this.curve.two)),t=c.redMul(n.redSub(u)),r=c.redSqr().redSub(c).redSub(c)):(i=this.z.redSqr(),o=c.redSub(i).redISub(i),e=s.redSub(a).redISub(u).redMul(o),t=c.redMul(n.redSub(u)),r=c.redMul(o))}else n=a.redAdd(u),i=this.curve._mulC(this.z).redSqr(),o=n.redSub(i).redSub(i),e=this.curve._mulC(s.redISub(n)).redMul(o),t=this.curve._mulC(n).redMul(a.redISub(u)),r=n.redMul(o);return this.curve.point(e,t,r)},c.prototype.dbl=function(){return this.isInfinity()?this:this.curve.extended?this._extDbl():this._projDbl()},c.prototype._extAdd=function(e){var t=this.y.redSub(this.x).redMul(e.y.redSub(e.x)),r=this.y.redAdd(this.x).redMul(e.y.redAdd(e.x)),n=this.t.redMul(this.curve.dd).redMul(e.t),i=this.z.redMul(e.z.redAdd(e.z)),o=r.redSub(t),s=i.redSub(n),a=i.redAdd(n),u=r.redAdd(t),c=o.redMul(s),f=a.redMul(u),l=o.redMul(u),d=s.redMul(a);return this.curve.point(c,f,d,l)},c.prototype._projAdd=function(e){var t,r,n=this.z.redMul(e.z),i=n.redSqr(),o=this.x.redMul(e.x),s=this.y.redMul(e.y),a=this.curve.d.redMul(o).redMul(s),u=i.redSub(a),c=i.redAdd(a),f=this.x.redAdd(this.y).redMul(e.x.redAdd(e.y)).redISub(o).redISub(s),l=n.redMul(u).redMul(f);return this.curve.twisted?(t=n.redMul(c).redMul(s.redSub(this.curve._mulA(o))),r=u.redMul(c)):(t=n.redMul(c).redMul(s.redSub(o)),r=this.curve._mulC(u).redMul(c)),this.curve.point(l,t,r)},c.prototype.add=function(e){return this.isInfinity()?e:e.isInfinity()?this:this.curve.extended?this._extAdd(e):this._projAdd(e)},c.prototype.mul=function(e){return this._hasDoubles(e)?this.curve._fixedNafMul(this,e):this.curve._wnafMul(this,e)},c.prototype.mulAdd=function(e,t,r){return this.curve._wnafMulAdd(1,[this,t],[e,r],2,!1)},c.prototype.jmulAdd=function(e,t,r){return this.curve._wnafMulAdd(1,[this,t],[e,r],2,!0)},c.prototype.normalize=function(){if(this.zOne)return this;var e=this.z.redInvm();return this.x=this.x.redMul(e),this.y=this.y.redMul(e),this.t&&(this.t=this.t.redMul(e)),this.z=this.curve.one,this.zOne=!0,this},c.prototype.neg=function(){return this.curve.point(this.x.redNeg(),this.y,this.z,this.t&&this.t.redNeg())},c.prototype.getX=function(){return this.normalize(),this.x.fromRed()},c.prototype.getY=function(){return this.normalize(),this.y.fromRed()},c.prototype.eq=function(e){return this===e||0===this.getX().cmp(e.getX())&&0===this.getY().cmp(e.getY())},c.prototype.eqXToP=function(e){var t=e.toRed(this.curve.red).redMul(this.z);if(0===this.x.cmp(t))return!0;for(var r=e.clone(),n=this.curve.redN.redMul(this.z);;){if(r.iadd(this.curve.n),r.cmp(this.curve.p)>=0)return!1;if(t.redIAdd(n),0===this.x.cmp(t))return!0}},c.prototype.toP=c.prototype.normalize,c.prototype.mixedAdd=c.prototype.add},8254:(e,t,r)=>{\"use strict\";var n=t;n.base=r(4918),n.short=r(6673),n.mont=r(2881),n.edwards=r(1138)},2881:(e,t,r)=>{\"use strict\";var n=r(3550),i=r(5717),o=r(4918),s=r(953);function a(e){o.call(this,\"mont\",e),this.a=new n(e.a,16).toRed(this.red),this.b=new n(e.b,16).toRed(this.red),this.i4=new n(4).toRed(this.red).redInvm(),this.two=new n(2).toRed(this.red),this.a24=this.i4.redMul(this.a.redAdd(this.two))}function u(e,t,r){o.BasePoint.call(this,e,\"projective\"),null===t&&null===r?(this.x=this.curve.one,this.z=this.curve.zero):(this.x=new n(t,16),this.z=new n(r,16),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.z.red||(this.z=this.z.toRed(this.curve.red)))}i(a,o),e.exports=a,a.prototype.validate=function(e){var t=e.normalize().x,r=t.redSqr(),n=r.redMul(t).redAdd(r.redMul(this.a)).redAdd(t);return 0===n.redSqrt().redSqr().cmp(n)},i(u,o.BasePoint),a.prototype.decodePoint=function(e,t){return this.point(s.toArray(e,t),1)},a.prototype.point=function(e,t){return new u(this,e,t)},a.prototype.pointFromJSON=function(e){return u.fromJSON(this,e)},u.prototype.precompute=function(){},u.prototype._encode=function(){return this.getX().toArray(\"be\",this.curve.p.byteLength())},u.fromJSON=function(e,t){return new u(e,t[0],t[1]||e.one)},u.prototype.inspect=function(){return this.isInfinity()?\"<EC Point Infinity>\":\"<EC Point x: \"+this.x.fromRed().toString(16,2)+\" z: \"+this.z.fromRed().toString(16,2)+\">\"},u.prototype.isInfinity=function(){return 0===this.z.cmpn(0)},u.prototype.dbl=function(){var e=this.x.redAdd(this.z).redSqr(),t=this.x.redSub(this.z).redSqr(),r=e.redSub(t),n=e.redMul(t),i=r.redMul(t.redAdd(this.curve.a24.redMul(r)));return this.curve.point(n,i)},u.prototype.add=function(){throw new Error(\"Not supported on Montgomery curve\")},u.prototype.diffAdd=function(e,t){var r=this.x.redAdd(this.z),n=this.x.redSub(this.z),i=e.x.redAdd(e.z),o=e.x.redSub(e.z).redMul(r),s=i.redMul(n),a=t.z.redMul(o.redAdd(s).redSqr()),u=t.x.redMul(o.redISub(s).redSqr());return this.curve.point(a,u)},u.prototype.mul=function(e){for(var t=e.clone(),r=this,n=this.curve.point(null,null),i=[];0!==t.cmpn(0);t.iushrn(1))i.push(t.andln(1));for(var o=i.length-1;o>=0;o--)0===i[o]?(r=r.diffAdd(n,this),n=n.dbl()):(n=r.diffAdd(n,this),r=r.dbl());return n},u.prototype.mulAdd=function(){throw new Error(\"Not supported on Montgomery curve\")},u.prototype.jumlAdd=function(){throw new Error(\"Not supported on Montgomery curve\")},u.prototype.eq=function(e){return 0===this.getX().cmp(e.getX())},u.prototype.normalize=function(){return this.x=this.x.redMul(this.z.redInvm()),this.z=this.curve.one,this},u.prototype.getX=function(){return this.normalize(),this.x.fromRed()}},6673:(e,t,r)=>{\"use strict\";var n=r(953),i=r(3550),o=r(5717),s=r(4918),a=n.assert;function u(e){s.call(this,\"short\",e),this.a=new i(e.a,16).toRed(this.red),this.b=new i(e.b,16).toRed(this.red),this.tinv=this.two.redInvm(),this.zeroA=0===this.a.fromRed().cmpn(0),this.threeA=0===this.a.fromRed().sub(this.p).cmpn(-3),this.endo=this._getEndomorphism(e),this._endoWnafT1=new Array(4),this._endoWnafT2=new Array(4)}function c(e,t,r,n){s.BasePoint.call(this,e,\"affine\"),null===t&&null===r?(this.x=null,this.y=null,this.inf=!0):(this.x=new i(t,16),this.y=new i(r,16),n&&(this.x.forceRed(this.curve.red),this.y.forceRed(this.curve.red)),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.y.red||(this.y=this.y.toRed(this.curve.red)),this.inf=!1)}function f(e,t,r,n){s.BasePoint.call(this,e,\"jacobian\"),null===t&&null===r&&null===n?(this.x=this.curve.one,this.y=this.curve.one,this.z=new i(0)):(this.x=new i(t,16),this.y=new i(r,16),this.z=new i(n,16)),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.y.red||(this.y=this.y.toRed(this.curve.red)),this.z.red||(this.z=this.z.toRed(this.curve.red)),this.zOne=this.z===this.curve.one}o(u,s),e.exports=u,u.prototype._getEndomorphism=function(e){if(this.zeroA&&this.g&&this.n&&1===this.p.modn(3)){var t,r;if(e.beta)t=new i(e.beta,16).toRed(this.red);else{var n=this._getEndoRoots(this.p);t=(t=n[0].cmp(n[1])<0?n[0]:n[1]).toRed(this.red)}if(e.lambda)r=new i(e.lambda,16);else{var o=this._getEndoRoots(this.n);0===this.g.mul(o[0]).x.cmp(this.g.x.redMul(t))?r=o[0]:(r=o[1],a(0===this.g.mul(r).x.cmp(this.g.x.redMul(t))))}return{beta:t,lambda:r,basis:e.basis?e.basis.map((function(e){return{a:new i(e.a,16),b:new i(e.b,16)}})):this._getEndoBasis(r)}}},u.prototype._getEndoRoots=function(e){var t=e===this.p?this.red:i.mont(e),r=new i(2).toRed(t).redInvm(),n=r.redNeg(),o=new i(3).toRed(t).redNeg().redSqrt().redMul(r);return[n.redAdd(o).fromRed(),n.redSub(o).fromRed()]},u.prototype._getEndoBasis=function(e){for(var t,r,n,o,s,a,u,c,f,l=this.n.ushrn(Math.floor(this.n.bitLength()/2)),d=e,h=this.n.clone(),p=new i(1),y=new i(0),b=new i(0),m=new i(1),g=0;0!==d.cmpn(0);){var v=h.div(d);c=h.sub(v.mul(d)),f=b.sub(v.mul(p));var w=m.sub(v.mul(y));if(!n&&c.cmp(l)<0)t=u.neg(),r=p,n=c.neg(),o=f;else if(n&&2==++g)break;u=c,h=d,d=c,b=p,p=f,m=y,y=w}s=c.neg(),a=f;var E=n.sqr().add(o.sqr());return s.sqr().add(a.sqr()).cmp(E)>=0&&(s=t,a=r),n.negative&&(n=n.neg(),o=o.neg()),s.negative&&(s=s.neg(),a=a.neg()),[{a:n,b:o},{a:s,b:a}]},u.prototype._endoSplit=function(e){var t=this.endo.basis,r=t[0],n=t[1],i=n.b.mul(e).divRound(this.n),o=r.b.neg().mul(e).divRound(this.n),s=i.mul(r.a),a=o.mul(n.a),u=i.mul(r.b),c=o.mul(n.b);return{k1:e.sub(s).sub(a),k2:u.add(c).neg()}},u.prototype.pointFromX=function(e,t){(e=new i(e,16)).red||(e=e.toRed(this.red));var r=e.redSqr().redMul(e).redIAdd(e.redMul(this.a)).redIAdd(this.b),n=r.redSqrt();if(0!==n.redSqr().redSub(r).cmp(this.zero))throw new Error(\"invalid point\");var o=n.fromRed().isOdd();return(t&&!o||!t&&o)&&(n=n.redNeg()),this.point(e,n)},u.prototype.validate=function(e){if(e.inf)return!0;var t=e.x,r=e.y,n=this.a.redMul(t),i=t.redSqr().redMul(t).redIAdd(n).redIAdd(this.b);return 0===r.redSqr().redISub(i).cmpn(0)},u.prototype._endoWnafMulAdd=function(e,t,r){for(var n=this._endoWnafT1,i=this._endoWnafT2,o=0;o<e.length;o++){var s=this._endoSplit(t[o]),a=e[o],u=a._getBeta();s.k1.negative&&(s.k1.ineg(),a=a.neg(!0)),s.k2.negative&&(s.k2.ineg(),u=u.neg(!0)),n[2*o]=a,n[2*o+1]=u,i[2*o]=s.k1,i[2*o+1]=s.k2}for(var c=this._wnafMulAdd(1,n,i,2*o,r),f=0;f<2*o;f++)n[f]=null,i[f]=null;return c},o(c,s.BasePoint),u.prototype.point=function(e,t,r){return new c(this,e,t,r)},u.prototype.pointFromJSON=function(e,t){return c.fromJSON(this,e,t)},c.prototype._getBeta=function(){if(this.curve.endo){var e=this.precomputed;if(e&&e.beta)return e.beta;var t=this.curve.point(this.x.redMul(this.curve.endo.beta),this.y);if(e){var r=this.curve,n=function(e){return r.point(e.x.redMul(r.endo.beta),e.y)};e.beta=t,t.precomputed={beta:null,naf:e.naf&&{wnd:e.naf.wnd,points:e.naf.points.map(n)},doubles:e.doubles&&{step:e.doubles.step,points:e.doubles.points.map(n)}}}return t}},c.prototype.toJSON=function(){return this.precomputed?[this.x,this.y,this.precomputed&&{doubles:this.precomputed.doubles&&{step:this.precomputed.doubles.step,points:this.precomputed.doubles.points.slice(1)},naf:this.precomputed.naf&&{wnd:this.precomputed.naf.wnd,points:this.precomputed.naf.points.slice(1)}}]:[this.x,this.y]},c.fromJSON=function(e,t,r){\"string\"==typeof t&&(t=JSON.parse(t));var n=e.point(t[0],t[1],r);if(!t[2])return n;function i(t){return e.point(t[0],t[1],r)}var o=t[2];return n.precomputed={beta:null,doubles:o.doubles&&{step:o.doubles.step,points:[n].concat(o.doubles.points.map(i))},naf:o.naf&&{wnd:o.naf.wnd,points:[n].concat(o.naf.points.map(i))}},n},c.prototype.inspect=function(){return this.isInfinity()?\"<EC Point Infinity>\":\"<EC Point x: \"+this.x.fromRed().toString(16,2)+\" y: \"+this.y.fromRed().toString(16,2)+\">\"},c.prototype.isInfinity=function(){return this.inf},c.prototype.add=function(e){if(this.inf)return e;if(e.inf)return this;if(this.eq(e))return this.dbl();if(this.neg().eq(e))return this.curve.point(null,null);if(0===this.x.cmp(e.x))return this.curve.point(null,null);var t=this.y.redSub(e.y);0!==t.cmpn(0)&&(t=t.redMul(this.x.redSub(e.x).redInvm()));var r=t.redSqr().redISub(this.x).redISub(e.x),n=t.redMul(this.x.redSub(r)).redISub(this.y);return this.curve.point(r,n)},c.prototype.dbl=function(){if(this.inf)return this;var e=this.y.redAdd(this.y);if(0===e.cmpn(0))return this.curve.point(null,null);var t=this.curve.a,r=this.x.redSqr(),n=e.redInvm(),i=r.redAdd(r).redIAdd(r).redIAdd(t).redMul(n),o=i.redSqr().redISub(this.x.redAdd(this.x)),s=i.redMul(this.x.redSub(o)).redISub(this.y);return this.curve.point(o,s)},c.prototype.getX=function(){return this.x.fromRed()},c.prototype.getY=function(){return this.y.fromRed()},c.prototype.mul=function(e){return e=new i(e,16),this.isInfinity()?this:this._hasDoubles(e)?this.curve._fixedNafMul(this,e):this.curve.endo?this.curve._endoWnafMulAdd([this],[e]):this.curve._wnafMul(this,e)},c.prototype.mulAdd=function(e,t,r){var n=[this,t],i=[e,r];return this.curve.endo?this.curve._endoWnafMulAdd(n,i):this.curve._wnafMulAdd(1,n,i,2)},c.prototype.jmulAdd=function(e,t,r){var n=[this,t],i=[e,r];return this.curve.endo?this.curve._endoWnafMulAdd(n,i,!0):this.curve._wnafMulAdd(1,n,i,2,!0)},c.prototype.eq=function(e){return this===e||this.inf===e.inf&&(this.inf||0===this.x.cmp(e.x)&&0===this.y.cmp(e.y))},c.prototype.neg=function(e){if(this.inf)return this;var t=this.curve.point(this.x,this.y.redNeg());if(e&&this.precomputed){var r=this.precomputed,n=function(e){return e.neg()};t.precomputed={naf:r.naf&&{wnd:r.naf.wnd,points:r.naf.points.map(n)},doubles:r.doubles&&{step:r.doubles.step,points:r.doubles.points.map(n)}}}return t},c.prototype.toJ=function(){return this.inf?this.curve.jpoint(null,null,null):this.curve.jpoint(this.x,this.y,this.curve.one)},o(f,s.BasePoint),u.prototype.jpoint=function(e,t,r){return new f(this,e,t,r)},f.prototype.toP=function(){if(this.isInfinity())return this.curve.point(null,null);var e=this.z.redInvm(),t=e.redSqr(),r=this.x.redMul(t),n=this.y.redMul(t).redMul(e);return this.curve.point(r,n)},f.prototype.neg=function(){return this.curve.jpoint(this.x,this.y.redNeg(),this.z)},f.prototype.add=function(e){if(this.isInfinity())return e;if(e.isInfinity())return this;var t=e.z.redSqr(),r=this.z.redSqr(),n=this.x.redMul(t),i=e.x.redMul(r),o=this.y.redMul(t.redMul(e.z)),s=e.y.redMul(r.redMul(this.z)),a=n.redSub(i),u=o.redSub(s);if(0===a.cmpn(0))return 0!==u.cmpn(0)?this.curve.jpoint(null,null,null):this.dbl();var c=a.redSqr(),f=c.redMul(a),l=n.redMul(c),d=u.redSqr().redIAdd(f).redISub(l).redISub(l),h=u.redMul(l.redISub(d)).redISub(o.redMul(f)),p=this.z.redMul(e.z).redMul(a);return this.curve.jpoint(d,h,p)},f.prototype.mixedAdd=function(e){if(this.isInfinity())return e.toJ();if(e.isInfinity())return this;var t=this.z.redSqr(),r=this.x,n=e.x.redMul(t),i=this.y,o=e.y.redMul(t).redMul(this.z),s=r.redSub(n),a=i.redSub(o);if(0===s.cmpn(0))return 0!==a.cmpn(0)?this.curve.jpoint(null,null,null):this.dbl();var u=s.redSqr(),c=u.redMul(s),f=r.redMul(u),l=a.redSqr().redIAdd(c).redISub(f).redISub(f),d=a.redMul(f.redISub(l)).redISub(i.redMul(c)),h=this.z.redMul(s);return this.curve.jpoint(l,d,h)},f.prototype.dblp=function(e){if(0===e)return this;if(this.isInfinity())return this;if(!e)return this.dbl();var t;if(this.curve.zeroA||this.curve.threeA){var r=this;for(t=0;t<e;t++)r=r.dbl();return r}var n=this.curve.a,i=this.curve.tinv,o=this.x,s=this.y,a=this.z,u=a.redSqr().redSqr(),c=s.redAdd(s);for(t=0;t<e;t++){var f=o.redSqr(),l=c.redSqr(),d=l.redSqr(),h=f.redAdd(f).redIAdd(f).redIAdd(n.redMul(u)),p=o.redMul(l),y=h.redSqr().redISub(p.redAdd(p)),b=p.redISub(y),m=h.redMul(b);m=m.redIAdd(m).redISub(d);var g=c.redMul(a);t+1<e&&(u=u.redMul(d)),o=y,a=g,c=m}return this.curve.jpoint(o,c.redMul(i),a)},f.prototype.dbl=function(){return this.isInfinity()?this:this.curve.zeroA?this._zeroDbl():this.curve.threeA?this._threeDbl():this._dbl()},f.prototype._zeroDbl=function(){var e,t,r;if(this.zOne){var n=this.x.redSqr(),i=this.y.redSqr(),o=i.redSqr(),s=this.x.redAdd(i).redSqr().redISub(n).redISub(o);s=s.redIAdd(s);var a=n.redAdd(n).redIAdd(n),u=a.redSqr().redISub(s).redISub(s),c=o.redIAdd(o);c=(c=c.redIAdd(c)).redIAdd(c),e=u,t=a.redMul(s.redISub(u)).redISub(c),r=this.y.redAdd(this.y)}else{var f=this.x.redSqr(),l=this.y.redSqr(),d=l.redSqr(),h=this.x.redAdd(l).redSqr().redISub(f).redISub(d);h=h.redIAdd(h);var p=f.redAdd(f).redIAdd(f),y=p.redSqr(),b=d.redIAdd(d);b=(b=b.redIAdd(b)).redIAdd(b),e=y.redISub(h).redISub(h),t=p.redMul(h.redISub(e)).redISub(b),r=(r=this.y.redMul(this.z)).redIAdd(r)}return this.curve.jpoint(e,t,r)},f.prototype._threeDbl=function(){var e,t,r;if(this.zOne){var n=this.x.redSqr(),i=this.y.redSqr(),o=i.redSqr(),s=this.x.redAdd(i).redSqr().redISub(n).redISub(o);s=s.redIAdd(s);var a=n.redAdd(n).redIAdd(n).redIAdd(this.curve.a),u=a.redSqr().redISub(s).redISub(s);e=u;var c=o.redIAdd(o);c=(c=c.redIAdd(c)).redIAdd(c),t=a.redMul(s.redISub(u)).redISub(c),r=this.y.redAdd(this.y)}else{var f=this.z.redSqr(),l=this.y.redSqr(),d=this.x.redMul(l),h=this.x.redSub(f).redMul(this.x.redAdd(f));h=h.redAdd(h).redIAdd(h);var p=d.redIAdd(d),y=(p=p.redIAdd(p)).redAdd(p);e=h.redSqr().redISub(y),r=this.y.redAdd(this.z).redSqr().redISub(l).redISub(f);var b=l.redSqr();b=(b=(b=b.redIAdd(b)).redIAdd(b)).redIAdd(b),t=h.redMul(p.redISub(e)).redISub(b)}return this.curve.jpoint(e,t,r)},f.prototype._dbl=function(){var e=this.curve.a,t=this.x,r=this.y,n=this.z,i=n.redSqr().redSqr(),o=t.redSqr(),s=r.redSqr(),a=o.redAdd(o).redIAdd(o).redIAdd(e.redMul(i)),u=t.redAdd(t),c=(u=u.redIAdd(u)).redMul(s),f=a.redSqr().redISub(c.redAdd(c)),l=c.redISub(f),d=s.redSqr();d=(d=(d=d.redIAdd(d)).redIAdd(d)).redIAdd(d);var h=a.redMul(l).redISub(d),p=r.redAdd(r).redMul(n);return this.curve.jpoint(f,h,p)},f.prototype.trpl=function(){if(!this.curve.zeroA)return this.dbl().add(this);var e=this.x.redSqr(),t=this.y.redSqr(),r=this.z.redSqr(),n=t.redSqr(),i=e.redAdd(e).redIAdd(e),o=i.redSqr(),s=this.x.redAdd(t).redSqr().redISub(e).redISub(n),a=(s=(s=(s=s.redIAdd(s)).redAdd(s).redIAdd(s)).redISub(o)).redSqr(),u=n.redIAdd(n);u=(u=(u=u.redIAdd(u)).redIAdd(u)).redIAdd(u);var c=i.redIAdd(s).redSqr().redISub(o).redISub(a).redISub(u),f=t.redMul(c);f=(f=f.redIAdd(f)).redIAdd(f);var l=this.x.redMul(a).redISub(f);l=(l=l.redIAdd(l)).redIAdd(l);var d=this.y.redMul(c.redMul(u.redISub(c)).redISub(s.redMul(a)));d=(d=(d=d.redIAdd(d)).redIAdd(d)).redIAdd(d);var h=this.z.redAdd(s).redSqr().redISub(r).redISub(a);return this.curve.jpoint(l,d,h)},f.prototype.mul=function(e,t){return e=new i(e,t),this.curve._wnafMul(this,e)},f.prototype.eq=function(e){if(\"affine\"===e.type)return this.eq(e.toJ());if(this===e)return!0;var t=this.z.redSqr(),r=e.z.redSqr();if(0!==this.x.redMul(r).redISub(e.x.redMul(t)).cmpn(0))return!1;var n=t.redMul(this.z),i=r.redMul(e.z);return 0===this.y.redMul(i).redISub(e.y.redMul(n)).cmpn(0)},f.prototype.eqXToP=function(e){var t=this.z.redSqr(),r=e.toRed(this.curve.red).redMul(t);if(0===this.x.cmp(r))return!0;for(var n=e.clone(),i=this.curve.redN.redMul(t);;){if(n.iadd(this.curve.n),n.cmp(this.curve.p)>=0)return!1;if(r.redIAdd(i),0===this.x.cmp(r))return!0}},f.prototype.inspect=function(){return this.isInfinity()?\"<EC JPoint Infinity>\":\"<EC JPoint x: \"+this.x.toString(16,2)+\" y: \"+this.y.toString(16,2)+\" z: \"+this.z.toString(16,2)+\">\"},f.prototype.isInfinity=function(){return 0===this.z.cmpn(0)}},5427:(e,t,r)=>{\"use strict\";var n,i=t,o=r(3715),s=r(8254),a=r(953).assert;function u(e){\"short\"===e.type?this.curve=new s.short(e):\"edwards\"===e.type?this.curve=new s.edwards(e):this.curve=new s.mont(e),this.g=this.curve.g,this.n=this.curve.n,this.hash=e.hash,a(this.g.validate(),\"Invalid curve\"),a(this.g.mul(this.n).isInfinity(),\"Invalid curve, G*N != O\")}function c(e,t){Object.defineProperty(i,e,{configurable:!0,enumerable:!0,get:function(){var r=new u(t);return Object.defineProperty(i,e,{configurable:!0,enumerable:!0,value:r}),r}})}i.PresetCurve=u,c(\"p192\",{type:\"short\",prime:\"p192\",p:\"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff\",a:\"ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc\",b:\"64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1\",n:\"ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831\",hash:o.sha256,gRed:!1,g:[\"188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012\",\"07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811\"]}),c(\"p224\",{type:\"short\",prime:\"p224\",p:\"ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001\",a:\"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe\",b:\"b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4\",n:\"ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d\",hash:o.sha256,gRed:!1,g:[\"b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21\",\"bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34\"]}),c(\"p256\",{type:\"short\",prime:null,p:\"ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff\",a:\"ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc\",b:\"5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b\",n:\"ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551\",hash:o.sha256,gRed:!1,g:[\"6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296\",\"4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5\"]}),c(\"p384\",{type:\"short\",prime:null,p:\"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff\",a:\"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc\",b:\"b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef\",n:\"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973\",hash:o.sha384,gRed:!1,g:[\"aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7\",\"3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f\"]}),c(\"p521\",{type:\"short\",prime:null,p:\"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff\",a:\"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc\",b:\"00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00\",n:\"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409\",hash:o.sha512,gRed:!1,g:[\"000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66\",\"00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650\"]}),c(\"curve25519\",{type:\"mont\",prime:\"p25519\",p:\"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed\",a:\"76d06\",b:\"1\",n:\"1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed\",hash:o.sha256,gRed:!1,g:[\"9\"]}),c(\"ed25519\",{type:\"edwards\",prime:\"p25519\",p:\"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed\",a:\"-1\",c:\"1\",d:\"52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3\",n:\"1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed\",hash:o.sha256,gRed:!1,g:[\"216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a\",\"6666666666666666666666666666666666666666666666666666666666666658\"]});try{n=r(1037)}catch(e){n=void 0}c(\"secp256k1\",{type:\"short\",prime:\"k256\",p:\"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f\",a:\"0\",b:\"7\",n:\"ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141\",h:\"1\",hash:o.sha256,beta:\"7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee\",lambda:\"5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72\",basis:[{a:\"3086d221a7d46bcde86c90e49284eb15\",b:\"-e4437ed6010e88286f547fa90abfe4c3\"},{a:\"114ca50f7a8e2f3f657c1108d9d44cfd8\",b:\"3086d221a7d46bcde86c90e49284eb15\"}],gRed:!1,g:[\"79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798\",\"483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8\",n]})},7954:(e,t,r)=>{\"use strict\";var n=r(3550),i=r(2156),o=r(953),s=r(5427),a=r(7376),u=o.assert,c=r(1251),f=r(611);function l(e){if(!(this instanceof l))return new l(e);\"string\"==typeof e&&(u(Object.prototype.hasOwnProperty.call(s,e),\"Unknown curve \"+e),e=s[e]),e instanceof s.PresetCurve&&(e={curve:e}),this.curve=e.curve.curve,this.n=this.curve.n,this.nh=this.n.ushrn(1),this.g=this.curve.g,this.g=e.curve.g,this.g.precompute(e.curve.n.bitLength()+1),this.hash=e.hash||e.curve.hash}e.exports=l,l.prototype.keyPair=function(e){return new c(this,e)},l.prototype.keyFromPrivate=function(e,t){return c.fromPrivate(this,e,t)},l.prototype.keyFromPublic=function(e,t){return c.fromPublic(this,e,t)},l.prototype.genKeyPair=function(e){e||(e={});for(var t=new i({hash:this.hash,pers:e.pers,persEnc:e.persEnc||\"utf8\",entropy:e.entropy||a(this.hash.hmacStrength),entropyEnc:e.entropy&&e.entropyEnc||\"utf8\",nonce:this.n.toArray()}),r=this.n.byteLength(),o=this.n.sub(new n(2));;){var s=new n(t.generate(r));if(!(s.cmp(o)>0))return s.iaddn(1),this.keyFromPrivate(s)}},l.prototype._truncateToN=function(e,t){var r=8*e.byteLength()-this.n.bitLength();return r>0&&(e=e.ushrn(r)),!t&&e.cmp(this.n)>=0?e.sub(this.n):e},l.prototype.sign=function(e,t,r,o){\"object\"==typeof r&&(o=r,r=null),o||(o={}),t=this.keyFromPrivate(t,r),e=this._truncateToN(new n(e,16));for(var s=this.n.byteLength(),a=t.getPrivate().toArray(\"be\",s),u=e.toArray(\"be\",s),c=new i({hash:this.hash,entropy:a,nonce:u,pers:o.pers,persEnc:o.persEnc||\"utf8\"}),l=this.n.sub(new n(1)),d=0;;d++){var h=o.k?o.k(d):new n(c.generate(this.n.byteLength()));if(!((h=this._truncateToN(h,!0)).cmpn(1)<=0||h.cmp(l)>=0)){var p=this.g.mul(h);if(!p.isInfinity()){var y=p.getX(),b=y.umod(this.n);if(0!==b.cmpn(0)){var m=h.invm(this.n).mul(b.mul(t.getPrivate()).iadd(e));if(0!==(m=m.umod(this.n)).cmpn(0)){var g=(p.getY().isOdd()?1:0)|(0!==y.cmp(b)?2:0);return o.canonical&&m.cmp(this.nh)>0&&(m=this.n.sub(m),g^=1),new f({r:b,s:m,recoveryParam:g})}}}}}},l.prototype.verify=function(e,t,r,i){e=this._truncateToN(new n(e,16)),r=this.keyFromPublic(r,i);var o=(t=new f(t,\"hex\")).r,s=t.s;if(o.cmpn(1)<0||o.cmp(this.n)>=0)return!1;if(s.cmpn(1)<0||s.cmp(this.n)>=0)return!1;var a,u=s.invm(this.n),c=u.mul(e).umod(this.n),l=u.mul(o).umod(this.n);return this.curve._maxwellTrick?!(a=this.g.jmulAdd(c,r.getPublic(),l)).isInfinity()&&a.eqXToP(o):!(a=this.g.mulAdd(c,r.getPublic(),l)).isInfinity()&&0===a.getX().umod(this.n).cmp(o)},l.prototype.recoverPubKey=function(e,t,r,i){u((3&r)===r,\"The recovery param is more than two bits\"),t=new f(t,i);var o=this.n,s=new n(e),a=t.r,c=t.s,l=1&r,d=r>>1;if(a.cmp(this.curve.p.umod(this.curve.n))>=0&&d)throw new Error(\"Unable to find sencond key candinate\");a=d?this.curve.pointFromX(a.add(this.curve.n),l):this.curve.pointFromX(a,l);var h=t.r.invm(o),p=o.sub(s).mul(h).umod(o),y=c.mul(h).umod(o);return this.g.mulAdd(p,a,y)},l.prototype.getKeyRecoveryParam=function(e,t,r,n){if(null!==(t=new f(t,n)).recoveryParam)return t.recoveryParam;for(var i=0;i<4;i++){var o;try{o=this.recoverPubKey(e,t,i)}catch(e){continue}if(o.eq(r))return i}throw new Error(\"Unable to find valid recovery factor\")}},1251:(e,t,r)=>{\"use strict\";var n=r(3550),i=r(953).assert;function o(e,t){this.ec=e,this.priv=null,this.pub=null,t.priv&&this._importPrivate(t.priv,t.privEnc),t.pub&&this._importPublic(t.pub,t.pubEnc)}e.exports=o,o.fromPublic=function(e,t,r){return t instanceof o?t:new o(e,{pub:t,pubEnc:r})},o.fromPrivate=function(e,t,r){return t instanceof o?t:new o(e,{priv:t,privEnc:r})},o.prototype.validate=function(){var e=this.getPublic();return e.isInfinity()?{result:!1,reason:\"Invalid public key\"}:e.validate()?e.mul(this.ec.curve.n).isInfinity()?{result:!0,reason:null}:{result:!1,reason:\"Public key * N != O\"}:{result:!1,reason:\"Public key is not a point\"}},o.prototype.getPublic=function(e,t){return\"string\"==typeof e&&(t=e,e=null),this.pub||(this.pub=this.ec.g.mul(this.priv)),t?this.pub.encode(t,e):this.pub},o.prototype.getPrivate=function(e){return\"hex\"===e?this.priv.toString(16,2):this.priv},o.prototype._importPrivate=function(e,t){this.priv=new n(e,t||16),this.priv=this.priv.umod(this.ec.curve.n)},o.prototype._importPublic=function(e,t){if(e.x||e.y)return\"mont\"===this.ec.curve.type?i(e.x,\"Need x coordinate\"):\"short\"!==this.ec.curve.type&&\"edwards\"!==this.ec.curve.type||i(e.x&&e.y,\"Need both x and y coordinate\"),void(this.pub=this.ec.curve.point(e.x,e.y));this.pub=this.ec.curve.decodePoint(e,t)},o.prototype.derive=function(e){return e.validate()||i(e.validate(),\"public point not validated\"),e.mul(this.priv).getX()},o.prototype.sign=function(e,t,r){return this.ec.sign(e,this,t,r)},o.prototype.verify=function(e,t){return this.ec.verify(e,t,this)},o.prototype.inspect=function(){return\"<Key priv: \"+(this.priv&&this.priv.toString(16,2))+\" pub: \"+(this.pub&&this.pub.inspect())+\" >\"}},611:(e,t,r)=>{\"use strict\";var n=r(3550),i=r(953),o=i.assert;function s(e,t){if(e instanceof s)return e;this._importDER(e,t)||(o(e.r&&e.s,\"Signature without r or s\"),this.r=new n(e.r,16),this.s=new n(e.s,16),void 0===e.recoveryParam?this.recoveryParam=null:this.recoveryParam=e.recoveryParam)}function a(){this.place=0}function u(e,t){var r=e[t.place++];if(!(128&r))return r;var n=15&r;if(0===n||n>4)return!1;for(var i=0,o=0,s=t.place;o<n;o++,s++)i<<=8,i|=e[s],i>>>=0;return!(i<=127)&&(t.place=s,i)}function c(e){for(var t=0,r=e.length-1;!e[t]&&!(128&e[t+1])&&t<r;)t++;return 0===t?e:e.slice(t)}function f(e,t){if(t<128)e.push(t);else{var r=1+(Math.log(t)/Math.LN2>>>3);for(e.push(128|r);--r;)e.push(t>>>(r<<3)&255);e.push(t)}}e.exports=s,s.prototype._importDER=function(e,t){e=i.toArray(e,t);var r=new a;if(48!==e[r.place++])return!1;var o=u(e,r);if(!1===o)return!1;if(o+r.place!==e.length)return!1;if(2!==e[r.place++])return!1;var s=u(e,r);if(!1===s)return!1;var c=e.slice(r.place,s+r.place);if(r.place+=s,2!==e[r.place++])return!1;var f=u(e,r);if(!1===f)return!1;if(e.length!==f+r.place)return!1;var l=e.slice(r.place,f+r.place);if(0===c[0]){if(!(128&c[1]))return!1;c=c.slice(1)}if(0===l[0]){if(!(128&l[1]))return!1;l=l.slice(1)}return this.r=new n(c),this.s=new n(l),this.recoveryParam=null,!0},s.prototype.toDER=function(e){var t=this.r.toArray(),r=this.s.toArray();for(128&t[0]&&(t=[0].concat(t)),128&r[0]&&(r=[0].concat(r)),t=c(t),r=c(r);!(r[0]||128&r[1]);)r=r.slice(1);var n=[2];f(n,t.length),(n=n.concat(t)).push(2),f(n,r.length);var o=n.concat(r),s=[48];return f(s,o.length),s=s.concat(o),i.encode(s,e)}},5980:(e,t,r)=>{\"use strict\";var n=r(3715),i=r(5427),o=r(953),s=o.assert,a=o.parseBytes,u=r(9087),c=r(3622);function f(e){if(s(\"ed25519\"===e,\"only tested with ed25519 so far\"),!(this instanceof f))return new f(e);e=i[e].curve,this.curve=e,this.g=e.g,this.g.precompute(e.n.bitLength()+1),this.pointClass=e.point().constructor,this.encodingLength=Math.ceil(e.n.bitLength()/8),this.hash=n.sha512}e.exports=f,f.prototype.sign=function(e,t){e=a(e);var r=this.keyFromSecret(t),n=this.hashInt(r.messagePrefix(),e),i=this.g.mul(n),o=this.encodePoint(i),s=this.hashInt(o,r.pubBytes(),e).mul(r.priv()),u=n.add(s).umod(this.curve.n);return this.makeSignature({R:i,S:u,Rencoded:o})},f.prototype.verify=function(e,t,r){e=a(e),t=this.makeSignature(t);var n=this.keyFromPublic(r),i=this.hashInt(t.Rencoded(),n.pubBytes(),e),o=this.g.mul(t.S());return t.R().add(n.pub().mul(i)).eq(o)},f.prototype.hashInt=function(){for(var e=this.hash(),t=0;t<arguments.length;t++)e.update(arguments[t]);return o.intFromLE(e.digest()).umod(this.curve.n)},f.prototype.keyFromPublic=function(e){return u.fromPublic(this,e)},f.prototype.keyFromSecret=function(e){return u.fromSecret(this,e)},f.prototype.makeSignature=function(e){return e instanceof c?e:new c(this,e)},f.prototype.encodePoint=function(e){var t=e.getY().toArray(\"le\",this.encodingLength);return t[this.encodingLength-1]|=e.getX().isOdd()?128:0,t},f.prototype.decodePoint=function(e){var t=(e=o.parseBytes(e)).length-1,r=e.slice(0,t).concat(-129&e[t]),n=0!=(128&e[t]),i=o.intFromLE(r);return this.curve.pointFromY(i,n)},f.prototype.encodeInt=function(e){return e.toArray(\"le\",this.encodingLength)},f.prototype.decodeInt=function(e){return o.intFromLE(e)},f.prototype.isPoint=function(e){return e instanceof this.pointClass}},9087:(e,t,r)=>{\"use strict\";var n=r(953),i=n.assert,o=n.parseBytes,s=n.cachedProperty;function a(e,t){this.eddsa=e,this._secret=o(t.secret),e.isPoint(t.pub)?this._pub=t.pub:this._pubBytes=o(t.pub)}a.fromPublic=function(e,t){return t instanceof a?t:new a(e,{pub:t})},a.fromSecret=function(e,t){return t instanceof a?t:new a(e,{secret:t})},a.prototype.secret=function(){return this._secret},s(a,\"pubBytes\",(function(){return this.eddsa.encodePoint(this.pub())})),s(a,\"pub\",(function(){return this._pubBytes?this.eddsa.decodePoint(this._pubBytes):this.eddsa.g.mul(this.priv())})),s(a,\"privBytes\",(function(){var e=this.eddsa,t=this.hash(),r=e.encodingLength-1,n=t.slice(0,e.encodingLength);return n[0]&=248,n[r]&=127,n[r]|=64,n})),s(a,\"priv\",(function(){return this.eddsa.decodeInt(this.privBytes())})),s(a,\"hash\",(function(){return this.eddsa.hash().update(this.secret()).digest()})),s(a,\"messagePrefix\",(function(){return this.hash().slice(this.eddsa.encodingLength)})),a.prototype.sign=function(e){return i(this._secret,\"KeyPair can only verify\"),this.eddsa.sign(e,this)},a.prototype.verify=function(e,t){return this.eddsa.verify(e,t,this)},a.prototype.getSecret=function(e){return i(this._secret,\"KeyPair is public only\"),n.encode(this.secret(),e)},a.prototype.getPublic=function(e){return n.encode(this.pubBytes(),e)},e.exports=a},3622:(e,t,r)=>{\"use strict\";var n=r(3550),i=r(953),o=i.assert,s=i.cachedProperty,a=i.parseBytes;function u(e,t){this.eddsa=e,\"object\"!=typeof t&&(t=a(t)),Array.isArray(t)&&(t={R:t.slice(0,e.encodingLength),S:t.slice(e.encodingLength)}),o(t.R&&t.S,\"Signature without R or S\"),e.isPoint(t.R)&&(this._R=t.R),t.S instanceof n&&(this._S=t.S),this._Rencoded=Array.isArray(t.R)?t.R:t.Rencoded,this._Sencoded=Array.isArray(t.S)?t.S:t.Sencoded}s(u,\"S\",(function(){return this.eddsa.decodeInt(this.Sencoded())})),s(u,\"R\",(function(){return this.eddsa.decodePoint(this.Rencoded())})),s(u,\"Rencoded\",(function(){return this.eddsa.encodePoint(this.R())})),s(u,\"Sencoded\",(function(){return this.eddsa.encodeInt(this.S())})),u.prototype.toBytes=function(){return this.Rencoded().concat(this.Sencoded())},u.prototype.toHex=function(){return i.encode(this.toBytes(),\"hex\").toUpperCase()},e.exports=u},1037:e=>{e.exports={doubles:{step:4,points:[[\"e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a\",\"f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821\"],[\"8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508\",\"11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf\"],[\"175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739\",\"d3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695\"],[\"363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640\",\"4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9\"],[\"8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c\",\"4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36\"],[\"723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda\",\"96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f\"],[\"eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa\",\"5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999\"],[\"100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0\",\"cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09\"],[\"e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d\",\"9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d\"],[\"feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d\",\"e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088\"],[\"da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1\",\"9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d\"],[\"53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0\",\"5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8\"],[\"8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047\",\"10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a\"],[\"385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862\",\"283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453\"],[\"6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7\",\"7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160\"],[\"3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd\",\"56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0\"],[\"85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83\",\"7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6\"],[\"948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a\",\"53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589\"],[\"6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8\",\"bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17\"],[\"e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d\",\"4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda\"],[\"e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725\",\"7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd\"],[\"213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754\",\"4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2\"],[\"4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c\",\"17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6\"],[\"fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6\",\"6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f\"],[\"76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39\",\"c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01\"],[\"c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891\",\"893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3\"],[\"d895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b\",\"febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f\"],[\"b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03\",\"2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7\"],[\"e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d\",\"eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78\"],[\"a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070\",\"7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1\"],[\"90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4\",\"e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150\"],[\"8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da\",\"662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82\"],[\"e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11\",\"1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc\"],[\"8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e\",\"efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b\"],[\"e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41\",\"2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51\"],[\"b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef\",\"67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45\"],[\"d68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8\",\"db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120\"],[\"324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d\",\"648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84\"],[\"4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96\",\"35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d\"],[\"9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd\",\"ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d\"],[\"6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5\",\"9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8\"],[\"a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266\",\"40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8\"],[\"7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71\",\"34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac\"],[\"928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac\",\"c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f\"],[\"85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751\",\"1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962\"],[\"ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e\",\"493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907\"],[\"827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241\",\"c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec\"],[\"eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3\",\"be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d\"],[\"e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f\",\"4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414\"],[\"1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19\",\"aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd\"],[\"146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be\",\"b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0\"],[\"fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9\",\"6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811\"],[\"da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2\",\"8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1\"],[\"a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13\",\"7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c\"],[\"174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c\",\"ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73\"],[\"959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba\",\"2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd\"],[\"d2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151\",\"e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405\"],[\"64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073\",\"d99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589\"],[\"8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458\",\"38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e\"],[\"13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b\",\"69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27\"],[\"bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366\",\"d3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1\"],[\"8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa\",\"40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482\"],[\"8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0\",\"620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945\"],[\"dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787\",\"7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573\"],[\"f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e\",\"ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82\"]]},naf:{wnd:7,points:[[\"f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9\",\"388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672\"],[\"2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4\",\"d8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6\"],[\"5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc\",\"6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da\"],[\"acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe\",\"cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37\"],[\"774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb\",\"d984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b\"],[\"f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8\",\"ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81\"],[\"d7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e\",\"581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58\"],[\"defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34\",\"4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77\"],[\"2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c\",\"85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a\"],[\"352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5\",\"321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c\"],[\"2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f\",\"2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67\"],[\"9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714\",\"73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402\"],[\"daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729\",\"a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55\"],[\"c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db\",\"2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482\"],[\"6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4\",\"e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82\"],[\"1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5\",\"b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396\"],[\"605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479\",\"2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49\"],[\"62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d\",\"80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf\"],[\"80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f\",\"1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a\"],[\"7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb\",\"d0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7\"],[\"d528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9\",\"eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933\"],[\"49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963\",\"758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a\"],[\"77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74\",\"958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6\"],[\"f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530\",\"e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37\"],[\"463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b\",\"5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e\"],[\"f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247\",\"cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6\"],[\"caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1\",\"cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476\"],[\"2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120\",\"4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40\"],[\"7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435\",\"91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61\"],[\"754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18\",\"673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683\"],[\"e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8\",\"59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5\"],[\"186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb\",\"3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b\"],[\"df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f\",\"55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417\"],[\"5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143\",\"efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868\"],[\"290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba\",\"e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a\"],[\"af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45\",\"f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6\"],[\"766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a\",\"744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996\"],[\"59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e\",\"c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e\"],[\"f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8\",\"e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d\"],[\"7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c\",\"30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2\"],[\"948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519\",\"e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e\"],[\"7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab\",\"100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437\"],[\"3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca\",\"ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311\"],[\"d3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf\",\"8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4\"],[\"1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610\",\"68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575\"],[\"733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4\",\"f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d\"],[\"15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c\",\"d56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d\"],[\"a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940\",\"edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629\"],[\"e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980\",\"a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06\"],[\"311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3\",\"66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374\"],[\"34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf\",\"9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee\"],[\"f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63\",\"4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1\"],[\"d7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448\",\"fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b\"],[\"32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf\",\"5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661\"],[\"7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5\",\"8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6\"],[\"ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6\",\"8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e\"],[\"16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5\",\"5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d\"],[\"eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99\",\"f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc\"],[\"78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51\",\"f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4\"],[\"494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5\",\"42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c\"],[\"a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5\",\"204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b\"],[\"c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997\",\"4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913\"],[\"841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881\",\"73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154\"],[\"5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5\",\"39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865\"],[\"36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66\",\"d2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc\"],[\"336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726\",\"ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224\"],[\"8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede\",\"6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e\"],[\"1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94\",\"60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6\"],[\"85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31\",\"3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511\"],[\"29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51\",\"b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b\"],[\"a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252\",\"ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2\"],[\"4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5\",\"cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c\"],[\"d24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b\",\"6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3\"],[\"ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4\",\"322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d\"],[\"af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f\",\"6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700\"],[\"e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889\",\"2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4\"],[\"591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246\",\"b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196\"],[\"11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984\",\"998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4\"],[\"3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a\",\"b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257\"],[\"cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030\",\"bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13\"],[\"c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197\",\"6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096\"],[\"c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593\",\"c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38\"],[\"a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef\",\"21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f\"],[\"347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38\",\"60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448\"],[\"da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a\",\"49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a\"],[\"c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111\",\"5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4\"],[\"4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502\",\"7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437\"],[\"3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea\",\"be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7\"],[\"cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26\",\"8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d\"],[\"b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986\",\"39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a\"],[\"d4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e\",\"62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54\"],[\"48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4\",\"25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77\"],[\"dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda\",\"ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517\"],[\"6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859\",\"cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10\"],[\"e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f\",\"f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125\"],[\"eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c\",\"6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e\"],[\"13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942\",\"fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1\"],[\"ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a\",\"1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2\"],[\"b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80\",\"5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423\"],[\"ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d\",\"438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8\"],[\"8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1\",\"cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758\"],[\"52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63\",\"c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375\"],[\"e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352\",\"6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d\"],[\"7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193\",\"ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec\"],[\"5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00\",\"9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0\"],[\"32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58\",\"ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c\"],[\"e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7\",\"d3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4\"],[\"8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8\",\"c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f\"],[\"4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e\",\"67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649\"],[\"3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d\",\"cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826\"],[\"674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b\",\"299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5\"],[\"d32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f\",\"f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87\"],[\"30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6\",\"462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b\"],[\"be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297\",\"62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc\"],[\"93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a\",\"7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c\"],[\"b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c\",\"ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f\"],[\"d5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52\",\"4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a\"],[\"d3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb\",\"bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46\"],[\"463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065\",\"bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f\"],[\"7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917\",\"603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03\"],[\"74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9\",\"cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08\"],[\"30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3\",\"553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8\"],[\"9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57\",\"712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373\"],[\"176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66\",\"ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3\"],[\"75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8\",\"9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8\"],[\"809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721\",\"9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1\"],[\"1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180\",\"4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9\"]]}}},953:(e,t,r)=>{\"use strict\";var n=t,i=r(3550),o=r(9746),s=r(4504);n.assert=o,n.toArray=s.toArray,n.zero2=s.zero2,n.toHex=s.toHex,n.encode=s.encode,n.getNAF=function(e,t,r){var n=new Array(Math.max(e.bitLength(),r)+1);n.fill(0);for(var i=1<<t+1,o=e.clone(),s=0;s<n.length;s++){var a,u=o.andln(i-1);o.isOdd()?(a=u>(i>>1)-1?(i>>1)-u:u,o.isubn(a)):a=0,n[s]=a,o.iushrn(1)}return n},n.getJSF=function(e,t){var r=[[],[]];e=e.clone(),t=t.clone();for(var n,i=0,o=0;e.cmpn(-i)>0||t.cmpn(-o)>0;){var s,a,u=e.andln(3)+i&3,c=t.andln(3)+o&3;3===u&&(u=-1),3===c&&(c=-1),s=0==(1&u)?0:3!=(n=e.andln(7)+i&7)&&5!==n||2!==c?u:-u,r[0].push(s),a=0==(1&c)?0:3!=(n=t.andln(7)+o&7)&&5!==n||2!==u?c:-c,r[1].push(a),2*i===s+1&&(i=1-i),2*o===a+1&&(o=1-o),e.iushrn(1),t.iushrn(1)}return r},n.cachedProperty=function(e,t,r){var n=\"_\"+t;e.prototype[t]=function(){return void 0!==this[n]?this[n]:this[n]=r.call(this)}},n.parseBytes=function(e){return\"string\"==typeof e?n.toArray(e,\"hex\"):e},n.intFromLE=function(e){return new i(e,\"hex\",\"le\")}},7187:e=>{\"use strict\";var t,r=\"object\"==typeof Reflect?Reflect:null,n=r&&\"function\"==typeof r.apply?r.apply:function(e,t,r){return Function.prototype.apply.call(e,t,r)};t=r&&\"function\"==typeof r.ownKeys?r.ownKeys:Object.getOwnPropertySymbols?function(e){return Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e))}:function(e){return Object.getOwnPropertyNames(e)};var i=Number.isNaN||function(e){return e!=e};function o(){o.init.call(this)}e.exports=o,e.exports.once=function(e,t){return new Promise((function(r,n){function i(r){e.removeListener(t,o),n(r)}function o(){\"function\"==typeof e.removeListener&&e.removeListener(\"error\",i),r([].slice.call(arguments))}y(e,t,o,{once:!0}),\"error\"!==t&&function(e,t,r){\"function\"==typeof e.on&&y(e,\"error\",t,{once:!0})}(e,i)}))},o.EventEmitter=o,o.prototype._events=void 0,o.prototype._eventsCount=0,o.prototype._maxListeners=void 0;var s=10;function a(e){if(\"function\"!=typeof e)throw new TypeError('The \"listener\" argument must be of type Function. Received type '+typeof e)}function u(e){return void 0===e._maxListeners?o.defaultMaxListeners:e._maxListeners}function c(e,t,r,n){var i,o,s,c;if(a(r),void 0===(o=e._events)?(o=e._events=Object.create(null),e._eventsCount=0):(void 0!==o.newListener&&(e.emit(\"newListener\",t,r.listener?r.listener:r),o=e._events),s=o[t]),void 0===s)s=o[t]=r,++e._eventsCount;else if(\"function\"==typeof s?s=o[t]=n?[r,s]:[s,r]:n?s.unshift(r):s.push(r),(i=u(e))>0&&s.length>i&&!s.warned){s.warned=!0;var f=new Error(\"Possible EventEmitter memory leak detected. \"+s.length+\" \"+String(t)+\" listeners added. Use emitter.setMaxListeners() to increase limit\");f.name=\"MaxListenersExceededWarning\",f.emitter=e,f.type=t,f.count=s.length,c=f,console&&console.warn&&console.warn(c)}return e}function f(){if(!this.fired)return this.target.removeListener(this.type,this.wrapFn),this.fired=!0,0===arguments.length?this.listener.call(this.target):this.listener.apply(this.target,arguments)}function l(e,t,r){var n={fired:!1,wrapFn:void 0,target:e,type:t,listener:r},i=f.bind(n);return i.listener=r,n.wrapFn=i,i}function d(e,t,r){var n=e._events;if(void 0===n)return[];var i=n[t];return void 0===i?[]:\"function\"==typeof i?r?[i.listener||i]:[i]:r?function(e){for(var t=new Array(e.length),r=0;r<t.length;++r)t[r]=e[r].listener||e[r];return t}(i):p(i,i.length)}function h(e){var t=this._events;if(void 0!==t){var r=t[e];if(\"function\"==typeof r)return 1;if(void 0!==r)return r.length}return 0}function p(e,t){for(var r=new Array(t),n=0;n<t;++n)r[n]=e[n];return r}function y(e,t,r,n){if(\"function\"==typeof e.on)n.once?e.once(t,r):e.on(t,r);else{if(\"function\"!=typeof e.addEventListener)throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type '+typeof e);e.addEventListener(t,(function i(o){n.once&&e.removeEventListener(t,i),r(o)}))}}Object.defineProperty(o,\"defaultMaxListeners\",{enumerable:!0,get:function(){return s},set:function(e){if(\"number\"!=typeof e||e<0||i(e))throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received '+e+\".\");s=e}}),o.init=function(){void 0!==this._events&&this._events!==Object.getPrototypeOf(this)._events||(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0},o.prototype.setMaxListeners=function(e){if(\"number\"!=typeof e||e<0||i(e))throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received '+e+\".\");return this._maxListeners=e,this},o.prototype.getMaxListeners=function(){return u(this)},o.prototype.emit=function(e){for(var t=[],r=1;r<arguments.length;r++)t.push(arguments[r]);var i=\"error\"===e,o=this._events;if(void 0!==o)i=i&&void 0===o.error;else if(!i)return!1;if(i){var s;if(t.length>0&&(s=t[0]),s instanceof Error)throw s;var a=new Error(\"Unhandled error.\"+(s?\" (\"+s.message+\")\":\"\"));throw a.context=s,a}var u=o[e];if(void 0===u)return!1;if(\"function\"==typeof u)n(u,this,t);else{var c=u.length,f=p(u,c);for(r=0;r<c;++r)n(f[r],this,t)}return!0},o.prototype.addListener=function(e,t){return c(this,e,t,!1)},o.prototype.on=o.prototype.addListener,o.prototype.prependListener=function(e,t){return c(this,e,t,!0)},o.prototype.once=function(e,t){return a(t),this.on(e,l(this,e,t)),this},o.prototype.prependOnceListener=function(e,t){return a(t),this.prependListener(e,l(this,e,t)),this},o.prototype.removeListener=function(e,t){var r,n,i,o,s;if(a(t),void 0===(n=this._events))return this;if(void 0===(r=n[e]))return this;if(r===t||r.listener===t)0==--this._eventsCount?this._events=Object.create(null):(delete n[e],n.removeListener&&this.emit(\"removeListener\",e,r.listener||t));else if(\"function\"!=typeof r){for(i=-1,o=r.length-1;o>=0;o--)if(r[o]===t||r[o].listener===t){s=r[o].listener,i=o;break}if(i<0)return this;0===i?r.shift():function(e,t){for(;t+1<e.length;t++)e[t]=e[t+1];e.pop()}(r,i),1===r.length&&(n[e]=r[0]),void 0!==n.removeListener&&this.emit(\"removeListener\",e,s||t)}return this},o.prototype.off=o.prototype.removeListener,o.prototype.removeAllListeners=function(e){var t,r,n;if(void 0===(r=this._events))return this;if(void 0===r.removeListener)return 0===arguments.length?(this._events=Object.create(null),this._eventsCount=0):void 0!==r[e]&&(0==--this._eventsCount?this._events=Object.create(null):delete r[e]),this;if(0===arguments.length){var i,o=Object.keys(r);for(n=0;n<o.length;++n)\"removeListener\"!==(i=o[n])&&this.removeAllListeners(i);return this.removeAllListeners(\"removeListener\"),this._events=Object.create(null),this._eventsCount=0,this}if(\"function\"==typeof(t=r[e]))this.removeListener(e,t);else if(void 0!==t)for(n=t.length-1;n>=0;n--)this.removeListener(e,t[n]);return this},o.prototype.listeners=function(e){return d(this,e,!0)},o.prototype.rawListeners=function(e){return d(this,e,!1)},o.listenerCount=function(e,t){return\"function\"==typeof e.listenerCount?e.listenerCount(t):h.call(e,t)},o.prototype.listenerCount=h,o.prototype.eventNames=function(){return this._eventsCount>0?t(this._events):[]}},3715:(e,t,r)=>{var n=t;n.utils=r(6436),n.common=r(5772),n.sha=r(9041),n.ripemd=r(2949),n.hmac=r(2344),n.sha1=n.sha.sha1,n.sha256=n.sha.sha256,n.sha224=n.sha.sha224,n.sha384=n.sha.sha384,n.sha512=n.sha.sha512,n.ripemd160=n.ripemd.ripemd160},5772:(e,t,r)=>{\"use strict\";var n=r(6436),i=r(9746);function o(){this.pending=null,this.pendingTotal=0,this.blockSize=this.constructor.blockSize,this.outSize=this.constructor.outSize,this.hmacStrength=this.constructor.hmacStrength,this.padLength=this.constructor.padLength/8,this.endian=\"big\",this._delta8=this.blockSize/8,this._delta32=this.blockSize/32}t.BlockHash=o,o.prototype.update=function(e,t){if(e=n.toArray(e,t),this.pending?this.pending=this.pending.concat(e):this.pending=e,this.pendingTotal+=e.length,this.pending.length>=this._delta8){var r=(e=this.pending).length%this._delta8;this.pending=e.slice(e.length-r,e.length),0===this.pending.length&&(this.pending=null),e=n.join32(e,0,e.length-r,this.endian);for(var i=0;i<e.length;i+=this._delta32)this._update(e,i,i+this._delta32)}return this},o.prototype.digest=function(e){return this.update(this._pad()),i(null===this.pending),this._digest(e)},o.prototype._pad=function(){var e=this.pendingTotal,t=this._delta8,r=t-(e+this.padLength)%t,n=new Array(r+this.padLength);n[0]=128;for(var i=1;i<r;i++)n[i]=0;if(e<<=3,\"big\"===this.endian){for(var o=8;o<this.padLength;o++)n[i++]=0;n[i++]=0,n[i++]=0,n[i++]=0,n[i++]=0,n[i++]=e>>>24&255,n[i++]=e>>>16&255,n[i++]=e>>>8&255,n[i++]=255&e}else for(n[i++]=255&e,n[i++]=e>>>8&255,n[i++]=e>>>16&255,n[i++]=e>>>24&255,n[i++]=0,n[i++]=0,n[i++]=0,n[i++]=0,o=8;o<this.padLength;o++)n[i++]=0;return n}},2344:(e,t,r)=>{\"use strict\";var n=r(6436),i=r(9746);function o(e,t,r){if(!(this instanceof o))return new o(e,t,r);this.Hash=e,this.blockSize=e.blockSize/8,this.outSize=e.outSize/8,this.inner=null,this.outer=null,this._init(n.toArray(t,r))}e.exports=o,o.prototype._init=function(e){e.length>this.blockSize&&(e=(new this.Hash).update(e).digest()),i(e.length<=this.blockSize);for(var t=e.length;t<this.blockSize;t++)e.push(0);for(t=0;t<e.length;t++)e[t]^=54;for(this.inner=(new this.Hash).update(e),t=0;t<e.length;t++)e[t]^=106;this.outer=(new this.Hash).update(e)},o.prototype.update=function(e,t){return this.inner.update(e,t),this},o.prototype.digest=function(e){return this.outer.update(this.inner.digest()),this.outer.digest(e)}},2949:(e,t,r)=>{\"use strict\";var n=r(6436),i=r(5772),o=n.rotl32,s=n.sum32,a=n.sum32_3,u=n.sum32_4,c=i.BlockHash;function f(){if(!(this instanceof f))return new f;c.call(this),this.h=[1732584193,4023233417,2562383102,271733878,3285377520],this.endian=\"little\"}function l(e,t,r,n){return e<=15?t^r^n:e<=31?t&r|~t&n:e<=47?(t|~r)^n:e<=63?t&n|r&~n:t^(r|~n)}function d(e){return e<=15?0:e<=31?1518500249:e<=47?1859775393:e<=63?2400959708:2840853838}function h(e){return e<=15?1352829926:e<=31?1548603684:e<=47?1836072691:e<=63?2053994217:0}n.inherits(f,c),t.ripemd160=f,f.blockSize=512,f.outSize=160,f.hmacStrength=192,f.padLength=64,f.prototype._update=function(e,t){for(var r=this.h[0],n=this.h[1],i=this.h[2],c=this.h[3],f=this.h[4],g=r,v=n,w=i,E=c,_=f,S=0;S<80;S++){var T=s(o(u(r,l(S,n,i,c),e[p[S]+t],d(S)),b[S]),f);r=f,f=c,c=o(i,10),i=n,n=T,T=s(o(u(g,l(79-S,v,w,E),e[y[S]+t],h(S)),m[S]),_),g=_,_=E,E=o(w,10),w=v,v=T}T=a(this.h[1],i,E),this.h[1]=a(this.h[2],c,_),this.h[2]=a(this.h[3],f,g),this.h[3]=a(this.h[4],r,v),this.h[4]=a(this.h[0],n,w),this.h[0]=T},f.prototype._digest=function(e){return\"hex\"===e?n.toHex32(this.h,\"little\"):n.split32(this.h,\"little\")};var p=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8,3,10,14,4,9,15,8,1,2,7,0,6,13,11,5,12,1,9,11,10,0,8,12,4,13,3,7,15,14,5,6,2,4,0,5,9,7,12,2,10,14,1,3,8,11,6,15,13],y=[5,14,7,0,9,2,11,4,13,6,15,8,1,10,3,12,6,11,3,7,0,13,5,10,14,15,8,12,4,9,1,2,15,5,1,3,7,14,6,9,11,8,12,2,10,0,4,13,8,6,4,1,3,11,15,0,5,12,2,13,9,7,10,14,12,15,10,4,1,5,8,7,6,2,13,14,0,3,9,11],b=[11,14,15,12,5,8,7,9,11,13,14,15,6,7,9,8,7,6,8,13,11,9,7,15,7,12,15,9,11,7,13,12,11,13,6,7,14,9,13,15,14,8,13,6,5,12,7,5,11,12,14,15,14,15,9,8,9,14,5,6,8,6,5,12,9,15,5,11,6,8,13,12,5,12,13,14,11,8,5,6],m=[8,9,9,11,13,15,15,5,7,7,8,11,14,14,12,6,9,13,15,7,12,8,9,11,7,7,12,7,6,15,13,11,9,7,15,11,8,6,6,14,12,13,5,14,13,13,7,5,15,5,8,11,14,14,6,14,6,9,12,9,12,5,15,8,8,5,12,9,12,5,14,6,8,13,6,5,15,13,11,11]},9041:(e,t,r)=>{\"use strict\";t.sha1=r(4761),t.sha224=r(799),t.sha256=r(9344),t.sha384=r(772),t.sha512=r(5900)},4761:(e,t,r)=>{\"use strict\";var n=r(6436),i=r(5772),o=r(7038),s=n.rotl32,a=n.sum32,u=n.sum32_5,c=o.ft_1,f=i.BlockHash,l=[1518500249,1859775393,2400959708,3395469782];function d(){if(!(this instanceof d))return new d;f.call(this),this.h=[1732584193,4023233417,2562383102,271733878,3285377520],this.W=new Array(80)}n.inherits(d,f),e.exports=d,d.blockSize=512,d.outSize=160,d.hmacStrength=80,d.padLength=64,d.prototype._update=function(e,t){for(var r=this.W,n=0;n<16;n++)r[n]=e[t+n];for(;n<r.length;n++)r[n]=s(r[n-3]^r[n-8]^r[n-14]^r[n-16],1);var i=this.h[0],o=this.h[1],f=this.h[2],d=this.h[3],h=this.h[4];for(n=0;n<r.length;n++){var p=~~(n/20),y=u(s(i,5),c(p,o,f,d),h,r[n],l[p]);h=d,d=f,f=s(o,30),o=i,i=y}this.h[0]=a(this.h[0],i),this.h[1]=a(this.h[1],o),this.h[2]=a(this.h[2],f),this.h[3]=a(this.h[3],d),this.h[4]=a(this.h[4],h)},d.prototype._digest=function(e){return\"hex\"===e?n.toHex32(this.h,\"big\"):n.split32(this.h,\"big\")}},799:(e,t,r)=>{\"use strict\";var n=r(6436),i=r(9344);function o(){if(!(this instanceof o))return new o;i.call(this),this.h=[3238371032,914150663,812702999,4144912697,4290775857,1750603025,1694076839,3204075428]}n.inherits(o,i),e.exports=o,o.blockSize=512,o.outSize=224,o.hmacStrength=192,o.padLength=64,o.prototype._digest=function(e){return\"hex\"===e?n.toHex32(this.h.slice(0,7),\"big\"):n.split32(this.h.slice(0,7),\"big\")}},9344:(e,t,r)=>{\"use strict\";var n=r(6436),i=r(5772),o=r(7038),s=r(9746),a=n.sum32,u=n.sum32_4,c=n.sum32_5,f=o.ch32,l=o.maj32,d=o.s0_256,h=o.s1_256,p=o.g0_256,y=o.g1_256,b=i.BlockHash,m=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298];function g(){if(!(this instanceof g))return new g;b.call(this),this.h=[1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225],this.k=m,this.W=new Array(64)}n.inherits(g,b),e.exports=g,g.blockSize=512,g.outSize=256,g.hmacStrength=192,g.padLength=64,g.prototype._update=function(e,t){for(var r=this.W,n=0;n<16;n++)r[n]=e[t+n];for(;n<r.length;n++)r[n]=u(y(r[n-2]),r[n-7],p(r[n-15]),r[n-16]);var i=this.h[0],o=this.h[1],b=this.h[2],m=this.h[3],g=this.h[4],v=this.h[5],w=this.h[6],E=this.h[7];for(s(this.k.length===r.length),n=0;n<r.length;n++){var _=c(E,h(g),f(g,v,w),this.k[n],r[n]),S=a(d(i),l(i,o,b));E=w,w=v,v=g,g=a(m,_),m=b,b=o,o=i,i=a(_,S)}this.h[0]=a(this.h[0],i),this.h[1]=a(this.h[1],o),this.h[2]=a(this.h[2],b),this.h[3]=a(this.h[3],m),this.h[4]=a(this.h[4],g),this.h[5]=a(this.h[5],v),this.h[6]=a(this.h[6],w),this.h[7]=a(this.h[7],E)},g.prototype._digest=function(e){return\"hex\"===e?n.toHex32(this.h,\"big\"):n.split32(this.h,\"big\")}},772:(e,t,r)=>{\"use strict\";var n=r(6436),i=r(5900);function o(){if(!(this instanceof o))return new o;i.call(this),this.h=[3418070365,3238371032,1654270250,914150663,2438529370,812702999,355462360,4144912697,1731405415,4290775857,2394180231,1750603025,3675008525,1694076839,1203062813,3204075428]}n.inherits(o,i),e.exports=o,o.blockSize=1024,o.outSize=384,o.hmacStrength=192,o.padLength=128,o.prototype._digest=function(e){return\"hex\"===e?n.toHex32(this.h.slice(0,12),\"big\"):n.split32(this.h.slice(0,12),\"big\")}},5900:(e,t,r)=>{\"use strict\";var n=r(6436),i=r(5772),o=r(9746),s=n.rotr64_hi,a=n.rotr64_lo,u=n.shr64_hi,c=n.shr64_lo,f=n.sum64,l=n.sum64_hi,d=n.sum64_lo,h=n.sum64_4_hi,p=n.sum64_4_lo,y=n.sum64_5_hi,b=n.sum64_5_lo,m=i.BlockHash,g=[1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591];function v(){if(!(this instanceof v))return new v;m.call(this),this.h=[1779033703,4089235720,3144134277,2227873595,1013904242,4271175723,2773480762,1595750129,1359893119,2917565137,2600822924,725511199,528734635,4215389547,1541459225,327033209],this.k=g,this.W=new Array(160)}function w(e,t,r,n,i){var o=e&r^~e&i;return o<0&&(o+=4294967296),o}function E(e,t,r,n,i,o){var s=t&n^~t&o;return s<0&&(s+=4294967296),s}function _(e,t,r,n,i){var o=e&r^e&i^r&i;return o<0&&(o+=4294967296),o}function S(e,t,r,n,i,o){var s=t&n^t&o^n&o;return s<0&&(s+=4294967296),s}function T(e,t){var r=s(e,t,28)^s(t,e,2)^s(t,e,7);return r<0&&(r+=4294967296),r}function B(e,t){var r=a(e,t,28)^a(t,e,2)^a(t,e,7);return r<0&&(r+=4294967296),r}function A(e,t){var r=a(e,t,14)^a(e,t,18)^a(t,e,9);return r<0&&(r+=4294967296),r}function x(e,t){var r=s(e,t,1)^s(e,t,8)^u(e,t,7);return r<0&&(r+=4294967296),r}function P(e,t){var r=a(e,t,1)^a(e,t,8)^c(e,t,7);return r<0&&(r+=4294967296),r}function M(e,t){var r=a(e,t,19)^a(t,e,29)^c(e,t,6);return r<0&&(r+=4294967296),r}n.inherits(v,m),e.exports=v,v.blockSize=1024,v.outSize=512,v.hmacStrength=192,v.padLength=128,v.prototype._prepareBlock=function(e,t){for(var r=this.W,n=0;n<32;n++)r[n]=e[t+n];for(;n<r.length;n+=2){var i=(b=r[n-4],m=r[n-3],g=void 0,(g=s(b,m,19)^s(m,b,29)^u(b,m,6))<0&&(g+=4294967296),g),o=M(r[n-4],r[n-3]),a=r[n-14],c=r[n-13],f=x(r[n-30],r[n-29]),l=P(r[n-30],r[n-29]),d=r[n-32],y=r[n-31];r[n]=h(i,o,a,c,f,l,d,y),r[n+1]=p(i,o,a,c,f,l,d,y)}var b,m,g},v.prototype._update=function(e,t){this._prepareBlock(e,t);var r,n,i,a=this.W,u=this.h[0],c=this.h[1],h=this.h[2],p=this.h[3],m=this.h[4],g=this.h[5],v=this.h[6],x=this.h[7],P=this.h[8],M=this.h[9],C=this.h[10],O=this.h[11],k=this.h[12],R=this.h[13],L=this.h[14],I=this.h[15];o(this.k.length===a.length);for(var N=0;N<a.length;N+=2){var U=L,j=I,H=(i=void 0,(i=s(r=P,n=M,14)^s(r,n,18)^s(n,r,9))<0&&(i+=4294967296),i),D=A(P,M),q=w(P,0,C,0,k),K=E(0,M,0,O,0,R),z=this.k[N],F=this.k[N+1],V=a[N],W=a[N+1],Y=y(U,j,H,D,q,K,z,F,V,W),$=b(U,j,H,D,q,K,z,F,V,W);U=T(u,c),j=B(u,c),H=_(u,0,h,0,m),D=S(0,c,0,p,0,g);var J=l(U,j,H,D),G=d(U,j,H,D);L=k,I=R,k=C,R=O,C=P,O=M,P=l(v,x,Y,$),M=d(x,x,Y,$),v=m,x=g,m=h,g=p,h=u,p=c,u=l(Y,$,J,G),c=d(Y,$,J,G)}f(this.h,0,u,c),f(this.h,2,h,p),f(this.h,4,m,g),f(this.h,6,v,x),f(this.h,8,P,M),f(this.h,10,C,O),f(this.h,12,k,R),f(this.h,14,L,I)},v.prototype._digest=function(e){return\"hex\"===e?n.toHex32(this.h,\"big\"):n.split32(this.h,\"big\")}},7038:(e,t,r)=>{\"use strict\";var n=r(6436).rotr32;function i(e,t,r){return e&t^~e&r}function o(e,t,r){return e&t^e&r^t&r}function s(e,t,r){return e^t^r}t.ft_1=function(e,t,r,n){return 0===e?i(t,r,n):1===e||3===e?s(t,r,n):2===e?o(t,r,n):void 0},t.ch32=i,t.maj32=o,t.p32=s,t.s0_256=function(e){return n(e,2)^n(e,13)^n(e,22)},t.s1_256=function(e){return n(e,6)^n(e,11)^n(e,25)},t.g0_256=function(e){return n(e,7)^n(e,18)^e>>>3},t.g1_256=function(e){return n(e,17)^n(e,19)^e>>>10}},6436:(e,t,r)=>{\"use strict\";var n=r(9746),i=r(5717);function o(e,t){return 55296==(64512&e.charCodeAt(t))&&!(t<0||t+1>=e.length)&&56320==(64512&e.charCodeAt(t+1))}function s(e){return(e>>>24|e>>>8&65280|e<<8&16711680|(255&e)<<24)>>>0}function a(e){return 1===e.length?\"0\"+e:e}function u(e){return 7===e.length?\"0\"+e:6===e.length?\"00\"+e:5===e.length?\"000\"+e:4===e.length?\"0000\"+e:3===e.length?\"00000\"+e:2===e.length?\"000000\"+e:1===e.length?\"0000000\"+e:e}t.inherits=i,t.toArray=function(e,t){if(Array.isArray(e))return e.slice();if(!e)return[];var r=[];if(\"string\"==typeof e)if(t){if(\"hex\"===t)for((e=e.replace(/[^a-z0-9]+/gi,\"\")).length%2!=0&&(e=\"0\"+e),i=0;i<e.length;i+=2)r.push(parseInt(e[i]+e[i+1],16))}else for(var n=0,i=0;i<e.length;i++){var s=e.charCodeAt(i);s<128?r[n++]=s:s<2048?(r[n++]=s>>6|192,r[n++]=63&s|128):o(e,i)?(s=65536+((1023&s)<<10)+(1023&e.charCodeAt(++i)),r[n++]=s>>18|240,r[n++]=s>>12&63|128,r[n++]=s>>6&63|128,r[n++]=63&s|128):(r[n++]=s>>12|224,r[n++]=s>>6&63|128,r[n++]=63&s|128)}else for(i=0;i<e.length;i++)r[i]=0|e[i];return r},t.toHex=function(e){for(var t=\"\",r=0;r<e.length;r++)t+=a(e[r].toString(16));return t},t.htonl=s,t.toHex32=function(e,t){for(var r=\"\",n=0;n<e.length;n++){var i=e[n];\"little\"===t&&(i=s(i)),r+=u(i.toString(16))}return r},t.zero2=a,t.zero8=u,t.join32=function(e,t,r,i){var o=r-t;n(o%4==0);for(var s=new Array(o/4),a=0,u=t;a<s.length;a++,u+=4){var c;c=\"big\"===i?e[u]<<24|e[u+1]<<16|e[u+2]<<8|e[u+3]:e[u+3]<<24|e[u+2]<<16|e[u+1]<<8|e[u],s[a]=c>>>0}return s},t.split32=function(e,t){for(var r=new Array(4*e.length),n=0,i=0;n<e.length;n++,i+=4){var o=e[n];\"big\"===t?(r[i]=o>>>24,r[i+1]=o>>>16&255,r[i+2]=o>>>8&255,r[i+3]=255&o):(r[i+3]=o>>>24,r[i+2]=o>>>16&255,r[i+1]=o>>>8&255,r[i]=255&o)}return r},t.rotr32=function(e,t){return e>>>t|e<<32-t},t.rotl32=function(e,t){return e<<t|e>>>32-t},t.sum32=function(e,t){return e+t>>>0},t.sum32_3=function(e,t,r){return e+t+r>>>0},t.sum32_4=function(e,t,r,n){return e+t+r+n>>>0},t.sum32_5=function(e,t,r,n,i){return e+t+r+n+i>>>0},t.sum64=function(e,t,r,n){var i=e[t],o=n+e[t+1]>>>0,s=(o<n?1:0)+r+i;e[t]=s>>>0,e[t+1]=o},t.sum64_hi=function(e,t,r,n){return(t+n>>>0<t?1:0)+e+r>>>0},t.sum64_lo=function(e,t,r,n){return t+n>>>0},t.sum64_4_hi=function(e,t,r,n,i,o,s,a){var u=0,c=t;return u+=(c=c+n>>>0)<t?1:0,u+=(c=c+o>>>0)<o?1:0,e+r+i+s+(u+=(c=c+a>>>0)<a?1:0)>>>0},t.sum64_4_lo=function(e,t,r,n,i,o,s,a){return t+n+o+a>>>0},t.sum64_5_hi=function(e,t,r,n,i,o,s,a,u,c){var f=0,l=t;return f+=(l=l+n>>>0)<t?1:0,f+=(l=l+o>>>0)<o?1:0,f+=(l=l+a>>>0)<a?1:0,e+r+i+s+u+(f+=(l=l+c>>>0)<c?1:0)>>>0},t.sum64_5_lo=function(e,t,r,n,i,o,s,a,u,c){return t+n+o+a+c>>>0},t.rotr64_hi=function(e,t,r){return(t<<32-r|e>>>r)>>>0},t.rotr64_lo=function(e,t,r){return(e<<32-r|t>>>r)>>>0},t.shr64_hi=function(e,t,r){return e>>>r},t.shr64_lo=function(e,t,r){return(e<<32-r|t>>>r)>>>0}},2156:(e,t,r)=>{\"use strict\";var n=r(3715),i=r(4504),o=r(9746);function s(e){if(!(this instanceof s))return new s(e);this.hash=e.hash,this.predResist=!!e.predResist,this.outLen=this.hash.outSize,this.minEntropy=e.minEntropy||this.hash.hmacStrength,this._reseed=null,this.reseedInterval=null,this.K=null,this.V=null;var t=i.toArray(e.entropy,e.entropyEnc||\"hex\"),r=i.toArray(e.nonce,e.nonceEnc||\"hex\"),n=i.toArray(e.pers,e.persEnc||\"hex\");o(t.length>=this.minEntropy/8,\"Not enough entropy. Minimum is: \"+this.minEntropy+\" bits\"),this._init(t,r,n)}e.exports=s,s.prototype._init=function(e,t,r){var n=e.concat(t).concat(r);this.K=new Array(this.outLen/8),this.V=new Array(this.outLen/8);for(var i=0;i<this.V.length;i++)this.K[i]=0,this.V[i]=1;this._update(n),this._reseed=1,this.reseedInterval=281474976710656},s.prototype._hmac=function(){return new n.hmac(this.hash,this.K)},s.prototype._update=function(e){var t=this._hmac().update(this.V).update([0]);e&&(t=t.update(e)),this.K=t.digest(),this.V=this._hmac().update(this.V).digest(),e&&(this.K=this._hmac().update(this.V).update([1]).update(e).digest(),this.V=this._hmac().update(this.V).digest())},s.prototype.reseed=function(e,t,r,n){\"string\"!=typeof t&&(n=r,r=t,t=null),e=i.toArray(e,t),r=i.toArray(r,n),o(e.length>=this.minEntropy/8,\"Not enough entropy. Minimum is: \"+this.minEntropy+\" bits\"),this._update(e.concat(r||[])),this._reseed=1},s.prototype.generate=function(e,t,r,n){if(this._reseed>this.reseedInterval)throw new Error(\"Reseed is required\");\"string\"!=typeof t&&(n=r,r=t,t=null),r&&(r=i.toArray(r,n||\"hex\"),this._update(r));for(var o=[];o.length<e;)this.V=this._hmac().update(this.V).digest(),o=o.concat(this.V);var s=o.slice(0,e);return this._update(r),this._reseed++,i.encode(s,t)}},9267:(e,t,r)=>{var n=r(8501),i=r(8575),o=e.exports;for(var s in n)n.hasOwnProperty(s)&&(o[s]=n[s]);function a(e){if(\"string\"==typeof e&&(e=i.parse(e)),e.protocol||(e.protocol=\"https:\"),\"https:\"!==e.protocol)throw new Error('Protocol \"'+e.protocol+'\" not supported. Expected \"https:\"');return e}o.request=function(e,t){return e=a(e),n.request.call(this,e,t)},o.get=function(e,t){return e=a(e),n.get.call(this,e,t)}},9695:(e,t,r)=>{var n;!function(){var i={y:function(e){return 1===e?\"χρόνος\":\"χρόνια\"},mo:function(e){return 1===e?\"μήνας\":\"μήνες\"},w:function(e){return 1===e?\"εβδομάδα\":\"εβδομάδες\"},d:function(e){return 1===e?\"μέρα\":\"μέρες\"},h:function(e){return 1===e?\"ώρα\":\"ώρες\"},m:function(e){return 1===e?\"λεπτό\":\"λεπτά\"},s:function(e){return 1===e?\"δευτερόλεπτο\":\"δευτερόλεπτα\"},ms:function(e){return 1===e?\"χιλιοστό του δευτερολέπτου\":\"χιλιοστά του δευτερολέπτου\"},decimal:\",\"},o={ar:{y:function(e){return 1===e?\"سنة\":\"سنوات\"},mo:function(e){return 1===e?\"شهر\":\"أشهر\"},w:function(e){return 1===e?\"أسبوع\":\"أسابيع\"},d:function(e){return 1===e?\"يوم\":\"أيام\"},h:function(e){return 1===e?\"ساعة\":\"ساعات\"},m:function(e){return e>2&&e<11?\"دقائق\":\"دقيقة\"},s:function(e){return 1===e?\"ثانية\":\"ثواني\"},ms:function(e){return 1===e?\"جزء من الثانية\":\"أجزاء من الثانية\"},decimal:\",\"},bg:{y:function(e){return[\"години\",\"година\",\"години\"][l(e)]},mo:function(e){return[\"месеца\",\"месец\",\"месеца\"][l(e)]},w:function(e){return[\"седмици\",\"седмица\",\"седмици\"][l(e)]},d:function(e){return[\"дни\",\"ден\",\"дни\"][l(e)]},h:function(e){return[\"часа\",\"час\",\"часа\"][l(e)]},m:function(e){return[\"минути\",\"минута\",\"минути\"][l(e)]},s:function(e){return[\"секунди\",\"секунда\",\"секунди\"][l(e)]},ms:function(e){return[\"милисекунди\",\"милисекунда\",\"милисекунди\"][l(e)]},decimal:\",\"},ca:{y:function(e){return\"any\"+(1===e?\"\":\"s\")},mo:function(e){return\"mes\"+(1===e?\"\":\"os\")},w:function(e){return\"setman\"+(1===e?\"a\":\"es\")},d:function(e){return\"di\"+(1===e?\"a\":\"es\")},h:function(e){return\"hor\"+(1===e?\"a\":\"es\")},m:function(e){return\"minut\"+(1===e?\"\":\"s\")},s:function(e){return\"segon\"+(1===e?\"\":\"s\")},ms:function(e){return\"milisegon\"+(1===e?\"\":\"s\")},decimal:\",\"},cs:{y:function(e){return[\"rok\",\"roku\",\"roky\",\"let\"][d(e)]},mo:function(e){return[\"měsíc\",\"měsíce\",\"měsíce\",\"měsíců\"][d(e)]},w:function(e){return[\"týden\",\"týdne\",\"týdny\",\"týdnů\"][d(e)]},d:function(e){return[\"den\",\"dne\",\"dny\",\"dní\"][d(e)]},h:function(e){return[\"hodina\",\"hodiny\",\"hodiny\",\"hodin\"][d(e)]},m:function(e){return[\"minuta\",\"minuty\",\"minuty\",\"minut\"][d(e)]},s:function(e){return[\"sekunda\",\"sekundy\",\"sekundy\",\"sekund\"][d(e)]},ms:function(e){return[\"milisekunda\",\"milisekundy\",\"milisekundy\",\"milisekund\"][d(e)]},decimal:\",\"},da:{y:\"år\",mo:function(e){return\"måned\"+(1===e?\"\":\"er\")},w:function(e){return\"uge\"+(1===e?\"\":\"r\")},d:function(e){return\"dag\"+(1===e?\"\":\"e\")},h:function(e){return\"time\"+(1===e?\"\":\"r\")},m:function(e){return\"minut\"+(1===e?\"\":\"ter\")},s:function(e){return\"sekund\"+(1===e?\"\":\"er\")},ms:function(e){return\"millisekund\"+(1===e?\"\":\"er\")},decimal:\",\"},de:{y:function(e){return\"Jahr\"+(1===e?\"\":\"e\")},mo:function(e){return\"Monat\"+(1===e?\"\":\"e\")},w:function(e){return\"Woche\"+(1===e?\"\":\"n\")},d:function(e){return\"Tag\"+(1===e?\"\":\"e\")},h:function(e){return\"Stunde\"+(1===e?\"\":\"n\")},m:function(e){return\"Minute\"+(1===e?\"\":\"n\")},s:function(e){return\"Sekunde\"+(1===e?\"\":\"n\")},ms:function(e){return\"Millisekunde\"+(1===e?\"\":\"n\")},decimal:\",\"},el:i,en:{y:function(e){return\"year\"+(1===e?\"\":\"s\")},mo:function(e){return\"month\"+(1===e?\"\":\"s\")},w:function(e){return\"week\"+(1===e?\"\":\"s\")},d:function(e){return\"day\"+(1===e?\"\":\"s\")},h:function(e){return\"hour\"+(1===e?\"\":\"s\")},m:function(e){return\"minute\"+(1===e?\"\":\"s\")},s:function(e){return\"second\"+(1===e?\"\":\"s\")},ms:function(e){return\"millisecond\"+(1===e?\"\":\"s\")},decimal:\".\"},es:{y:function(e){return\"año\"+(1===e?\"\":\"s\")},mo:function(e){return\"mes\"+(1===e?\"\":\"es\")},w:function(e){return\"semana\"+(1===e?\"\":\"s\")},d:function(e){return\"día\"+(1===e?\"\":\"s\")},h:function(e){return\"hora\"+(1===e?\"\":\"s\")},m:function(e){return\"minuto\"+(1===e?\"\":\"s\")},s:function(e){return\"segundo\"+(1===e?\"\":\"s\")},ms:function(e){return\"milisegundo\"+(1===e?\"\":\"s\")},decimal:\",\"},et:{y:function(e){return\"aasta\"+(1===e?\"\":\"t\")},mo:function(e){return\"kuu\"+(1===e?\"\":\"d\")},w:function(e){return\"nädal\"+(1===e?\"\":\"at\")},d:function(e){return\"päev\"+(1===e?\"\":\"a\")},h:function(e){return\"tund\"+(1===e?\"\":\"i\")},m:function(e){return\"minut\"+(1===e?\"\":\"it\")},s:function(e){return\"sekund\"+(1===e?\"\":\"it\")},ms:function(e){return\"millisekund\"+(1===e?\"\":\"it\")},decimal:\",\"},fa:{y:\"سال\",mo:\"ماه\",w:\"هفته\",d:\"روز\",h:\"ساعت\",m:\"دقیقه\",s:\"ثانیه\",ms:\"میلی ثانیه\",decimal:\".\"},fi:{y:function(e){return 1===e?\"vuosi\":\"vuotta\"},mo:function(e){return 1===e?\"kuukausi\":\"kuukautta\"},w:function(e){return\"viikko\"+(1===e?\"\":\"a\")},d:function(e){return\"päivä\"+(1===e?\"\":\"ä\")},h:function(e){return\"tunti\"+(1===e?\"\":\"a\")},m:function(e){return\"minuutti\"+(1===e?\"\":\"a\")},s:function(e){return\"sekunti\"+(1===e?\"\":\"a\")},ms:function(e){return\"millisekunti\"+(1===e?\"\":\"a\")},decimal:\",\"},fo:{y:\"ár\",mo:function(e){return 1===e?\"mánaður\":\"mánaðir\"},w:function(e){return 1===e?\"vika\":\"vikur\"},d:function(e){return 1===e?\"dagur\":\"dagar\"},h:function(e){return 1===e?\"tími\":\"tímar\"},m:function(e){return 1===e?\"minuttur\":\"minuttir\"},s:\"sekund\",ms:\"millisekund\",decimal:\",\"},fr:{y:function(e){return\"an\"+(e>=2?\"s\":\"\")},mo:\"mois\",w:function(e){return\"semaine\"+(e>=2?\"s\":\"\")},d:function(e){return\"jour\"+(e>=2?\"s\":\"\")},h:function(e){return\"heure\"+(e>=2?\"s\":\"\")},m:function(e){return\"minute\"+(e>=2?\"s\":\"\")},s:function(e){return\"seconde\"+(e>=2?\"s\":\"\")},ms:function(e){return\"milliseconde\"+(e>=2?\"s\":\"\")},decimal:\",\"},gr:i,he:{y:function(e){return 1===e?\"שנה\":\"שנים\"},mo:function(e){return 1===e?\"חודש\":\"חודשים\"},w:function(e){return 1===e?\"שבוע\":\"שבועות\"},d:function(e){return 1===e?\"יום\":\"ימים\"},h:function(e){return 1===e?\"שעה\":\"שעות\"},m:function(e){return 1===e?\"דקה\":\"דקות\"},s:function(e){return 1===e?\"שניה\":\"שניות\"},ms:function(e){return 1===e?\"מילישנייה\":\"מילישניות\"},decimal:\".\"},hr:{y:function(e){return e%10==2||e%10==3||e%10==4?\"godine\":\"godina\"},mo:function(e){return 1===e?\"mjesec\":2===e||3===e||4===e?\"mjeseca\":\"mjeseci\"},w:function(e){return e%10==1&&11!==e?\"tjedan\":\"tjedna\"},d:function(e){return 1===e?\"dan\":\"dana\"},h:function(e){return 1===e?\"sat\":2===e||3===e||4===e?\"sata\":\"sati\"},m:function(e){var t=e%10;return 2!==t&&3!==t&&4!==t||!(e<10||e>14)?\"minuta\":\"minute\"},s:function(e){var t=e%10;return 5===t||Math.floor(e)===e&&e>=10&&e<=19?\"sekundi\":1===t?\"sekunda\":2===t||3===t||4===t?\"sekunde\":\"sekundi\"},ms:function(e){return 1===e?\"milisekunda\":e%10==2||e%10==3||e%10==4?\"milisekunde\":\"milisekundi\"},decimal:\",\"},hi:{y:\"साल\",mo:function(e){return 1===e?\"महीना\":\"महीने\"},w:function(e){return 1===e?\"हफ़्ता\":\"हफ्ते\"},d:\"दिन\",h:function(e){return 1===e?\"घंटा\":\"घंटे\"},m:\"मिनट\",s:\"सेकंड\",ms:\"मिलीसेकंड\",decimal:\".\"},hu:{y:\"év\",mo:\"hónap\",w:\"hét\",d:\"nap\",h:\"óra\",m:\"perc\",s:\"másodperc\",ms:\"ezredmásodperc\",decimal:\",\"},id:{y:\"tahun\",mo:\"bulan\",w:\"minggu\",d:\"hari\",h:\"jam\",m:\"menit\",s:\"detik\",ms:\"milidetik\",decimal:\".\"},is:{y:\"ár\",mo:function(e){return\"mánuð\"+(1===e?\"ur\":\"ir\")},w:function(e){return\"vik\"+(1===e?\"a\":\"ur\")},d:function(e){return\"dag\"+(1===e?\"ur\":\"ar\")},h:function(e){return\"klukkutím\"+(1===e?\"i\":\"ar\")},m:function(e){return\"mínút\"+(1===e?\"a\":\"ur\")},s:function(e){return\"sekúnd\"+(1===e?\"a\":\"ur\")},ms:function(e){return\"millisekúnd\"+(1===e?\"a\":\"ur\")},decimal:\".\"},it:{y:function(e){return\"ann\"+(1===e?\"o\":\"i\")},mo:function(e){return\"mes\"+(1===e?\"e\":\"i\")},w:function(e){return\"settiman\"+(1===e?\"a\":\"e\")},d:function(e){return\"giorn\"+(1===e?\"o\":\"i\")},h:function(e){return\"or\"+(1===e?\"a\":\"e\")},m:function(e){return\"minut\"+(1===e?\"o\":\"i\")},s:function(e){return\"second\"+(1===e?\"o\":\"i\")},ms:function(e){return\"millisecond\"+(1===e?\"o\":\"i\")},decimal:\",\"},ja:{y:\"年\",mo:\"月\",w:\"週\",d:\"日\",h:\"時間\",m:\"分\",s:\"秒\",ms:\"ミリ秒\",decimal:\".\"},ko:{y:\"년\",mo:\"개월\",w:\"주일\",d:\"일\",h:\"시간\",m:\"분\",s:\"초\",ms:\"밀리 초\",decimal:\".\"},lo:{y:\"ປີ\",mo:\"ເດືອນ\",w:\"ອາທິດ\",d:\"ມື້\",h:\"ຊົ່ວໂມງ\",m:\"ນາທີ\",s:\"ວິນາທີ\",ms:\"ມິນລິວິນາທີ\",decimal:\",\"},lt:{y:function(e){return e%10==0||e%100>=10&&e%100<=20?\"metų\":\"metai\"},mo:function(e){return[\"mėnuo\",\"mėnesiai\",\"mėnesių\"][h(e)]},w:function(e){return[\"savaitė\",\"savaitės\",\"savaičių\"][h(e)]},d:function(e){return[\"diena\",\"dienos\",\"dienų\"][h(e)]},h:function(e){return[\"valanda\",\"valandos\",\"valandų\"][h(e)]},m:function(e){return[\"minutė\",\"minutės\",\"minučių\"][h(e)]},s:function(e){return[\"sekundė\",\"sekundės\",\"sekundžių\"][h(e)]},ms:function(e){return[\"milisekundė\",\"milisekundės\",\"milisekundžių\"][h(e)]},decimal:\",\"},lv:{y:function(e){return p(e)?\"gads\":\"gadi\"},mo:function(e){return p(e)?\"mēnesis\":\"mēneši\"},w:function(e){return p(e)?\"nedēļa\":\"nedēļas\"},d:function(e){return p(e)?\"diena\":\"dienas\"},h:function(e){return p(e)?\"stunda\":\"stundas\"},m:function(e){return p(e)?\"minūte\":\"minūtes\"},s:function(e){return p(e)?\"sekunde\":\"sekundes\"},ms:function(e){return p(e)?\"milisekunde\":\"milisekundes\"},decimal:\",\"},ms:{y:\"tahun\",mo:\"bulan\",w:\"minggu\",d:\"hari\",h:\"jam\",m:\"minit\",s:\"saat\",ms:\"milisaat\",decimal:\".\"},nl:{y:\"jaar\",mo:function(e){return 1===e?\"maand\":\"maanden\"},w:function(e){return 1===e?\"week\":\"weken\"},d:function(e){return 1===e?\"dag\":\"dagen\"},h:\"uur\",m:function(e){return 1===e?\"minuut\":\"minuten\"},s:function(e){return 1===e?\"seconde\":\"seconden\"},ms:function(e){return 1===e?\"milliseconde\":\"milliseconden\"},decimal:\",\"},no:{y:\"år\",mo:function(e){return\"måned\"+(1===e?\"\":\"er\")},w:function(e){return\"uke\"+(1===e?\"\":\"r\")},d:function(e){return\"dag\"+(1===e?\"\":\"er\")},h:function(e){return\"time\"+(1===e?\"\":\"r\")},m:function(e){return\"minutt\"+(1===e?\"\":\"er\")},s:function(e){return\"sekund\"+(1===e?\"\":\"er\")},ms:function(e){return\"millisekund\"+(1===e?\"\":\"er\")},decimal:\",\"},pl:{y:function(e){return[\"rok\",\"roku\",\"lata\",\"lat\"][f(e)]},mo:function(e){return[\"miesiąc\",\"miesiąca\",\"miesiące\",\"miesięcy\"][f(e)]},w:function(e){return[\"tydzień\",\"tygodnia\",\"tygodnie\",\"tygodni\"][f(e)]},d:function(e){return[\"dzień\",\"dnia\",\"dni\",\"dni\"][f(e)]},h:function(e){return[\"godzina\",\"godziny\",\"godziny\",\"godzin\"][f(e)]},m:function(e){return[\"minuta\",\"minuty\",\"minuty\",\"minut\"][f(e)]},s:function(e){return[\"sekunda\",\"sekundy\",\"sekundy\",\"sekund\"][f(e)]},ms:function(e){return[\"milisekunda\",\"milisekundy\",\"milisekundy\",\"milisekund\"][f(e)]},decimal:\",\"},pt:{y:function(e){return\"ano\"+(1===e?\"\":\"s\")},mo:function(e){return 1===e?\"mês\":\"meses\"},w:function(e){return\"semana\"+(1===e?\"\":\"s\")},d:function(e){return\"dia\"+(1===e?\"\":\"s\")},h:function(e){return\"hora\"+(1===e?\"\":\"s\")},m:function(e){return\"minuto\"+(1===e?\"\":\"s\")},s:function(e){return\"segundo\"+(1===e?\"\":\"s\")},ms:function(e){return\"milissegundo\"+(1===e?\"\":\"s\")},decimal:\",\"},ro:{y:function(e){return 1===e?\"an\":\"ani\"},mo:function(e){return 1===e?\"lună\":\"luni\"},w:function(e){return 1===e?\"săptămână\":\"săptămâni\"},d:function(e){return 1===e?\"zi\":\"zile\"},h:function(e){return 1===e?\"oră\":\"ore\"},m:function(e){return 1===e?\"minut\":\"minute\"},s:function(e){return 1===e?\"secundă\":\"secunde\"},ms:function(e){return 1===e?\"milisecundă\":\"milisecunde\"},decimal:\",\"},ru:{y:function(e){return[\"лет\",\"год\",\"года\"][l(e)]},mo:function(e){return[\"месяцев\",\"месяц\",\"месяца\"][l(e)]},w:function(e){return[\"недель\",\"неделя\",\"недели\"][l(e)]},d:function(e){return[\"дней\",\"день\",\"дня\"][l(e)]},h:function(e){return[\"часов\",\"час\",\"часа\"][l(e)]},m:function(e){return[\"минут\",\"минута\",\"минуты\"][l(e)]},s:function(e){return[\"секунд\",\"секунда\",\"секунды\"][l(e)]},ms:function(e){return[\"миллисекунд\",\"миллисекунда\",\"миллисекунды\"][l(e)]},decimal:\",\"},uk:{y:function(e){return[\"років\",\"рік\",\"роки\"][l(e)]},mo:function(e){return[\"місяців\",\"місяць\",\"місяці\"][l(e)]},w:function(e){return[\"тижнів\",\"тиждень\",\"тижні\"][l(e)]},d:function(e){return[\"днів\",\"день\",\"дні\"][l(e)]},h:function(e){return[\"годин\",\"година\",\"години\"][l(e)]},m:function(e){return[\"хвилин\",\"хвилина\",\"хвилини\"][l(e)]},s:function(e){return[\"секунд\",\"секунда\",\"секунди\"][l(e)]},ms:function(e){return[\"мілісекунд\",\"мілісекунда\",\"мілісекунди\"][l(e)]},decimal:\",\"},ur:{y:\"سال\",mo:function(e){return 1===e?\"مہینہ\":\"مہینے\"},w:function(e){return 1===e?\"ہفتہ\":\"ہفتے\"},d:\"دن\",h:function(e){return 1===e?\"گھنٹہ\":\"گھنٹے\"},m:\"منٹ\",s:\"سیکنڈ\",ms:\"ملی سیکنڈ\",decimal:\".\"},sk:{y:function(e){return[\"rok\",\"roky\",\"roky\",\"rokov\"][d(e)]},mo:function(e){return[\"mesiac\",\"mesiace\",\"mesiace\",\"mesiacov\"][d(e)]},w:function(e){return[\"týždeň\",\"týždne\",\"týždne\",\"týždňov\"][d(e)]},d:function(e){return[\"deň\",\"dni\",\"dni\",\"dní\"][d(e)]},h:function(e){return[\"hodina\",\"hodiny\",\"hodiny\",\"hodín\"][d(e)]},m:function(e){return[\"minúta\",\"minúty\",\"minúty\",\"minút\"][d(e)]},s:function(e){return[\"sekunda\",\"sekundy\",\"sekundy\",\"sekúnd\"][d(e)]},ms:function(e){return[\"milisekunda\",\"milisekundy\",\"milisekundy\",\"milisekúnd\"][d(e)]},decimal:\",\"},sl:{y:function(e){return e%10==1?\"leto\":e%100==2?\"leti\":e%100==3||e%100==4||Math.floor(e)!==e&&e%100<=5?\"leta\":\"let\"},mo:function(e){return e%10==1?\"mesec\":e%100==2||Math.floor(e)!==e&&e%100<=5?\"meseca\":e%10==3||e%10==4?\"mesece\":\"mesecev\"},w:function(e){return e%10==1?\"teden\":e%10==2||Math.floor(e)!==e&&e%100<=4?\"tedna\":e%10==3||e%10==4?\"tedne\":\"tednov\"},d:function(e){return e%100==1?\"dan\":\"dni\"},h:function(e){return e%10==1?\"ura\":e%100==2?\"uri\":e%10==3||e%10==4||Math.floor(e)!==e?\"ure\":\"ur\"},m:function(e){return e%10==1?\"minuta\":e%10==2?\"minuti\":e%10==3||e%10==4||Math.floor(e)!==e&&e%100<=4?\"minute\":\"minut\"},s:function(e){return e%10==1?\"sekunda\":e%100==2?\"sekundi\":e%100==3||e%100==4||Math.floor(e)!==e?\"sekunde\":\"sekund\"},ms:function(e){return e%10==1?\"milisekunda\":e%100==2?\"milisekundi\":e%100==3||e%100==4||Math.floor(e)!==e?\"milisekunde\":\"milisekund\"},decimal:\",\"},sv:{y:\"år\",mo:function(e){return\"månad\"+(1===e?\"\":\"er\")},w:function(e){return\"veck\"+(1===e?\"a\":\"or\")},d:function(e){return\"dag\"+(1===e?\"\":\"ar\")},h:function(e){return\"timm\"+(1===e?\"e\":\"ar\")},m:function(e){return\"minut\"+(1===e?\"\":\"er\")},s:function(e){return\"sekund\"+(1===e?\"\":\"er\")},ms:function(e){return\"millisekund\"+(1===e?\"\":\"er\")},decimal:\",\"},sw:{y:function(e){return 1===e?\"mwaka\":\"miaka\"},mo:function(e){return 1===e?\"mwezi\":\"miezi\"},w:\"wiki\",d:function(e){return 1===e?\"siku\":\"masiku\"},h:function(e){return 1===e?\"saa\":\"masaa\"},m:\"dakika\",s:\"sekunde\",ms:\"milisekunde\",decimal:\".\"},tr:{y:\"yıl\",mo:\"ay\",w:\"hafta\",d:\"gün\",h:\"saat\",m:\"dakika\",s:\"saniye\",ms:\"milisaniye\",decimal:\",\"},th:{y:\"ปี\",mo:\"เดือน\",w:\"สัปดาห์\",d:\"วัน\",h:\"ชั่วโมง\",m:\"นาที\",s:\"วินาที\",ms:\"มิลลิวินาที\",decimal:\".\"},vi:{y:\"năm\",mo:\"tháng\",w:\"tuần\",d:\"ngày\",h:\"giờ\",m:\"phút\",s:\"giây\",ms:\"mili giây\",decimal:\",\"},zh_CN:{y:\"年\",mo:\"个月\",w:\"周\",d:\"天\",h:\"小时\",m:\"分钟\",s:\"秒\",ms:\"毫秒\",decimal:\".\"},zh_TW:{y:\"年\",mo:\"個月\",w:\"周\",d:\"天\",h:\"小時\",m:\"分鐘\",s:\"秒\",ms:\"毫秒\",decimal:\".\"}};function s(e){var t=function(e,r){return function(e,t){var r,n,i;e=Math.abs(e);var s,a,c,f=function(e){var t=[e.language];if(b(e,\"fallbacks\")){if(!y(e.fallbacks)||!e.fallbacks.length)throw new Error(\"fallbacks must be an array with at least one element\");t=t.concat(e.fallbacks)}for(var r=0;r<t.length;r++){var n=t[r];if(b(e.languages,n))return e.languages[n];if(b(o,n))return o[n]}throw new Error(\"No language found.\")}(t),l=[];for(r=0,n=t.units.length;r<n;r++){if(s=t.units[r],a=t.unitMeasures[s],r+1===n)if(b(t,\"maxDecimalPoints\")){var d=Math.pow(10,t.maxDecimalPoints),h=e/a;c=parseFloat((Math.floor(d*h)/d).toFixed(t.maxDecimalPoints))}else c=e/a;else c=Math.floor(e/a);l.push({unitCount:c,unitName:s}),e-=c*a}var p,m,g=0;for(r=0;r<l.length;r++)if(l[r].unitCount){g=r;break}if(t.round)for(r=l.length-1;r>=0&&((i=l[r]).unitCount=Math.round(i.unitCount),0!==r);r--)m=l[r-1],p=t.unitMeasures[m.unitName]/t.unitMeasures[i.unitName],(i.unitCount%p==0||t.largest&&t.largest-1<r-g)&&(m.unitCount+=i.unitCount/p,i.unitCount=0);var v=[];for(r=0,l.length;r<n&&((i=l[r]).unitCount&&v.push(u(i.unitCount,i.unitName,f,t)),v.length!==t.largest);r++);return v.length?t.conjunction&&1!==v.length?2===v.length?v.join(t.conjunction):v.length>2?v.slice(0,-1).join(t.delimiter)+(t.serialComma?\",\":\"\")+t.conjunction+v.slice(-1):void 0:v.join(t.delimiter):u(0,t.units[t.units.length-1],f,t)}(e,c({},t,r||{}))};return c(t,{language:\"en\",delimiter:\", \",spacer:\" \",conjunction:\"\",serialComma:!0,units:[\"y\",\"mo\",\"w\",\"d\",\"h\",\"m\",\"s\"],languages:{},round:!1,unitMeasures:{y:315576e5,mo:26298e5,w:6048e5,d:864e5,h:36e5,m:6e4,s:1e3,ms:1}},e)}var a=s({});function u(e,t,r,n){var i;i=b(n,\"decimal\")?n.decimal:b(r,\"decimal\")?r.decimal:\".\";var o,s=e.toString().replace(\".\",i),a=r[t];return o=\"function\"==typeof a?a(e):a,s+n.spacer+o}function c(e){for(var t,r=1;r<arguments.length;r++)for(var n in t=arguments[r])b(t,n)&&(e[n]=t[n]);return e}function f(e){return 1===e?0:Math.floor(e)!==e?1:e%10>=2&&e%10<=4&&!(e%100>10&&e%100<20)?2:3}function l(e){return Math.floor(e)!==e?2:e%100>=5&&e%100<=20||e%10>=5&&e%10<=9||e%10==0?0:e%10==1?1:e>1?2:0}function d(e){return 1===e?0:Math.floor(e)!==e?1:e%10>=2&&e%10<=4&&e%100<10?2:3}function h(e){return 1===e||e%10==1&&e%100>20?0:Math.floor(e)!==e||e%10>=2&&e%100>20||e%10>=2&&e%100<10?1:2}function p(e){return e%10==1&&e%100!=11}var y=Array.isArray||function(e){return\"[object Array]\"===Object.prototype.toString.call(e)};function b(e,t){return Object.prototype.hasOwnProperty.call(e,t)}a.getSupportedLanguages=function(){var e=[];for(var t in o)b(o,t)&&\"gr\"!==t&&e.push(t);return e},a.humanizer=s,void 0===(n=function(){return a}.call(t,r,t,e))||(e.exports=n)}()},645:(e,t)=>{t.read=function(e,t,r,n,i){var o,s,a=8*i-n-1,u=(1<<a)-1,c=u>>1,f=-7,l=r?i-1:0,d=r?-1:1,h=e[t+l];for(l+=d,o=h&(1<<-f)-1,h>>=-f,f+=a;f>0;o=256*o+e[t+l],l+=d,f-=8);for(s=o&(1<<-f)-1,o>>=-f,f+=n;f>0;s=256*s+e[t+l],l+=d,f-=8);if(0===o)o=1-c;else{if(o===u)return s?NaN:1/0*(h?-1:1);s+=Math.pow(2,n),o-=c}return(h?-1:1)*s*Math.pow(2,o-n)},t.write=function(e,t,r,n,i,o){var s,a,u,c=8*o-i-1,f=(1<<c)-1,l=f>>1,d=23===i?Math.pow(2,-24)-Math.pow(2,-77):0,h=n?0:o-1,p=n?1:-1,y=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(a=isNaN(t)?1:0,s=f):(s=Math.floor(Math.log(t)/Math.LN2),t*(u=Math.pow(2,-s))<1&&(s--,u*=2),(t+=s+l>=1?d/u:d*Math.pow(2,1-l))*u>=2&&(s++,u/=2),s+l>=f?(a=0,s=f):s+l>=1?(a=(t*u-1)*Math.pow(2,i),s+=l):(a=t*Math.pow(2,l-1)*Math.pow(2,i),s=0));i>=8;e[r+h]=255&a,h+=p,a/=256,i-=8);for(s=s<<i|a,c+=i;c>0;e[r+h]=255&s,h+=p,s/=256,c-=8);e[r+h-p]|=128*y}},5717:e=>{\"function\"==typeof Object.create?e.exports=function(e,t){t&&(e.super_=t,e.prototype=Object.create(t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}))}:e.exports=function(e,t){if(t){e.super_=t;var r=function(){};r.prototype=t.prototype,e.prototype=new r,e.prototype.constructor=e}}},4301:(e,t,r)=>{r(7147),e.exports=self.fetch.bind(self)},6792:(e,t,r)=>{\"use strict\";r.r(t),r.d(t,{default:()=>i});var n=null;\"undefined\"!=typeof WebSocket?n=WebSocket:\"undefined\"!=typeof MozWebSocket?n=MozWebSocket:void 0!==r.g?n=r.g.WebSocket||r.g.MozWebSocket:\"undefined\"!=typeof window?n=window.WebSocket||window.MozWebSocket:\"undefined\"!=typeof self&&(n=self.WebSocket||self.MozWebSocket);const i=n},8917:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const n=r(2491);t.default=n.default},2491:(e,t,r)=>{\"use strict\";var n=r(8764).Buffer;Object.defineProperty(t,\"__esModule\",{value:!0});const i=r(6266),o=r(9809),s=r(3550),a=o.define(\"ECPrivateKey\",(function(){const e=this;e.seq().obj(e.key(\"version\").int(),e.key(\"privateKey\").octstr(),e.key(\"parameters\").explicit(0).objid().optional(),e.key(\"publicKey\").explicit(1).bitstr().optional())})),u=o.define(\"SubjectPublicKeyInfo\",(function(){const e=this;e.seq().obj(e.key(\"algorithm\").seq().obj(e.key(\"id\").objid(),e.key(\"curve\").objid()),e.key(\"pub\").bitstr())})),c={secp256k1:{curveParameters:[1,3,132,0,10],privatePEMOptions:{label:\"EC PRIVATE KEY\"},publicPEMOptions:{label:\"PUBLIC KEY\"},curve:new i.ec(\"secp256k1\")}};class f{constructor(e){if(\"string\"==typeof e){if(\"secp256k1\"!==e)throw new Error(\"Unknown curve \"+e);e=c[e]}this.options=e,this.algorithmID=[1,2,840,10045,2,1]}privateKeyObject(e,t){const r={version:new s(1),privateKey:n.from(e,\"hex\"),parameters:this.options.curveParameters};return t&&(r.publicKey={unused:0,data:n.from(t,\"hex\")}),r}publicKeyObject(e){return{algorithm:{id:this.algorithmID,curve:this.options.curveParameters},pub:{unused:0,data:n.from(e,\"hex\")}}}encodePrivate(e,t,r){let i;if(\"raw\"===t){if(\"string\"!=typeof e)throw\"private key must be a string\";let t=this.options.curve.keyFromPrivate(e,\"hex\").getPublic(\"hex\");i=this.privateKeyObject(e,t)}else if(\"der\"===t){if(\"string\"!=typeof e);else{if(\"string\"!=typeof e)throw\"private key must be a buffer or a string\";e=n.from(e,\"hex\")}i=a.decode(e,\"der\")}else{if(\"pem\"!==t)throw\"invalid private key format\";if(\"string\"!=typeof e)throw\"private key must be a string\";i=a.decode(e,\"pem\",this.options.privatePEMOptions)}if(\"raw\"===r)return i.privateKey.toString(\"hex\");if(\"der\"===r)return a.encode(i,\"der\").toString(\"hex\");if(\"pem\"===r)return a.encode(i,\"pem\",this.options.privatePEMOptions);throw\"invalid destination format for private key\"}encodePublic(e,t,r){let i;if(\"raw\"===t){if(\"string\"!=typeof e)throw\"public key must be a string\";i=this.publicKeyObject(e)}else if(\"der\"===t){if(\"string\"!=typeof e);else{if(\"string\"!=typeof e)throw\"public key must be a buffer or a string\";e=n.from(e,\"hex\")}i=u.decode(e,\"der\")}else{if(\"pem\"!==t)throw\"invalid public key format\";if(\"string\"!=typeof e)throw\"public key must be a string\";i=u.decode(e,\"pem\",this.options.publicPEMOptions)}if(\"raw\"===r)return i.pub.data.toString(\"hex\");if(\"der\"===r)return u.encode(i,\"der\").toString(\"hex\");if(\"pem\"===r)return u.encode(i,\"pem\",this.options.publicPEMOptions);throw\"invalid destination format for public key\"}}t.default=f,f.ECPrivateKeyASN=a,f.SubjectPublicKeyInfoASN=u},9746:e=>{function t(e,t){if(!e)throw new Error(t||\"Assertion failed\")}e.exports=t,t.equal=function(e,t,r){if(e!=t)throw new Error(r||\"Assertion failed: \"+e+\" != \"+t)}},4504:(e,t)=>{\"use strict\";var r=t;function n(e){return 1===e.length?\"0\"+e:e}function i(e){for(var t=\"\",r=0;r<e.length;r++)t+=n(e[r].toString(16));return t}r.toArray=function(e,t){if(Array.isArray(e))return e.slice();if(!e)return[];var r=[];if(\"string\"!=typeof e){for(var n=0;n<e.length;n++)r[n]=0|e[n];return r}if(\"hex\"===t)for((e=e.replace(/[^a-z0-9]+/gi,\"\")).length%2!=0&&(e=\"0\"+e),n=0;n<e.length;n+=2)r.push(parseInt(e[n]+e[n+1],16));else for(n=0;n<e.length;n++){var i=e.charCodeAt(n),o=i>>8,s=255&i;o?r.push(o,s):r.push(s)}return r},r.zero2=n,r.toHex=i,r.encode=function(e,t){return\"hex\"===t?i(e):e}},3300:(e,t,r)=>{\"use strict\";var n=function(){if(\"undefined\"!=typeof self)return self;if(\"undefined\"!=typeof window)return window;if(void 0!==r.g)return r.g;throw new Error(\"unable to locate global object\")}();e.exports=t=n.fetch,n.fetch&&(t.default=n.fetch.bind(n)),t.Headers=n.Headers,t.Request=n.Request,t.Response=n.Response},4155:e=>{var t,r,n=e.exports={};function i(){throw new Error(\"setTimeout has not been defined\")}function o(){throw new Error(\"clearTimeout has not been defined\")}function s(e){if(t===setTimeout)return setTimeout(e,0);if((t===i||!t)&&setTimeout)return t=setTimeout,setTimeout(e,0);try{return t(e,0)}catch(r){try{return t.call(null,e,0)}catch(r){return t.call(this,e,0)}}}!function(){try{t=\"function\"==typeof setTimeout?setTimeout:i}catch(e){t=i}try{r=\"function\"==typeof clearTimeout?clearTimeout:o}catch(e){r=o}}();var a,u=[],c=!1,f=-1;function l(){c&&a&&(c=!1,a.length?u=a.concat(u):f=-1,u.length&&d())}function d(){if(!c){var e=s(l);c=!0;for(var t=u.length;t;){for(a=u,u=[];++f<t;)a&&a[f].run();f=-1,t=u.length}a=null,c=!1,function(e){if(r===clearTimeout)return clearTimeout(e);if((r===o||!r)&&clearTimeout)return r=clearTimeout,clearTimeout(e);try{return r(e)}catch(t){try{return r.call(null,e)}catch(t){return r.call(this,e)}}}(e)}}function h(e,t){this.fun=e,this.array=t}function p(){}n.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var r=1;r<arguments.length;r++)t[r-1]=arguments[r];u.push(new h(e,t)),1!==u.length||c||s(d)},h.prototype.run=function(){this.fun.apply(null,this.array)},n.title=\"browser\",n.browser=!0,n.env={},n.argv=[],n.version=\"\",n.versions={},n.on=p,n.addListener=p,n.once=p,n.off=p,n.removeListener=p,n.removeAllListeners=p,n.emit=p,n.prependListener=p,n.prependOnceListener=p,n.listeners=function(e){return[]},n.binding=function(e){throw new Error(\"process.binding is not supported\")},n.cwd=function(){return\"/\"},n.chdir=function(e){throw new Error(\"process.chdir is not supported\")},n.umask=function(){return 0}},2587:e=>{\"use strict\";function t(e,t){return Object.prototype.hasOwnProperty.call(e,t)}e.exports=function(e,r,n,i){r=r||\"&\",n=n||\"=\";var o={};if(\"string\"!=typeof e||0===e.length)return o;var s=/\\+/g;e=e.split(r);var a=1e3;i&&\"number\"==typeof i.maxKeys&&(a=i.maxKeys);var u=e.length;a>0&&u>a&&(u=a);for(var c=0;c<u;++c){var f,l,d,h,p=e[c].replace(s,\"%20\"),y=p.indexOf(n);y>=0?(f=p.substr(0,y),l=p.substr(y+1)):(f=p,l=\"\"),d=decodeURIComponent(f),h=decodeURIComponent(l),t(o,d)?Array.isArray(o[d])?o[d].push(h):o[d]=[o[d],h]:o[d]=h}return o}},2182:e=>{\"use strict\";var t=function(e){switch(typeof e){case\"string\":return e;case\"boolean\":return e?\"true\":\"false\";case\"number\":return isFinite(e)?e:\"\";default:return\"\"}};e.exports=function(e,r,n,i){return r=r||\"&\",n=n||\"=\",null===e&&(e=void 0),\"object\"==typeof e?Object.keys(e).map((function(i){var o=encodeURIComponent(t(i))+n;return Array.isArray(e[i])?e[i].map((function(e){return o+encodeURIComponent(t(e))})).join(r):o+encodeURIComponent(t(e[i]))})).join(r):i?encodeURIComponent(t(i))+n+encodeURIComponent(t(e)):\"\"}},7673:(e,t,r)=>{\"use strict\";t.decode=t.parse=r(2587),t.encode=t.stringify=r(2182)},4281:e=>{\"use strict\";var t={};function r(e,r,n){n||(n=Error);var i=function(e){var t,n;function i(t,n,i){return e.call(this,function(e,t,n){return\"string\"==typeof r?r:r(e,t,n)}(t,n,i))||this}return n=e,(t=i).prototype=Object.create(n.prototype),t.prototype.constructor=t,t.__proto__=n,i}(n);i.prototype.name=n.name,i.prototype.code=e,t[e]=i}function n(e,t){if(Array.isArray(e)){var r=e.length;return e=e.map((function(e){return String(e)})),r>2?\"one of \".concat(t,\" \").concat(e.slice(0,r-1).join(\", \"),\", or \")+e[r-1]:2===r?\"one of \".concat(t,\" \").concat(e[0],\" or \").concat(e[1]):\"of \".concat(t,\" \").concat(e[0])}return\"of \".concat(t,\" \").concat(String(e))}r(\"ERR_INVALID_OPT_VALUE\",(function(e,t){return'The value \"'+t+'\" is invalid for option \"'+e+'\"'}),TypeError),r(\"ERR_INVALID_ARG_TYPE\",(function(e,t,r){var i,o,s,a,u;if(\"string\"==typeof t&&(o=\"not \",t.substr(0,o.length)===o)?(i=\"must not be\",t=t.replace(/^not /,\"\")):i=\"must be\",function(e,t,r){return(void 0===r||r>e.length)&&(r=e.length),e.substring(r-t.length,r)===t}(e,\" argument\"))s=\"The \".concat(e,\" \").concat(i,\" \").concat(n(t,\"type\"));else{var c=(\"number\"!=typeof u&&(u=0),u+\".\".length>(a=e).length||-1===a.indexOf(\".\",u)?\"argument\":\"property\");s='The \"'.concat(e,'\" ').concat(c,\" \").concat(i,\" \").concat(n(t,\"type\"))}return s+\". Received type \".concat(typeof r)}),TypeError),r(\"ERR_STREAM_PUSH_AFTER_EOF\",\"stream.push() after EOF\"),r(\"ERR_METHOD_NOT_IMPLEMENTED\",(function(e){return\"The \"+e+\" method is not implemented\"})),r(\"ERR_STREAM_PREMATURE_CLOSE\",\"Premature close\"),r(\"ERR_STREAM_DESTROYED\",(function(e){return\"Cannot call \"+e+\" after a stream was destroyed\"})),r(\"ERR_MULTIPLE_CALLBACK\",\"Callback called multiple times\"),r(\"ERR_STREAM_CANNOT_PIPE\",\"Cannot pipe, not readable\"),r(\"ERR_STREAM_WRITE_AFTER_END\",\"write after end\"),r(\"ERR_STREAM_NULL_VALUES\",\"May not write null values to stream\",TypeError),r(\"ERR_UNKNOWN_ENCODING\",(function(e){return\"Unknown encoding: \"+e}),TypeError),r(\"ERR_STREAM_UNSHIFT_AFTER_END_EVENT\",\"stream.unshift() after end event\"),e.exports.q=t},6753:(e,t,r)=>{\"use strict\";var n=r(4155),i=Object.keys||function(e){var t=[];for(var r in e)t.push(r);return t};e.exports=f;var o=r(9481),s=r(4229);r(5717)(f,o);for(var a=i(s.prototype),u=0;u<a.length;u++){var c=a[u];f.prototype[c]||(f.prototype[c]=s.prototype[c])}function f(e){if(!(this instanceof f))return new f(e);o.call(this,e),s.call(this,e),this.allowHalfOpen=!0,e&&(!1===e.readable&&(this.readable=!1),!1===e.writable&&(this.writable=!1),!1===e.allowHalfOpen&&(this.allowHalfOpen=!1,this.once(\"end\",l)))}function l(){this._writableState.ended||n.nextTick(d,this)}function d(e){e.end()}Object.defineProperty(f.prototype,\"writableHighWaterMark\",{enumerable:!1,get:function(){return this._writableState.highWaterMark}}),Object.defineProperty(f.prototype,\"writableBuffer\",{enumerable:!1,get:function(){return this._writableState&&this._writableState.getBuffer()}}),Object.defineProperty(f.prototype,\"writableLength\",{enumerable:!1,get:function(){return this._writableState.length}}),Object.defineProperty(f.prototype,\"destroyed\",{enumerable:!1,get:function(){return void 0!==this._readableState&&void 0!==this._writableState&&this._readableState.destroyed&&this._writableState.destroyed},set:function(e){void 0!==this._readableState&&void 0!==this._writableState&&(this._readableState.destroyed=e,this._writableState.destroyed=e)}})},2725:(e,t,r)=>{\"use strict\";e.exports=i;var n=r(4605);function i(e){if(!(this instanceof i))return new i(e);n.call(this,e)}r(5717)(i,n),i.prototype._transform=function(e,t,r){r(null,e)}},9481:(e,t,r)=>{\"use strict\";var n,i=r(4155);e.exports=B,B.ReadableState=T,r(7187).EventEmitter;var o,s=function(e,t){return e.listeners(t).length},a=r(2503),u=r(8764).Buffer,c=r.g.Uint8Array||function(){},f=r(4616);o=f&&f.debuglog?f.debuglog(\"stream\"):function(){};var l,d,h,p=r(7327),y=r(1195),b=r(2457).getHighWaterMark,m=r(4281).q,g=m.ERR_INVALID_ARG_TYPE,v=m.ERR_STREAM_PUSH_AFTER_EOF,w=m.ERR_METHOD_NOT_IMPLEMENTED,E=m.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;r(5717)(B,a);var _=y.errorOrDestroy,S=[\"error\",\"close\",\"destroy\",\"pause\",\"resume\"];function T(e,t,i){n=n||r(6753),e=e||{},\"boolean\"!=typeof i&&(i=t instanceof n),this.objectMode=!!e.objectMode,i&&(this.objectMode=this.objectMode||!!e.readableObjectMode),this.highWaterMark=b(this,e,\"readableHighWaterMark\",i),this.buffer=new p,this.length=0,this.pipes=null,this.pipesCount=0,this.flowing=null,this.ended=!1,this.endEmitted=!1,this.reading=!1,this.sync=!0,this.needReadable=!1,this.emittedReadable=!1,this.readableListening=!1,this.resumeScheduled=!1,this.paused=!0,this.emitClose=!1!==e.emitClose,this.autoDestroy=!!e.autoDestroy,this.destroyed=!1,this.defaultEncoding=e.defaultEncoding||\"utf8\",this.awaitDrain=0,this.readingMore=!1,this.decoder=null,this.encoding=null,e.encoding&&(l||(l=r(2553).s),this.decoder=new l(e.encoding),this.encoding=e.encoding)}function B(e){if(n=n||r(6753),!(this instanceof B))return new B(e);var t=this instanceof n;this._readableState=new T(e,this,t),this.readable=!0,e&&(\"function\"==typeof e.read&&(this._read=e.read),\"function\"==typeof e.destroy&&(this._destroy=e.destroy)),a.call(this)}function A(e,t,r,n,i){o(\"readableAddChunk\",t);var s,a=e._readableState;if(null===t)a.reading=!1,function(e,t){if(o(\"onEofChunk\"),!t.ended){if(t.decoder){var r=t.decoder.end();r&&r.length&&(t.buffer.push(r),t.length+=t.objectMode?1:r.length)}t.ended=!0,t.sync?C(e):(t.needReadable=!1,t.emittedReadable||(t.emittedReadable=!0,O(e)))}}(e,a);else if(i||(s=function(e,t){var r,n;return n=t,u.isBuffer(n)||n instanceof c||\"string\"==typeof t||void 0===t||e.objectMode||(r=new g(\"chunk\",[\"string\",\"Buffer\",\"Uint8Array\"],t)),r}(a,t)),s)_(e,s);else if(a.objectMode||t&&t.length>0)if(\"string\"==typeof t||a.objectMode||Object.getPrototypeOf(t)===u.prototype||(t=function(e){return u.from(e)}(t)),n)a.endEmitted?_(e,new E):x(e,a,t,!0);else if(a.ended)_(e,new v);else{if(a.destroyed)return!1;a.reading=!1,a.decoder&&!r?(t=a.decoder.write(t),a.objectMode||0!==t.length?x(e,a,t,!1):k(e,a)):x(e,a,t,!1)}else n||(a.reading=!1,k(e,a));return!a.ended&&(a.length<a.highWaterMark||0===a.length)}function x(e,t,r,n){t.flowing&&0===t.length&&!t.sync?(t.awaitDrain=0,e.emit(\"data\",r)):(t.length+=t.objectMode?1:r.length,n?t.buffer.unshift(r):t.buffer.push(r),t.needReadable&&C(e)),k(e,t)}Object.defineProperty(B.prototype,\"destroyed\",{enumerable:!1,get:function(){return void 0!==this._readableState&&this._readableState.destroyed},set:function(e){this._readableState&&(this._readableState.destroyed=e)}}),B.prototype.destroy=y.destroy,B.prototype._undestroy=y.undestroy,B.prototype._destroy=function(e,t){t(e)},B.prototype.push=function(e,t){var r,n=this._readableState;return n.objectMode?r=!0:\"string\"==typeof e&&((t=t||n.defaultEncoding)!==n.encoding&&(e=u.from(e,t),t=\"\"),r=!0),A(this,e,t,!1,r)},B.prototype.unshift=function(e){return A(this,e,null,!0,!1)},B.prototype.isPaused=function(){return!1===this._readableState.flowing},B.prototype.setEncoding=function(e){l||(l=r(2553).s);var t=new l(e);this._readableState.decoder=t,this._readableState.encoding=this._readableState.decoder.encoding;for(var n=this._readableState.buffer.head,i=\"\";null!==n;)i+=t.write(n.data),n=n.next;return this._readableState.buffer.clear(),\"\"!==i&&this._readableState.buffer.push(i),this._readableState.length=i.length,this};var P=1073741824;function M(e,t){return e<=0||0===t.length&&t.ended?0:t.objectMode?1:e!=e?t.flowing&&t.length?t.buffer.head.data.length:t.length:(e>t.highWaterMark&&(t.highWaterMark=function(e){return e>=P?e=P:(e--,e|=e>>>1,e|=e>>>2,e|=e>>>4,e|=e>>>8,e|=e>>>16,e++),e}(e)),e<=t.length?e:t.ended?t.length:(t.needReadable=!0,0))}function C(e){var t=e._readableState;o(\"emitReadable\",t.needReadable,t.emittedReadable),t.needReadable=!1,t.emittedReadable||(o(\"emitReadable\",t.flowing),t.emittedReadable=!0,i.nextTick(O,e))}function O(e){var t=e._readableState;o(\"emitReadable_\",t.destroyed,t.length,t.ended),t.destroyed||!t.length&&!t.ended||(e.emit(\"readable\"),t.emittedReadable=!1),t.needReadable=!t.flowing&&!t.ended&&t.length<=t.highWaterMark,U(e)}function k(e,t){t.readingMore||(t.readingMore=!0,i.nextTick(R,e,t))}function R(e,t){for(;!t.reading&&!t.ended&&(t.length<t.highWaterMark||t.flowing&&0===t.length);){var r=t.length;if(o(\"maybeReadMore read 0\"),e.read(0),r===t.length)break}t.readingMore=!1}function L(e){var t=e._readableState;t.readableListening=e.listenerCount(\"readable\")>0,t.resumeScheduled&&!t.paused?t.flowing=!0:e.listenerCount(\"data\")>0&&e.resume()}function I(e){o(\"readable nexttick read 0\"),e.read(0)}function N(e,t){o(\"resume\",t.reading),t.reading||e.read(0),t.resumeScheduled=!1,e.emit(\"resume\"),U(e),t.flowing&&!t.reading&&e.read(0)}function U(e){var t=e._readableState;for(o(\"flow\",t.flowing);t.flowing&&null!==e.read(););}function j(e,t){return 0===t.length?null:(t.objectMode?r=t.buffer.shift():!e||e>=t.length?(r=t.decoder?t.buffer.join(\"\"):1===t.buffer.length?t.buffer.first():t.buffer.concat(t.length),t.buffer.clear()):r=t.buffer.consume(e,t.decoder),r);var r}function H(e){var t=e._readableState;o(\"endReadable\",t.endEmitted),t.endEmitted||(t.ended=!0,i.nextTick(D,t,e))}function D(e,t){if(o(\"endReadableNT\",e.endEmitted,e.length),!e.endEmitted&&0===e.length&&(e.endEmitted=!0,t.readable=!1,t.emit(\"end\"),e.autoDestroy)){var r=t._writableState;(!r||r.autoDestroy&&r.finished)&&t.destroy()}}function q(e,t){for(var r=0,n=e.length;r<n;r++)if(e[r]===t)return r;return-1}B.prototype.read=function(e){o(\"read\",e),e=parseInt(e,10);var t=this._readableState,r=e;if(0!==e&&(t.emittedReadable=!1),0===e&&t.needReadable&&((0!==t.highWaterMark?t.length>=t.highWaterMark:t.length>0)||t.ended))return o(\"read: emitReadable\",t.length,t.ended),0===t.length&&t.ended?H(this):C(this),null;if(0===(e=M(e,t))&&t.ended)return 0===t.length&&H(this),null;var n,i=t.needReadable;return o(\"need readable\",i),(0===t.length||t.length-e<t.highWaterMark)&&o(\"length less than watermark\",i=!0),t.ended||t.reading?o(\"reading or ended\",i=!1):i&&(o(\"do read\"),t.reading=!0,t.sync=!0,0===t.length&&(t.needReadable=!0),this._read(t.highWaterMark),t.sync=!1,t.reading||(e=M(r,t))),null===(n=e>0?j(e,t):null)?(t.needReadable=t.length<=t.highWaterMark,e=0):(t.length-=e,t.awaitDrain=0),0===t.length&&(t.ended||(t.needReadable=!0),r!==e&&t.ended&&H(this)),null!==n&&this.emit(\"data\",n),n},B.prototype._read=function(e){_(this,new w(\"_read()\"))},B.prototype.pipe=function(e,t){var r=this,n=this._readableState;switch(n.pipesCount){case 0:n.pipes=e;break;case 1:n.pipes=[n.pipes,e];break;default:n.pipes.push(e)}n.pipesCount+=1,o(\"pipe count=%d opts=%j\",n.pipesCount,t);var a=t&&!1===t.end||e===i.stdout||e===i.stderr?y:u;function u(){o(\"onend\"),e.end()}n.endEmitted?i.nextTick(a):r.once(\"end\",a),e.on(\"unpipe\",(function t(i,s){o(\"onunpipe\"),i===r&&s&&!1===s.hasUnpiped&&(s.hasUnpiped=!0,o(\"cleanup\"),e.removeListener(\"close\",h),e.removeListener(\"finish\",p),e.removeListener(\"drain\",c),e.removeListener(\"error\",d),e.removeListener(\"unpipe\",t),r.removeListener(\"end\",u),r.removeListener(\"end\",y),r.removeListener(\"data\",l),f=!0,!n.awaitDrain||e._writableState&&!e._writableState.needDrain||c())}));var c=function(e){return function(){var t=e._readableState;o(\"pipeOnDrain\",t.awaitDrain),t.awaitDrain&&t.awaitDrain--,0===t.awaitDrain&&s(e,\"data\")&&(t.flowing=!0,U(e))}}(r);e.on(\"drain\",c);var f=!1;function l(t){o(\"ondata\");var i=e.write(t);o(\"dest.write\",i),!1===i&&((1===n.pipesCount&&n.pipes===e||n.pipesCount>1&&-1!==q(n.pipes,e))&&!f&&(o(\"false write response, pause\",n.awaitDrain),n.awaitDrain++),r.pause())}function d(t){o(\"onerror\",t),y(),e.removeListener(\"error\",d),0===s(e,\"error\")&&_(e,t)}function h(){e.removeListener(\"finish\",p),y()}function p(){o(\"onfinish\"),e.removeListener(\"close\",h),y()}function y(){o(\"unpipe\"),r.unpipe(e)}return r.on(\"data\",l),function(e,t,r){if(\"function\"==typeof e.prependListener)return e.prependListener(t,r);e._events&&e._events[t]?Array.isArray(e._events[t])?e._events[t].unshift(r):e._events[t]=[r,e._events[t]]:e.on(t,r)}(e,\"error\",d),e.once(\"close\",h),e.once(\"finish\",p),e.emit(\"pipe\",r),n.flowing||(o(\"pipe resume\"),r.resume()),e},B.prototype.unpipe=function(e){var t=this._readableState,r={hasUnpiped:!1};if(0===t.pipesCount)return this;if(1===t.pipesCount)return e&&e!==t.pipes||(e||(e=t.pipes),t.pipes=null,t.pipesCount=0,t.flowing=!1,e&&e.emit(\"unpipe\",this,r)),this;if(!e){var n=t.pipes,i=t.pipesCount;t.pipes=null,t.pipesCount=0,t.flowing=!1;for(var o=0;o<i;o++)n[o].emit(\"unpipe\",this,{hasUnpiped:!1});return this}var s=q(t.pipes,e);return-1===s||(t.pipes.splice(s,1),t.pipesCount-=1,1===t.pipesCount&&(t.pipes=t.pipes[0]),e.emit(\"unpipe\",this,r)),this},B.prototype.on=function(e,t){var r=a.prototype.on.call(this,e,t),n=this._readableState;return\"data\"===e?(n.readableListening=this.listenerCount(\"readable\")>0,!1!==n.flowing&&this.resume()):\"readable\"===e&&(n.endEmitted||n.readableListening||(n.readableListening=n.needReadable=!0,n.flowing=!1,n.emittedReadable=!1,o(\"on readable\",n.length,n.reading),n.length?C(this):n.reading||i.nextTick(I,this))),r},B.prototype.addListener=B.prototype.on,B.prototype.removeListener=function(e,t){var r=a.prototype.removeListener.call(this,e,t);return\"readable\"===e&&i.nextTick(L,this),r},B.prototype.removeAllListeners=function(e){var t=a.prototype.removeAllListeners.apply(this,arguments);return\"readable\"!==e&&void 0!==e||i.nextTick(L,this),t},B.prototype.resume=function(){var e=this._readableState;return e.flowing||(o(\"resume\"),e.flowing=!e.readableListening,function(e,t){t.resumeScheduled||(t.resumeScheduled=!0,i.nextTick(N,e,t))}(this,e)),e.paused=!1,this},B.prototype.pause=function(){return o(\"call pause flowing=%j\",this._readableState.flowing),!1!==this._readableState.flowing&&(o(\"pause\"),this._readableState.flowing=!1,this.emit(\"pause\")),this._readableState.paused=!0,this},B.prototype.wrap=function(e){var t=this,r=this._readableState,n=!1;for(var i in e.on(\"end\",(function(){if(o(\"wrapped end\"),r.decoder&&!r.ended){var e=r.decoder.end();e&&e.length&&t.push(e)}t.push(null)})),e.on(\"data\",(function(i){o(\"wrapped data\"),r.decoder&&(i=r.decoder.write(i)),r.objectMode&&null==i||(r.objectMode||i&&i.length)&&(t.push(i)||(n=!0,e.pause()))})),e)void 0===this[i]&&\"function\"==typeof e[i]&&(this[i]=function(t){return function(){return e[t].apply(e,arguments)}}(i));for(var s=0;s<S.length;s++)e.on(S[s],this.emit.bind(this,S[s]));return this._read=function(t){o(\"wrapped _read\",t),n&&(n=!1,e.resume())},this},\"function\"==typeof Symbol&&(B.prototype[Symbol.asyncIterator]=function(){return void 0===d&&(d=r(5850)),d(this)}),Object.defineProperty(B.prototype,\"readableHighWaterMark\",{enumerable:!1,get:function(){return this._readableState.highWaterMark}}),Object.defineProperty(B.prototype,\"readableBuffer\",{enumerable:!1,get:function(){return this._readableState&&this._readableState.buffer}}),Object.defineProperty(B.prototype,\"readableFlowing\",{enumerable:!1,get:function(){return this._readableState.flowing},set:function(e){this._readableState&&(this._readableState.flowing=e)}}),B._fromList=j,Object.defineProperty(B.prototype,\"readableLength\",{enumerable:!1,get:function(){return this._readableState.length}}),\"function\"==typeof Symbol&&(B.from=function(e,t){return void 0===h&&(h=r(5167)),h(B,e,t)})},4605:(e,t,r)=>{\"use strict\";e.exports=f;var n=r(4281).q,i=n.ERR_METHOD_NOT_IMPLEMENTED,o=n.ERR_MULTIPLE_CALLBACK,s=n.ERR_TRANSFORM_ALREADY_TRANSFORMING,a=n.ERR_TRANSFORM_WITH_LENGTH_0,u=r(6753);function c(e,t){var r=this._transformState;r.transforming=!1;var n=r.writecb;if(null===n)return this.emit(\"error\",new o);r.writechunk=null,r.writecb=null,null!=t&&this.push(t),n(e);var i=this._readableState;i.reading=!1,(i.needReadable||i.length<i.highWaterMark)&&this._read(i.highWaterMark)}function f(e){if(!(this instanceof f))return new f(e);u.call(this,e),this._transformState={afterTransform:c.bind(this),needTransform:!1,transforming:!1,writecb:null,writechunk:null,writeencoding:null},this._readableState.needReadable=!0,this._readableState.sync=!1,e&&(\"function\"==typeof e.transform&&(this._transform=e.transform),\"function\"==typeof e.flush&&(this._flush=e.flush)),this.on(\"prefinish\",l)}function l(){var e=this;\"function\"!=typeof this._flush||this._readableState.destroyed?d(this,null,null):this._flush((function(t,r){d(e,t,r)}))}function d(e,t,r){if(t)return e.emit(\"error\",t);if(null!=r&&e.push(r),e._writableState.length)throw new a;if(e._transformState.transforming)throw new s;return e.push(null)}r(5717)(f,u),f.prototype.push=function(e,t){return this._transformState.needTransform=!1,u.prototype.push.call(this,e,t)},f.prototype._transform=function(e,t,r){r(new i(\"_transform()\"))},f.prototype._write=function(e,t,r){var n=this._transformState;if(n.writecb=r,n.writechunk=e,n.writeencoding=t,!n.transforming){var i=this._readableState;(n.needTransform||i.needReadable||i.length<i.highWaterMark)&&this._read(i.highWaterMark)}},f.prototype._read=function(e){var t=this._transformState;null===t.writechunk||t.transforming?t.needTransform=!0:(t.transforming=!0,this._transform(t.writechunk,t.writeencoding,t.afterTransform))},f.prototype._destroy=function(e,t){u.prototype._destroy.call(this,e,(function(e){t(e)}))}},4229:(e,t,r)=>{\"use strict\";var n,i=r(4155);function o(e){var t=this;this.next=null,this.entry=null,this.finish=function(){!function(e,t,r){var n=e.entry;for(e.entry=null;n;){var i=n.callback;t.pendingcb--,i(undefined),n=n.next}t.corkedRequestsFree.next=e}(t,e)}}e.exports=B,B.WritableState=T;var s,a={deprecate:r(7781)},u=r(2503),c=r(8764).Buffer,f=r.g.Uint8Array||function(){},l=r(1195),d=r(2457).getHighWaterMark,h=r(4281).q,p=h.ERR_INVALID_ARG_TYPE,y=h.ERR_METHOD_NOT_IMPLEMENTED,b=h.ERR_MULTIPLE_CALLBACK,m=h.ERR_STREAM_CANNOT_PIPE,g=h.ERR_STREAM_DESTROYED,v=h.ERR_STREAM_NULL_VALUES,w=h.ERR_STREAM_WRITE_AFTER_END,E=h.ERR_UNKNOWN_ENCODING,_=l.errorOrDestroy;function S(){}function T(e,t,s){n=n||r(6753),e=e||{},\"boolean\"!=typeof s&&(s=t instanceof n),this.objectMode=!!e.objectMode,s&&(this.objectMode=this.objectMode||!!e.writableObjectMode),this.highWaterMark=d(this,e,\"writableHighWaterMark\",s),this.finalCalled=!1,this.needDrain=!1,this.ending=!1,this.ended=!1,this.finished=!1,this.destroyed=!1;var a=!1===e.decodeStrings;this.decodeStrings=!a,this.defaultEncoding=e.defaultEncoding||\"utf8\",this.length=0,this.writing=!1,this.corked=0,this.sync=!0,this.bufferProcessing=!1,this.onwrite=function(e){!function(e,t){var r=e._writableState,n=r.sync,o=r.writecb;if(\"function\"!=typeof o)throw new b;if(function(e){e.writing=!1,e.writecb=null,e.length-=e.writelen,e.writelen=0}(r),t)!function(e,t,r,n,o){--t.pendingcb,r?(i.nextTick(o,n),i.nextTick(O,e,t),e._writableState.errorEmitted=!0,_(e,n)):(o(n),e._writableState.errorEmitted=!0,_(e,n),O(e,t))}(e,r,n,t,o);else{var s=M(r)||e.destroyed;s||r.corked||r.bufferProcessing||!r.bufferedRequest||P(e,r),n?i.nextTick(x,e,r,s,o):x(e,r,s,o)}}(t,e)},this.writecb=null,this.writelen=0,this.bufferedRequest=null,this.lastBufferedRequest=null,this.pendingcb=0,this.prefinished=!1,this.errorEmitted=!1,this.emitClose=!1!==e.emitClose,this.autoDestroy=!!e.autoDestroy,this.bufferedRequestCount=0,this.corkedRequestsFree=new o(this)}function B(e){var t=this instanceof(n=n||r(6753));if(!t&&!s.call(B,this))return new B(e);this._writableState=new T(e,this,t),this.writable=!0,e&&(\"function\"==typeof e.write&&(this._write=e.write),\"function\"==typeof e.writev&&(this._writev=e.writev),\"function\"==typeof e.destroy&&(this._destroy=e.destroy),\"function\"==typeof e.final&&(this._final=e.final)),u.call(this)}function A(e,t,r,n,i,o,s){t.writelen=n,t.writecb=s,t.writing=!0,t.sync=!0,t.destroyed?t.onwrite(new g(\"write\")):r?e._writev(i,t.onwrite):e._write(i,o,t.onwrite),t.sync=!1}function x(e,t,r,n){r||function(e,t){0===t.length&&t.needDrain&&(t.needDrain=!1,e.emit(\"drain\"))}(e,t),t.pendingcb--,n(),O(e,t)}function P(e,t){t.bufferProcessing=!0;var r=t.bufferedRequest;if(e._writev&&r&&r.next){var n=t.bufferedRequestCount,i=new Array(n),s=t.corkedRequestsFree;s.entry=r;for(var a=0,u=!0;r;)i[a]=r,r.isBuf||(u=!1),r=r.next,a+=1;i.allBuffers=u,A(e,t,!0,t.length,i,\"\",s.finish),t.pendingcb++,t.lastBufferedRequest=null,s.next?(t.corkedRequestsFree=s.next,s.next=null):t.corkedRequestsFree=new o(t),t.bufferedRequestCount=0}else{for(;r;){var c=r.chunk,f=r.encoding,l=r.callback;if(A(e,t,!1,t.objectMode?1:c.length,c,f,l),r=r.next,t.bufferedRequestCount--,t.writing)break}null===r&&(t.lastBufferedRequest=null)}t.bufferedRequest=r,t.bufferProcessing=!1}function M(e){return e.ending&&0===e.length&&null===e.bufferedRequest&&!e.finished&&!e.writing}function C(e,t){e._final((function(r){t.pendingcb--,r&&_(e,r),t.prefinished=!0,e.emit(\"prefinish\"),O(e,t)}))}function O(e,t){var r=M(t);if(r&&(function(e,t){t.prefinished||t.finalCalled||(\"function\"!=typeof e._final||t.destroyed?(t.prefinished=!0,e.emit(\"prefinish\")):(t.pendingcb++,t.finalCalled=!0,i.nextTick(C,e,t)))}(e,t),0===t.pendingcb&&(t.finished=!0,e.emit(\"finish\"),t.autoDestroy))){var n=e._readableState;(!n||n.autoDestroy&&n.endEmitted)&&e.destroy()}return r}r(5717)(B,u),T.prototype.getBuffer=function(){for(var e=this.bufferedRequest,t=[];e;)t.push(e),e=e.next;return t},function(){try{Object.defineProperty(T.prototype,\"buffer\",{get:a.deprecate((function(){return this.getBuffer()}),\"_writableState.buffer is deprecated. Use _writableState.getBuffer instead.\",\"DEP0003\")})}catch(e){}}(),\"function\"==typeof Symbol&&Symbol.hasInstance&&\"function\"==typeof Function.prototype[Symbol.hasInstance]?(s=Function.prototype[Symbol.hasInstance],Object.defineProperty(B,Symbol.hasInstance,{value:function(e){return!!s.call(this,e)||this===B&&e&&e._writableState instanceof T}})):s=function(e){return e instanceof this},B.prototype.pipe=function(){_(this,new m)},B.prototype.write=function(e,t,r){var n,o=this._writableState,s=!1,a=!o.objectMode&&(n=e,c.isBuffer(n)||n instanceof f);return a&&!c.isBuffer(e)&&(e=function(e){return c.from(e)}(e)),\"function\"==typeof t&&(r=t,t=null),a?t=\"buffer\":t||(t=o.defaultEncoding),\"function\"!=typeof r&&(r=S),o.ending?function(e,t){var r=new w;_(e,r),i.nextTick(t,r)}(this,r):(a||function(e,t,r,n){var o;return null===r?o=new v:\"string\"==typeof r||t.objectMode||(o=new p(\"chunk\",[\"string\",\"Buffer\"],r)),!o||(_(e,o),i.nextTick(n,o),!1)}(this,o,e,r))&&(o.pendingcb++,s=function(e,t,r,n,i,o){if(!r){var s=function(e,t,r){return e.objectMode||!1===e.decodeStrings||\"string\"!=typeof t||(t=c.from(t,r)),t}(t,n,i);n!==s&&(r=!0,i=\"buffer\",n=s)}var a=t.objectMode?1:n.length;t.length+=a;var u=t.length<t.highWaterMark;if(u||(t.needDrain=!0),t.writing||t.corked){var f=t.lastBufferedRequest;t.lastBufferedRequest={chunk:n,encoding:i,isBuf:r,callback:o,next:null},f?f.next=t.lastBufferedRequest:t.bufferedRequest=t.lastBufferedRequest,t.bufferedRequestCount+=1}else A(e,t,!1,a,n,i,o);return u}(this,o,a,e,t,r)),s},B.prototype.cork=function(){this._writableState.corked++},B.prototype.uncork=function(){var e=this._writableState;e.corked&&(e.corked--,e.writing||e.corked||e.bufferProcessing||!e.bufferedRequest||P(this,e))},B.prototype.setDefaultEncoding=function(e){if(\"string\"==typeof e&&(e=e.toLowerCase()),!([\"hex\",\"utf8\",\"utf-8\",\"ascii\",\"binary\",\"base64\",\"ucs2\",\"ucs-2\",\"utf16le\",\"utf-16le\",\"raw\"].indexOf((e+\"\").toLowerCase())>-1))throw new E(e);return this._writableState.defaultEncoding=e,this},Object.defineProperty(B.prototype,\"writableBuffer\",{enumerable:!1,get:function(){return this._writableState&&this._writableState.getBuffer()}}),Object.defineProperty(B.prototype,\"writableHighWaterMark\",{enumerable:!1,get:function(){return this._writableState.highWaterMark}}),B.prototype._write=function(e,t,r){r(new y(\"_write()\"))},B.prototype._writev=null,B.prototype.end=function(e,t,r){var n=this._writableState;return\"function\"==typeof e?(r=e,e=null,t=null):\"function\"==typeof t&&(r=t,t=null),null!=e&&this.write(e,t),n.corked&&(n.corked=1,this.uncork()),n.ending||function(e,t,r){t.ending=!0,O(e,t),r&&(t.finished?i.nextTick(r):e.once(\"finish\",r)),t.ended=!0,e.writable=!1}(this,n,r),this},Object.defineProperty(B.prototype,\"writableLength\",{enumerable:!1,get:function(){return this._writableState.length}}),Object.defineProperty(B.prototype,\"destroyed\",{enumerable:!1,get:function(){return void 0!==this._writableState&&this._writableState.destroyed},set:function(e){this._writableState&&(this._writableState.destroyed=e)}}),B.prototype.destroy=l.destroy,B.prototype._undestroy=l.undestroy,B.prototype._destroy=function(e,t){t(e)}},5850:(e,t,r)=>{\"use strict\";var n,i=r(4155);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var s=r(8610),a=Symbol(\"lastResolve\"),u=Symbol(\"lastReject\"),c=Symbol(\"error\"),f=Symbol(\"ended\"),l=Symbol(\"lastPromise\"),d=Symbol(\"handlePromise\"),h=Symbol(\"stream\");function p(e,t){return{value:e,done:t}}function y(e){var t=e[a];if(null!==t){var r=e[h].read();null!==r&&(e[l]=null,e[a]=null,e[u]=null,t(p(r,!1)))}}function b(e){i.nextTick(y,e)}var m=Object.getPrototypeOf((function(){})),g=Object.setPrototypeOf((o(n={get stream(){return this[h]},next:function(){var e=this,t=this[c];if(null!==t)return Promise.reject(t);if(this[f])return Promise.resolve(p(void 0,!0));if(this[h].destroyed)return new Promise((function(t,r){i.nextTick((function(){e[c]?r(e[c]):t(p(void 0,!0))}))}));var r,n=this[l];if(n)r=new Promise(function(e,t){return function(r,n){e.then((function(){t[f]?r(p(void 0,!0)):t[d](r,n)}),n)}}(n,this));else{var o=this[h].read();if(null!==o)return Promise.resolve(p(o,!1));r=new Promise(this[d])}return this[l]=r,r}},Symbol.asyncIterator,(function(){return this})),o(n,\"return\",(function(){var e=this;return new Promise((function(t,r){e[h].destroy(null,(function(e){e?r(e):t(p(void 0,!0))}))}))})),n),m);e.exports=function(e){var t,r=Object.create(g,(o(t={},h,{value:e,writable:!0}),o(t,a,{value:null,writable:!0}),o(t,u,{value:null,writable:!0}),o(t,c,{value:null,writable:!0}),o(t,f,{value:e._readableState.endEmitted,writable:!0}),o(t,d,{value:function(e,t){var n=r[h].read();n?(r[l]=null,r[a]=null,r[u]=null,e(p(n,!1))):(r[a]=e,r[u]=t)},writable:!0}),t));return r[l]=null,s(e,(function(e){if(e&&\"ERR_STREAM_PREMATURE_CLOSE\"!==e.code){var t=r[u];return null!==t&&(r[l]=null,r[a]=null,r[u]=null,t(e)),void(r[c]=e)}var n=r[a];null!==n&&(r[l]=null,r[a]=null,r[u]=null,n(p(void 0,!0))),r[f]=!0})),e.on(\"readable\",b.bind(null,r)),r}},7327:(e,t,r)=>{\"use strict\";function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var s=r(8764).Buffer,a=r(2361).inspect,u=a&&a.custom||\"inspect\";e.exports=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this.head=null,this.tail=null,this.length=0}var t,r;return t=e,r=[{key:\"push\",value:function(e){var t={data:e,next:null};this.length>0?this.tail.next=t:this.head=t,this.tail=t,++this.length}},{key:\"unshift\",value:function(e){var t={data:e,next:this.head};0===this.length&&(this.tail=t),this.head=t,++this.length}},{key:\"shift\",value:function(){if(0!==this.length){var e=this.head.data;return 1===this.length?this.head=this.tail=null:this.head=this.head.next,--this.length,e}}},{key:\"clear\",value:function(){this.head=this.tail=null,this.length=0}},{key:\"join\",value:function(e){if(0===this.length)return\"\";for(var t=this.head,r=\"\"+t.data;t=t.next;)r+=e+t.data;return r}},{key:\"concat\",value:function(e){if(0===this.length)return s.alloc(0);for(var t,r,n,i=s.allocUnsafe(e>>>0),o=this.head,a=0;o;)t=o.data,r=i,n=a,s.prototype.copy.call(t,r,n),a+=o.data.length,o=o.next;return i}},{key:\"consume\",value:function(e,t){var r;return e<this.head.data.length?(r=this.head.data.slice(0,e),this.head.data=this.head.data.slice(e)):r=e===this.head.data.length?this.shift():t?this._getString(e):this._getBuffer(e),r}},{key:\"first\",value:function(){return this.head.data}},{key:\"_getString\",value:function(e){var t=this.head,r=1,n=t.data;for(e-=n.length;t=t.next;){var i=t.data,o=e>i.length?i.length:e;if(o===i.length?n+=i:n+=i.slice(0,e),0==(e-=o)){o===i.length?(++r,t.next?this.head=t.next:this.head=this.tail=null):(this.head=t,t.data=i.slice(o));break}++r}return this.length-=r,n}},{key:\"_getBuffer\",value:function(e){var t=s.allocUnsafe(e),r=this.head,n=1;for(r.data.copy(t),e-=r.data.length;r=r.next;){var i=r.data,o=e>i.length?i.length:e;if(i.copy(t,t.length-e,0,o),0==(e-=o)){o===i.length?(++n,r.next?this.head=r.next:this.head=this.tail=null):(this.head=r,r.data=i.slice(o));break}++n}return this.length-=n,t}},{key:u,value:function(e,t){return a(this,function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}({},t,{depth:0,customInspect:!1}))}}],r&&o(t.prototype,r),e}()},1195:(e,t,r)=>{\"use strict\";var n=r(4155);function i(e,t){s(e,t),o(e)}function o(e){e._writableState&&!e._writableState.emitClose||e._readableState&&!e._readableState.emitClose||e.emit(\"close\")}function s(e,t){e.emit(\"error\",t)}e.exports={destroy:function(e,t){var r=this,a=this._readableState&&this._readableState.destroyed,u=this._writableState&&this._writableState.destroyed;return a||u?(t?t(e):e&&(this._writableState?this._writableState.errorEmitted||(this._writableState.errorEmitted=!0,n.nextTick(s,this,e)):n.nextTick(s,this,e)),this):(this._readableState&&(this._readableState.destroyed=!0),this._writableState&&(this._writableState.destroyed=!0),this._destroy(e||null,(function(e){!t&&e?r._writableState?r._writableState.errorEmitted?n.nextTick(o,r):(r._writableState.errorEmitted=!0,n.nextTick(i,r,e)):n.nextTick(i,r,e):t?(n.nextTick(o,r),t(e)):n.nextTick(o,r)})),this)},undestroy:function(){this._readableState&&(this._readableState.destroyed=!1,this._readableState.reading=!1,this._readableState.ended=!1,this._readableState.endEmitted=!1),this._writableState&&(this._writableState.destroyed=!1,this._writableState.ended=!1,this._writableState.ending=!1,this._writableState.finalCalled=!1,this._writableState.prefinished=!1,this._writableState.finished=!1,this._writableState.errorEmitted=!1)},errorOrDestroy:function(e,t){var r=e._readableState,n=e._writableState;r&&r.autoDestroy||n&&n.autoDestroy?e.destroy(t):e.emit(\"error\",t)}}},8610:(e,t,r)=>{\"use strict\";var n=r(4281).q.ERR_STREAM_PREMATURE_CLOSE;function i(){}e.exports=function e(t,r,o){if(\"function\"==typeof r)return e(t,null,r);r||(r={}),o=function(e){var t=!1;return function(){if(!t){t=!0;for(var r=arguments.length,n=new Array(r),i=0;i<r;i++)n[i]=arguments[i];e.apply(this,n)}}}(o||i);var s=r.readable||!1!==r.readable&&t.readable,a=r.writable||!1!==r.writable&&t.writable,u=function(){t.writable||f()},c=t._writableState&&t._writableState.finished,f=function(){a=!1,c=!0,s||o.call(t)},l=t._readableState&&t._readableState.endEmitted,d=function(){s=!1,l=!0,a||o.call(t)},h=function(e){o.call(t,e)},p=function(){var e;return s&&!l?(t._readableState&&t._readableState.ended||(e=new n),o.call(t,e)):a&&!c?(t._writableState&&t._writableState.ended||(e=new n),o.call(t,e)):void 0},y=function(){t.req.on(\"finish\",f)};return function(e){return e.setHeader&&\"function\"==typeof e.abort}(t)?(t.on(\"complete\",f),t.on(\"abort\",p),t.req?y():t.on(\"request\",y)):a&&!t._writableState&&(t.on(\"end\",u),t.on(\"close\",u)),t.on(\"end\",d),t.on(\"finish\",f),!1!==r.error&&t.on(\"error\",h),t.on(\"close\",p),function(){t.removeListener(\"complete\",f),t.removeListener(\"abort\",p),t.removeListener(\"request\",y),t.req&&t.req.removeListener(\"finish\",f),t.removeListener(\"end\",u),t.removeListener(\"close\",u),t.removeListener(\"finish\",f),t.removeListener(\"end\",d),t.removeListener(\"error\",h),t.removeListener(\"close\",p)}}},5167:e=>{e.exports=function(){throw new Error(\"Readable.from is not available in the browser\")}},9946:(e,t,r)=>{\"use strict\";var n,i=r(4281).q,o=i.ERR_MISSING_ARGS,s=i.ERR_STREAM_DESTROYED;function a(e){if(e)throw e}function u(e){e()}function c(e,t){return e.pipe(t)}e.exports=function(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];var f,l=function(e){return e.length?\"function\"!=typeof e[e.length-1]?a:e.pop():a}(t);if(Array.isArray(t[0])&&(t=t[0]),t.length<2)throw new o(\"streams\");var d=t.map((function(e,i){var o=i<t.length-1;return function(e,t,i,o){o=function(e){var t=!1;return function(){t||(t=!0,e.apply(void 0,arguments))}}(o);var a=!1;e.on(\"close\",(function(){a=!0})),void 0===n&&(n=r(8610)),n(e,{readable:t,writable:i},(function(e){if(e)return o(e);a=!0,o()}));var u=!1;return function(t){if(!a&&!u)return u=!0,function(e){return e.setHeader&&\"function\"==typeof e.abort}(e)?e.abort():\"function\"==typeof e.destroy?e.destroy():void o(t||new s(\"pipe\"))}}(e,o,i>0,(function(e){f||(f=e),e&&d.forEach(u),o||(d.forEach(u),l(f))}))}));return t.reduce(c)}},2457:(e,t,r)=>{\"use strict\";var n=r(4281).q.ERR_INVALID_OPT_VALUE;e.exports={getHighWaterMark:function(e,t,r,i){var o=function(e,t,r){return null!=e.highWaterMark?e.highWaterMark:t?e[r]:null}(t,i,r);if(null!=o){if(!isFinite(o)||Math.floor(o)!==o||o<0)throw new n(i?r:\"highWaterMark\",o);return Math.floor(o)}return e.objectMode?16:16384}}},2503:(e,t,r)=>{e.exports=r(7187).EventEmitter},8473:(e,t,r)=>{(t=e.exports=r(9481)).Stream=t,t.Readable=t,t.Writable=r(4229),t.Duplex=r(6753),t.Transform=r(4605),t.PassThrough=r(2725),t.finished=r(8610),t.pipeline=r(9946)},9509:(e,t,r)=>{var n=r(8764),i=n.Buffer;function o(e,t){for(var r in e)t[r]=e[r]}function s(e,t,r){return i(e,t,r)}i.from&&i.alloc&&i.allocUnsafe&&i.allocUnsafeSlow?e.exports=n:(o(n,t),t.Buffer=s),s.prototype=Object.create(i.prototype),o(i,s),s.from=function(e,t,r){if(\"number\"==typeof e)throw new TypeError(\"Argument must not be a number\");return i(e,t,r)},s.alloc=function(e,t,r){if(\"number\"!=typeof e)throw new TypeError(\"Argument must be a number\");var n=i(e);return void 0!==t?\"string\"==typeof r?n.fill(t,r):n.fill(t):n.fill(0),n},s.allocUnsafe=function(e){if(\"number\"!=typeof e)throw new TypeError(\"Argument must be a number\");return i(e)},s.allocUnsafeSlow=function(e){if(\"number\"!=typeof e)throw new TypeError(\"Argument must be a number\");return n.SlowBuffer(e)}},2399:(e,t,r)=>{\"use strict\";var n,i=r(4155),o=r(8764),s=o.Buffer,a={};for(n in o)o.hasOwnProperty(n)&&\"SlowBuffer\"!==n&&\"Buffer\"!==n&&(a[n]=o[n]);var u=a.Buffer={};for(n in s)s.hasOwnProperty(n)&&\"allocUnsafe\"!==n&&\"allocUnsafeSlow\"!==n&&(u[n]=s[n]);if(a.Buffer.prototype=s.prototype,u.from&&u.from!==Uint8Array.from||(u.from=function(e,t,r){if(\"number\"==typeof e)throw new TypeError('The \"value\" argument must not be of type number. Received type '+typeof e);if(e&&void 0===e.length)throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type \"+typeof e);return s(e,t,r)}),u.alloc||(u.alloc=function(e,t,r){if(\"number\"!=typeof e)throw new TypeError('The \"size\" argument must be of type number. Received type '+typeof e);if(e<0||e>=2*(1<<30))throw new RangeError('The value \"'+e+'\" is invalid for option \"size\"');var n=s(e);return t&&0!==t.length?\"string\"==typeof r?n.fill(t,r):n.fill(t):n.fill(0),n}),!a.kStringMaxLength)try{a.kStringMaxLength=i.binding(\"buffer\").kStringMaxLength}catch(e){}a.constants||(a.constants={MAX_LENGTH:a.kMaxLength},a.kStringMaxLength&&(a.constants.MAX_STRING_LENGTH=a.kStringMaxLength)),e.exports=a},8501:(e,t,r)=>{var n=r(1989),i=r(5676),o=r(7529),s=r(584),a=r(8575),u=t;u.request=function(e,t){e=\"string\"==typeof e?a.parse(e):o(e);var i=-1===r.g.location.protocol.search(/^https?:$/)?\"http:\":\"\",s=e.protocol||i,u=e.hostname||e.host,c=e.port,f=e.path||\"/\";u&&-1!==u.indexOf(\":\")&&(u=\"[\"+u+\"]\"),e.url=(u?s+\"//\"+u:\"\")+(c?\":\"+c:\"\")+f,e.method=(e.method||\"GET\").toUpperCase(),e.headers=e.headers||{};var l=new n(e);return t&&l.on(\"response\",t),l},u.get=function(e,t){var r=u.request(e,t);return r.end(),r},u.ClientRequest=n,u.IncomingMessage=i.IncomingMessage,u.Agent=function(){},u.Agent.defaultMaxSockets=4,u.globalAgent=new u.Agent,u.STATUS_CODES=s,u.METHODS=[\"CHECKOUT\",\"CONNECT\",\"COPY\",\"DELETE\",\"GET\",\"HEAD\",\"LOCK\",\"M-SEARCH\",\"MERGE\",\"MKACTIVITY\",\"MKCOL\",\"MOVE\",\"NOTIFY\",\"OPTIONS\",\"PATCH\",\"POST\",\"PROPFIND\",\"PROPPATCH\",\"PURGE\",\"PUT\",\"REPORT\",\"SEARCH\",\"SUBSCRIBE\",\"TRACE\",\"UNLOCK\",\"UNSUBSCRIBE\"]},8725:(e,t,r)=>{var n;function i(){if(void 0!==n)return n;if(r.g.XMLHttpRequest){n=new r.g.XMLHttpRequest;try{n.open(\"GET\",r.g.XDomainRequest?\"/\":\"https://example.com\")}catch(e){n=null}}else n=null;return n}function o(e){var t=i();if(!t)return!1;try{return t.responseType=e,t.responseType===e}catch(e){}return!1}function s(e){return\"function\"==typeof e}t.fetch=s(r.g.fetch)&&s(r.g.ReadableStream),t.writableStream=s(r.g.WritableStream),t.abortController=s(r.g.AbortController),t.arraybuffer=t.fetch||o(\"arraybuffer\"),t.msstream=!t.fetch&&o(\"ms-stream\"),t.mozchunkedarraybuffer=!t.fetch&&o(\"moz-chunked-arraybuffer\"),t.overrideMimeType=t.fetch||!!i()&&s(i().overrideMimeType),n=null},1989:(e,t,r)=>{var n=r(8764).Buffer,i=r(4155),o=r(8725),s=r(5717),a=r(5676),u=r(8473),c=a.IncomingMessage,f=a.readyStates,l=e.exports=function(e){var t,r=this;u.Writable.call(r),r._opts=e,r._body=[],r._headers={},e.auth&&r.setHeader(\"Authorization\",\"Basic \"+n.from(e.auth).toString(\"base64\")),Object.keys(e.headers).forEach((function(t){r.setHeader(t,e.headers[t])}));var i=!0;if(\"disable-fetch\"===e.mode||\"requestTimeout\"in e&&!o.abortController)i=!1,t=!0;else if(\"prefer-streaming\"===e.mode)t=!1;else if(\"allow-wrong-content-type\"===e.mode)t=!o.overrideMimeType;else{if(e.mode&&\"default\"!==e.mode&&\"prefer-fast\"!==e.mode)throw new Error(\"Invalid value for opts.mode\");t=!0}r._mode=function(e,t){return o.fetch&&t?\"fetch\":o.mozchunkedarraybuffer?\"moz-chunked-arraybuffer\":o.msstream?\"ms-stream\":o.arraybuffer&&e?\"arraybuffer\":\"text\"}(t,i),r._fetchTimer=null,r._socketTimeout=null,r._socketTimer=null,r.on(\"finish\",(function(){r._onFinish()}))};s(l,u.Writable),l.prototype.setHeader=function(e,t){var r=e.toLowerCase();-1===d.indexOf(r)&&(this._headers[r]={name:e,value:t})},l.prototype.getHeader=function(e){var t=this._headers[e.toLowerCase()];return t?t.value:null},l.prototype.removeHeader=function(e){delete this._headers[e.toLowerCase()]},l.prototype._onFinish=function(){var e=this;if(!e._destroyed){var t=e._opts;\"timeout\"in t&&0!==t.timeout&&e.setTimeout(t.timeout);var n=e._headers,s=null;\"GET\"!==t.method&&\"HEAD\"!==t.method&&(s=new Blob(e._body,{type:(n[\"content-type\"]||{}).value||\"\"}));var a=[];if(Object.keys(n).forEach((function(e){var t=n[e].name,r=n[e].value;Array.isArray(r)?r.forEach((function(e){a.push([t,e])})):a.push([t,r])})),\"fetch\"===e._mode){var u=null;if(o.abortController){var c=new AbortController;u=c.signal,e._fetchAbortController=c,\"requestTimeout\"in t&&0!==t.requestTimeout&&(e._fetchTimer=r.g.setTimeout((function(){e.emit(\"requestTimeout\"),e._fetchAbortController&&e._fetchAbortController.abort()}),t.requestTimeout))}r.g.fetch(e._opts.url,{method:e._opts.method,headers:a,body:s||void 0,mode:\"cors\",credentials:t.withCredentials?\"include\":\"same-origin\",signal:u}).then((function(t){e._fetchResponse=t,e._resetTimers(!1),e._connect()}),(function(t){e._resetTimers(!0),e._destroyed||e.emit(\"error\",t)}))}else{var l=e._xhr=new r.g.XMLHttpRequest;try{l.open(e._opts.method,e._opts.url,!0)}catch(t){return void i.nextTick((function(){e.emit(\"error\",t)}))}\"responseType\"in l&&(l.responseType=e._mode),\"withCredentials\"in l&&(l.withCredentials=!!t.withCredentials),\"text\"===e._mode&&\"overrideMimeType\"in l&&l.overrideMimeType(\"text/plain; charset=x-user-defined\"),\"requestTimeout\"in t&&(l.timeout=t.requestTimeout,l.ontimeout=function(){e.emit(\"requestTimeout\")}),a.forEach((function(e){l.setRequestHeader(e[0],e[1])})),e._response=null,l.onreadystatechange=function(){switch(l.readyState){case f.LOADING:case f.DONE:e._onXHRProgress()}},\"moz-chunked-arraybuffer\"===e._mode&&(l.onprogress=function(){e._onXHRProgress()}),l.onerror=function(){e._destroyed||(e._resetTimers(!0),e.emit(\"error\",new Error(\"XHR error\")))};try{l.send(s)}catch(t){return void i.nextTick((function(){e.emit(\"error\",t)}))}}}},l.prototype._onXHRProgress=function(){var e=this;e._resetTimers(!1),function(e){try{var t=e.status;return null!==t&&0!==t}catch(e){return!1}}(e._xhr)&&!e._destroyed&&(e._response||e._connect(),e._response._onXHRProgress(e._resetTimers.bind(e)))},l.prototype._connect=function(){var e=this;e._destroyed||(e._response=new c(e._xhr,e._fetchResponse,e._mode,e._resetTimers.bind(e)),e._response.on(\"error\",(function(t){e.emit(\"error\",t)})),e.emit(\"response\",e._response))},l.prototype._write=function(e,t,r){this._body.push(e),r()},l.prototype._resetTimers=function(e){var t=this;r.g.clearTimeout(t._socketTimer),t._socketTimer=null,e?(r.g.clearTimeout(t._fetchTimer),t._fetchTimer=null):t._socketTimeout&&(t._socketTimer=r.g.setTimeout((function(){t.emit(\"timeout\")}),t._socketTimeout))},l.prototype.abort=l.prototype.destroy=function(e){var t=this;t._destroyed=!0,t._resetTimers(!0),t._response&&(t._response._destroyed=!0),t._xhr?t._xhr.abort():t._fetchAbortController&&t._fetchAbortController.abort(),e&&t.emit(\"error\",e)},l.prototype.end=function(e,t,r){\"function\"==typeof e&&(r=e,e=void 0),u.Writable.prototype.end.call(this,e,t,r)},l.prototype.setTimeout=function(e,t){var r=this;t&&r.once(\"timeout\",t),r._socketTimeout=e,r._resetTimers(!1)},l.prototype.flushHeaders=function(){},l.prototype.setNoDelay=function(){},l.prototype.setSocketKeepAlive=function(){};var d=[\"accept-charset\",\"accept-encoding\",\"access-control-request-headers\",\"access-control-request-method\",\"connection\",\"content-length\",\"cookie\",\"cookie2\",\"date\",\"dnt\",\"expect\",\"host\",\"keep-alive\",\"origin\",\"referer\",\"te\",\"trailer\",\"transfer-encoding\",\"upgrade\",\"via\"]},5676:(e,t,r)=>{var n=r(4155),i=r(8764).Buffer,o=r(8725),s=r(5717),a=r(8473),u=t.readyStates={UNSENT:0,OPENED:1,HEADERS_RECEIVED:2,LOADING:3,DONE:4},c=t.IncomingMessage=function(e,t,r,s){var u=this;if(a.Readable.call(u),u._mode=r,u.headers={},u.rawHeaders=[],u.trailers={},u.rawTrailers=[],u.on(\"end\",(function(){n.nextTick((function(){u.emit(\"close\")}))})),\"fetch\"===r){if(u._fetchResponse=t,u.url=t.url,u.statusCode=t.status,u.statusMessage=t.statusText,t.headers.forEach((function(e,t){u.headers[t.toLowerCase()]=e,u.rawHeaders.push(t,e)})),o.writableStream){var c=new WritableStream({write:function(e){return s(!1),new Promise((function(t,r){u._destroyed?r():u.push(i.from(e))?t():u._resumeFetch=t}))},close:function(){s(!0),u._destroyed||u.push(null)},abort:function(e){s(!0),u._destroyed||u.emit(\"error\",e)}});try{return void t.body.pipeTo(c).catch((function(e){s(!0),u._destroyed||u.emit(\"error\",e)}))}catch(e){}}var f=t.body.getReader();!function e(){f.read().then((function(t){u._destroyed||(s(t.done),t.done?u.push(null):(u.push(i.from(t.value)),e()))})).catch((function(e){s(!0),u._destroyed||u.emit(\"error\",e)}))}()}else if(u._xhr=e,u._pos=0,u.url=e.responseURL,u.statusCode=e.status,u.statusMessage=e.statusText,e.getAllResponseHeaders().split(/\\r?\\n/).forEach((function(e){var t=e.match(/^([^:]+):\\s*(.*)/);if(t){var r=t[1].toLowerCase();\"set-cookie\"===r?(void 0===u.headers[r]&&(u.headers[r]=[]),u.headers[r].push(t[2])):void 0!==u.headers[r]?u.headers[r]+=\", \"+t[2]:u.headers[r]=t[2],u.rawHeaders.push(t[1],t[2])}})),u._charset=\"x-user-defined\",!o.overrideMimeType){var l=u.rawHeaders[\"mime-type\"];if(l){var d=l.match(/;\\s*charset=([^;])(;|$)/);d&&(u._charset=d[1].toLowerCase())}u._charset||(u._charset=\"utf-8\")}};s(c,a.Readable),c.prototype._read=function(){var e=this._resumeFetch;e&&(this._resumeFetch=null,e())},c.prototype._onXHRProgress=function(e){var t=this,n=t._xhr,o=null;switch(t._mode){case\"text\":if((o=n.responseText).length>t._pos){var s=o.substr(t._pos);if(\"x-user-defined\"===t._charset){for(var a=i.alloc(s.length),c=0;c<s.length;c++)a[c]=255&s.charCodeAt(c);t.push(a)}else t.push(s,t._charset);t._pos=o.length}break;case\"arraybuffer\":if(n.readyState!==u.DONE||!n.response)break;o=n.response,t.push(i.from(new Uint8Array(o)));break;case\"moz-chunked-arraybuffer\":if(o=n.response,n.readyState!==u.LOADING||!o)break;t.push(i.from(new Uint8Array(o)));break;case\"ms-stream\":if(o=n.response,n.readyState!==u.LOADING)break;var f=new r.g.MSStreamReader;f.onprogress=function(){f.result.byteLength>t._pos&&(t.push(i.from(new Uint8Array(f.result.slice(t._pos)))),t._pos=f.result.byteLength)},f.onload=function(){e(!0),t.push(null)},f.readAsArrayBuffer(o)}t._xhr.readyState===u.DONE&&\"ms-stream\"!==t._mode&&(e(!0),t.push(null))}},2553:(e,t,r)=>{\"use strict\";var n=r(9509).Buffer,i=n.isEncoding||function(e){switch((e=\"\"+e)&&e.toLowerCase()){case\"hex\":case\"utf8\":case\"utf-8\":case\"ascii\":case\"binary\":case\"base64\":case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":case\"raw\":return!0;default:return!1}};function o(e){var t;switch(this.encoding=function(e){var t=function(e){if(!e)return\"utf8\";for(var t;;)switch(e){case\"utf8\":case\"utf-8\":return\"utf8\";case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return\"utf16le\";case\"latin1\":case\"binary\":return\"latin1\";case\"base64\":case\"ascii\":case\"hex\":return e;default:if(t)return;e=(\"\"+e).toLowerCase(),t=!0}}(e);if(\"string\"!=typeof t&&(n.isEncoding===i||!i(e)))throw new Error(\"Unknown encoding: \"+e);return t||e}(e),this.encoding){case\"utf16le\":this.text=u,this.end=c,t=4;break;case\"utf8\":this.fillLast=a,t=4;break;case\"base64\":this.text=f,this.end=l,t=3;break;default:return this.write=d,void(this.end=h)}this.lastNeed=0,this.lastTotal=0,this.lastChar=n.allocUnsafe(t)}function s(e){return e<=127?0:e>>5==6?2:e>>4==14?3:e>>3==30?4:e>>6==2?-1:-2}function a(e){var t=this.lastTotal-this.lastNeed,r=function(e,t,r){if(128!=(192&t[0]))return e.lastNeed=0,\"�\";if(e.lastNeed>1&&t.length>1){if(128!=(192&t[1]))return e.lastNeed=1,\"�\";if(e.lastNeed>2&&t.length>2&&128!=(192&t[2]))return e.lastNeed=2,\"�\"}}(this,e);return void 0!==r?r:this.lastNeed<=e.length?(e.copy(this.lastChar,t,0,this.lastNeed),this.lastChar.toString(this.encoding,0,this.lastTotal)):(e.copy(this.lastChar,t,0,e.length),void(this.lastNeed-=e.length))}function u(e,t){if((e.length-t)%2==0){var r=e.toString(\"utf16le\",t);if(r){var n=r.charCodeAt(r.length-1);if(n>=55296&&n<=56319)return this.lastNeed=2,this.lastTotal=4,this.lastChar[0]=e[e.length-2],this.lastChar[1]=e[e.length-1],r.slice(0,-1)}return r}return this.lastNeed=1,this.lastTotal=2,this.lastChar[0]=e[e.length-1],e.toString(\"utf16le\",t,e.length-1)}function c(e){var t=e&&e.length?this.write(e):\"\";if(this.lastNeed){var r=this.lastTotal-this.lastNeed;return t+this.lastChar.toString(\"utf16le\",0,r)}return t}function f(e,t){var r=(e.length-t)%3;return 0===r?e.toString(\"base64\",t):(this.lastNeed=3-r,this.lastTotal=3,1===r?this.lastChar[0]=e[e.length-1]:(this.lastChar[0]=e[e.length-2],this.lastChar[1]=e[e.length-1]),e.toString(\"base64\",t,e.length-r))}function l(e){var t=e&&e.length?this.write(e):\"\";return this.lastNeed?t+this.lastChar.toString(\"base64\",0,3-this.lastNeed):t}function d(e){return e.toString(this.encoding)}function h(e){return e&&e.length?this.write(e):\"\"}t.s=o,o.prototype.write=function(e){if(0===e.length)return\"\";var t,r;if(this.lastNeed){if(void 0===(t=this.fillLast(e)))return\"\";r=this.lastNeed,this.lastNeed=0}else r=0;return r<e.length?t?t+this.text(e,r):this.text(e,r):t||\"\"},o.prototype.end=function(e){var t=e&&e.length?this.write(e):\"\";return this.lastNeed?t+\"�\":t},o.prototype.text=function(e,t){var r=function(e,t,r){var n=t.length-1;if(n<r)return 0;var i=s(t[n]);return i>=0?(i>0&&(e.lastNeed=i-1),i):--n<r||-2===i?0:(i=s(t[n]))>=0?(i>0&&(e.lastNeed=i-2),i):--n<r||-2===i?0:(i=s(t[n]))>=0?(i>0&&(2===i?i=0:e.lastNeed=i-3),i):0}(this,e,t);if(!this.lastNeed)return e.toString(\"utf8\",t);this.lastTotal=r;var n=e.length-(r-this.lastNeed);return e.copy(this.lastChar,0,n),e.toString(\"utf8\",t,n)},o.prototype.fillLast=function(e){if(this.lastNeed<=e.length)return e.copy(this.lastChar,this.lastTotal-this.lastNeed,0,this.lastNeed),this.lastChar.toString(this.encoding,0,this.lastTotal);e.copy(this.lastChar,this.lastTotal-this.lastNeed,0,e.length),this.lastNeed-=e.length}},6286:(e,t)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.TIME_API_URL=void 0,t.TIME_API_URL=\"worldtimeapi.org/api/timezone/UTC\"},8581:(e,t)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.DEFAULT_DEPLOY_TTL=void 0,t.DEFAULT_DEPLOY_TTL=18e5},7108:function(e,t,r){\"use strict\";var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r);var i=Object.getOwnPropertyDescriptor(t,r);i&&!(\"get\"in i?!t.__esModule:i.writable||i.configurable)||(i={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,n,i)}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),i=this&&this.__exportStar||function(e,t){for(var r in e)\"default\"===r||Object.prototype.hasOwnProperty.call(t,r)||n(t,e,r)};Object.defineProperty(t,\"__esModule\",{value:!0}),i(r(4400),t),i(r(4493),t)},7269:(e,t,r)=>{\"use strict\";var n=r(8764).Buffer;Object.defineProperty(t,\"__esModule\",{value:!0}),t.toBytesBytesArray=t.toBytesVectorNew=t.byteHash=t.toBytesVector=t.toBytesArrayU8=t.fromBytesString=t.toBytesString=t.toBytesDeployHash=t.toBytesU512=t.toBytesU256=t.toBytesU128=t.toBytesI64=t.toBytesU64=t.toBytesU32=t.toBytesI32=t.toBytesU8=t.toBytesNumber=void 0;var i=r(2092),o=r(2279),s=r(3286),a=r(3803),u=r(9814);t.toBytesNumber=function(e,t){return function(r){var n=i.BigNumber.from(r),a=o.MaxUint256.mask(e);if(t){var u=a.mask(e-1);if(n.gt(u)||n.lt(u.add(o.One).mul(o.NegativeOne)))throw new Error(\"value out-of-bounds, value: \"+r)}else if(n.lt(o.Zero)||n.gt(a.mask(e)))throw new Error(\"value out-of-bounds, value: \"+r);var c=n.toTwos(e).mask(e),f=(0,s.arrayify)(c);if(c.gte(0)){if(e>64)return c.eq(0)?f:(0,s.concat)([f,Uint8Array.from([f.length])]).slice().reverse();var l=e/8;return(0,s.concat)([f.slice().reverse(),new Uint8Array(l-f.length)])}return f.reverse()}},t.toBytesU8=(0,t.toBytesNumber)(8,!1),t.toBytesI32=(0,t.toBytesNumber)(32,!0),t.toBytesU32=(0,t.toBytesNumber)(32,!1),t.toBytesU64=(0,t.toBytesNumber)(64,!1),t.toBytesI64=(0,t.toBytesNumber)(64,!0),t.toBytesU128=(0,t.toBytesNumber)(128,!1),t.toBytesU256=(0,t.toBytesNumber)(256,!1),t.toBytesU512=(0,t.toBytesNumber)(512,!1),t.toBytesDeployHash=function(e){return e},t.toBytesString=function(e){var r=Uint8Array.from(n.from(e));return(0,s.concat)([(0,t.toBytesU32)(r.byteLength),r])},t.fromBytesString=function(e){return n.from(e).toString()},t.toBytesArrayU8=function(e){return(0,s.concat)([(0,t.toBytesU32)(e.length),e])},t.toBytesVector=function(e){var r=e.map((function(e){return e.toBytes()})).map((function(e){return e.unwrap()}));return r.splice(0,0,(0,t.toBytesU32)(e.length)),(0,s.concat)(r)},t.byteHash=function(e){return(0,a.blake2b)(e,{dkLen:32})},t.toBytesVectorNew=function(e){var r=e.map((function(e){return u.CLValueParsers.toBytes(e).unwrap()}));return r.splice(0,0,(0,t.toBytesU32)(e.length)),(0,s.concat)(r)},t.toBytesBytesArray=function(e){return e}},3362:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.CLValueBytesParsers=t.CLValueParsers=t.CLValue=t.ToBytes=t.CLType=t.resultHelper=void 0;var n=r(2831),i=r(3286),o=r(7269),s=r(9957),a=r(1908),u=r(9814),c=r(5157);t.resultHelper=function(e,t){return{result:e,remainder:t}};var f=function(){function e(){}return e.prototype.toBytes=function(){return Uint8Array.from([this.tag])},e.prototype.toString=function(){return this.linksTo},e.prototype.toJSON=function(){return this.toString()},e}();t.CLType=f;t.ToBytes=function(){};var l=function(){function e(){this.isCLValue=!0}return e.prototype.toJSON=function(){return this.data},e}();t.CLValue=l;var d=function(){function e(){}return e.fromJSON=function(t){var r=(0,a.matchTypeToCLType)(t.cl_type),i=(0,c.decodeBase16)(t.bytes),o=e.fromBytes(i,r).unwrap();return(0,n.Ok)(o)},e.fromBytes=function(e,t){return(0,a.matchByteParserByCLType)(t).unwrap().fromBytes(e,t)},e.toJSON=function(t){var r=e.toBytes(t).unwrap(),i=(0,c.encodeBase16)(r),o=t.clType().toJSON();return(0,n.Ok)({bytes:i,cl_type:o})},e.toBytes=function(e){return(0,a.matchByteParserByCLType)(e.clType()).unwrap().toBytes(e)},e.toBytesWithType=function(e){var t=e.clType().toBytes(),r=(0,a.matchByteParserByCLType)(e.clType()).unwrap().toBytes(e).unwrap(),s=(0,i.concat)([(0,o.toBytesArrayU8)(r),t]);return(0,n.Ok)(s)},e.fromBytesWithType=function(e){var t=(new u.CLU32BytesParser).fromBytesWithRemainder(e),r=t.result,i=t.remainder,o=r.unwrap().value().toNumber();if(!i)return(0,n.Err)(s.CLErrorCodes.EarlyEndOfStream);var c=i.subarray(0,o),f=i.subarray(o),l=(0,a.matchBytesToCLType)(f).result,d=(0,a.matchByteParserByCLType)(l.unwrap()).unwrap().fromBytes(c,l.unwrap()).unwrap();return(0,n.Ok)(d)},e}();t.CLValueParsers=d;var h=function(){function e(){}return e.prototype.fromBytes=function(e,t){var r=this.fromBytesWithRemainder(e,t),i=r.result,o=r.remainder;return o&&o.length?(0,n.Err)(s.CLErrorCodes.LeftOverBytes):i},e}();t.CLValueBytesParsers=h},9438:function(e,t,r){\"use strict\";var n,i=this&&this.__extends||(n=function(e,t){return n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])},n(e,t)},function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Class extends value \"+String(t)+\" is not a constructor or null\");function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,\"__esModule\",{value:!0}),t.CLAccountHash=t.CLAccountHashBytesParser=t.CLAccountHashType=void 0;var o=r(2831),s=r(9814),a=function(e){function t(){var t=e.call(this,s.ACCOUNT_HASH_LENGTH)||this;return t.linksTo=s.ACCOUNT_HASH_TYPE,t}return i(t,e),t}(s.CLByteArrayType);t.CLAccountHashType=a;var u=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return i(t,e),t.prototype.toBytes=function(e){return(0,o.Ok)(e.data)},t.prototype.fromBytesWithRemainder=function(e){if(e.length<s.ACCOUNT_HASH_LENGTH)return(0,s.resultHelper)((0,o.Err)(s.CLErrorCodes.EarlyEndOfStream));var t=e.subarray(0,s.ACCOUNT_HASH_LENGTH),r=new c(t);return(0,s.resultHelper)((0,o.Ok)(r),e.subarray(s.ACCOUNT_HASH_LENGTH))},t}(s.CLValueBytesParsers);t.CLAccountHashBytesParser=u;var c=function(e){function t(t){var r=e.call(this)||this;return r.data=t,r}return i(t,e),t.prototype.clType=function(){return new a},t.prototype.value=function(){return this.data},t}(s.CLValue);t.CLAccountHash=c},1746:function(e,t,r){\"use strict\";var n,i=this&&this.__extends||(n=function(e,t){return n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])},n(e,t)},function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Class extends value \"+String(t)+\" is not a constructor or null\");function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,\"__esModule\",{value:!0}),t.CLAnyType=void 0;var o=r(9814),s=r(9957),a=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.linksTo=s.ANY_TYPE,t.tag=s.CLTypeTag.Any,t}return i(t,e),t}(o.CLType);t.CLAnyType=a},207:function(e,t,r){\"use strict\";var n,i=this&&this.__extends||(n=function(e,t){return n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])},n(e,t)},function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Class extends value \"+String(t)+\" is not a constructor or null\");function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,\"__esModule\",{value:!0}),t.CLBool=t.CLBoolBytesParser=t.CLBoolType=void 0;var o=r(2831),s=r(9814),a=r(9957),u=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.linksTo=a.BOOL_TYPE,t.tag=a.CLTypeTag.Bool,t}return i(t,e),t}(s.CLType);t.CLBoolType=u;var c=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return i(t,e),t.prototype.toBytes=function(e){return(0,o.Ok)(new Uint8Array([e.value()?1:0]))},t.prototype.fromBytesWithRemainder=function(e){return 0===e.length?(0,s.resultHelper)((0,o.Err)(s.CLErrorCodes.EarlyEndOfStream)):1===e[0]?(0,s.resultHelper)((0,o.Ok)(new f(!0)),e.subarray(1)):0===e[0]?(0,s.resultHelper)((0,o.Ok)(new f(!1)),e.subarray(1)):(0,s.resultHelper)((0,o.Err)(s.CLErrorCodes.Formatting))},t}(s.CLValueBytesParsers);t.CLBoolBytesParser=c;var f=function(e){function t(t){var r=e.call(this)||this;return r.data=t,r}return i(t,e),t.prototype.clType=function(){return new u},t.prototype.value=function(){return this.data},t}(s.CLValue);t.CLBool=f},5034:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.CLValueBuilder=t.CLTypeBuilder=void 0;var n=r(9814),i=function(){function e(){}return e.list=function(e){return new n.CLListType(e)},e.tuple1=function(e){var t=e[0];return new n.CLTuple1Type([t])},e.tuple2=function(e){var t=e[0],r=e[1];return new n.CLTuple2Type([t,r])},e.tuple3=function(e){var t=e[0],r=e[1],i=e[2];return new n.CLTuple3Type([t,r,i])},e.option=function(e){return new n.CLOptionType(e)},e.map=function(e){return new n.CLMapType(e)},e.publicKey=function(){return new n.CLPublicKeyType},e.byteArray=function(e){return new n.CLByteArrayType(e)},e.bool=function(){return new n.CLBoolType},e.u8=function(){return new n.CLU8Type},e.u32=function(){return new n.CLU32Type},e.i32=function(){return new n.CLI32Type},e.u64=function(){return new n.CLU64Type},e.i64=function(){return new n.CLI64Type},e.u128=function(){return new n.CLU128Type},e.u256=function(){return new n.CLU256Type},e.u512=function(){return new n.CLU512Type},e.unit=function(){return new n.CLUnitType},e.string=function(){return new n.CLStringType},e.key=function(){return new n.CLKeyType},e.uref=function(){return new n.CLURefType},e}();t.CLTypeBuilder=i;var o=function(){function e(){}return e.list=function(e){return new n.CLList(e)},e.tuple1=function(e){var t=e[0];return new n.CLTuple1([t])},e.tuple2=function(e){var t=e[0],r=e[1];return new n.CLTuple2([t,r])},e.tuple3=function(e){var t=e[0],r=e[1],i=e[2];return new n.CLTuple3([t,r,i])},e.option=function(e,t){return new n.CLOption(e,t)},e.map=function(e){return new n.CLMap(e)},e.publicKey=function(e,t){return new n.CLPublicKey(e,t)},e.byteArray=function(e){return new n.CLByteArray(e)},e.bool=function(e){return new n.CLBool(e)},e.u8=function(e){return new n.CLU8(e)},e.u32=function(e){return new n.CLU32(e)},e.i32=function(e){return new n.CLI32(e)},e.u64=function(e){return new n.CLU64(e)},e.i64=function(e){return new n.CLI64(e)},e.u128=function(e){return new n.CLU128(e)},e.u256=function(e){return new n.CLU256(e)},e.u512=function(e){return new n.CLU512(e)},e.unit=function(){return new n.CLUnit},e.string=function(e){return new n.CLString(e)},e.key=function(e){return new n.CLKey(e)},e.uref=function(e,t){return new n.CLURef(e,t)},e}();t.CLValueBuilder=o},9334:function(e,t,r){\"use strict\";var n,i=this&&this.__extends||(n=function(e,t){return n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])},n(e,t)},function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Class extends value \"+String(t)+\" is not a constructor or null\");function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,\"__esModule\",{value:!0}),t.CLByteArray=t.CLByteArrayBytesParser=t.CLByteArrayType=void 0;var o=r(2831),s=r(3286),a=r(9814),u=r(9957),c=r(7269),f=function(e){function t(t){var r=e.call(this)||this;return r.linksTo=u.BYTE_ARRAY_TYPE,r.tag=u.CLTypeTag.ByteArray,r.size=t,r}return i(t,e),t.prototype.toBytes=function(){return(0,s.concat)([Uint8Array.from([this.tag]),(0,c.toBytesU32)(this.size)])},t.prototype.toJSON=function(){var e;return(e={})[u.BYTE_ARRAY_TYPE]=this.size,e},t}(a.CLType);t.CLByteArrayType=f;var l=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return i(t,e),t.prototype.toBytes=function(e){return(0,o.Ok)(e.data)},t.prototype.fromBytesWithRemainder=function(e,t){var r=new d(e.subarray(0,t.size));return(0,a.resultHelper)((0,o.Ok)(r),e.subarray(t.size))},t}(a.CLValueBytesParsers);t.CLByteArrayBytesParser=l;var d=function(e){function t(t){var r=e.call(this)||this;return r.data=t,r}return i(t,e),t.prototype.clType=function(){return new f(this.data.length)},t.prototype.value=function(){return this.data},t}(a.CLValue);t.CLByteArray=d},7939:function(e,t,r){\"use strict\";var n,i=r(8764).Buffer,o=this&&this.__extends||(n=function(e,t){return n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])},n(e,t)},function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Class extends value \"+String(t)+\" is not a constructor or null\");function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,\"__esModule\",{value:!0}),t.CLKey=t.CLKeyBytesParser=t.CLKeyType=void 0;var s=r(3286),a=r(2831),u=r(9814),c=r(9957),f=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.linksTo=c.KEY_TYPE,t.tag=c.CLTypeTag.Key,t}return o(t,e),t}(u.CLType);t.CLKeyType=f;var l=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return o(t,e),t.prototype.toBytes=function(e){if(e.isAccount())return(0,a.Ok)((0,s.concat)([Uint8Array.from([u.KeyVariant.Account]),(new u.CLAccountHashBytesParser).toBytes(e.data).unwrap()]));if(e.isHash())return(0,a.Ok)((0,s.concat)([Uint8Array.from([u.KeyVariant.Hash]),(new u.CLByteArrayBytesParser).toBytes(e.data).unwrap()]));if(e.isURef())return(0,a.Ok)((0,s.concat)([Uint8Array.from([u.KeyVariant.URef]),u.CLValueParsers.toBytes(e.data).unwrap()]));throw new Error(\"Unknown byte types\")},t.prototype.fromBytesWithRemainder=function(e){if(e.length<1)return(0,u.resultHelper)((0,a.Err)(u.CLErrorCodes.EarlyEndOfStream));var t=e[0];if(t===u.KeyVariant.Hash){var r=e.subarray(1),n=(new u.CLByteArrayBytesParser).fromBytesWithRemainder(r,new u.CLByteArrayType(32)),i=n.result,o=n.remainder,s=i.unwrap(),c=new d(s);return(0,u.resultHelper)((0,a.Ok)(c),o)}if(t===u.KeyVariant.URef){var f=(new u.CLURefBytesParser).fromBytesWithRemainder(e.subarray(1)),l=f.result,h=f.remainder;return l.ok?(c=new d(l.val),(0,u.resultHelper)((0,a.Ok)(c),h)):(0,u.resultHelper)((0,a.Err)(l.val))}if(t===u.KeyVariant.Account){var p=(new u.CLAccountHashBytesParser).fromBytesWithRemainder(e.subarray(1)),y=p.result,b=p.remainder;return y.ok?(c=new d(y.val),(0,u.resultHelper)((0,a.Ok)(c),b)):(0,u.resultHelper)((0,a.Err)(y.val))}return(0,u.resultHelper)((0,a.Err)(u.CLErrorCodes.Formatting))},t}(u.CLValueBytesParsers);t.CLKeyBytesParser=l;var d=function(e){function t(t){var r=e.call(this)||this;if(!t.isCLValue)throw Error(\"Provided parameter is not a valid CLValue\");return t.clType().tag===c.CLTypeTag.PublicKey?(r.data=new u.CLAccountHash(t.toAccountHash()),r):(r.data=t,r)}return o(t,e),t.prototype.clType=function(){return new f},t.prototype.value=function(){return this.data},t.prototype.toJSON=function(){return i.from(this.data.value()).toString(\"hex\")},t.prototype.isHash=function(){return this.data.clType().linksTo===u.BYTE_ARRAY_TYPE},t.prototype.isURef=function(){return this.data.clType().linksTo===u.UREF_TYPE},t.prototype.isAccount=function(){return this.data.clType().linksTo===u.ACCOUNT_HASH_TYPE},t}(u.CLValue);t.CLKey=d},2297:function(e,t,r){\"use strict\";var n,i=this&&this.__extends||(n=function(e,t){return n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])},n(e,t)},function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Class extends value \"+String(t)+\" is not a constructor or null\");function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,\"__esModule\",{value:!0}),t.CLList=t.CLListBytesParser=t.CLListType=void 0;var o=r(2831),s=r(3286),a=r(9814),u=r(7269),c=r(9957),f=function(e){function t(t){var r=e.call(this)||this;return r.linksTo=c.LIST_TYPE,r.tag=c.CLTypeTag.List,r.inner=t,r}return i(t,e),t.prototype.toString=function(){return\"\".concat(c.LIST_TYPE,\" (\").concat(this.inner.toString(),\")\")},t.prototype.toBytes=function(){return(0,s.concat)([Uint8Array.from([this.tag]),this.inner.toBytes()])},t.prototype.toJSON=function(){var e,t=this.inner.toJSON();return(e={})[c.LIST_TYPE]=t,e},t}(a.CLType);t.CLListType=f;var l=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return i(t,e),t.prototype.toBytes=function(e){return(0,o.Ok)((0,u.toBytesVectorNew)(e.data))},t.prototype.fromBytesWithRemainder=function(e,t){var r=(new a.CLU32BytesParser).fromBytesWithRemainder(e),n=r.result,i=r.remainder;if(!n.ok)return(0,a.resultHelper)((0,o.Err)(n.val));for(var s=n.val.value().toNumber(),u=[],c=i,f=(0,a.matchByteParserByCLType)(t.inner).unwrap(),l=0;l<s;l++){if(!c)return(0,a.resultHelper)((0,o.Err)(a.CLErrorCodes.EarlyEndOfStream));var h=f.fromBytesWithRemainder(c,t.inner),p=h.result,y=h.remainder;if(!p.ok)return(0,a.resultHelper)((0,o.Err)(p.val));u.push(p.val),c=y}return 0===u.length?(0,a.resultHelper)((0,o.Ok)(new d(t.inner)),c):(0,a.resultHelper)((0,o.Ok)(new d(u)),c)},t}(a.CLValueBytesParsers);t.CLListBytesParser=l;var d=function(e){function t(t){var r=e.call(this)||this;if(Array.isArray(t)&&t[0].clType&&t[0].clType()){var n=t[0].clType();if(!t.every((function(e){return e.clType().toString()===n.toString()})))throw Error(\"Invalid data provided.\");r.data=t,r.vectorType=n}else{if(!(t instanceof a.CLType))throw Error(\"Invalid data type(s) provided.\");r.vectorType=t,r.data=[]}return r}return i(t,e),t.prototype.value=function(){return this.data},t.prototype.clType=function(){return new f(this.vectorType)},t.prototype.toJSON=function(){return this.data.map((function(e){return e.toJSON()}))},t.prototype.get=function(e){if(e>=this.data.length)throw new Error(\"List index out of bounds.\");return this.data[e]},t.prototype.set=function(e,t){if(e>=this.data.length)throw new Error(\"List index out of bounds.\");this.data[e]=t},t.prototype.push=function(e){if(e.clType().toString()!==this.vectorType.toString())throw Error(\"Incosnsistent data type, use \".concat(this.vectorType.toString(),\".\"));this.data.push(e)},t.prototype.remove=function(e){this.data.splice(e,1)},t.prototype.pop=function(){return this.data.pop()},t.prototype.size=function(){return this.data.length},t}(a.CLValue);t.CLList=d},3725:function(e,t,r){\"use strict\";var n,i=this&&this.__extends||(n=function(e,t){return n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])},n(e,t)},function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Class extends value \"+String(t)+\" is not a constructor or null\");function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}),o=this&&this.__spreadArray||function(e,t,r){if(r||2===arguments.length)for(var n,i=0,o=t.length;i<o;i++)!n&&i in t||(n||(n=Array.prototype.slice.call(t,0,i)),n[i]=t[i]);return e.concat(n||Array.prototype.slice.call(t))};Object.defineProperty(t,\"__esModule\",{value:!0}),t.CLMap=t.CLMapBytesParser=t.CLMapType=void 0;var s=r(3286),a=r(2831),u=r(9814),c=r(9957),f=r(7269),l=function(e){function t(t){var r=t[0],n=t[1],i=e.call(this)||this;return i.tag=c.CLTypeTag.Map,i.linksTo=c.MAP_TYPE,i.innerKey=r,i.innerValue=n,i}return i(t,e),t.prototype.toString=function(){return\"\".concat(c.MAP_TYPE,\" (\").concat(this.innerKey.toString(),\": \").concat(this.innerValue.toString(),\")\")},t.prototype.toBytes=function(){return(0,s.concat)([Uint8Array.from([this.tag]),this.innerKey.toBytes(),this.innerValue.toBytes()])},t.prototype.toJSON=function(){var e;return(e={})[c.MAP_TYPE]={key:this.innerKey.toJSON(),value:this.innerValue.toJSON()},e},t}(u.CLType);t.CLMapType=l;var d=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return i(t,e),t.prototype.toBytes=function(e){var t=Array.from(e.data).map((function(e){var t=e[0],r=e[1],n=u.CLValueParsers.toBytes(t).unwrap(),i=u.CLValueParsers.toBytes(r).unwrap();return(0,s.concat)([n,i])}));return(0,a.Ok)((0,s.concat)(o([(0,f.toBytesU32)(e.data.length)],t,!0)))},t.prototype.fromBytesWithRemainder=function(e,t){var r=(new u.CLU32BytesParser).fromBytesWithRemainder(e),n=r.result,i=r.remainder,o=n.unwrap().value().toNumber(),s=[],c=i;if(0===o)return(0,u.resultHelper)((0,a.Ok)(new h([t.innerKey,t.innerValue])),c);for(var f=0;f<o;f++){if(!c)return(0,u.resultHelper)((0,a.Err)(u.CLErrorCodes.EarlyEndOfStream));var l=(0,u.matchByteParserByCLType)(t.innerKey).unwrap().fromBytesWithRemainder(c,t.innerKey),d=l.result,p=l.remainder,y=d.unwrap();if(!(c=p))return(0,u.resultHelper)((0,a.Err)(u.CLErrorCodes.EarlyEndOfStream));var b=(0,u.matchByteParserByCLType)(t.innerValue).unwrap().fromBytesWithRemainder(c,t.innerValue),m=b.result,g=b.remainder,v=m.unwrap();c=g,s.push([y,v])}return o!==s.length?(0,u.resultHelper)((0,a.Err)(u.CLErrorCodes.Formatting)):(0,u.resultHelper)((0,a.Ok)(new h(s)),c)},t}(u.CLValueBytesParsers);t.CLMapBytesParser=d;var h=function(e){function t(t){var r=e.call(this)||this;if(function(e){return Array.isArray(e)&&Array.isArray(e[0])&&2===e[0].length&&!!e[0][0].clType&&!!e[0][1].clType}(t)){if(r.refType=[t[0][0].clType(),t[0][1].clType()],!t.every((function(e){var t=e[0],n=e[1];return t.clType().toString()===r.refType[0].toString()&&n.clType().toString()===r.refType[1].toString()})))throw Error(\"Invalid data provided.\");r.data=t}else{if(!(t[0]instanceof u.CLType&&t[1]instanceof u.CLType))throw Error(\"Invalid data type(s) provided.\");r.refType=t,r.data=[]}return r}return i(t,e),t.prototype.clType=function(){return new l(this.refType)},t.prototype.toJSON=function(){var e=new Map;return this.data.forEach((function(t){var r=t[0],n=t[1];return e.set(r,n)})),e},t.prototype.value=function(){return this.data},t.prototype.has=function(e){return void 0!==this.get(e)},t.prototype.get=function(e){var t=this.data.find((function(t){return t[0].value()===e.value()}));return t?t[1]:void 0},t.prototype.set=function(e,t){this.get(e)?this.data=this.data.map((function(r){return r[0].value()===e.value()?[r[0],t]:r})):this.data=o(o([],this.data,!0),[[e,t]],!1)},t.prototype.delete=function(e){this.data=this.data.filter((function(t){return t[0].value()!==e.value()}))},t.prototype.size=function(){return this.data.length},t}(u.CLValue);t.CLMap=h},7203:function(e,t,r){\"use strict\";var n,i=this&&this.__extends||(n=function(e,t){return n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])},n(e,t)},function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Class extends value \"+String(t)+\" is not a constructor or null\");function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,\"__esModule\",{value:!0}),t.CLU512=t.CLU512BytesParser=t.CLU512Type=t.CLU256=t.CLU256BytesParser=t.CLU256Type=t.CLU128=t.CLU128BytesParser=t.CLU128Type=t.CLU64=t.CLU64BytesParser=t.CLU64Type=t.CLU32=t.CLU32BytesParser=t.CLU32Type=t.CLU8=t.CLU8BytesParser=t.CLU8Type=t.CLI64=t.CLI64BytesParser=t.CLI64Type=t.CLI32=t.CLI32BytesParser=t.CLI32Type=void 0;var o=r(2831),s=r(3362),a=r(9957),u=r(2092),c=r(7269),f=r(9957),l=r(636),d=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return i(t,e),t.prototype.toBytes=function(e){return(128===e.bitSize||256===e.bitSize||512===e.bitSize)&&e.originalBytes&&(0,l.arrayEquals)(e.originalBytes,Uint8Array.from([1,0]))?(0,o.Ok)(e.originalBytes):(0,o.Ok)((0,c.toBytesNumber)(e.bitSize,e.signed)(e.data))},t}(s.CLValueBytesParsers),h=function(e){function t(t,r,n,i){var o=e.call(this)||this;if(!1===r&&Math.sign(n)<0)throw new Error(\"Can't provide negative numbers with isSigned=false\");return i&&(o.originalBytes=i),o.bitSize=t,o.signed=r,o.data=u.BigNumber.from(n),o}return i(t,e),t.prototype.value=function(){return this.data},t.prototype.toJSON=function(){return this.data.toString()},t}(s.CLValue),p=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.linksTo=f.I32_TYPE,t.tag=f.CLTypeTag.I32,t}return i(t,e),t}(s.CLType);t.CLI32Type=p;var y=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return i(t,e),t.prototype.fromBytesWithRemainder=function(e){if(e.length<4)return(0,s.resultHelper)((0,o.Err)(a.CLErrorCodes.EarlyEndOfStream));var t=Uint8Array.from(e.subarray(0,4)),r=u.BigNumber.from(t.slice().reverse()).fromTwos(32),n=e.subarray(4);return(0,s.resultHelper)((0,o.Ok)(new b(r)),n)},t}(d);t.CLI32BytesParser=y;var b=function(e){function t(t){return e.call(this,32,!0,t)||this}return i(t,e),t.prototype.clType=function(){return new p},t}(h);t.CLI32=b;var m=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.linksTo=f.I64_TYPE,t.tag=f.CLTypeTag.I64,t}return i(t,e),t}(s.CLType);t.CLI64Type=m;var g=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return i(t,e),t.prototype.fromBytesWithRemainder=function(e){if(e.length<8)return(0,s.resultHelper)((0,o.Err)(a.CLErrorCodes.EarlyEndOfStream));var t=Uint8Array.from(e.subarray(0,8)),r=u.BigNumber.from(t.slice().reverse()).fromTwos(64),n=e.subarray(8);return(0,s.resultHelper)((0,o.Ok)(new v(r)),n)},t}(d);t.CLI64BytesParser=g;var v=function(e){function t(t){return e.call(this,64,!0,t)||this}return i(t,e),t.prototype.clType=function(){return new m},t}(h);t.CLI64=v;var w=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.linksTo=f.U8_TYPE,t.tag=f.CLTypeTag.U8,t}return i(t,e),t}(s.CLType);t.CLU8Type=w;var E=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return i(t,e),t.prototype.fromBytesWithRemainder=function(e){return 0===e.length?(0,s.resultHelper)((0,o.Err)(a.CLErrorCodes.EarlyEndOfStream)):(0,s.resultHelper)((0,o.Ok)(new _(e[0])),e.subarray(1))},t}(d);t.CLU8BytesParser=E;var _=function(e){function t(t){return e.call(this,8,!1,t)||this}return i(t,e),t.prototype.clType=function(){return new w},t}(h);t.CLU8=_;var S=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.linksTo=f.U32_TYPE,t.tag=f.CLTypeTag.U32,t}return i(t,e),t}(s.CLType);t.CLU32Type=S;var T=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return i(t,e),t.prototype.fromBytesWithRemainder=function(e){if(e.length<4)return(0,s.resultHelper)((0,o.Err)(a.CLErrorCodes.EarlyEndOfStream));var t=Uint8Array.from(e.subarray(0,4)),r=u.BigNumber.from(t.slice().reverse());return(0,s.resultHelper)((0,o.Ok)(new B(r)),e.subarray(4))},t}(d);t.CLU32BytesParser=T;var B=function(e){function t(t){return e.call(this,32,!1,t)||this}return i(t,e),t.prototype.clType=function(){return new S},t}(h);t.CLU32=B;var A=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.linksTo=f.U64_TYPE,t.tag=f.CLTypeTag.U64,t}return i(t,e),t}(s.CLType);t.CLU64Type=A;var x=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return i(t,e),t.prototype.fromBytesWithRemainder=function(e){if(e.length<8)return(0,s.resultHelper)((0,o.Err)(a.CLErrorCodes.EarlyEndOfStream));var t=Uint8Array.from(e.subarray(0,8)),r=u.BigNumber.from(t.slice().reverse());return(0,s.resultHelper)((0,o.Ok)(new P(r)),e.subarray(8))},t}(d);t.CLU64BytesParser=x;var P=function(e){function t(t){return e.call(this,64,!1,t)||this}return i(t,e),t.prototype.clType=function(){return new A},t}(h);t.CLU64=P;var M=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.linksTo=f.U128_TYPE,t.tag=f.CLTypeTag.U128,t}return i(t,e),t}(s.CLType);t.CLU128Type=M;var C=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return i(t,e),t.prototype.fromBytesWithRemainder=function(e){return j(e,128)},t}(d);t.CLU128BytesParser=C;var O=function(e){function t(t,r){return e.call(this,128,!1,t,r)||this}return i(t,e),t.prototype.clType=function(){return new M},t}(h);t.CLU128=O;var k=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.linksTo=f.U256_TYPE,t.tag=f.CLTypeTag.U256,t}return i(t,e),t}(s.CLType);t.CLU256Type=k;var R=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return i(t,e),t.prototype.fromBytesWithRemainder=function(e){return j(e,256)},t}(d);t.CLU256BytesParser=R;var L=function(e){function t(t,r){return e.call(this,256,!1,t,r)||this}return i(t,e),t.prototype.clType=function(){return new k},t}(h);t.CLU256=L;var I=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.linksTo=f.U512_TYPE,t.tag=f.CLTypeTag.U512,t}return i(t,e),t}(s.CLType);t.CLU512Type=I;var N=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return i(t,e),t.prototype.fromBytesWithRemainder=function(e){return j(e,512)},t}(d);t.CLU512BytesParser=N;var U=function(e){function t(t,r){return e.call(this,512,!1,t,r)||this}return i(t,e),t.prototype.clType=function(){return new I},t}(h);t.CLU512=U;var j=function(e,t){if(e.length<1)return(0,s.resultHelper)((0,o.Err)(a.CLErrorCodes.EarlyEndOfStream));var r=t/8,n=e[0];if(n>r)return(0,s.resultHelper)((0,o.Err)(a.CLErrorCodes.Formatting));if(n+1>e.length)return(0,s.resultHelper)((0,o.Err)(a.CLErrorCodes.EarlyEndOfStream));var i=0===n?[0]:e.subarray(1,1+n),c=e.subarray(1+n),f=u.BigNumber.from(i.slice().reverse());return 128===t?(0,s.resultHelper)((0,o.Ok)(new O(f,e)),c):256===t?(0,s.resultHelper)((0,o.Ok)(new L(f,e)),c):512===t?(0,s.resultHelper)((0,o.Ok)(new U(f,e)),c):(0,s.resultHelper)((0,o.Err)(a.CLErrorCodes.Formatting))}},806:function(e,t,r){\"use strict\";var n,i=this&&this.__extends||(n=function(e,t){return n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])},n(e,t)},function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Class extends value \"+String(t)+\" is not a constructor or null\");function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,\"__esModule\",{value:!0}),t.CLOption=t.CLOptionBytesParser=t.CLOptionType=void 0;var o=r(2831),s=r(3286),a=r(9814),u=r(9957),c=function(e){function t(t){var r=e.call(this)||this;return r.tag=u.CLTypeTag.Option,r.linksTo=u.OPTION_TYPE,r.inner=t,r}return i(t,e),t.prototype.toString=function(){return null===this.inner?\"\".concat(u.OPTION_TYPE,\" (None)\"):\"\".concat(u.OPTION_TYPE,\" (\").concat(this.inner.toString(),\")\")},t.prototype.toBytes=function(){return(0,s.concat)([Uint8Array.from([this.tag]),this.inner.toBytes()])},t.prototype.toJSON=function(){var e;return(e={})[u.OPTION_TYPE]=this.inner.toJSON(),e},t}(a.CLType);t.CLOptionType=c;var f=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return i(t,e),t.prototype.toBytes=function(e){return e.data.none?(0,o.Ok)(Uint8Array.from([0])):e.data.some?(0,o.Ok)((0,s.concat)([Uint8Array.from([1]),a.CLValueParsers.toBytes(e.data.unwrap()).unwrap()])):(0,o.Err)(a.CLErrorCodes.UnknownValue)},t.prototype.fromBytesWithRemainder=function(e,t){var r=(new a.CLU8BytesParser).fromBytesWithRemainder(e),n=r.result,i=r.remainder,s=n.unwrap().value().toNumber();if(0===s)return(0,a.resultHelper)((0,o.Ok)(new l(o.None,t.inner)),i);if(1===s){if(!i)return(0,a.resultHelper)((0,o.Err)(a.CLErrorCodes.EarlyEndOfStream));var u=(0,a.matchByteParserByCLType)(t.inner).unwrap().fromBytesWithRemainder(i,t.inner),c=u.result,f=u.remainder,d=c.unwrap();return(0,a.resultHelper)((0,o.Ok)(new l((0,o.Some)(d))),f)}return(0,a.resultHelper)((0,o.Err)(a.CLErrorCodes.Formatting))},t}(a.CLValueBytesParsers);t.CLOptionBytesParser=f;var l=function(e){function t(t,r){var n=e.call(this)||this;if(n.data=t,t.none){if(!r)throw new Error(\"You had to assign innerType for None\");n.innerType=r}else n.innerType=t.val.clType();return e.call(this)||this}return i(t,e),t.prototype.isNone=function(){return this.data.none},t.prototype.isSome=function(){return this.data.some},t.prototype.value=function(){return this.data},t.prototype.toJSON=function(){return this.isNone()?null:this.data.unwrap().toJSON()},t.prototype.clType=function(){return new c(this.innerType)},t}(a.CLValue);t.CLOption=l},8308:function(e,t,r){\"use strict\";var n,i=r(8764).Buffer,o=this&&this.__extends||(n=function(e,t){return n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])},n(e,t)},function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Class extends value \"+String(t)+\" is not a constructor or null\");function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,\"__esModule\",{value:!0}),t.CLPublicKey=t.CLPublicKeyBytesParser=t.CLPublicKeyType=t.CLPublicKeyTag=void 0;var s,a=r(3286),u=r(2831),c=r(9814),f=r(9957),l=r(5157),d=r(7269),h=r(2238),p=r(1247);!function(e){e[e.ED25519=1]=\"ED25519\",e[e.SECP256K1=2]=\"SECP256K1\"}(s=t.CLPublicKeyTag||(t.CLPublicKeyTag={}));var y=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.linksTo=f.PUBLIC_KEY_TYPE,t.tag=f.CLTypeTag.PublicKey,t}return o(t,e),t}(c.CLType);t.CLPublicKeyType=y;var b=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return o(t,e),t.prototype.toBytes=function(e){return(0,u.Ok)((0,a.concat)([Uint8Array.from([e.tag]),e.data]))},t.prototype.fromBytesWithRemainder=function(e){if(e.length<1)return(0,c.resultHelper)((0,u.Err)(c.CLErrorCodes.EarlyEndOfStream));var t,r=e[0];if(r===s.ED25519)t=32;else{if(r!==s.SECP256K1)return(0,c.resultHelper)((0,u.Err)(c.CLErrorCodes.Formatting));t=33}var n=e.subarray(1,t+1),i=new m(n,r);return(0,c.resultHelper)((0,u.Ok)(i),e.subarray(t+1))},t}(c.CLValueBytesParsers);t.CLPublicKeyBytesParser=b;var m=function(e){function t(t,r){var n=e.call(this)||this;if(r===s.ED25519||r===h.SignatureAlgorithm.Ed25519){if(32!==t.length)throw new Error(\"Wrong length of ED25519 key. Expected \".concat(32,\", but got \").concat(t.length,\".\"));return n.data=t,n.tag=s.ED25519,n}if(r===s.SECP256K1||r===h.SignatureAlgorithm.Secp256K1){if(33!==t.length)throw new Error(\"Wrong length of SECP256K1 key. Expected \".concat(33,\", but got \").concat(t.length,\".\"));return n.data=t,n.tag=s.SECP256K1,n}throw new Error(\"Unsupported type of public key\")}return o(t,e),t.prototype.clType=function(){return new y},t.prototype.isEd25519=function(){return this.tag===s.ED25519},t.prototype.isSecp256K1=function(){return this.tag===s.SECP256K1},t.prototype.toHex=function(e){void 0===e&&(e=!0);var t=\"0\".concat(this.tag).concat((0,l.encodeBase16)(this.data));if(e){var r=(0,l.decodeBase16)(t);return(0,p.encode)(r.slice(0,1))+(0,p.encode)(r.slice(1))}return t},t.prototype.toAccountHash=function(){var e=s[this.tag],t=Uint8Array.from([0]),r=i.concat([i.from(e.toLowerCase()),t]);return 0===this.data.length?Uint8Array.from([]):(0,d.byteHash)((0,a.concat)([r,this.data]))},t.prototype.toAccountHashStr=function(){var e=this.toAccountHash(),t=i.from(e).toString(\"hex\");return\"account-hash-\".concat(t)},t.prototype.toAccountRawHashStr=function(){var e=this.toAccountHash();return i.from(e).toString(\"hex\")},t.prototype.value=function(){return this.data},t.fromEd25519=function(e){return new t(e,s.ED25519)},t.fromSecp256K1=function(e){return new t(e,s.SECP256K1)},t.fromHex=function(e,r){if(void 0===r&&(r=!1),e.length<2)throw new Error(\"Asymmetric key error: too short\");if(!/^0(1[0-9a-fA-F]{64}|2[0-9a-fA-F]{66})$/.test(e))throw new Error(\"Invalid public key\");if(!(0,p.isChecksummed)(e)&&(console.warn(\"Provided public key is not checksummed. Please check if you provide valid public key. You can generate checksummed public key from CLPublicKey.toHex(true).\"),r))throw Error(\"Provided public key is not checksummed.\");var n=(0,l.decodeBase16)(e);return new t(n.subarray(1),n[0])},t.prototype.getTag=function(){return this.tag},t.prototype.getSignatureAlgorithm=function(){return function(e){var t,r=(t={},t[s.ED25519]=h.SignatureAlgorithm.Ed25519,t[s.SECP256K1]=h.SignatureAlgorithm.Secp256K1,t)[e];if(void 0===r)throw Error(\"Unknown tag to signature algo mapping.\");return r}(this.tag)},t}(c.CLValue);t.CLPublicKey=m},2172:function(e,t,r){\"use strict\";var n,i=this&&this.__extends||(n=function(e,t){return n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])},n(e,t)},function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Class extends value \"+String(t)+\" is not a constructor or null\");function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,\"__esModule\",{value:!0}),t.CLResult=t.CLResultBytesParser=t.CLResultType=void 0;var o=r(2831),s=r(3286),a=r(9814),u=r(9957),c=function(e){function t(t){var r=t.ok,n=t.err,i=e.call(this)||this;return i.linksTo=u.RESULT_TYPE,i.tag=u.CLTypeTag.Result,i.innerOk=r,i.innerErr=n,i}return i(t,e),t.prototype.toString=function(){return\"\".concat(u.RESULT_TYPE,\" (OK: \").concat(this.innerOk.toString(),\", ERR: \").concat(this.innerOk.toString(),\")\")},t.prototype.toBytes=function(){return(0,s.concat)([Uint8Array.from([this.tag]),this.innerOk.toBytes(),this.innerErr.toBytes()])},t.prototype.toJSON=function(){var e;return(e={})[u.RESULT_TYPE]={ok:this.innerOk.toJSON(),err:this.innerErr.toJSON()},e},t}(a.CLType);t.CLResultType=c;var f=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return i(t,e),t.prototype.toBytes=function(e){if(e.isOk()&&e.data.val.isCLValue)return(0,o.Ok)((0,s.concat)([Uint8Array.from([1]),a.CLValueParsers.toBytes(e.data.val).unwrap()]));if(e.isError())return(0,o.Ok)((0,s.concat)([Uint8Array.from([0]),a.CLValueParsers.toBytes(e.data.val).unwrap()]));throw new Error(\"Unproper data stored in CLResult\")},t.prototype.fromBytesWithRemainder=function(e,t){var r=(new a.CLU8BytesParser).fromBytesWithRemainder(e),n=r.result,i=r.remainder;if(!i)return(0,a.resultHelper)((0,o.Err)(a.CLErrorCodes.EarlyEndOfStream));var s=n.unwrap().value().toNumber(),u=t.innerErr,c=t.innerOk;if(0===s){var f=(0,a.matchByteParserByCLType)(u).unwrap().fromBytesWithRemainder(i,t.innerErr),d=f.result,h=f.remainder,p=new l((0,o.Err)(d.unwrap()),{ok:c,err:u});return(0,a.resultHelper)((0,o.Ok)(p),h)}if(1===s){var y=(0,a.matchByteParserByCLType)(c).unwrap().fromBytesWithRemainder(i,t.innerOk);return d=y.result,h=y.remainder,p=new l((0,o.Ok)(d.unwrap()),{ok:c,err:u}),(0,a.resultHelper)((0,o.Ok)(p),h)}return(0,a.resultHelper)((0,o.Err)(a.CLErrorCodes.Formatting))},t}(a.CLValueBytesParsers);t.CLResultBytesParser=f;var l=function(e){function t(t,r){var n=r.ok,i=r.err,o=e.call(this)||this;return o.data=t,o.innerOk=n,o.innerErr=i,o}return i(t,e),t.prototype.value=function(){return this.data},t.prototype.toJSON=function(){return this.data.unwrap().toJSON()},t.prototype.isError=function(){return this.data.err&&!this.data.ok},t.prototype.isOk=function(){return this.data.ok&&!this.data.err},t.prototype.clType=function(){return new c({ok:this.innerOk,err:this.innerErr})},t}(a.CLValue);t.CLResult=l},8683:function(e,t,r){\"use strict\";var n,i=this&&this.__extends||(n=function(e,t){return n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])},n(e,t)},function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Class extends value \"+String(t)+\" is not a constructor or null\");function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,\"__esModule\",{value:!0}),t.CLString=t.CLStringBytesParser=t.CLStringType=void 0;var o=r(2831),s=r(9814),a=r(9957),u=r(7269),c=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.linksTo=a.STRING_TYPE,t.tag=a.CLTypeTag.String,t}return i(t,e),t}(s.CLType);t.CLStringType=c;var f=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return i(t,e),t.prototype.toBytes=function(e){return(0,o.Ok)((0,u.toBytesString)(e.data))},t.prototype.fromBytesWithRemainder=function(e){var t=(new s.CLU32BytesParser).fromBytesWithRemainder(e),r=t.result,n=t.remainder,i=r.unwrap().value().toNumber();if(n){var a=(0,u.fromBytesString)(n.subarray(0,i));return(0,s.resultHelper)((0,o.Ok)(new l(a)),n.subarray(i))}return(0,s.resultHelper)((0,o.Err)(s.CLErrorCodes.EarlyEndOfStream))},t}(s.CLValueBytesParsers);t.CLStringBytesParser=f;var l=function(e){function t(t){var r=e.call(this)||this;if(\"string\"!=typeof t)throw new Error(\"Wrong data type, you should provide string, but you provided \".concat(typeof t));return r.data=t,r}return i(t,e),t.prototype.clType=function(){return new c},t.prototype.value=function(){return this.data},t.prototype.size=function(){return this.data.length},t}(s.CLValue);t.CLString=l},6698:function(e,t,r){\"use strict\";var n,i=this&&this.__extends||(n=function(e,t){return n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])},n(e,t)},function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Class extends value \"+String(t)+\" is not a constructor or null\");function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}),o=this&&this.__spreadArray||function(e,t,r){if(r||2===arguments.length)for(var n,i=0,o=t.length;i<o;i++)!n&&i in t||(n||(n=Array.prototype.slice.call(t,0,i)),n[i]=t[i]);return e.concat(n||Array.prototype.slice.call(t))};Object.defineProperty(t,\"__esModule\",{value:!0}),t.CLTuple3=t.CLTuple3Type=t.CLTuple2=t.CLTuple2Type=t.CLTuple1=t.CLTuple1Type=t.CLTupleBytesParser=t.CLTupleType=void 0;var s=r(2831),a=r(3286),u=r(9814),c=r(1908),f=r(9957),l=function(e){function t(t,r,n){var i=e.call(this)||this;return i.inner=t,i.linksTo=r,i.tag=n,i}return i(t,e),t.prototype.toString=function(){var e=this.inner.map((function(e){return e.toString()})).join(\", \");return\"Tuple\".concat(this.inner.length,\" (\").concat(e,\")\")},t.prototype.toJSON=function(){var e;return(e={})[c.TUPLE_MATCH_LEN_TO_TYPE[this.inner.length-1]]=this.inner.map((function(e){return e.toJSON()})),e},t.prototype.toBytes=function(){var e=this.inner.map((function(e){return e.toBytes()}));return(0,a.concat)(o([Uint8Array.from([this.tag])],e,!0))},t}(u.CLType);t.CLTupleType=l;var d=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return i(t,e),t.prototype.toBytes=function(e){return(0,s.Ok)((0,a.concat)(e.data.map((function(e){return u.CLValueParsers.toBytes(e).unwrap()}))))},t.prototype.fromBytesWithRemainder=function(e,t){var r=e,n=t.inner.map((function(e){var t=(0,u.matchByteParserByCLType)(e).unwrap().fromBytesWithRemainder(r,e),n=t.result,i=t.remainder;return r=i,n.unwrap()}));return 1===n.length&&t.tag===f.CLTypeTag.Tuple1?(0,u.resultHelper)((0,s.Ok)(new y(n)),r):2===n.length&&t.tag===f.CLTypeTag.Tuple2?(0,u.resultHelper)((0,s.Ok)(new m(n)),r):3===n.length&&t.tag===f.CLTypeTag.Tuple3?(0,u.resultHelper)((0,s.Ok)(new v(n)),r):(0,u.resultHelper)((0,s.Err)(u.CLErrorCodes.Formatting))},t}(u.CLValueBytesParsers);t.CLTupleBytesParser=d;var h=function(e){function t(t,r){var n=e.call(this)||this;if(r.length>t)throw new Error(\"Too many elements!\");if(!r.every((function(e){return e instanceof u.CLValue})))throw Error(\"Invalid data type(s) provided.\");return n.tupleSize=t,n.data=r,n}return i(t,e),t.prototype.get=function(e){return this.data[e]},t.prototype.set=function(e,t){if(e>=this.tupleSize)throw new Error(\"Tuple index out of bounds.\");this.data[e]=t},t.prototype.push=function(e){if(!(this.data.length<this.tupleSize))throw new Error(\"No more space in this tuple!\");this.data.push(e)},t.prototype.value=function(){return this.data},t.prototype.toJSON=function(){return this.data.map((function(e){return e.toJSON()}))},t}(u.CLValue),p=function(e){function t(t){return e.call(this,t,f.TUPLE1_TYPE,f.CLTypeTag.Tuple1)||this}return i(t,e),t}(l);t.CLTuple1Type=p;var y=function(e){function t(t){return e.call(this,1,t)||this}return i(t,e),t.prototype.clType=function(){return new p(this.data.map((function(e){return e.clType()})))},t}(h);t.CLTuple1=y;var b=function(e){function t(t){return e.call(this,t,f.TUPLE2_TYPE,f.CLTypeTag.Tuple2)||this}return i(t,e),t}(l);t.CLTuple2Type=b;var m=function(e){function t(t){return e.call(this,2,t)||this}return i(t,e),t.prototype.clType=function(){return new b(this.data.map((function(e){return e.clType()})))},t}(h);t.CLTuple2=m;var g=function(e){function t(t){return e.call(this,t,f.TUPLE3_TYPE,f.CLTypeTag.Tuple3)||this}return i(t,e),t}(l);t.CLTuple3Type=g;var v=function(e){function t(t){return e.call(this,3,t)||this}return i(t,e),t.prototype.clType=function(){return new g(this.data.map((function(e){return e.clType()})))},t}(h);t.CLTuple3=v},355:function(e,t,r){\"use strict\";var n,i=this&&this.__extends||(n=function(e,t){return n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])},n(e,t)},function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Class extends value \"+String(t)+\" is not a constructor or null\");function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,\"__esModule\",{value:!0}),t.CLURef=t.CLURefBytesParser=t.CLURefType=t.AccessRights=void 0;var o,s=r(3286),a=r(2831),u=r(9814),c=r(9957),f=r(5157);!function(e){e[e.None=0]=\"None\",e[e.READ=1]=\"READ\",e[e.WRITE=2]=\"WRITE\",e[e.ADD=4]=\"ADD\",e[e.READ_WRITE=3]=\"READ_WRITE\",e[e.READ_ADD=5]=\"READ_ADD\",e[e.ADD_WRITE=6]=\"ADD_WRITE\",e[e.READ_ADD_WRITE=7]=\"READ_ADD_WRITE\"}(o=t.AccessRights||(t.AccessRights={}));var l=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.linksTo=c.UREF_TYPE,t.tag=c.CLTypeTag.URef,t}return i(t,e),t}(u.CLType);t.CLURefType=l;var d=\"uref\",h=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return i(t,e),t.prototype.toBytes=function(e){return(0,a.Ok)((0,s.concat)([e.data,Uint8Array.from([e.accessRights])]))},t.prototype.fromBytesWithRemainder=function(e){if(e.length<33)return(0,u.resultHelper)((0,a.Err)(u.CLErrorCodes.EarlyEndOfStream));var t=e.subarray(0,32),r=e[32],n=new p(t,r);return(0,u.resultHelper)((0,a.Ok)(n),e.subarray(33))},t}(u.CLValueBytesParsers);t.CLURefBytesParser=h;var p=function(e){function t(t,r){var n=e.call(this)||this;if(32!==t.byteLength)throw new Error(\"The length of URefAddr should be 32\");if(!Object.values(o).includes(r))throw new Error(\"Unsuported AccessRights\");return n.data=t,n.accessRights=r,n}return i(t,e),t.fromFormattedStr=function(e){if(!e.startsWith(\"\".concat(d,\"-\")))throw new Error(\"Prefix is not 'uref-'\");var r=e.substring(\"\".concat(d,\"-\").length).split(\"-\",2);if(2!==r.length)throw new Error(\"No access rights as suffix\");return new t((0,f.decodeBase16)(r[0]),parseInt(r[1],8))},t.prototype.toFormattedStr=function(){return[d,(0,f.encodeBase16)(this.data),(0,u.padNum)(this.accessRights.toString(8),3)].join(\"-\")},t.prototype.toJSON=function(){return this.toFormattedStr()},t.prototype.clType=function(){return new l},t.prototype.value=function(){return{data:this.data,accessRights:this.accessRights}},t}(u.CLValue);t.CLURef=p},6875:function(e,t,r){\"use strict\";var n,i=this&&this.__extends||(n=function(e,t){return n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])},n(e,t)},function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Class extends value \"+String(t)+\" is not a constructor or null\");function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,\"__esModule\",{value:!0}),t.CLUnit=t.CLUnitBytesParser=t.CLUnitType=void 0;var o=r(2831),s=r(9814),a=r(9957),u=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.tag=a.CLTypeTag.Unit,t.linksTo=a.UNIT_TYPE,t}return i(t,e),t}(s.CLType);t.CLUnitType=u;var c=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return i(t,e),t.prototype.toBytes=function(){return(0,o.Ok)(Uint8Array.from([]))},t.prototype.fromBytesWithRemainder=function(e){return(0,s.resultHelper)((0,o.Ok)(new f),e)},t}(s.CLValueBytesParsers);t.CLUnitBytesParser=c;var f=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.data=void 0,t}return i(t,e),t.prototype.clType=function(){return new u},t.prototype.value=function(){return this.data},t}(s.CLValue);t.CLUnit=f},9957:(e,t)=>{\"use strict\";var r,n,i;Object.defineProperty(t,\"__esModule\",{value:!0}),t.ACCOUNT_HASH_TYPE=t.ANY_TYPE=t.TUPLE3_TYPE=t.TUPLE2_TYPE=t.TUPLE1_TYPE=t.RESULT_TYPE=t.OPTION_TYPE=t.MAP_TYPE=t.LIST_TYPE=t.BYTE_ARRAY_TYPE=t.U512_TYPE=t.U256_TYPE=t.U128_TYPE=t.U64_TYPE=t.U32_TYPE=t.U8_TYPE=t.I64_TYPE=t.I32_TYPE=t.UNIT_TYPE=t.UREF_TYPE=t.STRING_TYPE=t.PUBLIC_KEY_TYPE=t.KEY_TYPE=t.BOOL_TYPE=t.CLTypeTag=t.KeyVariant=t.CLErrorCodes=t.ACCOUNT_HASH_LENGTH=void 0,t.ACCOUNT_HASH_LENGTH=32,(i=t.CLErrorCodes||(t.CLErrorCodes={}))[i.EarlyEndOfStream=0]=\"EarlyEndOfStream\",i[i.Formatting=1]=\"Formatting\",i.LeftOverBytes=\"Left over bytes\",i.OutOfMemory=\"Out of memory exception\",i.UnknownValue=\"Unknown value\",(n=t.KeyVariant||(t.KeyVariant={}))[n.Account=0]=\"Account\",n[n.Hash=1]=\"Hash\",n[n.URef=2]=\"URef\",(r=t.CLTypeTag||(t.CLTypeTag={}))[r.Bool=0]=\"Bool\",r[r.I32=1]=\"I32\",r[r.I64=2]=\"I64\",r[r.U8=3]=\"U8\",r[r.U32=4]=\"U32\",r[r.U64=5]=\"U64\",r[r.U128=6]=\"U128\",r[r.U256=7]=\"U256\",r[r.U512=8]=\"U512\",r[r.Unit=9]=\"Unit\",r[r.String=10]=\"String\",r[r.Key=11]=\"Key\",r[r.URef=12]=\"URef\",r[r.Option=13]=\"Option\",r[r.List=14]=\"List\",r[r.ByteArray=15]=\"ByteArray\",r[r.Result=16]=\"Result\",r[r.Map=17]=\"Map\",r[r.Tuple1=18]=\"Tuple1\",r[r.Tuple2=19]=\"Tuple2\",r[r.Tuple3=20]=\"Tuple3\",r[r.Any=21]=\"Any\",r[r.PublicKey=22]=\"PublicKey\",t.BOOL_TYPE=\"Bool\",t.KEY_TYPE=\"Key\",t.PUBLIC_KEY_TYPE=\"PublicKey\",t.STRING_TYPE=\"String\",t.UREF_TYPE=\"URef\",t.UNIT_TYPE=\"Unit\",t.I32_TYPE=\"I32\",t.I64_TYPE=\"I64\",t.U8_TYPE=\"U8\",t.U32_TYPE=\"U32\",t.U64_TYPE=\"U64\",t.U128_TYPE=\"U128\",t.U256_TYPE=\"U256\",t.U512_TYPE=\"U512\",t.BYTE_ARRAY_TYPE=\"ByteArray\",t.LIST_TYPE=\"List\",t.MAP_TYPE=\"Map\",t.OPTION_TYPE=\"Option\",t.RESULT_TYPE=\"Result\",t.TUPLE1_TYPE=\"Tuple1\",t.TUPLE2_TYPE=\"Tuple2\",t.TUPLE3_TYPE=\"Tuple3\",t.ANY_TYPE=\"Any\",t.ACCOUNT_HASH_TYPE=\"AccountHash\"},9814:function(e,t,r){\"use strict\";var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r);var i=Object.getOwnPropertyDescriptor(t,r);i&&!(\"get\"in i?!t.__esModule:i.writable||i.configurable)||(i={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,n,i)}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),i=this&&this.__exportStar||function(e,t){for(var r in e)\"default\"===r||Object.prototype.hasOwnProperty.call(t,r)||n(t,e,r)};Object.defineProperty(t,\"__esModule\",{value:!0}),i(r(3362),t),i(r(5034),t),i(r(9334),t),i(r(1746),t),i(r(7939),t),i(r(2297),t),i(r(3725),t),i(r(7203),t),i(r(8308),t),i(r(8683),t),i(r(6698),t),i(r(355),t),i(r(6875),t),i(r(9438),t),i(r(207),t),i(r(355),t),i(r(2172),t),i(r(806),t),i(r(9957),t),i(r(1908),t)},1908:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.padNum=t.matchBytesToCLType=t.matchByteParserByCLType=t.matchTypeToCLType=t.TUPLE_MATCH_LEN_TO_TYPE=void 0;var n=r(2831),i=r(9957),o=r(9814);t.TUPLE_MATCH_LEN_TO_TYPE=[i.TUPLE1_TYPE,i.TUPLE2_TYPE,i.TUPLE3_TYPE],t.matchTypeToCLType=function(e){if(\"string\"==typeof e)switch(e){case i.BOOL_TYPE:return new o.CLBoolType;case i.KEY_TYPE:return new o.CLKeyType;case i.PUBLIC_KEY_TYPE:return new o.CLPublicKeyType;case i.STRING_TYPE:return new o.CLStringType;case i.UREF_TYPE:return new o.CLURefType;case i.UNIT_TYPE:return new o.CLUnitType;case i.I32_TYPE:return new o.CLI32Type;case i.I64_TYPE:return new o.CLI64Type;case i.U8_TYPE:return new o.CLU8Type;case i.U32_TYPE:return new o.CLU32Type;case i.U64_TYPE:return new o.CLU64Type;case i.U128_TYPE:return new o.CLU128Type;case i.U256_TYPE:return new o.CLU256Type;case i.U512_TYPE:return new o.CLU512Type;case i.ANY_TYPE:return new o.CLAnyType;default:throw new Error(\"The simple type \".concat(e,\" is not supported\"))}if(typeof e==typeof{}){if(i.LIST_TYPE in e){var r=(0,t.matchTypeToCLType)(e[i.LIST_TYPE]);return new o.CLListType(r)}if(i.BYTE_ARRAY_TYPE in e){var n=e[i.BYTE_ARRAY_TYPE];return new o.CLByteArrayType(n)}if(i.MAP_TYPE in e){var s=(0,t.matchTypeToCLType)(e[i.MAP_TYPE].key),a=(0,t.matchTypeToCLType)(e[i.MAP_TYPE].value);return new o.CLMapType([s,a])}if(i.TUPLE1_TYPE in e){var u=e[i.TUPLE1_TYPE].map((function(e){return(0,t.matchTypeToCLType)(e)}));return new o.CLTuple1Type(u)}if(i.TUPLE2_TYPE in e)return u=e[i.TUPLE2_TYPE].map((function(e){return(0,t.matchTypeToCLType)(e)})),new o.CLTuple2Type(u);if(i.TUPLE3_TYPE in e)return u=e[i.TUPLE3_TYPE].map((function(e){return(0,t.matchTypeToCLType)(e)})),new o.CLTuple3Type(u);if(i.OPTION_TYPE in e)return r=(0,t.matchTypeToCLType)(e[i.OPTION_TYPE]),new o.CLOptionType(r);if(i.RESULT_TYPE in e){var c=(0,t.matchTypeToCLType)(e[i.RESULT_TYPE].ok),f=(0,t.matchTypeToCLType)(e[i.RESULT_TYPE].err);return new o.CLResultType({ok:c,err:f})}throw new Error(\"The complex type \".concat(e,\" is not supported\"))}throw new Error(\"Unknown data provided.\")},t.matchByteParserByCLType=function(e){switch(e.linksTo){case i.ACCOUNT_HASH_TYPE:return(0,n.Ok)(new o.CLAccountHashBytesParser);case i.BOOL_TYPE:return(0,n.Ok)(new o.CLBoolBytesParser);case i.I32_TYPE:return(0,n.Ok)(new o.CLI32BytesParser);case i.I64_TYPE:return(0,n.Ok)(new o.CLI64BytesParser);case i.U8_TYPE:return(0,n.Ok)(new o.CLU8BytesParser);case i.U32_TYPE:return(0,n.Ok)(new o.CLU32BytesParser);case i.U64_TYPE:return(0,n.Ok)(new o.CLU64BytesParser);case i.U128_TYPE:return(0,n.Ok)(new o.CLU128BytesParser);case i.U256_TYPE:return(0,n.Ok)(new o.CLU256BytesParser);case i.U512_TYPE:return(0,n.Ok)(new o.CLU512BytesParser);case i.BYTE_ARRAY_TYPE:return(0,n.Ok)(new o.CLByteArrayBytesParser);case i.UREF_TYPE:return(0,n.Ok)(new o.CLURefBytesParser);case i.KEY_TYPE:return(0,n.Ok)(new o.CLKeyBytesParser);case i.PUBLIC_KEY_TYPE:return(0,n.Ok)(new o.CLPublicKeyBytesParser);case i.LIST_TYPE:return(0,n.Ok)(new o.CLListBytesParser);case i.MAP_TYPE:return(0,n.Ok)(new o.CLMapBytesParser);case i.TUPLE1_TYPE:case i.TUPLE2_TYPE:case i.TUPLE3_TYPE:return(0,n.Ok)(new o.CLTupleBytesParser);case i.OPTION_TYPE:return(0,n.Ok)(new o.CLOptionBytesParser);case i.RESULT_TYPE:return(0,n.Ok)(new o.CLResultBytesParser);case i.STRING_TYPE:return(0,n.Ok)(new o.CLStringBytesParser);case i.UNIT_TYPE:return(0,n.Ok)(new o.CLUnitBytesParser);default:return(0,n.Err)(\"Unknown type\")}},t.matchBytesToCLType=function(e){var r=e[0],s=e.subarray(1);switch(r){case i.CLTypeTag.Bool:return(0,o.resultHelper)((0,n.Ok)(new o.CLBoolType),s);case i.CLTypeTag.I32:return(0,o.resultHelper)((0,n.Ok)(new o.CLI32Type),s);case i.CLTypeTag.I64:return(0,o.resultHelper)((0,n.Ok)(new o.CLI64Type),s);case i.CLTypeTag.U8:return(0,o.resultHelper)((0,n.Ok)(new o.CLU8Type),s);case i.CLTypeTag.U32:return(0,o.resultHelper)((0,n.Ok)(new o.CLU32Type),s);case i.CLTypeTag.U64:case i.CLTypeTag.U64:return(0,o.resultHelper)((0,n.Ok)(new o.CLU64Type),s);case i.CLTypeTag.U128:return(0,o.resultHelper)((0,n.Ok)(new o.CLU128Type),s);case i.CLTypeTag.U256:return(0,o.resultHelper)((0,n.Ok)(new o.CLU256Type),s);case i.CLTypeTag.U512:return(0,o.resultHelper)((0,n.Ok)(new o.CLU512Type),s);case i.CLTypeTag.Unit:return(0,o.resultHelper)((0,n.Ok)(new o.CLUnitType),s);case i.CLTypeTag.String:return(0,o.resultHelper)((0,n.Ok)(new o.CLStringType),s);case i.CLTypeTag.Key:return(0,o.resultHelper)((0,n.Ok)(new o.CLKeyType),s);case i.CLTypeTag.URef:return(0,o.resultHelper)((0,n.Ok)(new o.CLURefType),s);case i.CLTypeTag.Option:var a=(0,t.matchBytesToCLType)(s),u=a.result,c=a.remainder,f=u.unwrap();return(0,o.resultHelper)((0,n.Ok)(new o.CLOptionType(f)),c);case i.CLTypeTag.List:var l=(0,t.matchBytesToCLType)(s);return u=l.result,c=l.remainder,f=u.unwrap(),(0,o.resultHelper)((0,n.Ok)(new o.CLListType(f)),c);case i.CLTypeTag.ByteArray:var d=(0,t.matchBytesToCLType)(s);return u=d.result,c=d.remainder,f=u.unwrap(),(0,o.resultHelper)((0,n.Ok)(new o.CLListType(f)),c);case i.CLTypeTag.Result:var h=(0,t.matchBytesToCLType)(s),p=h.result,y=h.remainder,b=p.unwrap();if(!y)return(0,o.resultHelper)((0,n.Err)(\"Missing Error type bytes in Result\"));var m=(0,t.matchBytesToCLType)(y),g=m.result,v=m.remainder,w=g.unwrap();return(0,o.resultHelper)((0,n.Ok)(new o.CLResultType({ok:b,err:w})),v);case i.CLTypeTag.Map:var E=(0,t.matchBytesToCLType)(s),_=E.result,S=E.remainder,T=_.unwrap();if(!S)return(0,o.resultHelper)((0,n.Err)(\"Missing Key type bytes in Map\"));var B=(0,t.matchBytesToCLType)(S),A=B.result,x=(v=B.remainder,A.unwrap());return(0,o.resultHelper)((0,n.Ok)(new o.CLMapType([T,x])),v);case i.CLTypeTag.Tuple1:var P=(0,t.matchBytesToCLType)(s),M=P.result;return v=P.remainder,f=M.unwrap(),(0,o.resultHelper)((0,n.Ok)(new o.CLTuple1Type([f])),v);case i.CLTypeTag.Tuple2:var C=(0,t.matchBytesToCLType)(s),O=C.result,k=C.remainder,R=O.unwrap();if(!k)return(0,o.resultHelper)((0,n.Err)(\"Missing second tuple type bytes in CLTuple2Type\"));var L=(0,t.matchBytesToCLType)(k),I=L.result,N=L.remainder,U=I.unwrap();return(0,o.resultHelper)((0,n.Ok)(new o.CLTuple1Type([R,U])),N);case i.CLTypeTag.Tuple3:var j=(0,t.matchBytesToCLType)(s);if(O=j.result,k=j.remainder,R=O.unwrap(),!k)return(0,o.resultHelper)((0,n.Err)(\"Missing second tuple type bytes in CLTuple2Type\"));var H=(0,t.matchBytesToCLType)(k);if(I=H.result,N=H.remainder,U=I.unwrap(),!N)return(0,o.resultHelper)((0,n.Err)(\"Missing third tuple type bytes in CLTuple2Type\"));var D=(0,t.matchBytesToCLType)(N),q=D.result,K=D.remainder,z=q.unwrap();return(0,o.resultHelper)((0,n.Ok)(new o.CLTuple1Type([R,U,z])),K);case i.CLTypeTag.Any:return(0,o.resultHelper)((0,n.Err)(\"Any unsupported\"));case i.CLTypeTag.PublicKey:return(0,o.resultHelper)((0,n.Ok)(new o.CLPublicKeyType))}return(0,o.resultHelper)((0,n.Err)(\"Unsuported type\"))},t.padNum=function(e,t){return void 0===t&&(t=1),new Array(t).join(\"0\").slice(-1*(t||2))+e}},2520:function(e,t,r){\"use strict\";var n=this&&this.__awaiter||function(e,t,r,n){return new(r||(r=Promise))((function(i,o){function s(e){try{u(n.next(e))}catch(e){o(e)}}function a(e){try{u(n.throw(e))}catch(e){o(e)}}function u(e){var t;e.done?i(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(s,a)}u((n=n.apply(e,t||[])).next())}))},i=this&&this.__generator||function(e,t){var r,n,i,o,s={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:a(0),throw:a(1),return:a(2)},\"function\"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function a(a){return function(u){return function(a){if(r)throw new TypeError(\"Generator is already executing.\");for(;o&&(o=0,a[0]&&(s=0)),s;)try{if(r=1,n&&(i=2&a[0]?n.return:a[0]?n.throw||((i=n.return)&&i.call(n),0):n.next)&&!(i=i.call(n,a[1])).done)return i;switch(n=0,i&&(a=[2&a[0],i.value]),a[0]){case 0:case 1:i=a;break;case 4:return s.label++,{value:a[1],done:!1};case 5:s.label++,n=a[1],a=[0];continue;case 7:a=s.ops.pop(),s.trys.pop();continue;default:if(!((i=(i=s.trys).length>0&&i[i.length-1])||6!==a[0]&&2!==a[0])){s=0;continue}if(3===a[0]&&(!i||a[1]>i[0]&&a[1]<i[3])){s.label=a[1];break}if(6===a[0]&&s.label<i[1]){s.label=i[1],i=a;break}if(i&&s.label<i[2]){s.label=i[2],s.ops.push(a);break}i[2]&&s.ops.pop(),s.trys.pop();continue}a=t.call(e,s)}catch(e){a=[6,e],n=0}finally{r=i=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,u])}}};Object.defineProperty(t,\"__esModule\",{value:!0}),t.CasperClient=void 0;var o=r(4400),s=r(4493),a=r(5157),u=r(2238),c=r(7045),f=r(2092),l=function(){function e(e){this.nodeClient=new o.CasperServiceByJsonRPC(e)}return e.prototype.newKeyPair=function(e){switch(e){case u.SignatureAlgorithm.Ed25519:return s.Keys.Ed25519.new();case u.SignatureAlgorithm.Secp256K1:return s.Keys.Secp256K1.new();default:throw new Error(\"Invalid signature algorithm\")}},e.prototype.loadPublicKeyFromFile=function(e,t){switch(t){case u.SignatureAlgorithm.Ed25519:return s.Keys.Ed25519.parsePublicKeyFile(e);case u.SignatureAlgorithm.Secp256K1:return s.Keys.Secp256K1.parsePublicKeyFile(e);default:throw new Error(\"Invalid signature algorithm\")}},e.prototype.loadPrivateKeyFromFile=function(e,t){switch(t){case u.SignatureAlgorithm.Ed25519:return s.Keys.Ed25519.parsePrivateKeyFile(e);case u.SignatureAlgorithm.Secp256K1:return s.Keys.Secp256K1.parsePrivateKeyFile(e);default:throw new Error(\"Invalid signature algorithm\")}},e.prototype.loadKeyPairFromPrivateFile=function(e,t){switch(t){case u.SignatureAlgorithm.Ed25519:return s.Keys.Ed25519.loadKeyPairFromPrivateFile(e);case u.SignatureAlgorithm.Secp256K1:return s.Keys.Secp256K1.loadKeyPairFromPrivateFile(e);default:throw new Error(\"Invalid signature algorithm\")}},e.prototype.newHdWallet=function(e,t){switch(t){case u.SignatureAlgorithm.Ed25519:return new c.Ed25519HDKey(e);case u.SignatureAlgorithm.Secp256K1:return new c.Secp256K1HDKey(e)}},e.prototype.privateToPublicKey=function(e,t){switch(t){case u.SignatureAlgorithm.Ed25519:return s.Keys.Ed25519.privateToPublicKey(e);case u.SignatureAlgorithm.Secp256K1:return s.Keys.Secp256K1.privateToPublicKey(e);default:throw new Error(\"Invalid signature algorithm\")}},e.prototype.makeDeploy=function(e,t,r){return s.DeployUtil.makeDeploy(e,t,r)},e.prototype.signDeploy=function(e,t){return s.DeployUtil.signDeploy(e,t)},e.prototype.putDeploy=function(e){return this.nodeClient.deploy(e).then((function(e){return e.deploy_hash}))},e.prototype.speculativeDeploy=function(e,t){return this.nodeClient.speculativeDeploy(e,t).then((function(e){return e}))},e.prototype.deployToJson=function(e){return s.DeployUtil.deployToJson(e)},e.prototype.deployFromJson=function(e){return s.DeployUtil.deployFromJson(e)},e.prototype.makeTransferDeploy=function(e,t,r){if(!t.isTransfer())throw new Error(\"The session is not a Transfer ExecutableDeployItem\");return this.makeDeploy(e,t,r)},e.prototype.balanceOfByPublicKey=function(e){return n(this,void 0,void 0,(function(){return i(this,(function(t){return[2,this.balanceOfByAccountHash((0,a.encodeBase16)(e.toAccountHash()))]}))}))},e.prototype.balanceOfByAccountHash=function(e){return n(this,void 0,void 0,(function(){var t,r;return i(this,(function(n){switch(n.label){case 0:return n.trys.push([0,4,,5]),[4,this.nodeClient.getLatestBlockInfo().then((function(e){var t;return null===(t=e.block)||void 0===t?void 0:t.header.state_root_hash}))];case 1:return(t=n.sent())?[4,this.nodeClient.getAccountBalanceUrefByPublicKeyHash(t,e)]:[2,f.BigNumber.from(0)];case 2:return(r=n.sent())?[4,this.nodeClient.getAccountBalance(t,r)]:[2,f.BigNumber.from(0)];case 3:return[2,n.sent()];case 4:return n.sent(),[2,f.BigNumber.from(0)];case 5:return[2]}}))}))},e.prototype.getDeploy=function(e){return n(this,void 0,void 0,(function(){return i(this,(function(t){switch(t.label){case 0:return[4,this.nodeClient.getDeployInfo(e).then((function(e){return[s.DeployUtil.deployFromJson(e).unwrap(),e]}))];case 1:return[2,t.sent()]}}))}))},e.prototype.getAccountMainPurseUref=function(e){return n(this,void 0,void 0,(function(){var t;return i(this,(function(r){switch(r.label){case 0:return[4,this.nodeClient.getLatestBlockInfo().then((function(e){var t;return null===(t=e.block)||void 0===t?void 0:t.header.state_root_hash}))];case 1:return(t=r.sent())?[4,this.nodeClient.getAccountBalanceUrefByPublicKeyHash(t,(0,a.encodeBase16)(e.toAccountHash()))]:[2,null];case 2:return[2,r.sent()]}}))}))},e}();t.CasperClient=l},3981:function(e,t,r){\"use strict\";var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r);var i=Object.getOwnPropertyDescriptor(t,r);i&&!(\"get\"in i?!t.__esModule:i.writable||i.configurable)||(i={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,n,i)}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,\"default\",{enumerable:!0,value:t})}:function(e,t){e.default=t}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)\"default\"!==r&&Object.prototype.hasOwnProperty.call(e,r)&&n(t,e,r);return i(t,e),t};Object.defineProperty(t,\"__esModule\",{value:!0}),t.CasperHDKey=void 0;var s=o(r(7286)),a=r(1083),u=a.wordlist,c=function(){function e(e,t){this.seed=e,this.signatureAlorithm=t}return e.bip44Path=function(t){return[\"m\",\"44'\",\"\".concat(e.bip44Index,\"'\"),\"0'\",\"0\",\"\".concat(t)].join(\"/\")},e.newMnemonic=function(t){if(void 0===t&&(t=12),![12,24].includes(t))throw new Error(\"Invalid word length\");var r=12===t?128:256;return s.generateMnemonic(e.getWordlist(),r)},e.validateMnemonic=function(t){return s.validateMnemonic(t,e.getWordlist())},e.mnemonicToSeed=function(t){return s.mnemonicToEntropy(t,e.getWordlist())},e.newSeed=function(){return e.mnemonicToSeed(e.newMnemonic())},e.setWordlist=function(e){u=e},e.getWordlist=function(){return u},e.getDefaultWordlist=function(){return a.wordlist},Object.defineProperty(e.prototype,\"signatureAlgorithm\",{get:function(){return this.signatureAlorithm},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,\"mnemonic\",{get:function(){return s.entropyToMnemonic(this.seed,e.getWordlist())},enumerable:!1,configurable:!0}),e.prototype.deriveChild=function(t){return this.derive(e.bip44Path(t))},e.bip44Index=506,e}();t.CasperHDKey=c},203:function(e,t,r){\"use strict\";var n,i=this&&this.__extends||(n=function(e,t){return n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])},n(e,t)},function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Class extends value \"+String(t)+\" is not a constructor or null\");function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,\"__esModule\",{value:!0}),t.Ed25519HDKey=void 0;var o=r(7183),s=r(3981),a=r(2238),u=function(e){function t(t){var r=e.call(this,t,a.SignatureAlgorithm.Ed25519)||this;return r.hdKey=o.HDKey.fromMasterSeed(t),r}return i(t,e),t.new=function(){return new t(t.newSeed())},t.fromMnemonic=function(e){return new t(t.mnemonicToSeed(e))},t.prototype.publicKey=function(){return this.hdKey.publicKey},t.prototype.privateKey=function(){return this.hdKey.privateKey},t.prototype.derive=function(e,t){void 0===t&&(t=!0);var r=this.hdKey.derive(e,t);return new a.Ed25519({publicKey:r.publicKeyRaw,secretKey:r.privateKey})},t.prototype.sign=function(e){return this.hdKey.sign(e)},t.prototype.verify=function(e,t){return this.hdKey.verify(t,e)},t}(s.CasperHDKey);t.Ed25519HDKey=u},1042:function(e,t,r){\"use strict\";var n,i=r(8764).Buffer,o=this&&this.__extends||(n=function(e,t){return n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])},n(e,t)},function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Class extends value \"+String(t)+\" is not a constructor or null\");function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,\"__esModule\",{value:!0}),t.Secp256K1HDKey=void 0;var s=r(1869),a=r(3061),u=r(3981),c=r(2238),f=function(e){function t(t){var r=e.call(this,t,c.SignatureAlgorithm.Ed25519)||this;return r.hdKey=s.HDKey.fromMasterSeed(t),r}return o(t,e),t.new=function(){return new t(t.newSeed())},t.fromMnemonic=function(e){return new t(t.mnemonicToSeed(e))},t.prototype.publicKey=function(){return this.hdKey.publicKey},t.prototype.privateKey=function(){return this.hdKey.privateKey},t.prototype.derive=function(e){var t=this.hdKey.derive(e);return new c.Secp256K1(new Uint8Array(t.publicKey),new Uint8Array(t.privateKey))},t.prototype.sign=function(e){return this.hdKey.sign((0,a.sha256)(i.from(e)))},t.prototype.verify=function(e,t){return this.hdKey.verify((0,a.sha256)(i.from(t)),i.from(e))},t}(u.CasperHDKey);t.Secp256K1HDKey=f},7183:function(e,t,r){\"use strict\";var n=this&&this.__spreadArray||function(e,t,r){if(r||2===arguments.length)for(var n,i=0,o=t.length;i<o;i++)!n&&i in t||(n||(n=Array.prototype.slice.call(t,0,i)),n[i]=t[i]);return e.concat(n||Array.prototype.slice.call(t))};Object.defineProperty(t,\"__esModule\",{value:!0}),t.HDKey=t.HARDENED_OFFSET=t.MASTER_SECRET=void 0;var i=r(2889),o=r(9569),s=r(830),a=r(3061),u=r(6262),c=r(8089),f=r(7320);t.MASTER_SECRET=(0,c.utf8ToBytes)(\"ed25519 seed\"),t.HARDENED_OFFSET=2147483648;var l=new Uint8Array([0]);function d(e){for(var t=[],r=1;r<arguments.length;r++)t[r-1]=arguments[r];return\"string\"==typeof e&&(e=(0,c.hexToBytes)(e)),f.bytes.apply(void 0,n([e],t,!1)),e}var h=function(e){if(!Number.isSafeInteger(e)||e<0||e>Math.pow(2,32)-1)throw new Error(\"Invalid number=\".concat(e,\". Should be from 0 to 2 ** 32 - 1\"));var t=new Uint8Array(4);return(0,c.createView)(t).setUint32(0,e,!1),t},p=function(){function e(e){if(this.depth=0,this.index=0,this.parentFingerprint=0,!e||\"object\"!=typeof e)throw new Error(\"HDKey.constructor must not be called directly\");if((0,f.bytes)(e.privateKey,32),(0,f.bytes)(e.chainCode,32),this.depth=e.depth||0,this.index=e.index||0,this.parentFingerprint=e.parentFingerprint||0,!this.depth&&(this.parentFingerprint||this.index))throw new Error(\"HDKey: zero depth with non-zero index/parent fingerprint\");this.chainCode=e.chainCode,this.privateKey=e.privateKey}return Object.defineProperty(e.prototype,\"publicKeyRaw\",{get:function(){return i.ed25519.getPublicKey(this.privateKey)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,\"publicKey\",{get:function(){return(0,c.concatBytes)(l,this.publicKeyRaw)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,\"pubHash\",{get:function(){return e=this.publicKey,(0,s.ripemd160)((0,a.sha256)(e));var e},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,\"fingerprint\",{get:function(){return e=this.pubHash,(0,c.createView)(e).getUint32(0,!1);var e},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,\"fingerprintHex\",{get:function(){return(0,c.bytesToHex)(h(this.fingerprint))},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,\"parentFingerprintHex\",{get:function(){return(0,c.bytesToHex)(h(this.parentFingerprint))},enumerable:!1,configurable:!0}),e.fromMasterSeed=function(r){if(8*(r=d(r)).length<128||8*r.length>512)throw new Error(\"HDKey: wrong seed length=\".concat(r.length,\". Should be between 128 and 512 bits; 256 bits is advised)\"));var n=(0,o.hmac)(u.sha512,t.MASTER_SECRET,r);return new e({privateKey:n.slice(0,32),chainCode:n.slice(32)})},e.prototype.derive=function(e,r){if(void 0===r&&(r=!1),!/^[mM]'?/.test(e))throw new Error('Path must start with \"m\" or \"M\"');if(/^[mM]'?$/.test(e))return this;for(var n=this,i=0,o=e.replace(/^[mM]'?\\//,\"\").split(\"/\");i<o.length;i++){var s=o[i],a=/^(\\d+)('?)$/.exec(s);if(!a||3!==a.length)throw new Error(\"Invalid child index: \".concat(s));var u=+a[1];if(!Number.isSafeInteger(u)||u>=t.HARDENED_OFFSET)throw new Error(\"Invalid index\");(r||\"'\"===a[2])&&(u+=t.HARDENED_OFFSET),n=n.deriveChild(u)}return n},e.prototype.deriveChild=function(r){if(r<t.HARDENED_OFFSET)throw new Error(\"Non-hardened child derivation not possible for Ed25519 (index=\".concat(r,\")\"));var n=(0,c.concatBytes)(l,this.privateKey,h(r)),i=(0,o.hmac)(u.sha512,this.chainCode,n);return new e({chainCode:i.slice(32),depth:this.depth+1,parentFingerprint:this.fingerprint,index:r,privateKey:i.slice(0,32)})},e.prototype.sign=function(e){return i.ed25519.sign(e,this.privateKey)},e.prototype.verify=function(e,t){return t=d(t,64),i.ed25519.verify(t,e,this.publicKeyRaw)},e}();t.HDKey=p},7045:function(e,t,r){\"use strict\";var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r);var i=Object.getOwnPropertyDescriptor(t,r);i&&!(\"get\"in i?!t.__esModule:i.writable||i.configurable)||(i={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,n,i)}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),i=this&&this.__exportStar||function(e,t){for(var r in e)\"default\"===r||Object.prototype.hasOwnProperty.call(t,r)||n(t,e,r)};Object.defineProperty(t,\"__esModule\",{value:!0}),i(r(3981),t),i(r(203),t),i(r(1042),t)},1247:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.isChecksummed=t.isSamecase=t.encode=t.SMALL_BYTES_COUNT=void 0;var n=r(3286),i=r(7269),o=r(5157);t.SMALL_BYTES_COUNT=75;var s=[\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"A\",\"B\",\"C\",\"D\",\"E\",\"F\"];t.encode=function(e){var t=e.reduce((function(e,t){return(0,n.concat)([e,Uint8Array.of(t>>>4,15&t)])}),new Uint8Array),r=function(e){for(var t=[],r=0,n=0;r<e.length;r++)for(var i=0;i<8;i++)t[n++]=1==(e[r]>>>i&1);return t}((0,i.byteHash)(e)).values();return t.reduce((function(e,t){var n=s[t];return/^[a-zA-Z()]+$/.test(n)&&r.next().value?e+n.toUpperCase():e+n.toLowerCase()}),\"\")},t.isSamecase=function(e){return/^[a-z0-9]+$|^[A-Z0-9]+$/.test(e)},t.isChecksummed=function(e){var r=(0,o.decodeBase16)(e);return!!(r.length>t.SMALL_BYTES_COUNT||(0,t.isSamecase)(e))||(/^0(1[0-9a-fA-F]{64}|2[0-9a-fA-F]{66})$/.test(e)?e===(0,t.encode)(r.slice(0,1))+(0,t.encode)(r.slice(1)):e===(0,t.encode)(r))}},4848:function(e,t,r){\"use strict\";var n=r(8764).Buffer,i=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r);var i=Object.getOwnPropertyDescriptor(t,r);i&&!(\"get\"in i?!t.__esModule:i.writable||i.configurable)||(i={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,n,i)}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,\"default\",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)\"default\"!==r&&Object.prototype.hasOwnProperty.call(e,r)&&i(t,e,r);return o(t,e),t},a=this&&this.__awaiter||function(e,t,r,n){return new(r||(r=Promise))((function(i,o){function s(e){try{u(n.next(e))}catch(e){o(e)}}function a(e){try{u(n.throw(e))}catch(e){o(e)}}function u(e){var t;e.done?i(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(s,a)}u((n=n.apply(e,t||[])).next())}))},u=this&&this.__generator||function(e,t){var r,n,i,o,s={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:a(0),throw:a(1),return:a(2)},\"function\"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function a(a){return function(u){return function(a){if(r)throw new TypeError(\"Generator is already executing.\");for(;o&&(o=0,a[0]&&(s=0)),s;)try{if(r=1,n&&(i=2&a[0]?n.return:a[0]?n.throw||((i=n.return)&&i.call(n),0):n.next)&&!(i=i.call(n,a[1])).done)return i;switch(n=0,i&&(a=[2&a[0],i.value]),a[0]){case 0:case 1:i=a;break;case 4:return s.label++,{value:a[1],done:!1};case 5:s.label++,n=a[1],a=[0];continue;case 7:a=s.ops.pop(),s.trys.pop();continue;default:if(!((i=(i=s.trys).length>0&&i[i.length-1])||6!==a[0]&&2!==a[0])){s=0;continue}if(3===a[0]&&(!i||a[1]>i[0]&&a[1]<i[3])){s.label=a[1];break}if(6===a[0]&&s.label<i[1]){s.label=i[1],i=a;break}if(i&&s.label<i[2]){s.label=i[2],s.ops.push(a);break}i[2]&&s.ops.pop(),s.trys.pop();continue}a=t.call(e,s)}catch(e){a=[6,e],n=0}finally{r=i=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,u])}}};Object.defineProperty(t,\"__esModule\",{value:!0}),t.fromCLMap=t.toCLMap=t.Contract=t.contractHashToByteArray=void 0;var c=r(7108),f=s(r(636)),l=r(8581);t.contractHashToByteArray=function(e){return Uint8Array.from(n.from(e,\"hex\"))};var d=\"You need to either create Contract instance with casperClient or pass it as parameter to this function\",h=function(){function e(e){this.casperClient=e}return e.prototype.setContractHash=function(e,t){if(!e.startsWith(\"hash-\")||t&&!t.startsWith(\"hash-\"))throw new Error(\"Please provide contract hash in a format that contains hash- prefix.\");this.contractHash=e,this.contractPackageHash=t},e.prototype.install=function(e,t,r,n,i,o){return void 0===o&&(o=[]),f.makeDeploy(new f.DeployParams(n,i),f.ExecutableDeployItem.newModuleBytes(e,t),f.standardPayment(r)).sign(o)},e.prototype.checkSetup=function(){if(this.contractHash)return!0;throw Error(\"You need to setContract before running this method.\")},e.prototype.callEntrypoint=function(e,r,n,i,o,s,a){void 0===s&&(s=[]),void 0===a&&(a=l.DEFAULT_DEPLOY_TTL),this.checkSetup();var u=(0,t.contractHashToByteArray)(this.contractHash.slice(5));return f.makeDeploy(new f.DeployParams(n,i,1,a),f.ExecutableDeployItem.newStoredContractByHash(u,e,r),f.standardPayment(o)).sign(s)},e.prototype.queryContractData=function(e,t,r){var n;return void 0===e&&(e=[]),a(this,void 0,void 0,(function(){var i,o,s,a;return u(this,(function(u){switch(u.label){case 0:if(!(i=t||this.casperClient))throw Error(d);return(s=r)?[3,2]:[4,i.nodeClient.getStateRootHash()];case 1:s=u.sent(),u.label=2;case 2:return o=s,[4,i.nodeClient.getBlockState(o,this.contractHash,e)];case 3:if((a=u.sent())&&(null===(n=a.CLValue)||void 0===n?void 0:n.isCLValue))return[2,a.CLValue.value()];throw Error(\"Invalid stored value\")}}))}))},e.prototype.queryContractDictionary=function(e,t,r,n){var i;return a(this,void 0,void 0,(function(){var o,s,a,c;return u(this,(function(u){switch(u.label){case 0:if(this.checkSetup(),!(o=n||this.casperClient))throw Error(d);return(a=r)?[3,2]:[4,o.nodeClient.getStateRootHash()];case 1:a=u.sent(),u.label=2;case 2:return s=a,[4,o.nodeClient.getDictionaryItemByName(s,this.contractHash,e,t)];case 3:if((c=u.sent())&&(null===(i=c.CLValue)||void 0===i?void 0:i.isCLValue))return[2,c.CLValue];throw Error(\"Invalid stored value\")}}))}))},e}();t.Contract=h,t.toCLMap=function(e){for(var t=c.CLValueBuilder.map([c.CLTypeBuilder.string(),c.CLTypeBuilder.string()]),r=0,n=Array.from(e.entries());r<n.length;r++){var i=n[r],o=i[0],s=i[1];t.set(c.CLValueBuilder.string(o),c.CLValueBuilder.string(s))}return t},t.fromCLMap=function(e){for(var t=new Map,r=0,n=e;r<n.length;r++){var i=n[r],o=i[0],s=i[1];t.set(o.value(),s.value())}return t}},5157:(e,t,r)=>{\"use strict\";var n=r(8764).Buffer;Object.defineProperty(t,\"__esModule\",{value:!0}),t.motesToCSPR=t.csprToMotes=t.decodeBase16=t.encodeBase16=t.base64to16=t.decodeBase64=t.encodeBase64=void 0;var i=r(2092);function o(e){return new Uint8Array(n.from(e,\"base64\"))}function s(e){return n.from(e).toString(\"hex\")}t.encodeBase64=function(e){return n.from(e).toString(\"base64\")},t.decodeBase64=o,t.base64to16=function(e){return s(o(e))},t.encodeBase16=s,t.decodeBase16=function(e){return new Uint8Array(n.from(e,\"hex\"))},t.csprToMotes=function(e){return i.BigNumber.from(e).mul(\"1000000000\")},t.motesToCSPR=function(e){return i.BigNumber.from(e).div(\"1000000000\")}},636:function(e,t,r){\"use strict\";var n,i=r(8764).Buffer,o=this&&this.__extends||(n=function(e,t){return n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])},n(e,t)},function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Class extends value \"+String(t)+\" is not a constructor or null\");function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}),s=this&&this.__decorate||function(e,t,r,n){var i,o=arguments.length,s=o<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,r):n;if(\"object\"==typeof Reflect&&\"function\"==typeof Reflect.decorate)s=Reflect.decorate(e,t,r,n);else for(var a=e.length-1;a>=0;a--)(i=e[a])&&(s=(o<3?i(s):o>3?i(t,r,s):i(t,r))||s);return o>3&&s&&Object.defineProperty(t,r,s),s},a=this&&this.__metadata||function(e,t){if(\"object\"==typeof Reflect&&\"function\"==typeof Reflect.metadata)return Reflect.metadata(e,t)},u=this&&this.__awaiter||function(e,t,r,n){return new(r||(r=Promise))((function(i,o){function s(e){try{u(n.next(e))}catch(e){o(e)}}function a(e){try{u(n.throw(e))}catch(e){o(e)}}function u(e){var t;e.done?i(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(s,a)}u((n=n.apply(e,t||[])).next())}))},c=this&&this.__generator||function(e,t){var r,n,i,o,s={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:a(0),throw:a(1),return:a(2)},\"function\"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function a(a){return function(u){return function(a){if(r)throw new TypeError(\"Generator is already executing.\");for(;o&&(o=0,a[0]&&(s=0)),s;)try{if(r=1,n&&(i=2&a[0]?n.return:a[0]?n.throw||((i=n.return)&&i.call(n),0):n.next)&&!(i=i.call(n,a[1])).done)return i;switch(n=0,i&&(a=[2&a[0],i.value]),a[0]){case 0:case 1:i=a;break;case 4:return s.label++,{value:a[1],done:!1};case 5:s.label++,n=a[1],a=[0];continue;case 7:a=s.ops.pop(),s.trys.pop();continue;default:if(!((i=(i=s.trys).length>0&&i[i.length-1])||6!==a[0]&&2!==a[0])){s=0;continue}if(3===a[0]&&(!i||a[1]>i[0]&&a[1]<i[3])){s.label=a[1];break}if(6===a[0]&&s.label<i[1]){s.label=i[1],i=a;break}if(i&&s.label<i[2]){s.label=i[2],s.ops.push(a);break}i[2]&&s.ops.pop(),s.trys.pop();continue}a=t.call(e,s)}catch(e){a=[6,e],n=0}finally{r=i=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,u])}}},f=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,\"__esModule\",{value:!0}),t.deployToBytes=t.arrayEquals=t.validateDeploy=t.deploySizeInBytes=t.addArgToDeploy=t.deployFromJson=t.deployToJson=t.standardPayment=t.setSignature=t.signDeploy=t.makeDeployWithAutoTimestamp=t.makeDeploy=t.DeployParams=t.ContractType=t.serializeApprovals=t.serializeBody=t.serializeHeader=t.Deploy=t.ExecutableDeployItem=t.Transfer=t.StoredVersionedContractByHash=t.StoredVersionedContractByName=t.StoredContractByName=t.StoredContractByHash=t.ModuleBytes=t.Approval=t.DeployHeader=t.UniqAddress=t.dehumanizerTTL=t.humanizerTTL=void 0;var l=r(2831),d=r(3286),h=r(2092),p=r(4546),y=f(r(9695)),b=r(5157),m=r(9814),g=r(7269),v=r(5923),w=r(4493),E=r(2238),_=r(2520),S=r(45),T=r(8581),B=r(6286),A=y.default.humanizer({spacer:\"\",serialComma:!1,conjunction:\" \",delimiter:\" \",language:\"shortEn\",languages:{shortEn:{d:function(){return\"day\"},h:function(){return\"h\"},m:function(){return\"m\"},s:function(){return\"s\"},ms:function(){return\"ms\"}}}}),x=function(e){return(0,b.encodeBase16)(e)},P=function(e){return(0,b.decodeBase16)(e)};t.humanizerTTL=function(e){return A(e)},t.dehumanizerTTL=function(e){return e.split(\" \").map((function(e){if(e.includes(\"ms\"))return Number(e.replace(\"ms\",\"\"));if(e.includes(\"s\")&&!e.includes(\"m\"))return 1e3*Number(e.replace(\"s\",\"\"));if(e.includes(\"m\")&&!e.includes(\"s\"))return 60*Number(e.replace(\"m\",\"\"))*1e3;if(e.includes(\"h\"))return 60*Number(e.replace(\"h\",\"\"))*60*1e3;if(e.includes(\"day\"))return 24*Number(e.replace(\"day\",\"\"))*60*60*1e3;throw Error(\"Unsuported TTL unit\")})).reduce((function(e,t){return e+t}))};var M=function(){function e(e,t){if(!(e instanceof m.CLPublicKey))throw new Error(\"publicKey is not an instance of CLPublicKey\");var r=h.BigNumber.from(t);if(r.gt(\"18446744073709551615\"))throw new Error(\"transferId max value is U64\");this.transferId=r,this.publicKey=e}return e.prototype.toString=function(){return\"\".concat(this.publicKey.toHex(),\"-\").concat(this.transferId.toHexString())},e.fromString=function(t){var r=t.split(\"-\"),n=r[0],i=r[1];return new e(m.CLPublicKey.fromHex(n),i)},e}();t.UniqAddress=M;var C=function(){function e(e,t,r,n,i,o,s){this.account=e,this.timestamp=t,this.ttl=r,this.gasPrice=n,this.bodyHash=i,this.dependencies=o,this.chainName=s}return e.prototype.toBytes=function(){return(0,l.Ok)((0,d.concat)([m.CLValueParsers.toBytes(this.account).unwrap(),(0,g.toBytesU64)(this.timestamp),(0,g.toBytesU64)(this.ttl),(0,g.toBytesU64)(this.gasPrice),(0,g.toBytesDeployHash)(this.bodyHash),(0,g.toBytesVector)(this.dependencies.map((function(e){return new O(e)}))),(0,g.toBytesString)(this.chainName)]))},s([(0,p.jsonMember)({serializer:function(e){return e.toHex()},deserializer:function(e){return m.CLPublicKey.fromHex(e,!1)}}),a(\"design:type\",m.CLPublicKey)],e.prototype,\"account\",void 0),s([(0,p.jsonMember)({serializer:function(e){return new Date(e).toISOString()},deserializer:function(e){return Date.parse(e)}}),a(\"design:type\",Number)],e.prototype,\"timestamp\",void 0),s([(0,p.jsonMember)({serializer:t.humanizerTTL,deserializer:t.dehumanizerTTL}),a(\"design:type\",Number)],e.prototype,\"ttl\",void 0),s([(0,p.jsonMember)({constructor:Number,name:\"gas_price\"}),a(\"design:type\",Number)],e.prototype,\"gasPrice\",void 0),s([(0,p.jsonMember)({name:\"body_hash\",serializer:x,deserializer:P}),a(\"design:type\",Uint8Array)],e.prototype,\"bodyHash\",void 0),s([(0,p.jsonArrayMember)(Uint8Array,{serializer:function(e){return e.map((function(e){return x(e)}))},deserializer:function(e){return e.map((function(e){return P(e)}))}}),a(\"design:type\",Array)],e.prototype,\"dependencies\",void 0),s([(0,p.jsonMember)({name:\"chain_name\",constructor:String}),a(\"design:type\",String)],e.prototype,\"chainName\",void 0),s([p.jsonObject,a(\"design:paramtypes\",[m.CLPublicKey,Number,Number,Number,Uint8Array,Array,String])],e)}();t.DeployHeader=C;var O=function(){function e(e){this.hash=e}return e.prototype.toBytes=function(){return(0,l.Ok)((0,g.toBytesDeployHash)(this.hash))},e}(),k=function(){function e(){}return s([(0,p.jsonMember)({constructor:String}),a(\"design:type\",String)],e.prototype,\"signer\",void 0),s([(0,p.jsonMember)({constructor:String}),a(\"design:type\",String)],e.prototype,\"signature\",void 0),s([p.jsonObject],e)}();t.Approval=k;var R=function(){function e(){}return e.prototype.getArgByName=function(e){return this.args.args.get(e)},e.prototype.setArg=function(e,t){this.args.args.set(e,t)},e}(),L=function(e){var t={args:e};return new p.TypedJSON(v.RuntimeArgs).parse(t)},I=function(e){var t=new p.TypedJSON(v.RuntimeArgs).toPlainJson(e);return Object.values(t)[0]},N=function(e){function t(t,r){var n=e.call(this)||this;return n.tag=0,n.moduleBytes=t,n.args=r,n}return o(t,e),t.prototype.toBytes=function(){return this.args?(0,l.Ok)((0,d.concat)([Uint8Array.from([this.tag]),(0,g.toBytesArrayU8)(this.moduleBytes),(0,g.toBytesBytesArray)(this.args.toBytes().unwrap())])):(0,l.Err)(m.CLErrorCodes.Formatting)},s([(0,p.jsonMember)({name:\"module_bytes\",serializer:x,deserializer:P}),a(\"design:type\",Uint8Array)],t.prototype,\"moduleBytes\",void 0),s([(0,p.jsonMember)({deserializer:L,serializer:I}),a(\"design:type\",v.RuntimeArgs)],t.prototype,\"args\",void 0),s([p.jsonObject,a(\"design:paramtypes\",[Uint8Array,v.RuntimeArgs])],t)}(R);t.ModuleBytes=N;var U=function(e){function t(t,r,n){var i=e.call(this)||this;return i.tag=1,i.entryPoint=r,i.args=n,i.hash=t,i}return o(t,e),t.prototype.toBytes=function(){return(0,l.Ok)((0,d.concat)([Uint8Array.from([this.tag]),(0,g.toBytesBytesArray)(this.hash),(0,g.toBytesString)(this.entryPoint),(0,g.toBytesBytesArray)(this.args.toBytes().unwrap())]))},s([(0,p.jsonMember)({serializer:x,deserializer:P}),a(\"design:type\",Uint8Array)],t.prototype,\"hash\",void 0),s([(0,p.jsonMember)({name:\"entry_point\",constructor:String}),a(\"design:type\",String)],t.prototype,\"entryPoint\",void 0),s([(0,p.jsonMember)({deserializer:L,serializer:I}),a(\"design:type\",v.RuntimeArgs)],t.prototype,\"args\",void 0),s([p.jsonObject,a(\"design:paramtypes\",[Uint8Array,String,v.RuntimeArgs])],t)}(R);t.StoredContractByHash=U;var j=function(e){function t(t,r,n){var i=e.call(this)||this;return i.tag=2,i.name=t,i.entryPoint=r,i.args=n,i}return o(t,e),t.prototype.toBytes=function(){return(0,l.Ok)((0,d.concat)([Uint8Array.from([this.tag]),(0,g.toBytesString)(this.name),(0,g.toBytesString)(this.entryPoint),(0,g.toBytesBytesArray)(this.args.toBytes().unwrap())]))},s([(0,p.jsonMember)({constructor:String}),a(\"design:type\",String)],t.prototype,\"name\",void 0),s([(0,p.jsonMember)({name:\"entry_point\",constructor:String}),a(\"design:type\",String)],t.prototype,\"entryPoint\",void 0),s([(0,p.jsonMember)({deserializer:L,serializer:I}),a(\"design:type\",v.RuntimeArgs)],t.prototype,\"args\",void 0),s([p.jsonObject,a(\"design:paramtypes\",[String,String,v.RuntimeArgs])],t)}(R);t.StoredContractByName=j;var H=function(e){function t(t,r,n,i){var o=e.call(this)||this;return o.tag=4,o.name=t,o.version=r,o.entryPoint=n,o.args=i,o}return o(t,e),t.prototype.toBytes=function(){var e;return e=null===this.version?new m.CLOption(l.None,new m.CLU32Type):new m.CLOption((0,l.Some)(new m.CLU32(this.version))),(0,l.Ok)((0,d.concat)([Uint8Array.from([this.tag]),(0,g.toBytesString)(this.name),m.CLValueParsers.toBytes(e).unwrap(),(0,g.toBytesString)(this.entryPoint),(0,g.toBytesBytesArray)(this.args.toBytes().unwrap())]))},s([(0,p.jsonMember)({constructor:String}),a(\"design:type\",String)],t.prototype,\"name\",void 0),s([(0,p.jsonMember)({constructor:Number,preserveNull:!0}),a(\"design:type\",Object)],t.prototype,\"version\",void 0),s([(0,p.jsonMember)({name:\"entry_point\",constructor:String}),a(\"design:type\",String)],t.prototype,\"entryPoint\",void 0),s([(0,p.jsonMember)({deserializer:L,serializer:I}),a(\"design:type\",v.RuntimeArgs)],t.prototype,\"args\",void 0),s([p.jsonObject,a(\"design:paramtypes\",[String,Object,String,v.RuntimeArgs])],t)}(R);t.StoredVersionedContractByName=H;var D=function(e){function t(t,r,n,i){var o=e.call(this)||this;return o.tag=3,o.hash=t,o.version=r,o.entryPoint=n,o.args=i,o}return o(t,e),t.prototype.toBytes=function(){var e;return e=null===this.version?new m.CLOption(l.None,new m.CLU32Type):new m.CLOption((0,l.Some)(new m.CLU32(this.version))),(0,l.Ok)((0,d.concat)([Uint8Array.from([this.tag]),(0,g.toBytesBytesArray)(this.hash),m.CLValueParsers.toBytes(e).unwrap(),(0,g.toBytesString)(this.entryPoint),(0,g.toBytesBytesArray)(this.args.toBytes().unwrap())]))},s([(0,p.jsonMember)({serializer:x,deserializer:P}),a(\"design:type\",Uint8Array)],t.prototype,\"hash\",void 0),s([(0,p.jsonMember)({constructor:Number,preserveNull:!0}),a(\"design:type\",Object)],t.prototype,\"version\",void 0),s([(0,p.jsonMember)({name:\"entry_point\",constructor:String}),a(\"design:type\",String)],t.prototype,\"entryPoint\",void 0),s([(0,p.jsonMember)({deserializer:L,serializer:I}),a(\"design:type\",v.RuntimeArgs)],t.prototype,\"args\",void 0),s([p.jsonObject,a(\"design:paramtypes\",[Uint8Array,Object,String,v.RuntimeArgs])],t)}(R);t.StoredVersionedContractByHash=D;var q=function(e){function t(t){var r=e.call(this)||this;return r.tag=5,r.args=t,r}return o(t,e),t.prototype.toBytes=function(){return(0,l.Ok)((0,d.concat)([Uint8Array.from([this.tag]),(0,g.toBytesBytesArray)(this.args.toBytes().unwrap())]))},s([(0,p.jsonMember)({deserializer:L,serializer:I}),a(\"design:type\",v.RuntimeArgs)],t.prototype,\"args\",void 0),s([p.jsonObject,a(\"design:paramtypes\",[v.RuntimeArgs])],t)}(R);t.Transfer=q;var K=function(){function e(){}var t;return t=e,e.prototype.toBytes=function(){if(this.isModuleBytes())return this.moduleBytes.toBytes();if(this.isStoredContractByHash())return this.storedContractByHash.toBytes();if(this.isStoredContractByName())return this.storedContractByName.toBytes();if(this.isStoredVersionContractByHash())return this.storedVersionedContractByHash.toBytes();if(this.isStoredVersionContractByName())return this.storedVersionedContractByName.toBytes();if(this.isTransfer())return this.transfer.toBytes();throw new Error(\"failed to serialize ExecutableDeployItemJsonWrapper\")},e.prototype.getArgByName=function(e){if(this.isModuleBytes())return this.moduleBytes.getArgByName(e);if(this.isStoredContractByHash())return this.storedContractByHash.getArgByName(e);if(this.isStoredContractByName())return this.storedContractByName.getArgByName(e);if(this.isStoredVersionContractByHash())return this.storedVersionedContractByHash.getArgByName(e);if(this.isStoredVersionContractByName())return this.storedVersionedContractByName.getArgByName(e);if(this.isTransfer())return this.transfer.getArgByName(e);throw new Error(\"failed to serialize ExecutableDeployItemJsonWrapper\")},e.prototype.setArg=function(e,t){if(this.isModuleBytes())return this.moduleBytes.setArg(e,t);if(this.isStoredContractByHash())return this.storedContractByHash.setArg(e,t);if(this.isStoredContractByName())return this.storedContractByName.setArg(e,t);if(this.isStoredVersionContractByHash())return this.storedVersionedContractByHash.setArg(e,t);if(this.isStoredVersionContractByName())return this.storedVersionedContractByName.setArg(e,t);if(this.isTransfer())return this.transfer.setArg(e,t);throw new Error(\"failed to serialize ExecutableDeployItemJsonWrapper\")},e.fromExecutableDeployItemInternal=function(e){var r=new t;switch(e.tag){case 0:r.moduleBytes=e;break;case 1:r.storedContractByHash=e;break;case 2:r.storedContractByName=e;break;case 3:r.storedVersionedContractByHash=e;break;case 4:r.storedVersionedContractByName=e;break;case 5:r.transfer=e}return r},e.newModuleBytes=function(e,r){return t.fromExecutableDeployItemInternal(new N(e,r))},e.newStoredContractByHash=function(e,r,n){return t.fromExecutableDeployItemInternal(new U(e,r,n))},e.newStoredContractByName=function(e,r,n){return t.fromExecutableDeployItemInternal(new j(e,r,n))},e.newStoredVersionContractByHash=function(e,r,n,i){return t.fromExecutableDeployItemInternal(new D(e,r,n,i))},e.newStoredVersionContractByName=function(e,r,n,i){return t.fromExecutableDeployItemInternal(new H(e,r,n,i))},e.newTransfer=function(e,r,n,i){void 0===n&&(n=null);var o=v.RuntimeArgs.fromMap({});if(o.insert(\"amount\",m.CLValueBuilder.u512(e)),n&&o.insert(\"source\",n),r instanceof m.CLURef)o.insert(\"target\",r);else{if(!(r instanceof m.CLPublicKey))throw new Error(\"Please specify target\");o.insert(\"target\",r)}if(void 0===i)throw new Error(\"transfer-id missing in new transfer.\");return o.insert(\"id\",m.CLValueBuilder.option((0,l.Some)(new m.CLU64(i)),new m.CLU64Type)),t.fromExecutableDeployItemInternal(new q(o))},e.newTransferWithOptionalTransferId=function(e,r,n,i){var o=v.RuntimeArgs.fromMap({});if(o.insert(\"amount\",m.CLValueBuilder.u512(e)),n&&o.insert(\"source\",n),r instanceof m.CLURef)o.insert(\"target\",r);else{if(!(r instanceof m.CLPublicKey))throw new Error(\"Please specify target\");o.insert(\"target\",m.CLValueBuilder.byteArray(r.toAccountHash()))}return null!=i?o.insert(\"id\",m.CLValueBuilder.option((0,l.Some)(m.CLValueBuilder.u64(i)),m.CLTypeBuilder.u64())):o.insert(\"id\",m.CLValueBuilder.option(l.None,m.CLTypeBuilder.u64())),t.fromExecutableDeployItemInternal(new q(o))},e.newTransferToUniqAddress=function(e,t,r,n,i,o,s,a){void 0===o&&(o=1),void 0===s&&(s=T.DEFAULT_DEPLOY_TTL);var u=new w.DeployUtil.DeployParams(e,i,o,s),c=w.DeployUtil.standardPayment(n),f=w.DeployUtil.ExecutableDeployItem.newTransfer(r,t.publicKey,a,t.transferId);return w.DeployUtil.makeDeploy(u,f,c)},e.prototype.isModuleBytes=function(){return!!this.moduleBytes},e.prototype.asModuleBytes=function(){return this.moduleBytes},e.prototype.isStoredContractByHash=function(){return!!this.storedContractByHash},e.prototype.asStoredContractByHash=function(){return this.storedContractByHash},e.prototype.isStoredContractByName=function(){return!!this.storedContractByName},e.prototype.asStoredContractByName=function(){return this.storedContractByName},e.prototype.isStoredVersionContractByName=function(){return!!this.storedVersionedContractByName},e.prototype.asStoredVersionContractByName=function(){return this.storedVersionedContractByName},e.prototype.isStoredVersionContractByHash=function(){return!!this.storedVersionedContractByHash},e.prototype.asStoredVersionContractByHash=function(){return this.storedVersionedContractByHash},e.prototype.isTransfer=function(){return!!this.transfer},e.prototype.asTransfer=function(){return this.transfer},s([(0,p.jsonMember)({name:\"ModuleBytes\",constructor:N}),a(\"design:type\",N)],e.prototype,\"moduleBytes\",void 0),s([(0,p.jsonMember)({name:\"StoredContractByHash\",constructor:U}),a(\"design:type\",U)],e.prototype,\"storedContractByHash\",void 0),s([(0,p.jsonMember)({name:\"StoredContractByName\",constructor:j}),a(\"design:type\",j)],e.prototype,\"storedContractByName\",void 0),s([(0,p.jsonMember)({name:\"StoredVersionedContractByHash\",constructor:D}),a(\"design:type\",D)],e.prototype,\"storedVersionedContractByHash\",void 0),s([(0,p.jsonMember)({name:\"StoredVersionedContractByName\",constructor:H}),a(\"design:type\",H)],e.prototype,\"storedVersionedContractByName\",void 0),s([(0,p.jsonMember)({name:\"Transfer\",constructor:q}),a(\"design:type\",q)],e.prototype,\"transfer\",void 0),t=s([p.jsonObject],e)}();t.ExecutableDeployItem=K;var z,F=function(){function e(e,t,r,n,i){this.approvals=i,this.session=n,this.payment=r,this.header=t,this.hash=e}return e.prototype.isTransfer=function(){return this.session.isTransfer()},e.prototype.isStandardPayment=function(){var e;return!!this.payment.isModuleBytes()&&0===(null===(e=this.payment.asModuleBytes())||void 0===e?void 0:e.moduleBytes.length)},e.prototype.send=function(e){return u(this,void 0,void 0,(function(){return c(this,(function(t){return[2,new _.CasperClient(e).putDeploy(this)]}))}))},e.prototype.sign=function(e){return e.reduce((function(e,r){return(0,t.signDeploy)(e,r)}),this)},s([(0,p.jsonMember)({serializer:x,deserializer:P}),a(\"design:type\",Uint8Array)],e.prototype,\"hash\",void 0),s([(0,p.jsonMember)({constructor:C}),a(\"design:type\",C)],e.prototype,\"header\",void 0),s([(0,p.jsonMember)({constructor:K}),a(\"design:type\",K)],e.prototype,\"payment\",void 0),s([(0,p.jsonMember)({constructor:K}),a(\"design:type\",K)],e.prototype,\"session\",void 0),s([(0,p.jsonArrayMember)(k),a(\"design:type\",Array)],e.prototype,\"approvals\",void 0),s([p.jsonObject,a(\"design:paramtypes\",[Uint8Array,C,K,K,Array])],e)}();t.Deploy=F,t.serializeHeader=function(e){return e.toBytes()},t.serializeBody=function(e,t){return(0,d.concat)([e.toBytes().unwrap(),t.toBytes().unwrap()])},t.serializeApprovals=function(e){var t=(0,g.toBytesU32)(e.length),r=(0,d.concat)(e.map((function(e){return(0,d.concat)([Uint8Array.from(i.from(e.signer,\"hex\")),Uint8Array.from(i.from(e.signature,\"hex\"))])})));return(0,d.concat)([t,r])},(z=t.ContractType||(t.ContractType={})).WASM=\"WASM\",z.Hash=\"Hash\",z.Name=\"Name\";function V(e,r,n){var i=(0,t.serializeBody)(n,r),o=(0,g.byteHash)(i);e.timestamp||(e.timestamp=Date.now());var s=new C(e.accountPublicKey,e.timestamp,e.ttl,e.gasPrice,o,e.dependencies,e.chainName),a=(0,t.serializeHeader)(s),u=(0,g.byteHash)(a.unwrap());return new F(u,s,n,r,[])}t.DeployParams=function(e,t,r,n,i,o){void 0===r&&(r=1),void 0===n&&(n=T.DEFAULT_DEPLOY_TTL),void 0===i&&(i=[]),this.accountPublicKey=e,this.chainName=t,this.gasPrice=r,this.ttl=n,this.dependencies=i,this.timestamp=o,this.dependencies=i.filter((function(e){return i.filter((function(t){return(0,b.encodeBase16)(e)===(0,b.encodeBase16)(t)})).length<2}))},t.makeDeploy=V,t.makeDeployWithAutoTimestamp=function(e,t,r){return u(this,void 0,void 0,(function(){var n;return c(this,(function(i){switch(i.label){case 0:return e.timestamp||\"undefined\"==typeof window?[3,2]:[4,new S.TimeService(\"\".concat(location.protocol,\"//\").concat(B.TIME_API_URL)).getTime()];case 1:n=i.sent().unixtime,e.timestamp=n,i.label=2;case 2:return[2,V(e,t,r)]}}))}))},t.signDeploy=function(e,t){var r=new k,n=t.sign(e.hash);switch(r.signer=t.accountHex(),t.signatureAlgorithm){case E.SignatureAlgorithm.Ed25519:r.signature=w.Keys.Ed25519.accountHex(n);break;case E.SignatureAlgorithm.Secp256K1:r.signature=w.Keys.Secp256K1.accountHex(n)}return e.approvals.push(r),e},t.setSignature=function(e,t,r){var n=new k;return n.signer=r.toHex(),r.isEd25519()&&(n.signature=w.Keys.Ed25519.accountHex(t)),r.isSecp256K1()&&(n.signature=w.Keys.Secp256K1.accountHex(t)),e.approvals.push(n),e},t.standardPayment=function(e){var t=v.RuntimeArgs.fromMap({amount:m.CLValueBuilder.u512(e.toString())});return K.newModuleBytes(Uint8Array.from([]),t)},t.deployToJson=function(e){return{deploy:new p.TypedJSON(F).toPlainJson(e)}},t.deployFromJson=function(e){if(void 0===e.deploy)return new l.Err(new Error(\"The Deploy JSON doesn't have 'deploy' field.\"));var r=null;try{r=new p.TypedJSON(F).parse(e.deploy)}catch(e){return new l.Err(e)}if(null==r)return(0,l.Err)(new Error(\"The JSON can't be parsed as a Deploy.\"));var n=(0,t.validateDeploy)(r);return n.err?new l.Err(new Error(n.val)):new l.Ok(r)},t.addArgToDeploy=function(e,t,r){if(0!==e.approvals.length)throw Error(\"Can not add argument to already signed deploy.\");var n=new w.DeployUtil.DeployParams(e.header.account,e.header.chainName,e.header.gasPrice,e.header.ttl,e.header.dependencies,e.header.timestamp),i=e.session;return i.setArg(t,r),V(n,i,e.payment)},t.deploySizeInBytes=function(e){var r=e.hash.length,n=(0,t.serializeBody)(e.payment,e.session).length;return r+(0,t.serializeHeader)(e.header).unwrap().length+n+e.approvals.map((function(e){return(e.signature.length+e.signer.length)/2})).reduce((function(e,t){return e+t}),0)},t.validateDeploy=function(e){if(!(e instanceof F))return new l.Err(\"'deploy' is not an instance of Deploy class.\");var r=(0,t.serializeBody)(e.payment,e.session),n=(0,g.byteHash)(r);if(!(0,t.arrayEquals)(e.header.bodyHash,n))return(0,l.Err)(\"Invalid deploy: bodyHash mismatch. Expected: \".concat(n,\",\\n                  got: \").concat(e.header.bodyHash,\".\"));var i=(0,t.serializeHeader)(e.header).unwrap(),o=(0,g.byteHash)(i);return(0,t.arrayEquals)(e.hash,o)?e.approvals.every((function(t){var r=t.signer,n=t.signature,i=m.CLPublicKey.fromHex(r,!1),o=(0,b.decodeBase16)(n.slice(2));return(0,E.validateSignature)(e.hash,o,i)}))?(0,l.Ok)(e):(0,l.Err)(\"Invalid signature.\"):(0,l.Err)(\"Invalid deploy: hash mismatch. Expected: \".concat(o,\",\\n                  got: \").concat(e.hash,\".\"))},t.arrayEquals=function(e,t){return e.length===t.length&&e.every((function(e,r){return e===t[r]}))},t.deployToBytes=function(e){return(0,d.concat)([(0,t.serializeHeader)(e.header).unwrap(),e.hash,(0,t.serializeBody)(e.payment,e.session),(0,t.serializeApprovals)(e.approvals)])}},2238:function(e,t,r){\"use strict\";var n,i=r(8764).Buffer,o=this&&this.__extends||(n=function(e,t){return n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])},n(e,t)},function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Class extends value \"+String(t)+\" is not a constructor or null\");function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}),s=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r);var i=Object.getOwnPropertyDescriptor(t,r);i&&!(\"get\"in i?!t.__esModule:i.writable||i.configurable)||(i={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,n,i)}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,\"default\",{enumerable:!0,value:t})}:function(e,t){e.default=t}),u=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)\"default\"!==r&&Object.prototype.hasOwnProperty.call(e,r)&&s(t,e,r);return a(t,e),t},c=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,\"__esModule\",{value:!0}),t.Secp256K1=t.Ed25519=t.AsymmetricKey=t.validateSignature=t.readBase64WithPEM=t.getKeysFromHexPrivKey=t.SignatureAlgorithm=void 0;var f=u(r(2349)),l=u(r(222)),d=u(r(9656)),h=r(3061),p=r(6262),y=r(9569),b=c(r(8917)),m=r(7108),g=r(9814),v=r(7269),w=r(8529),E=r(8529);Object.defineProperty(t,\"SignatureAlgorithm\",{enumerable:!0,get:function(){return E.SignatureAlgorithm}}),l.utils.sha512Sync=function(){for(var e,t=[],r=0;r<arguments.length;r++)t[r]=arguments[r];return(0,p.sha512)((e=l.utils).concatBytes.apply(e,t))},d.utils.hmacSha256Sync=function(e){for(var t,r=[],n=1;n<arguments.length;n++)r[n-1]=arguments[n];return(0,y.hmac)(h.sha256,e,(t=d.utils).concatBytes.apply(t,r))};var _=new b.default(\"secp256k1\");function S(e,t){var r=i.from([0]),n=i.concat([i.from(e),r]);return 0===t.length?i.from([]):(0,v.byteHash)(i.concat([n,i.from(t)]))}function T(e){var t=e.split(/\\r?\\n/).filter((function(e){return!e.startsWith(\"---\")})).join(\"\").trim();return(0,m.decodeBase64)(t)}t.getKeysFromHexPrivKey=function(e,t){var r=(0,m.decodeBase64)(e);if(t===w.SignatureAlgorithm.Secp256K1){var n=x.parsePrivateKey(r),i=x.privateToPublicKey(n);return new x(i,n)}if(t===w.SignatureAlgorithm.Ed25519)return n=A.parsePrivateKey(r),i=A.privateToPublicKey(n),A.parseKeyPair(i,n);throw Error(\"Unsupported key type\")},t.readBase64WithPEM=T,t.validateSignature=function(e,t,r){if(r.isEd25519())return l.sync.verify(t,e,r.value());if(r.isSecp256K1())return d.verify(t,(0,h.sha256)(i.from(e)),r.value());throw Error(\"Unsupported PublicKey type\")};var B=function(){function e(e,t,r){this.publicKey=new g.CLPublicKey(e,r),this.privateKey=t,this.signatureAlgorithm=r}return e.prototype.accountHash=function(){return this.publicKey.toAccountHash()},e.prototype.accountHex=function(){return this.publicKey.toHex()},e.prototype.toPem=function(e,t){return\"-----BEGIN \".concat(e,\"-----\\n\")+\"\".concat(t,\"\\n\")+\"-----END \".concat(e,\"-----\\n\")},e}();t.AsymmetricKey=B;var A=function(e){function t(r){return 32!=r.secretKey.length&&console.warn(\"You're using private key from old version, please use newly formatted key with 32 bytes length.\"),e.call(this,r.publicKey,t.parsePrivateKey(r.secretKey),w.SignatureAlgorithm.Ed25519)||this}return o(t,e),t.new=function(){var e=l.utils.randomPrivateKey();return new t({secretKey:e,publicKey:l.sync.getPublicKey(e)})},t.accountHex=function(e){return\"01\"+(0,m.encodeBase16)(e)},t.parseKeyFiles=function(e,r){var n=t.parsePublicKeyFile(e),i=t.parsePrivateKeyFile(r);return new t({publicKey:n,secretKey:i})},t.accountHash=function(e){return S(w.SignatureAlgorithm.Ed25519,e)},t.parseKeyPair=function(e,r){var n=new t({publicKey:t.parsePublicKey(e),secretKey:t.parsePrivateKey(r)});if((0,m.encodeBase64)(t.privateToPublicKey(n.privateKey))!==(0,m.encodeBase64)(n.publicKey.value()))throw Error(\"Invalid key pairs\");return n},t.parsePrivateKeyFile=function(e){return t.parsePrivateKey(t.readBase64File(e))},t.parsePublicKeyFile=function(e){return t.parsePublicKey(t.readBase64File(e))},t.parsePrivateKey=function(e){return t.parseKey(e,0,32)},t.parsePublicKey=function(e){return t.parseKey(e,32,64)},t.readBase64WithPEM=function(e){return T(e)},t.readBase64File=function(e){var r=f.readFileSync(e).toString();return t.readBase64WithPEM(r)},t.parseKey=function(e,t,r){var n=e.length,o=32===n?e:64===n?i.from(e).slice(t,r):n>32&&n<64?i.from(e).slice(n%32):null;if(null==o||32!==o.length)throw Error(\"Unexpected key length: \".concat(n));return o},t.prototype.exportPrivateKeyInPem=function(){var e=i.from([48,46,2,1,0,48,5,6,3,43,101,112,4,34,4,32]),t=(0,m.encodeBase64)(i.concat([e,i.from(this.privateKey)]));return this.toPem(\"PRIVATE KEY\",t)},t.prototype.exportPublicKeyInPem=function(){var e=i.from([48,42,48,5,6,3,43,101,112,3,33,0]),t=(0,m.encodeBase64)(i.concat([e,i.from(this.publicKey.value())]));return this.toPem(\"PUBLIC KEY\",t)},t.prototype.sign=function(e){return l.sync.sign(e,this.privateKey)},t.prototype.verify=function(e,t){return l.sync.verify(e,t,this.publicKey.value())},t.privateToPublicKey=function(e){return l.sync.getPublicKey(e)},t.loadKeyPairFromPrivateFile=function(e){var r=t.parsePrivateKeyFile(e),n=t.privateToPublicKey(r);return t.parseKeyPair(n,r)},t}(B);t.Ed25519=A;var x=function(e){function t(t,r){return e.call(this,t,r,w.SignatureAlgorithm.Secp256K1)||this}return o(t,e),t.new=function(){var e=d.utils.randomPrivateKey();return new t(d.getPublicKey(e,!0),e)},t.parseKeyFiles=function(e,r){var n=t.parsePublicKeyFile(e),i=t.parsePrivateKeyFile(r);return new t(n,i)},t.accountHash=function(e){return S(w.SignatureAlgorithm.Secp256K1,e)},t.accountHex=function(e){return\"02\"+(0,m.encodeBase16)(e)},t.parseKeyPair=function(e,r,n){var i=t.parsePublicKey(e,n),o=t.parsePrivateKey(r,n);return new t(i,o)},t.parsePrivateKeyFile=function(e){return t.parsePrivateKey(t.readBase64File(e))},t.parsePublicKeyFile=function(e){return t.parsePublicKey(t.readBase64File(e))},t.parsePrivateKey=function(e,t){var r;return void 0===t&&(t=\"der\"),r=\"der\"===t?_.encodePrivate(i.from(e),\"der\",\"raw\"):(0,m.encodeBase16)(e),i.from(r,\"hex\")},t.parsePublicKey=function(e,t){var r;return void 0===t&&(t=\"der\"),r=\"der\"===t?_.encodePublic(i.from(e),\"der\",\"raw\"):(0,m.encodeBase16)(e),Uint8Array.from(i.from(r,\"hex\"))},t.readBase64WithPEM=function(e){return T(e)},t.readBase64File=function(e){var r=f.readFileSync(e).toString();return t.readBase64WithPEM(r)},t.prototype.exportPrivateKeyInPem=function(){return _.encodePrivate((0,m.encodeBase16)(this.privateKey),\"raw\",\"pem\")},t.prototype.exportPublicKeyInPem=function(){return _.encodePublic((0,m.encodeBase16)(this.publicKey.value()),\"raw\",\"pem\")},t.prototype.sign=function(e){return d.signSync((0,h.sha256)(i.from(e)),this.privateKey,{der:!1})},t.prototype.verify=function(e,t){return d.verify(e,(0,h.sha256)(i.from(t)),this.publicKey.value())},t.privateToPublicKey=function(e){return d.getPublicKey(e,!0)},t.loadKeyPairFromPrivateFile=function(e){var r=t.parsePrivateKeyFile(e),n=t.privateToPublicKey(r);return t.parseKeyPair(n,r,\"raw\")},t}(B);t.Secp256K1=x},5923:function(e,t,r){\"use strict\";var n=this&&this.__decorate||function(e,t,r,n){var i,o=arguments.length,s=o<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,r):n;if(\"object\"==typeof Reflect&&\"function\"==typeof Reflect.decorate)s=Reflect.decorate(e,t,r,n);else for(var a=e.length-1;a>=0;a--)(i=e[a])&&(s=(o<3?i(s):o>3?i(t,r,s):i(t,r))||s);return o>3&&s&&Object.defineProperty(t,r,s),s},i=this&&this.__metadata||function(e,t){if(\"object\"==typeof Reflect&&\"function\"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,\"__esModule\",{value:!0}),t.RuntimeArgs=t.NamedArg=void 0;var o=r(2831),s=r(7269),a=r(9814),u=r(3286),c=r(4546),f=function(){function e(e,t){this.name=e,this.value=t}return e.prototype.toBytes=function(){var e=(0,s.toBytesString)(this.name),t=a.CLValueParsers.toBytesWithType(this.value);return(0,o.Ok)((0,u.concat)([e,t.unwrap()]))},e.fromBytes=function(t){var r=(new a.CLStringBytesParser).fromBytesWithRemainder(t),n=r.result,i=r.remainder,s=n.unwrap();if(!i)return(0,a.resultHelper)((0,o.Err)(\"Missing data for value of named arg\"));var u=a.CLValueParsers.fromBytesWithType(i).unwrap();return(0,a.resultHelper)((0,o.Ok)(new e(s.value(),u)))},e}();t.NamedArg=f;var l=function(e){var t=new Map(Array.from(e,(function(e){var t=e[0],r=e[1];return[t,a.CLValueParsers.fromJSON(r).unwrap()]})));if(t.size!==Array.from(e).length)throw Error(\"Duplicate key exists.\");return t},d=function(e){return Array.from(e,(function(e){var t=e[0],r=e[1];return[t,a.CLValueParsers.toJSON(r).unwrap()]}))},h=function(){function e(e){this.args=e}var t;return t=e,e.fromMap=function(e){var r=new Map(Object.keys(e).map((function(t){return[t,e[t]]})));return new t(r)},e.fromNamedArgs=function(e){var r=e.reduce((function(e,t){return e[t.name]=t.value,e}),{});return t.fromMap(r)},e.prototype.insert=function(e,t){this.args.set(e,t)},e.prototype.toBytes=function(){var e=Array.from(this.args.entries()).map((function(e){return new f(e[0],e[1])}));return(0,o.Ok)((0,s.toBytesVector)(e))},e.fromBytes=function(e){for(var r=(new a.CLU32BytesParser).fromBytesWithRemainder(e),n=r.result,i=r.remainder,s=n.unwrap().value().toNumber(),u=i,c=[],l=0;l<s;l++){if(!u)return(0,a.resultHelper)((0,o.Err)(\"Error while parsing bytes\"));var d=f.fromBytes(u),h=d.result,p=d.remainder;c.push(h.unwrap()),u=p}return(0,a.resultHelper)((0,o.Ok)(t.fromNamedArgs(c)),u)},n([(0,c.jsonMapMember)(String,a.CLValue,{serializer:d,deserializer:l}),i(\"design:type\",Map)],e.prototype,\"args\",void 0),t=n([(0,c.jsonObject)(),i(\"design:paramtypes\",[Map])],e)}();t.RuntimeArgs=h},2501:(e,t,r)=>{\"use strict\";var n=r(8764).Buffer;Object.defineProperty(t,\"__esModule\",{value:!0}),t.Args=t.UInt64Arg=t.PublicKeyArg=t.ByteSequenceArg=t.ByteArrayArg=void 0;var i=function(e){var t=n.alloc(4);return t.writeInt32LE(e,0),t};t.ByteArrayArg=function(e){return n.from(e)},t.ByteSequenceArg=function(e){return n.concat([i(e.length),e].map(n.from))},t.PublicKeyArg=t.ByteArrayArg,t.UInt64Arg=function(e){var t=n.alloc(8);return t.writeBigUInt64LE(e,0),t},t.Args=function(){for(var e=[],r=0;r<arguments.length;r++)e[r]=arguments[r];var o=[i(e.length)].concat(e.map(t.ByteSequenceArg));return n.concat(o.map(n.from))}},2568:function(e,t,r){\"use strict\";var n=r(8764).Buffer,i=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r);var i=Object.getOwnPropertyDescriptor(t,r);i&&!(\"get\"in i?!t.__esModule:i.writable||i.configurable)||(i={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,n,i)}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,\"default\",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)\"default\"!==r&&Object.prototype.hasOwnProperty.call(e,r)&&i(t,e,r);return o(t,e),t};Object.defineProperty(t,\"__esModule\",{value:!0}),t.verifyMessageSignature=t.signFormattedMessage=t.signRawMessage=t.formatMessageWithHeaders=void 0;var a=s(r(222)),u=s(r(9656)),c=r(3061);t.formatMessageWithHeaders=function(e){return Uint8Array.from(n.from(\"Casper Message:\\n\".concat(e)))},t.signRawMessage=function(e,r){return e.sign((0,t.formatMessageWithHeaders)(r))},t.signFormattedMessage=function(e,t){return e.sign(t)},t.verifyMessageSignature=function(e,r,i){var o=(0,t.formatMessageWithHeaders)(r);if(e.isEd25519())return a.sync.verify(i,o,e.value());if(e.isSecp256K1())return u.verify(i,(0,c.sha256)(n.from(o)),e.value());throw new Error(\"Unsupported algorithm.\")}},1070:(e,t)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var r=function(){function e(){this.events={}}return e.prototype.on=function(e,t){this.addEventListener(e,t)},e.prototype.addEventListener=function(e,t){this.events[e]||(this.events[e]=[]),this.events[e].push(t)},e.prototype.off=function(e,t){this.removeEventListener(e,t)},e.prototype.removeEventListener=function(e,t){if(!this.events[e])throw new Error(\"Can't remove a listener. Event \\\"\".concat(e,\"\\\" doesn't exits.\"));this.events[e]=this.events[e].filter((function(e){return e!==t}))},e.prototype.emit=function(e,t){var r;null===(r=this.events[e])||void 0===r||r.forEach((function(e){return e(t)}))},e}();t.default=r},3298:function(e,t){\"use strict\";var r=this&&this.__awaiter||function(e,t,r,n){return new(r||(r=Promise))((function(i,o){function s(e){try{u(n.next(e))}catch(e){o(e)}}function a(e){try{u(n.throw(e))}catch(e){o(e)}}function u(e){var t;e.done?i(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(s,a)}u((n=n.apply(e,t||[])).next())}))},n=this&&this.__generator||function(e,t){var r,n,i,o,s={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:a(0),throw:a(1),return:a(2)},\"function\"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function a(a){return function(u){return function(a){if(r)throw new TypeError(\"Generator is already executing.\");for(;o&&(o=0,a[0]&&(s=0)),s;)try{if(r=1,n&&(i=2&a[0]?n.return:a[0]?n.throw||((i=n.return)&&i.call(n),0):n.next)&&!(i=i.call(n,a[1])).done)return i;switch(n=0,i&&(a=[2&a[0],i.value]),a[0]){case 0:case 1:i=a;break;case 4:return s.label++,{value:a[1],done:!1};case 5:s.label++,n=a[1],a=[0];continue;case 7:a=s.ops.pop(),s.trys.pop();continue;default:if(!((i=(i=s.trys).length>0&&i[i.length-1])||6!==a[0]&&2!==a[0])){s=0;continue}if(3===a[0]&&(!i||a[1]>i[0]&&a[1]<i[3])){s.label=a[1];break}if(6===a[0]&&s.label<i[1]){s.label=i[1],i=a;break}if(i&&s.label<i[2]){s.label=i[2],s.ops.push(a);break}i[2]&&s.ops.pop(),s.trys.pop();continue}a=t.call(e,s)}catch(e){a=[6,e],n=0}finally{r=i=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,u])}}};Object.defineProperty(t,\"__esModule\",{value:!0}),t.signTestDeploy=t.getToSignMessageID=t.createTestAccount=t.createNewVault=t.resetExistingVault=t.hasCreatedVault=t.forceDisconnect=t.forceConnection=t.disconnectFromSite=t.signMessage=t.sign=t.getActivePublicKey=t.getSelectedPublicKeyBase64=t.sendConnectionRequest=t.isConnected=t.getVersion=void 0;var i=function(){return!(void 0===window.casperlabsHelper)};t.getVersion=function(){return r(void 0,void 0,void 0,(function(){return n(this,(function(e){switch(e.label){case 0:if(!i())return[3,4];e.label=1;case 1:return e.trys.push([1,3,,4]),[4,window.casperlabsHelper.getVersion()];case 2:return[2,e.sent()];case 3:return e.sent(),[2,\"<1.0.0\"];case 4:return[2,Promise.reject(new Error(\"Content script not found - make sure you have the Signer installed and refresh the page before trying again.\"))]}}))}))},t.isConnected=function(){return r(void 0,void 0,void 0,(function(){return n(this,(function(e){switch(e.label){case 0:return i()?[4,window.casperlabsHelper.isConnected()]:[3,2];case 1:return[2,e.sent()];case 2:return[2,Promise.reject(new Error(\"Content script not found - make sure you have the Signer installed and refresh the page before trying again.\"))]}}))}))},t.sendConnectionRequest=function(){if(i())return window.casperlabsHelper.requestConnection();throw new Error(\"Content script not found - make sure you have the Signer installed and refresh the page before trying again.\")},t.getSelectedPublicKeyBase64=function(){if(i())return window.casperlabsHelper.getSelectedPublicKeyBase64();throw new Error(\"Content script not found - make sure you have the Signer installed and refresh the page before trying again.\")},t.getActivePublicKey=function(){return i()?window.casperlabsHelper.getActivePublicKey():Promise.reject(new Error(\"Content script not found - make sure you have the Signer installed and refresh the page before trying again.\"))},t.sign=function(e,t,r){return i()?window.casperlabsHelper.sign(e,t,r):Promise.reject(new Error(\"Content script not found - make sure you have the Signer installed and refresh the page before trying again.\"))},t.signMessage=function(e,t){return i()?window.casperlabsHelper.signMessage(e,t):Promise.reject(new Error(\"Content script not found - make sure you have the Signer installed and refresh the page before trying again.\"))},t.disconnectFromSite=function(){return i()?window.casperlabsHelper.disconnectFromSite():Promise.reject(new Error(\"Content script not found - make sure you have the Signer installed and refresh the page before trying again.\"))},t.forceConnection=function(){return i()?window.signerTestingHelper.forceConnection():Promise.reject(new Error(\"Content script not found - make sure you have the Signer installed and refresh the page before trying again.\"))},t.forceDisconnect=function(){return i()?window.signerTestingHelper.forceDisconnect():Promise.reject(new Error(\"Content script not found - make sure you have the Signer installed and refresh the page before trying again.\"))},t.hasCreatedVault=function(){return i()?window.signerTestingHelper.hasCreatedVault():Promise.reject(new Error(\"Content script not found - make sure you have the Signer installed and refresh the page before trying again.\"))},t.resetExistingVault=function(){return i()?window.signerTestingHelper.resetExistingVault():Promise.reject(new Error(\"Content script not found - make sure you have the Signer installed and refresh the page before trying again.\"))},t.createNewVault=function(e){return i()?window.signerTestingHelper.createNewVault(e):Promise.reject(new Error(\"Content script not found - make sure you have the Signer installed and refresh the page before trying again.\"))},t.createTestAccount=function(e,t){return i()?window.signerTestingHelper.createTestAccount(e,t):Promise.reject(new Error(\"Content script not found - make sure you have the Signer installed and refresh the page before trying again.\"))},t.getToSignMessageID=function(){return i()?window.signerTestingHelper.getToSignMessageID():Promise.reject(new Error(\"Content script not found - make sure you have the Signer installed and refresh the page before trying again.\"))},t.signTestDeploy=function(e){return i()?window.signerTestingHelper.signTestDeploy(e):Promise.reject(new Error(\"Content script not found - make sure you have the Signer installed and refresh the page before trying again.\"))}},7845:function(e,t,r){\"use strict\";var n,i=this&&this.__extends||(n=function(e,t){return n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])},n(e,t)},function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Class extends value \"+String(t)+\" is not a constructor or null\");function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}),o=this&&this.__awaiter||function(e,t,r,n){return new(r||(r=Promise))((function(i,o){function s(e){try{u(n.next(e))}catch(e){o(e)}}function a(e){try{u(n.throw(e))}catch(e){o(e)}}function u(e){var t;e.done?i(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(s,a)}u((n=n.apply(e,t||[])).next())}))},s=this&&this.__generator||function(e,t){var r,n,i,o,s={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:a(0),throw:a(1),return:a(2)},\"function\"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function a(a){return function(u){return function(a){if(r)throw new TypeError(\"Generator is already executing.\");for(;o&&(o=0,a[0]&&(s=0)),s;)try{if(r=1,n&&(i=2&a[0]?n.return:a[0]?n.throw||((i=n.return)&&i.call(n),0):n.next)&&!(i=i.call(n,a[1])).done)return i;switch(n=0,i&&(a=[2&a[0],i.value]),a[0]){case 0:case 1:i=a;break;case 4:return s.label++,{value:a[1],done:!1};case 5:s.label++,n=a[1],a=[0];continue;case 7:a=s.ops.pop(),s.trys.pop();continue;default:if(!((i=(i=s.trys).length>0&&i[i.length-1])||6!==a[0]&&2!==a[0])){s=0;continue}if(3===a[0]&&(!i||a[1]>i[0]&&a[1]<i[3])){s.label=a[1];break}if(6===a[0]&&s.label<i[1]){s.label=i[1],i=a;break}if(i&&s.label<i[2]){s.label=i[2],s.ops.push(a);break}i[2]&&s.ops.pop(),s.trys.pop();continue}a=t.call(e,s)}catch(e){a=[6,e],n=0}finally{r=i=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,u])}}},a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,\"__esModule\",{value:!0}),t.CasperWallet=void 0;var u=a(r(1070)),c=r(1965),f=r(4493),l=\"casper-wallet\",d={Connected:\"\".concat(l,\":connected\"),ActiveKeyChanged:\"\".concat(l,\":activeKeyChanged\"),Disconnected:\"\".concat(l,\":disconnected\"),TabChanged:\"\".concat(l,\":tabChanged\"),Locked:\"\".concat(l,\":locked\"),Unlocked:\"\".concat(l,\":unlocked\")},h=function(e){function t(t){var r=e.call(this)||this;return r.isCasperWallet=!0,r.connected=!1,r.locked=!0,r.setOption(t),window.addEventListener(d.Connected,r.handleConnected.bind(r)),window.addEventListener(d.Disconnected,r.handleDisconnected.bind(r)),window.addEventListener(d.ActiveKeyChanged,r.handleActiveKeyChanged.bind(r)),window.addEventListener(d.Locked,r.handleLocked.bind(r)),window.addEventListener(d.Unlocked,r.handleUnlocked.bind(r)),window.addEventListener(d.TabChanged,r.handleTabChanged.bind(r)),r}return i(t,e),t.prototype.handleConnected=function(e){try{var t=JSON.parse(e.detail);this.updateState(t),this.emit(\"connected\",this.activeAccount)}catch(e){console.error(e)}},t.prototype.handleDisconnected=function(e){try{var t=JSON.parse(e.detail);this.updateState(t),this.emit(\"disconnected\")}catch(e){console.error(e)}},t.prototype.handleActiveKeyChanged=function(e){try{var t=JSON.parse(e.detail);this.updateState(t),this.emit(\"accountChanged\",t.activeKey)}catch(e){console.error(e)}},t.prototype.handleLocked=function(e){try{var t=JSON.parse(e.detail);this.updateState(t),this.emit(\"locked\")}catch(e){console.error(e)}},t.prototype.handleUnlocked=function(e){try{var t=JSON.parse(e.detail);this.updateState(t),this.emit(\"unlocked\")}catch(e){console.error(e)}},t.prototype.handleTabChanged=function(e){try{var t=JSON.parse(e.detail);this.updateState(t)}catch(e){console.error(e)}},t.prototype.updateState=function(e){var t,r;this.connected=null!==(t=e.isConnected)&&void 0!==t&&t,this.activeAccount=null!==(r=e.activeKey)&&void 0!==r?r:void 0,this.locked=e.isLocked},t.prototype.getVersion=function(){return o(this,void 0,void 0,(function(){return s(this,(function(e){return[2,this.casperWalletProvider.getVersion()]}))}))},t.prototype.isConnected=function(){return o(this,void 0,void 0,(function(){return s(this,(function(e){return[2,this.casperWalletProvider.isConnected()]}))}))},t.prototype.connect=function(){return o(this,void 0,void 0,(function(){return s(this,(function(e){switch(e.label){case 0:return[4,this.casperWalletProvider.requestConnection()];case 1:return e.sent(),[4,this.casperWalletProvider.getActivePublicKey()];case 2:return[2,e.sent()]}}))}))},t.prototype.disconnect=function(){return o(this,void 0,void 0,(function(){return s(this,(function(e){return[2,this.casperWalletProvider.disconnectFromSite()]}))}))},t.prototype.changeAccount=function(){return o(this,void 0,void 0,(function(){return s(this,(function(e){return[2,this.casperWalletProvider.requestSwitchAccount()]}))}))},t.prototype.signDeploy=function(e,t){return o(this,void 0,void 0,(function(){var r,n;return s(this,(function(i){switch(i.label){case 0:if(f.DeployUtil.deployFromJson(e).err)throw new c.SignerError(c.SignerErrorCodes.INVALID_DEPLOY);return[4,this.casperWalletProvider.sign(JSON.stringify(e),t)];case 1:if((r=i.sent()).cancelled)throw new c.SignerError(c.SignerErrorCodes.USER_CANCELED_REQUEST);return n=f.DeployUtil.setSignature(f.DeployUtil.deployFromJson(e).unwrap(),r.signature,f.CLPublicKey.fromHex(t)),[2,f.DeployUtil.deployToJson(n)]}}))}))},t.prototype.signMessage=function(e,t){return o(this,void 0,void 0,(function(){var r;return s(this,(function(n){switch(n.label){case 0:return[4,this.casperWalletProvider.signMessage(e,t)];case 1:if((r=n.sent()).cancelled)throw new c.SignerError(c.SignerErrorCodes.USER_CANCELED_REQUEST);return[2,r.signatureHex]}}))}))},t.prototype.getActiveAccount=function(){return o(this,void 0,void 0,(function(){return s(this,(function(e){switch(e.label){case 0:return[4,this.casperWalletProvider.getActivePublicKey()];case 1:return[2,e.sent()]}}))}))},t.prototype.setOption=function(e){return o(this,void 0,void 0,(function(){return s(this,(function(t){if(!window.CasperWalletProvider)throw new c.SignerError(c.SignerErrorCodes.NOT_FOUND_SIGNER);return this.casperWalletProvider=window.CasperWalletProvider(e),[2]}))}))},t}(u.default);t.CasperWallet=h},1965:function(e,t){\"use strict\";var r,n,i=this&&this.__extends||(r=function(e,t){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])},r(e,t)},function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Class extends value \"+String(t)+\" is not a constructor or null\");function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)});Object.defineProperty(t,\"__esModule\",{value:!0}),t.SignerErrorMessage=t.SignerErrorCodes=t.isSignerError=t.SignerError=void 0;var o,s=function(e){function r(r){var n=e.call(this,t.SignerErrorMessage[r])||this;return n.code=r,n.isSignerError=!0,n.message=t.SignerErrorMessage[r],n}return i(r,e),r}(Error);t.SignerError=s,t.isSignerError=function(e){return\"object\"==typeof e&&e.isSignerError},function(e){e[e.NOT_FOUND_SIGNER=0]=\"NOT_FOUND_SIGNER\",e[e.USER_CANCELED_REQUEST=1]=\"USER_CANCELED_REQUEST\",e[e.NOT_FOUND_ACCOUNT=2]=\"NOT_FOUND_ACCOUNT\",e[e.INVALID_DEPLOY=3]=\"INVALID_DEPLOY\",e[e.INTERNAL_ERROR=4]=\"INTERNAL_ERROR\"}(o=t.SignerErrorCodes||(t.SignerErrorCodes={})),t.SignerErrorMessage=((n={})[o.NOT_FOUND_SIGNER]=\"Signer was not found.\",n[o.USER_CANCELED_REQUEST]=\"User canceled the request.\",n[o.NOT_FOUND_ACCOUNT]=\"The signer account was not found.\",n[o.INVALID_DEPLOY]=\"The provided deploy is not valid.\",n[o.INTERNAL_ERROR]=\"Internal error occurred.\",n)},8022:function(e,t,r){\"use strict\";var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r);var i=Object.getOwnPropertyDescriptor(t,r);i&&!(\"get\"in i?!t.__esModule:i.writable||i.configurable)||(i={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,n,i)}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,\"default\",{enumerable:!0,value:t})}:function(e,t){e.default=t}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)\"default\"!==r&&Object.prototype.hasOwnProperty.call(e,r)&&n(t,e,r);return i(t,e),t},s=this&&this.__exportStar||function(e,t){for(var r in e)\"default\"===r||Object.prototype.hasOwnProperty.call(t,r)||n(t,e,r)};Object.defineProperty(t,\"__esModule\",{value:!0}),t.Signer=t.CasperWallet=void 0;var a=o(r(3298));t.Signer=a;var u=r(7845);Object.defineProperty(t,\"CasperWallet\",{enumerable:!0,get:function(){return u.CasperWallet}}),s(r(1965),t)},7524:function(e,t,r){\"use strict\";var n=this&&this.__decorate||function(e,t,r,n){var i,o=arguments.length,s=o<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,r):n;if(\"object\"==typeof Reflect&&\"function\"==typeof Reflect.decorate)s=Reflect.decorate(e,t,r,n);else for(var a=e.length-1;a>=0;a--)(i=e[a])&&(s=(o<3?i(s):o>3?i(t,r,s):i(t,r))||s);return o>3&&s&&Object.defineProperty(t,r,s),s},i=this&&this.__metadata||function(e,t){if(\"object\"==typeof Reflect&&\"function\"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,\"__esModule\",{value:!0}),t.StoredValue=t.ContractPackageJson=t.GroupsJson=t.DisabledVersionJson=t.ContractVersionJson=t.ContractMetadataJson=t.EntryPoint=t.NamedCLTypeArg=t.EraInfoJson=t.SeigniorageAllocation=t.DeployInfoJson=t.Transfers=t.TransferJson=void 0;var o=r(4546),s=r(9814),a=function(){function e(){}return n([(0,o.jsonMember)({constructor:String}),i(\"design:type\",String)],e.prototype,\"name\",void 0),n([(0,o.jsonMember)({constructor:String}),i(\"design:type\",String)],e.prototype,\"key\",void 0),n([o.jsonObject],e)}(),u=function(){function e(){}return n([(0,o.jsonMember)({name:\"account_hash\",constructor:String}),i(\"design:type\",String)],e.prototype,\"accountHash\",void 0),n([(0,o.jsonMember)({constructor:Number}),i(\"design:type\",Number)],e.prototype,\"weight\",void 0),n([o.jsonObject],e)}(),c=function(){function e(){}return n([(0,o.jsonMember)({constructor:Number}),i(\"design:type\",Number)],e.prototype,\"deployment\",void 0),n([(0,o.jsonMember)({name:\"key_management\",constructor:Number}),i(\"design:type\",Number)],e.prototype,\"keyManagement\",void 0),n([o.jsonObject],e)}(),f=function(){function e(){}return e.prototype.accountHash=function(){return this._accountHash},n([(0,o.jsonMember)({name:\"account_hash\",constructor:String}),i(\"design:type\",String)],e.prototype,\"_accountHash\",void 0),n([(0,o.jsonArrayMember)(a,{name:\"named_keys\"}),i(\"design:type\",Array)],e.prototype,\"namedKeys\",void 0),n([(0,o.jsonMember)({name:\"main_purse\",constructor:String}),i(\"design:type\",String)],e.prototype,\"mainPurse\",void 0),n([(0,o.jsonArrayMember)(u,{name:\"associated_keys\"}),i(\"design:type\",Array)],e.prototype,\"associatedKeys\",void 0),n([(0,o.jsonMember)({name:\"action_thresholds\",constructor:c}),i(\"design:type\",c)],e.prototype,\"actionThresholds\",void 0),n([o.jsonObject],e)}(),l=function(){function e(){}return n([(0,o.jsonMember)({name:\"deploy_hash\",constructor:String}),i(\"design:type\",String)],e.prototype,\"deployHash\",void 0),n([(0,o.jsonMember)({constructor:String}),i(\"design:type\",String)],e.prototype,\"from\",void 0),n([(0,o.jsonMember)({constructor:String}),i(\"design:type\",String)],e.prototype,\"to\",void 0),n([(0,o.jsonMember)({constructor:String}),i(\"design:type\",String)],e.prototype,\"source\",void 0),n([(0,o.jsonMember)({constructor:String}),i(\"design:type\",String)],e.prototype,\"target\",void 0),n([(0,o.jsonMember)({constructor:String}),i(\"design:type\",String)],e.prototype,\"amount\",void 0),n([(0,o.jsonMember)({constructor:String}),i(\"design:type\",String)],e.prototype,\"gas\",void 0),n([(0,o.jsonMember)({constructor:Number,preserveNull:!0}),i(\"design:type\",Object)],e.prototype,\"id\",void 0),n([o.jsonObject],e)}();t.TransferJson=l;var d=function(){function e(){}return n([(0,o.jsonArrayMember)(l),i(\"design:type\",Array)],e.prototype,\"transfers\",void 0),n([o.jsonObject],e)}();t.Transfers=d;var h=function(){function e(){}return n([(0,o.jsonMember)({name:\"deploy_hash\",constructor:String}),i(\"design:type\",String)],e.prototype,\"deployHash\",void 0),n([(0,o.jsonArrayMember)(String),i(\"design:type\",Array)],e.prototype,\"transfers\",void 0),n([(0,o.jsonMember)({constructor:String}),i(\"design:type\",String)],e.prototype,\"from\",void 0),n([(0,o.jsonMember)({constructor:String}),i(\"design:type\",String)],e.prototype,\"source\",void 0),n([(0,o.jsonMember)({constructor:String}),i(\"design:type\",String)],e.prototype,\"gas\",void 0),n([o.jsonObject],e)}();t.DeployInfoJson=h;var p=function(){function e(){}return n([(0,o.jsonMember)({name:\"validator_public_key\",constructor:String}),i(\"design:type\",String)],e.prototype,\"validatorPublicKey\",void 0),n([(0,o.jsonMember)({constructor:String}),i(\"design:type\",String)],e.prototype,\"amount\",void 0),n([o.jsonObject],e)}(),y=function(){function e(){}return n([(0,o.jsonMember)({name:\"delegator_public_key\",constructor:String}),i(\"design:type\",String)],e.prototype,\"delegatorPublicKey\",void 0),n([(0,o.jsonMember)({name:\"validator_public_key\",constructor:String}),i(\"design:type\",String)],e.prototype,\"validatorPublicKey\",void 0),n([(0,o.jsonMember)({constructor:String}),i(\"design:type\",String)],e.prototype,\"amount\",void 0),n([o.jsonObject],e)}(),b=function(){function e(){}return n([(0,o.jsonMember)({constructor:p}),i(\"design:type\",p)],e.prototype,\"Validator\",void 0),n([(0,o.jsonMember)({constructor:y}),i(\"design:type\",y)],e.prototype,\"Delegator\",void 0),n([o.jsonObject],e)}();t.SeigniorageAllocation=b;var m=function(){function e(){}return n([(0,o.jsonArrayMember)(b,{name:\"seigniorage_allocations\"}),i(\"design:type\",Array)],e.prototype,\"seigniorageAllocations\",void 0),n([o.jsonObject],e)}();t.EraInfoJson=m;var g=function(){function e(){}return n([(0,o.jsonMember)({constructor:String}),i(\"design:type\",String)],e.prototype,\"name\",void 0),n([(0,o.jsonMember)({name:\"cl_type\",deserializer:function(e){return(0,s.matchTypeToCLType)(e)}}),i(\"design:type\",s.CLType)],e.prototype,\"clType\",void 0),n([o.jsonObject],e)}();t.NamedCLTypeArg=g;var v=function(){function e(){}return n([(0,o.jsonMember)({name:\"access\",deserializer:function(e){return\"string\"==typeof e?e:null}}),i(\"design:type\",String)],e.prototype,\"access\",void 0),n([(0,o.jsonMember)({name:\"entry_point_type\",constructor:String}),i(\"design:type\",String)],e.prototype,\"entryPointType\",void 0),n([(0,o.jsonMember)({constructor:String}),i(\"design:type\",String)],e.prototype,\"name\",void 0),n([(0,o.jsonMember)({name:\"ret\",deserializer:function(e){return(0,s.matchTypeToCLType)(e)}}),i(\"design:type\",String)],e.prototype,\"ret\",void 0),n([(0,o.jsonArrayMember)(g),i(\"design:type\",Array)],e.prototype,\"args\",void 0),n([o.jsonObject],e)}();t.EntryPoint=v;var w=function(){function e(){}return n([(0,o.jsonMember)({name:\"contract_package_hash\",constructor:String}),i(\"design:type\",String)],e.prototype,\"contractPackageHash\",void 0),n([(0,o.jsonMember)({name:\"contract_wasm_hash\",constructor:String}),i(\"design:type\",String)],e.prototype,\"contractWasmHash\",void 0),n([(0,o.jsonArrayMember)(v,{name:\"entry_points\"}),i(\"design:type\",Array)],e.prototype,\"entrypoints\",void 0),n([(0,o.jsonMember)({name:\"protocol_version\",constructor:String}),i(\"design:type\",String)],e.prototype,\"protocolVersion\",void 0),n([(0,o.jsonArrayMember)(a,{name:\"named_keys\"}),i(\"design:type\",Array)],e.prototype,\"namedKeys\",void 0),n([o.jsonObject],e)}();t.ContractMetadataJson=w;var E=function(){function e(){}return n([(0,o.jsonMember)({name:\"protocol_version_major\",constructor:Number}),i(\"design:type\",Number)],e.prototype,\"protocolVersionMajor\",void 0),n([(0,o.jsonMember)({name:\"contract_version\",constructor:Number}),i(\"design:type\",Number)],e.prototype,\"contractVersion\",void 0),n([(0,o.jsonMember)({name:\"contract_hash\",constructor:String}),i(\"design:type\",String)],e.prototype,\"contractHash\",void 0),n([o.jsonObject],e)}();t.ContractVersionJson=E;var _=function(){function e(){}return n([(0,o.jsonMember)({name:\"protocol_version_major\",constructor:Number}),i(\"design:type\",Number)],e.prototype,\"accessKey\",void 0),n([(0,o.jsonMember)({name:\"contract_version\",constructor:Number}),i(\"design:type\",Number)],e.prototype,\"contractVersion\",void 0),n([o.jsonObject],e)}();t.DisabledVersionJson=_;var S=function(){function e(){}return n([(0,o.jsonMember)({name:\"group\",constructor:String}),i(\"design:type\",String)],e.prototype,\"group\",void 0),n([(0,o.jsonArrayMember)(String,{name:\"keys\"}),i(\"design:type\",Array)],e.prototype,\"keys\",void 0),n([o.jsonObject],e)}();t.GroupsJson=S;var T=function(){function e(){}return n([(0,o.jsonMember)({name:\"access_key\",constructor:String}),i(\"design:type\",String)],e.prototype,\"accessKey\",void 0),n([(0,o.jsonArrayMember)(E,{name:\"versions\"}),i(\"design:type\",Array)],e.prototype,\"versions\",void 0),n([(0,o.jsonArrayMember)(_,{name:\"disabled_versions\"}),i(\"design:type\",Array)],e.prototype,\"disabledVersions\",void 0),n([(0,o.jsonArrayMember)(S,{name:\"groups\"}),i(\"design:type\",Array)],e.prototype,\"groups\",void 0),n([o.jsonObject],e)}();t.ContractPackageJson=T;var B=function(){function e(){}return n([(0,o.jsonMember)({deserializer:function(e){if(e)return s.CLValueParsers.fromJSON(e).unwrap()}}),i(\"design:type\",s.CLValue)],e.prototype,\"CLValue\",void 0),n([(0,o.jsonMember)({constructor:f}),i(\"design:type\",f)],e.prototype,\"Account\",void 0),n([(0,o.jsonMember)({constructor:String}),i(\"design:type\",String)],e.prototype,\"ContractWASM\",void 0),n([(0,o.jsonMember)({constructor:w}),i(\"design:type\",w)],e.prototype,\"Contract\",void 0),n([(0,o.jsonMember)({constructor:T}),i(\"design:type\",T)],e.prototype,\"ContractPackage\",void 0),n([(0,o.jsonMember)({constructor:l}),i(\"design:type\",l)],e.prototype,\"Transfer\",void 0),n([(0,o.jsonMember)({constructor:h}),i(\"design:type\",h)],e.prototype,\"DeployInfo\",void 0),n([(0,o.jsonMember)({constructor:m}),i(\"design:type\",m)],e.prototype,\"EraInfo\",void 0),n([o.jsonObject],e)}();t.StoredValue=B},4493:function(e,t,r){\"use strict\";var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r);var i=Object.getOwnPropertyDescriptor(t,r);i&&!(\"get\"in i?!t.__esModule:i.writable||i.configurable)||(i={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,n,i)}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,\"default\",{enumerable:!0,value:t})}:function(e,t){e.default=t}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)\"default\"!==r&&Object.prototype.hasOwnProperty.call(e,r)&&n(t,e,r);return i(t,e),t},s=this&&this.__exportStar||function(e,t){for(var r in e)\"default\"===r||Object.prototype.hasOwnProperty.call(t,r)||n(t,e,r)};Object.defineProperty(t,\"__esModule\",{value:!0}),t.Result=t.DeployUtil=t.Serialization=t.Keys=t.HDKeys=t.Contracts=void 0;var a=r(2831);Object.defineProperty(t,\"Result\",{enumerable:!0,get:function(){return a.Result}});var u=o(r(4848));t.Contracts=u;var c=o(r(636));t.DeployUtil=c;var f=o(r(7045));t.HDKeys=f;var l=o(r(2238));t.Keys=l;var d=o(r(2501));t.Serialization=d,s(r(8022),t),s(r(9814),t),s(r(7524),t),s(r(5923),t),s(r(2520),t),s(r(2568),t),s(r(5157),t)},8529:(e,t)=>{\"use strict\";var r;Object.defineProperty(t,\"__esModule\",{value:!0}),t.SignatureAlgorithm=void 0,(r=t.SignatureAlgorithm||(t.SignatureAlgorithm={})).Ed25519=\"ed25519\",r.Secp256K1=\"secp256k1\"},8840:function(e,t){\"use strict\";var r=this&&this.__awaiter||function(e,t,r,n){return new(r||(r=Promise))((function(i,o){function s(e){try{u(n.next(e))}catch(e){o(e)}}function a(e){try{u(n.throw(e))}catch(e){o(e)}}function u(e){var t;e.done?i(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(s,a)}u((n=n.apply(e,t||[])).next())}))},n=this&&this.__generator||function(e,t){var r,n,i,o,s={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:a(0),throw:a(1),return:a(2)},\"function\"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function a(a){return function(u){return function(a){if(r)throw new TypeError(\"Generator is already executing.\");for(;o&&(o=0,a[0]&&(s=0)),s;)try{if(r=1,n&&(i=2&a[0]?n.return:a[0]?n.throw||((i=n.return)&&i.call(n),0):n.next)&&!(i=i.call(n,a[1])).done)return i;switch(n=0,i&&(a=[2&a[0],i.value]),a[0]){case 0:case 1:i=a;break;case 4:return s.label++,{value:a[1],done:!1};case 5:s.label++,n=a[1],a=[0];continue;case 7:a=s.ops.pop(),s.trys.pop();continue;default:if(!((i=(i=s.trys).length>0&&i[i.length-1])||6!==a[0]&&2!==a[0])){s=0;continue}if(3===a[0]&&(!i||a[1]>i[0]&&a[1]<i[3])){s.label=a[1];break}if(6===a[0]&&s.label<i[1]){s.label=i[1],i=a;break}if(i&&s.label<i[2]){s.label=i[2],s.ops.push(a);break}i[2]&&s.ops.pop(),s.trys.pop();continue}a=t.call(e,s)}catch(e){a=[6,e],n=0}finally{r=i=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,u])}}};Object.defineProperty(t,\"__esModule\",{value:!0}),t.BalanceServiceByJsonRPC=void 0;var i=function(){function e(e){this.casperService=e,this.balanceUrefs=new Map}return e.prototype.getAccountBalance=function(e,t){return r(this,void 0,void 0,(function(){var r,i;return n(this,(function(n){switch(n.label){case 0:return n.trys.push([0,5,,6]),[4,this.casperService.getStateRootHash(e)];case 1:return r=n.sent(),(i=this.balanceUrefs.get(t.toHex()))?[3,3]:[4,this.casperService.getAccountBalanceUrefByPublicKey(r,t)];case 2:(i=n.sent())&&this.balanceUrefs.set(t.toHex(),i),n.label=3;case 3:return i?[4,this.casperService.getAccountBalance(r,i)]:[2,void 0];case 4:return[2,n.sent()];case 5:return n.sent(),[2,void 0];case 6:return[2]}}))}))},e}();t.BalanceServiceByJsonRPC=i},2969:function(e,t,r){\"use strict\";var n=this&&this.__assign||function(){return n=Object.assign||function(e){for(var t,r=1,n=arguments.length;r<n;r++)for(var i in t=arguments[r])Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i]);return e},n.apply(this,arguments)},i=this&&this.__decorate||function(e,t,r,n){var i,o=arguments.length,s=o<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,r):n;if(\"object\"==typeof Reflect&&\"function\"==typeof Reflect.decorate)s=Reflect.decorate(e,t,r,n);else for(var a=e.length-1;a>=0;a--)(i=e[a])&&(s=(o<3?i(s):o>3?i(t,r,s):i(t,r))||s);return o>3&&s&&Object.defineProperty(t,r,s),s},o=this&&this.__metadata||function(e,t){if(\"object\"==typeof Reflect&&\"function\"==typeof Reflect.metadata)return Reflect.metadata(e,t)},s=this&&this.__awaiter||function(e,t,r,n){return new(r||(r=Promise))((function(i,o){function s(e){try{u(n.next(e))}catch(e){o(e)}}function a(e){try{u(n.throw(e))}catch(e){o(e)}}function u(e){var t;e.done?i(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(s,a)}u((n=n.apply(e,t||[])).next())}))},a=this&&this.__generator||function(e,t){var r,n,i,o,s={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:a(0),throw:a(1),return:a(2)},\"function\"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function a(a){return function(u){return function(a){if(r)throw new TypeError(\"Generator is already executing.\");for(;o&&(o=0,a[0]&&(s=0)),s;)try{if(r=1,n&&(i=2&a[0]?n.return:a[0]?n.throw||((i=n.return)&&i.call(n),0):n.next)&&!(i=i.call(n,a[1])).done)return i;switch(n=0,i&&(a=[2&a[0],i.value]),a[0]){case 0:case 1:i=a;break;case 4:return s.label++,{value:a[1],done:!1};case 5:s.label++,n=a[1],a=[0];continue;case 7:a=s.ops.pop(),s.trys.pop();continue;default:if(!((i=(i=s.trys).length>0&&i[i.length-1])||6!==a[0]&&2!==a[0])){s=0;continue}if(3===a[0]&&(!i||a[1]>i[0]&&a[1]<i[3])){s.label=a[1];break}if(6===a[0]&&s.label<i[1]){s.label=i[1],i=a;break}if(i&&s.label<i[2]){s.label=i[2],s.ops.push(a);break}i[2]&&s.ops.pop(),s.trys.pop();continue}a=t.call(e,s)}catch(e){a=[6,e],n=0}finally{r=i=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,u])}}},u=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,\"__esModule\",{value:!0}),t.CasperServiceByJsonRPC=t.EraSummary=t.PurseIdentifier=t.JSONRPCError=void 0;var c,f=r(2092),l=r(4927),d=r(4546),h=r(7108),p=u(r(7519)),y=r(4927);Object.defineProperty(t,\"JSONRPCError\",{enumerable:!0,get:function(){return y.JSONRPCError}}),(c=t.PurseIdentifier||(t.PurseIdentifier={})).MainPurseUnderPublicKey=\"main_purse_under_public_key\",c.MainPurseUnderAccountHash=\"main_purse_under_account_hash\",c.PurseUref=\"purse_uref\";var b=function(){function e(){}return i([(0,d.jsonMember)({constructor:String,name:\"block_hash\"}),o(\"design:type\",String)],e.prototype,\"blockHash\",void 0),i([(0,d.jsonMember)({constructor:Number,name:\"era_id\"}),o(\"design:type\",Number)],e.prototype,\"eraId\",void 0),i([(0,d.jsonMember)((function(){return{constructor:h.StoredValue,name:\"stored_value\"}})),o(\"design:type\",h.StoredValue)],e.prototype,\"StoredValue\",void 0),i([(0,d.jsonMember)({constructor:String,name:\"state_root_hash\"}),o(\"design:type\",String)],e.prototype,\"stateRootHash\",void 0),i([d.jsonObject],e)}();t.EraSummary=b;var m=function(){function e(e){var t;if(\"string\"==typeof e){var r=e.endsWith(\"/\")?e.substring(0,e.length-1):e;r=r.endsWith(\"/rpc\")?r:r+\"/rpc\",t=new l.HTTPTransport(r)}else t=new p.default(e);var n=new l.RequestManager([t]);this.client=new l.Client(n)}return e.prototype.getDeployInfo=function(e,t){return s(this,void 0,void 0,(function(){return a(this,(function(r){switch(r.label){case 0:return[4,this.client.request({method:\"info_get_deploy\",params:{deploy_hash:e}},null==t?void 0:t.timeout)];case 1:return[2,r.sent()]}}))}))},e.prototype.getBlockInfo=function(e,t){return s(this,void 0,void 0,(function(){return a(this,(function(r){switch(r.label){case 0:return[4,this.client.request({method:\"chain_get_block\",params:{block_identifier:{Hash:e}}},null==t?void 0:t.timeout).then((function(t){if(null!==t.block&&t.block.hash.toLowerCase()!==e.toLowerCase())throw new Error(\"Returned block does not have a matching hash.\");return t}))];case 1:return[2,r.sent()]}}))}))},e.prototype.getBlockInfoByHeight=function(e,t){return s(this,void 0,void 0,(function(){return a(this,(function(r){switch(r.label){case 0:return[4,this.client.request({method:\"chain_get_block\",params:{block_identifier:{Height:e}}},null==t?void 0:t.timeout).then((function(t){if(null!==t.block&&t.block.header.height!==e)throw new Error(\"Returned block does not have a matching height.\");return t}))];case 1:return[2,r.sent()]}}))}))},e.prototype.getLatestBlockInfo=function(e){return s(this,void 0,void 0,(function(){return a(this,(function(t){switch(t.label){case 0:return[4,this.client.request({method:\"chain_get_block\"},null==e?void 0:e.timeout)];case 1:return[2,t.sent()]}}))}))},e.prototype.getPeers=function(e){return s(this,void 0,void 0,(function(){return a(this,(function(t){switch(t.label){case 0:return[4,this.client.request({method:\"info_get_peers\"},null==e?void 0:e.timeout)];case 1:return[2,t.sent()]}}))}))},e.prototype.getStatus=function(e){return s(this,void 0,void 0,(function(){return a(this,(function(t){switch(t.label){case 0:return[4,this.client.request({method:\"info_get_status\"},null==e?void 0:e.timeout)];case 1:return[2,t.sent()]}}))}))},e.prototype.getValidatorsInfo=function(e,t){return s(this,void 0,void 0,(function(){return a(this,(function(r){switch(r.label){case 0:return[4,this.client.request({method:\"state_get_auction_info\",params:e?{block_identifier:{Hash:e}}:[]},null==t?void 0:t.timeout)];case 1:return[2,r.sent()]}}))}))},e.prototype.getValidatorsInfoByBlockHeight=function(e,t){return s(this,void 0,void 0,(function(){return a(this,(function(r){switch(r.label){case 0:return[4,this.client.request({method:\"state_get_auction_info\",params:{block_identifier:e>=0?{Height:e}:null}},null==t?void 0:t.timeout)];case 1:return[2,r.sent()]}}))}))},e.prototype.getAccountBalanceUrefByPublicKeyHash=function(e,t,r){return s(this,void 0,void 0,(function(){return a(this,(function(n){switch(n.label){case 0:return[4,this.getBlockState(e,\"account-hash-\"+t,[],r).then((function(e){return e.Account}))];case 1:return[2,n.sent().mainPurse]}}))}))},e.prototype.getAccountBalanceUrefByPublicKey=function(e,t,r){return s(this,void 0,void 0,(function(){return a(this,(function(n){return[2,this.getAccountBalanceUrefByPublicKeyHash(e,(0,h.encodeBase16)(t.toAccountHash()),r)]}))}))},e.prototype.getAccountBalance=function(e,t,r){return s(this,void 0,void 0,(function(){return a(this,(function(n){switch(n.label){case 0:return[4,this.client.request({method:\"state_get_balance\",params:{state_root_hash:e,purse_uref:t}},null==r?void 0:r.timeout).then((function(e){return f.BigNumber.from(e.balance_value)}))];case 1:return[2,n.sent()]}}))}))},e.prototype.queryBalance=function(e,t,r,n){return s(this,void 0,void 0,(function(){var i;return a(this,(function(o){switch(o.label){case 0:return[4,this.client.request({method:\"query_balance\",params:{purse_identifier:(i={},i[e]=t,i),state_identifier:r}},null==n?void 0:n.timeout).then((function(e){return f.BigNumber.from(e.balance)}))];case 1:return[2,o.sent()]}}))}))},e.prototype.getStateRootHash=function(e,t){return s(this,void 0,void 0,(function(){return a(this,(function(r){switch(r.label){case 0:return[4,this.client.request({method:\"chain_get_state_root_hash\",params:e?[{Hash:e}]:[]},null==t?void 0:t.timeout).then((function(e){return e.state_root_hash}))];case 1:return[2,r.sent()]}}))}))},e.prototype.getBlockState=function(e,t,r,n){return s(this,void 0,void 0,(function(){var i,o;return a(this,(function(s){switch(s.label){case 0:return[4,this.client.request({method:\"state_get_item\",params:{state_root_hash:e,key:t,path:r}},null==n?void 0:n.timeout)];case 1:return(i=s.sent()).error?[2,i]:(o=i.stored_value,[2,new d.TypedJSON(h.StoredValue).parse(o)])}}))}))},e.prototype.checkDeploySize=function(e){return s(this,void 0,void 0,(function(){var t;return a(this,(function(r){if((t=h.DeployUtil.deploySizeInBytes(e))>1048576)throw Error(\"Deploy can not be send, because it's too large: \".concat(t,\" bytes. \")+\"Max size is 1 megabyte.\");return[2]}))}))},e.prototype.deploy=function(e,t){return s(this,void 0,void 0,(function(){var r;return a(this,(function(n){switch(n.label){case 0:return[4,this.checkDeploySize(e)];case 1:if(n.sent(),void 0!==(r=(null!=t?t:{}).checkApproval)&&r&&0==e.approvals.length)throw new Error(\"Required signed deploy\");return[4,this.client.request({method:\"account_put_deploy\",params:h.DeployUtil.deployToJson(e)},null==t?void 0:t.timeout)];case 2:return[2,n.sent()]}}))}))},e.prototype.waitForDeploy=function(e,t){return void 0===t&&(t=6e4),s(this,void 0,void 0,(function(){var r,n,i,o;return a(this,(function(s){switch(s.label){case 0:r=function(e){return new Promise((function(t){return setTimeout(t,e)}))},n=setTimeout((function(){throw new Error(\"Timeout\")}),t),s.label=1;case 1:return i=\"string\"==typeof e?e:(0,h.encodeBase16)(e.hash),[4,this.getDeployInfo(i)];case 2:return(o=s.sent()).execution_results.length>0?(clearTimeout(n),[2,o]):[3,3];case 3:return[4,r(400)];case 4:s.sent(),s.label=5;case 5:return[3,1];case 6:return[2]}}))}))},e.prototype.speculativeDeploy=function(e,t,r){return s(this,void 0,void 0,(function(){var i;return a(this,(function(o){switch(o.label){case 0:return[4,this.checkDeploySize(e)];case 1:return o.sent(),i=h.DeployUtil.deployToJson(e),[4,this.client.request({method:\"speculative_exec\",params:t?n(n({},i),{block_identifier:{Hash:t}}):n({},i)},null==r?void 0:r.timeout)];case 2:return[2,o.sent()]}}))}))},e.prototype.getBlockTransfers=function(e,t){return s(this,void 0,void 0,(function(){var r;return a(this,(function(n){switch(n.label){case 0:return[4,this.client.request({method:\"chain_get_block_transfers\",params:{block_identifier:e?{Hash:e}:null}},null==t?void 0:t.timeout)];case 1:return(r=n.sent()).error?[2,r]:[2,new d.TypedJSON(h.Transfers).parse(r)]}}))}))},e.prototype.getEraInfoBySwitchBlock=function(e,t){return s(this,void 0,void 0,(function(){var r;return a(this,(function(n){switch(n.label){case 0:return[4,this.client.request({method:\"chain_get_era_info_by_switch_block\",params:{block_identifier:e?{Hash:e}:null}},null==t?void 0:t.timeout)];case 1:return(r=n.sent()).error?[2,r]:[2,new d.TypedJSON(b).parse(r.era_summary)]}}))}))},e.prototype.getEraInfoBySwitchBlockHeight=function(e,t){return s(this,void 0,void 0,(function(){var r;return a(this,(function(n){switch(n.label){case 0:return[4,this.client.request({method:\"chain_get_era_info_by_switch_block\",params:{block_identifier:{Height:e}}},null==t?void 0:t.timeout)];case 1:return(r=n.sent()).error?[2,r]:[2,new d.TypedJSON(b).parse(r.era_summary)]}}))}))},e.prototype.getEraSummary=function(e){return s(this,void 0,void 0,(function(){var t;return a(this,(function(r){switch(r.label){case 0:return[4,this.client.request({method:\"chain_get_era_summary\",params:{block_identifier:e?{Hash:e}:null}})];case 1:return(t=r.sent()).error?[2,t]:[2,new d.TypedJSON(b).parse(t.era_summary)]}}))}))},e.prototype.getEraSummaryByBlockHeight=function(e){return s(this,void 0,void 0,(function(){var t;return a(this,(function(r){switch(r.label){case 0:return[4,this.client.request({method:\"chain_get_era_summary\",params:{block_identifier:void 0!==e&&e>=0?{Height:e}:null}})];case 1:return(t=r.sent()).error?[2,t]:[2,new d.TypedJSON(b).parse(t.era_summary)]}}))}))},e.prototype.getDictionaryItemByURef=function(e,t,r,n){var i;return s(this,void 0,void 0,(function(){var o,s,u;return a(this,(function(a){switch(a.label){case 0:return o=null!==(i=null==n?void 0:n.rawData)&&void 0!==i&&i,[4,this.client.request({method:\"state_get_dictionary_item\",params:{state_root_hash:e,dictionary_identifier:{URef:{seed_uref:r,dictionary_item_key:t}}}},null==n?void 0:n.timeout)];case 1:return(s=a.sent()).error?[2,s]:(u=s.stored_value,o?[2,u]:[2,new d.TypedJSON(h.StoredValue).parse(u)])}}))}))},e.prototype.getDictionaryItemByName=function(e,t,r,n,i){var o;return s(this,void 0,void 0,(function(){var s,u,c;return a(this,(function(a){switch(a.label){case 0:return s=null!==(o=null==i?void 0:i.rawData)&&void 0!==o&&o,[4,this.client.request({method:\"state_get_dictionary_item\",params:{state_root_hash:e,dictionary_identifier:{ContractNamedKey:{key:t,dictionary_name:r,dictionary_item_key:n}}}},null==i?void 0:i.timeout)];case 1:return(u=a.sent()).error?[2,u]:(c=u.stored_value,s?[2,c]:[2,new d.TypedJSON(h.StoredValue).parse(c)])}}))}))},e}();t.CasperServiceByJsonRPC=m},6032:function(e,t,r){\"use strict\";var n=r(8764).Buffer,i=this&&this.__spreadArray||function(e,t,r){if(r||2===arguments.length)for(var n,i=0,o=t.length;i<o;i++)!n&&i in t||(n||(n=Array.prototype.slice.call(t,0,i)),n[i]=t[i]);return e.concat(n||Array.prototype.slice.call(t))},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,\"__esModule\",{value:!0}),t.parseEvent=t.EventStream=t.EventName=t.DeployWatcher=void 0;var s,a=o(r(8501)),u=o(r(9267)),c=r(2831);!function(e){e[e.NotAnEvent=0]=\"NotAnEvent\",e[e.EarlyEndOfStream=1]=\"EarlyEndOfStream\",e[e.MissingDataHeader=2]=\"MissingDataHeader\",e[e.MissingDataHeaderAndId=3]=\"MissingDataHeaderAndId\",e[e.MissingId=4]=\"MissingId\"}(s||(s={}));var f,l=function(){function e(e){this.eventStreamUrl=e,this.watchList=[],this.es=new d(e)}return e.prototype.subscribe=function(e){this.watchList=i(i([],this.watchList,!0),e,!0)},e.prototype.unsubscribe=function(e){this.watchList=this.watchList.filter((function(t){return t.deployHash!==e}))},e.prototype.start=function(){var e=this;this.es.subscribe(f.DeployProcessed,(function(t){var r=t.body.DeployProcessed.deploy_hash,n=e.watchList.find((function(e){return e.deployHash===r}));n&&(n.eventHandlerFn(t),e.unsubscribe(r))})),this.es.start()},e.prototype.stop=function(){this.es.stop()},e}();t.DeployWatcher=l,function(e){e.BlockAdded=\"BlockAdded\",e.BlockFinalized=\"BlockFinalized\",e.FinalitySignature=\"FinalitySignature\",e.Fault=\"Fault\",e.DeployProcessed=\"DeployProcessed\"}(f=t.EventName||(t.EventName={}));var d=function(){function e(e){this.eventStreamUrl=e,this.subscribedTo=[],this.pendingDeploysParts=[],this.pendingDeployString=\"\"}return e.prototype.subscribe=function(e,t){return this.subscribedTo.some((function(t){return t.eventName===e}))?(0,c.Err)(\"Already subscribed to this event\"):(this.subscribedTo.push({eventName:e,eventHandlerFn:t}),(0,c.Ok)(!0))},e.prototype.unsubscribe=function(e){return this.subscribedTo.some((function(t){return t.eventName===e}))?(this.subscribedTo=this.subscribedTo.filter((function(t){return t.eventName!==e})),(0,c.Ok)(!0)):(0,c.Err)(\"Cannot find provided subscription\")},e.prototype.runEventsLoop=function(e){this.subscribedTo.forEach((function(t){e.body&&e.body.hasOwnProperty(t.eventName)&&t.eventHandlerFn(e)}))},e.prototype.start=function(e){var r=this;void 0===e&&(e=0);var i=this.eventStreamUrl.indexOf(\"?\")>-1?\"&\":\"?\",o=\"\".concat(this.eventStreamUrl).concat(i,\"start_from=\").concat(e);(o.startsWith(\"https://\")?u.default.get:a.default.get)(o,(function(e){r.stream=e,e.on(\"data\",(function(e){var i=(0,t.parseEvent)(n.from(e).toString());if(i&&!i.err&&r.runEventsLoop(i),i.err===s.EarlyEndOfStream&&(r.pendingDeployString=i.body),i.err===s.MissingDataHeaderAndId&&(r.pendingDeployString+=i.body),i.err===s.MissingDataHeader){r.pendingDeployString+=i.body,r.pendingDeployString+=\"\\nid:\".concat(i.id);var o=(0,t.parseEvent)(r.pendingDeployString);null===o.err&&(r.pendingDeployString=\"\"),r.runEventsLoop(o)}})),e.once(\"readable\",(function(){console.info(\"Connected successfully to event stream endpoint.\")})),e.on(\"error\",(function(e){throw e})),e.on(\"timeout\",(function(){throw Error(\"EventStream: Timeout error\")})),e.on(\"close\",(function(){throw Error(\"EventStream: Connection closed\")}))}))},e.prototype.stop=function(){this.stream&&this.stream.pause()},e}();t.EventStream=d,t.parseEvent=function(e){if(!e.startsWith(\"data\"))return n=(t=e.split(\"\\n\"))[0],r=t[1]&&t[1].startsWith(\"id:\")?t[1].substr(3):null,\":\"===t[0]&&\"\"===t[1]&&\"\"===t[2]?{id:null,body:null,err:s.NotAnEvent}:r?{id:r,body:n,err:s.MissingDataHeader}:{id:null,body:n,err:s.MissingDataHeaderAndId};var t,r=(t=e.split(\"\\n\"))[1]&&t[1].startsWith(\"id:\")?t[1].substr(3):null;try{var n=JSON.parse(t[0].substr(5));return r?{id:r,body:n,err:null}:{id:r,body:n,err:s.MissingId}}catch(e){return{id:r,body:n=t[0],err:s.EarlyEndOfStream}}}},7519:function(e,t,r){\"use strict\";var n,i=this&&this.__extends||(n=function(e,t){return n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])},n(e,t)},function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Class extends value \"+String(t)+\" is not a constructor or null\");function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}),o=this&&this.__awaiter||function(e,t,r,n){return new(r||(r=Promise))((function(i,o){function s(e){try{u(n.next(e))}catch(e){o(e)}}function a(e){try{u(n.throw(e))}catch(e){o(e)}}function u(e){var t;e.done?i(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(s,a)}u((n=n.apply(e,t||[])).next())}))},s=this&&this.__generator||function(e,t){var r,n,i,o,s={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:a(0),throw:a(1),return:a(2)},\"function\"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function a(a){return function(u){return function(a){if(r)throw new TypeError(\"Generator is already executing.\");for(;o&&(o=0,a[0]&&(s=0)),s;)try{if(r=1,n&&(i=2&a[0]?n.return:a[0]?n.throw||((i=n.return)&&i.call(n),0):n.next)&&!(i=i.call(n,a[1])).done)return i;switch(n=0,i&&(a=[2&a[0],i.value]),a[0]){case 0:case 1:i=a;break;case 4:return s.label++,{value:a[1],done:!1};case 5:s.label++,n=a[1],a=[0];continue;case 7:a=s.ops.pop(),s.trys.pop();continue;default:if(!((i=(i=s.trys).length>0&&i[i.length-1])||6!==a[0]&&2!==a[0])){s=0;continue}if(3===a[0]&&(!i||a[1]>i[0]&&a[1]<i[3])){s.label=a[1];break}if(6===a[0]&&s.label<i[1]){s.label=i[1],i=a;break}if(i&&s.label<i[2]){s.label=i[2],s.ops.push(a);break}i[2]&&s.ops.pop(),s.trys.pop();continue}a=t.call(e,s)}catch(e){a=[6,e],n=0}finally{r=i=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,u])}}};Object.defineProperty(t,\"__esModule\",{value:!0});var a=r(3629),u=r(7182),c=r(9931),f=function(e){function t(t){var r=e.call(this)||this;return r.provider=t,r.onlyNotifications=function(e){return e instanceof Array?e.every((function(e){return null===e.request.request.id||void 0===e.request.request.id})):null===e.request.id||void 0===e.request.id},r}return i(t,e),t.prototype.connect=function(){return Promise.resolve()},t.prototype.sendData=function(e,t){return void 0===t&&(t=null),o(this,void 0,void 0,(function(){var r,n,i,o,a,f,l;return s(this,(function(s){switch(s.label){case 0:r=this.transportRequestManager.addRequest(e,t),n=(0,u.getNotifications)(e),i=(0,u.getBatchRequests)(e),s.label=1;case 1:return s.trys.push([1,3,,4]),[4,this.provider.request(e.request)];case 2:return o=s.sent(),a={id:e.request.id,jsonrpc:e.request.jsonrpc,result:o,error:null},this.transportRequestManager.settlePendingRequest(n),this.onlyNotifications(e)?[2,Promise.resolve()]:(l=this.transportRequestManager.resolveResponse(JSON.stringify(a)))?(this.transportRequestManager.settlePendingRequest(i,l),[2,Promise.reject(l)]):[3,4];case 3:return f=s.sent(),l=new c.JSONRPCError(f.message,c.ERR_UNKNOWN,f),this.transportRequestManager.settlePendingRequest(n,l),this.transportRequestManager.settlePendingRequest((0,u.getBatchRequests)(e),l),[2,Promise.reject(l)];case 4:return[2,r]}}))}))},t.prototype.close=function(){},t}(a.Transport);t.default=f},45:function(e,t,r){\"use strict\";var n=this&&this.__awaiter||function(e,t,r,n){return new(r||(r=Promise))((function(i,o){function s(e){try{u(n.next(e))}catch(e){o(e)}}function a(e){try{u(n.throw(e))}catch(e){o(e)}}function u(e){var t;e.done?i(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(s,a)}u((n=n.apply(e,t||[])).next())}))},i=this&&this.__generator||function(e,t){var r,n,i,o,s={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:a(0),throw:a(1),return:a(2)},\"function\"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function a(a){return function(u){return function(a){if(r)throw new TypeError(\"Generator is already executing.\");for(;o&&(o=0,a[0]&&(s=0)),s;)try{if(r=1,n&&(i=2&a[0]?n.return:a[0]?n.throw||((i=n.return)&&i.call(n),0):n.next)&&!(i=i.call(n,a[1])).done)return i;switch(n=0,i&&(a=[2&a[0],i.value]),a[0]){case 0:case 1:i=a;break;case 4:return s.label++,{value:a[1],done:!1};case 5:s.label++,n=a[1],a=[0];continue;case 7:a=s.ops.pop(),s.trys.pop();continue;default:if(!((i=(i=s.trys).length>0&&i[i.length-1])||6!==a[0]&&2!==a[0])){s=0;continue}if(3===a[0]&&(!i||a[1]>i[0]&&a[1]<i[3])){s.label=a[1];break}if(6===a[0]&&s.label<i[1]){s.label=i[1],i=a;break}if(i&&s.label<i[2]){s.label=i[2],s.ops.push(a);break}i[2]&&s.ops.pop(),s.trys.pop();continue}a=t.call(e,s)}catch(e){a=[6,e],n=0}finally{r=i=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,u])}}},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,\"__esModule\",{value:!0}),t.TimeService=void 0;var s=o(r(3300)),a=function(){function e(e){this.url=e}return e.prototype.getTime=function(){return n(this,void 0,void 0,(function(){return i(this,(function(e){switch(e.label){case 0:return[4,(0,s.default)(this.url)];case 1:return[4,e.sent().json()];case 2:return[2,e.sent()]}}))}))},e}();t.TimeService=a},4400:function(e,t,r){\"use strict\";var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r);var i=Object.getOwnPropertyDescriptor(t,r);i&&!(\"get\"in i?!t.__esModule:i.writable||i.configurable)||(i={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,n,i)}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),i=this&&this.__exportStar||function(e,t){for(var r in e)\"default\"===r||Object.prototype.hasOwnProperty.call(t,r)||n(t,e,r)};Object.defineProperty(t,\"__esModule\",{value:!0}),i(r(2969),t),i(r(8840),t),i(r(6032),t)},2831:(e,t,r)=>{\"use strict\";function n(e){var t=String(e);if(\"[object Object]\"===t)try{t=JSON.stringify(e)}catch(e){}return t}r.r(t),r.d(t,{Err:()=>s,ErrImpl:()=>o,None:()=>c,Ok:()=>u,OkImpl:()=>a,Option:()=>f,Result:()=>i,Some:()=>l});var i,o=function(){function e(t){if(!(this instanceof e))return new e(t);this.ok=!1,this.err=!0,this.val=t}return e.prototype[Symbol.iterator]=function(){return{next:function(){return{done:!0,value:void 0}}}},e.prototype.else=function(e){return e},e.prototype.unwrapOr=function(e){return e},e.prototype.expect=function(e){throw new Error(e+\" - Error: \"+n(this.val))},e.prototype.unwrap=function(){throw new Error(\"Tried to unwrap Error: \"+n(this.val))},e.prototype.map=function(e){return this},e.prototype.andThen=function(e){return this},e.prototype.mapErr=function(e){return new s(e(this.val))},e.prototype.toString=function(){return\"Err(\"+n(this.val)+\")\"},e.EMPTY=new e(void 0),e}(),s=o,a=function(){function e(t){if(!(this instanceof e))return new e(t);this.ok=!0,this.err=!1,this.val=t}return e.prototype[Symbol.iterator]=function(){var e=Object(this.val);return Symbol.iterator in e?e[Symbol.iterator]():{next:function(){return{done:!0,value:void 0}}}},e.prototype.else=function(e){return this.val},e.prototype.unwrapOr=function(e){return this.val},e.prototype.expect=function(e){return this.val},e.prototype.unwrap=function(){return this.val},e.prototype.map=function(e){return new u(e(this.val))},e.prototype.andThen=function(e){return e(this.val)},e.prototype.mapErr=function(e){return this},e.prototype.safeUnwrap=function(){return this.val},e.prototype.toString=function(){return\"Ok(\"+n(this.val)+\")\"},e.EMPTY=new e(void 0),e}(),u=a;!function(e){e.all=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];for(var r=[],n=0,i=e;n<i.length;n++){var o=i[n];if(!o.ok)return o;r.push(o.val)}return new u(r)},e.any=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];for(var r=[],n=0,i=e;n<i.length;n++){var o=i[n];if(o.ok)return o;r.push(o.val)}return new s(r)},e.wrap=function(e){try{return new u(e())}catch(e){return new s(e)}},e.wrapAsync=function(e){try{return e().then((function(e){return new u(e)})).catch((function(e){return new s(e)}))}catch(e){return Promise.resolve(new s(e))}},e.isResult=function(e){return e instanceof s||e instanceof u}}(i||(i={}));var c=new(function(){function e(){this.some=!1,this.none=!0}return e.prototype[Symbol.iterator]=function(){return{next:function(){return{done:!0,value:void 0}}}},e.prototype.unwrapOr=function(e){return e},e.prototype.expect=function(e){throw new Error(\"\"+e)},e.prototype.unwrap=function(){throw new Error(\"Tried to unwrap None\")},e.prototype.map=function(e){return this},e.prototype.andThen=function(e){return this},e.prototype.toString=function(){return\"None\"},e}());Object.freeze(c);var f,l=function(){function e(t){if(!(this instanceof e))return new e(t);this.some=!0,this.none=!1,this.val=t}return e.prototype[Symbol.iterator]=function(){var e=Object(this.val);return Symbol.iterator in e?e[Symbol.iterator]():{next:function(){return{done:!0,value:void 0}}}},e.prototype.unwrapOr=function(e){return this.val},e.prototype.expect=function(e){return this.val},e.prototype.unwrap=function(){return this.val},e.prototype.map=function(e){return l(e(this.val))},e.prototype.andThen=function(e){return e(this.val)},e.prototype.safeUnwrap=function(){return this.val},e.prototype.toString=function(){return\"Some(\"+n(this.val)+\")\"},e.EMPTY=new e(void 0),e}();!function(e){e.all=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];for(var r=[],n=0,i=e;n<i.length;n++){var o=i[n];if(!o.some)return o;r.push(o.val)}return l(r)},e.any=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];for(var r=0,n=e;r<n.length;r++){var i=n[r];return i.some,i}return c},e.isOption=function(e){return e instanceof l||e===c}}(f||(f={}))},188:(e,t,r)=>{\"use strict\";r.d(t,{Z:()=>u,m:()=>a});var n=r(5077),i=r(4606),o=r(2651),s=r(8665);function a(e,t){if(null!=e.__type)return t.get(e.__type)}var u=function(){function e(){this.typeResolver=a,this.errorHandler=n.H,this.deserializationStrategy=new Map([[s.IK.ctor,n.yR],[Number,d],[String,d],[Boolean,d],[Date,b],[ArrayBuffer,m],[DataView,g],[Array,h],[Set,p],[Map,y],[Float32Array,w],[Float64Array,w],[Uint8Array,E],[Uint8ClampedArray,E],[Uint16Array,E],[Uint32Array,E]])}return e.prototype.setDeserializationStrategy=function(e,t){this.deserializationStrategy.set(e,t)},e.prototype.setNameResolver=function(e){this.nameResolver=e},e.prototype.setTypeResolver=function(e){if(\"function\"!=typeof e)throw new TypeError(\"'typeResolverCallback' is not a function.\");this.typeResolver=e},e.prototype.getTypeResolver=function(){return this.typeResolver},e.prototype.setErrorHandler=function(e){if(\"function\"!=typeof e)throw new TypeError(\"'errorHandlerCallback' is not a function.\");this.errorHandler=e},e.prototype.getErrorHandler=function(){return this.errorHandler},e.prototype.convertSingleValue=function(e,t,r,a,u){if(void 0===a&&(a=\"object\"),this.retrievePreserveNull(u)&&null===e)return null;if((0,n.Jf)(e)){var c=this.deserializationStrategy.get(t.ctor);if(void 0!==c)return c(e,t,r,a,this,u);if(\"object\"==typeof e)return function(e,t,r,a,u){if(\"object\"==typeof e&&null!==e){var c=t.ctor,f=i.WR.getFromConstructor(c),l=r,d=u.getTypeResolver();void 0!==f&&(f.processDeferredKnownTypes(),l=u.mergeKnownTypes(l,u.createKnownTypesMap(f.knownTypes)),null!=f.typeResolver&&(d=f.typeResolver));var h=d(e,l);if(null!=h&&(0,n.me)(h,c)&&(c=h,void 0!==(f=i.WR.getFromConstructor(h))&&(l=u.mergeKnownTypes(l,u.createKnownTypesMap(f.knownTypes)))),!0===(null==f?void 0:f.isExplicitlyMarked)){var p=f,y={},b=(0,o.JH)(u.options,p.options);p.dataMembers.forEach((function(t,r){var i,s=e[r],a=(0,n.$0)(p.classType)+\".\"+r,c=(0,o.JH)(b,t.options);if(null!=t.deserializer)i=t.deserializer(s);else{if(null==t.type)throw new TypeError(\"Cannot deserialize \"+a+\" there is no constructor nor deserialization function to use.\");i=u.convertSingleValue(s,t.type(),l,a,c)}(0,n.Jf)(i)||u.retrievePreserveNull(c)&&null===i?y[t.key]=i:!0===t.isRequired&&u.getErrorHandler()(new TypeError(\"Missing required member '\"+a+\"'.\"))}));var m=void 0;if(\"function\"==typeof f.initializerCallback)try{if(null==(m=f.initializerCallback(y,e)))throw new TypeError(\"Cannot deserialize \"+a+\": 'initializer' function returned undefined/null, but '\"+(0,n.$0)(f.classType)+\"' was expected.\");if(!(m instanceof f.classType))throw new TypeError(\"Cannot deserialize \"+a+\":'initializer' returned '\"+(0,n.$0)(m.constructor)+\"', but '\"+(0,n.$0)(f.classType)+\"' was expected, and '\"+(0,n.$0)(m.constructor)+\"' is not a subtype of '\"+(0,n.$0)(f.classType)+\"'\")}catch(e){return void u.getErrorHandler()(e)}else m=u.instantiateType(c);Object.assign(m,y);var g=f.onDeserializedMethodName;return null!=g&&(\"function\"==typeof m[g]?m[g]():\"function\"==typeof m.constructor[g]?m.constructor[g]():u.getErrorHandler()(new TypeError(\"onDeserialized callback'\"+(0,n.$0)(f.classType)+\".\"+g+\"' is not a method.\"))),m}var v={};return Object.keys(e).forEach((function(t){v[t]=u.convertSingleValue(e[t],new s.h2(e[t].constructor),r,t)})),v}u.getErrorHandler()(new TypeError(\"Cannot deserialize \"+a+\": 'sourceObject' must be a defined object.\"))}(e,t,r,a,this);var f=\"Could not deserialize '\"+a+\"'; don't know how to deserialize type\";t.hasFriendlyName()&&(f+=\" '\"+t.ctor.name+\"'\"),this.errorHandler(new TypeError(f+\".\"))}},e.prototype.instantiateType=function(e){return new e},e.prototype.mergeKnownTypes=function(){for(var e=this,t=[],r=0;r<arguments.length;r++)t[r]=arguments[r];var n=new Map;return t.forEach((function(t){t.forEach((function(t,r){void 0===e.nameResolver?n.set(r,t):n.set(e.nameResolver(t),t)}))})),n},e.prototype.createKnownTypesMap=function(e){var t=this,r=new Map;return e.forEach((function(e){if(void 0===t.nameResolver){var n=i.WR.getFromConstructor(e),o=!0===(null==n?void 0:n.isExplicitlyMarked)?n.name:null;r.set(null!=o?o:e.name,e)}else r.set(t.nameResolver(e),e)})),r},e.prototype.retrievePreserveNull=function(e){return(0,o.l_)(\"preserveNull\",(0,o.JH)(this.options,e))},e}();function c(e,t,r,n){throw new TypeError(\"Could not deserialize \"+n+\" as \"+e+\": expected \"+t+\", got \"+r+\".\")}function f(e,t,r){return\"Could not deserialize \"+r+\": expected '\"+(\"function\"==typeof e?(0,n.$0)(e):e)+\"', got '\"+(\"function\"==typeof t?(0,n.$0)(t):t)+\"'.\"}function l(e){return null==e?\"undefined\":(0,n.$0)(e.constructor)}function d(e,t,r,i){if(e.constructor!==t.ctor)throw new TypeError(f((0,n.$0)(t.ctor),e.constructor,i));return e}function h(e,t,r,n,i,o){if(!(t instanceof s.GJ))throw new TypeError(\"Could not deserialize \"+n+\" as Array: incorrect TypeDescriptor detected, please use proper annotation or function for this type\");return Array.isArray(e)?null==t.elementType?(i.getErrorHandler()(new TypeError(\"Could not deserialize \"+n+\" as Array: missing constructor reference of Array elements.\")),[]):e.map((function(e,s){try{return i.convertSingleValue(e,t.elementType,r,n+\"[\"+s+\"]\",o)}catch(e){return void i.getErrorHandler()(e)}})):(i.getErrorHandler()(new TypeError(f(Array,e.constructor,n))),[])}function p(e,t,r,n,i,o){if(!(t instanceof s.do))throw new TypeError(\"Could not deserialize \"+n+\" as Set: incorrect TypeDescriptor detected, please use proper annotation or function for this type\");if(!Array.isArray(e))return i.getErrorHandler()(new TypeError(f(Array,e.constructor,n))),new Set;if(null==t.elementType)return i.getErrorHandler()(new TypeError(\"Could not deserialize \"+n+\" as Set: missing constructor reference of Set elements.\")),new Set;var a=new Set;return e.forEach((function(e,s){try{a.add(i.convertSingleValue(e,t.elementType,r,n+\"[\"+s+\"]\",o))}catch(e){i.getErrorHandler()(e)}})),a}function y(e,t,r,i,o,a){if(!(t instanceof s.br))throw new TypeError(\"Could not deserialize \"+i+\" as Map: incorrect TypeDescriptor detected,please use proper annotation or function for this type\");var u=t.getCompleteOptions().shape;if(!function(e,t){return 0===t&&Array.isArray(e)||1===t&&\"object\"==typeof e}(e,u)){var c=0===u?Array:Object;return o.getErrorHandler()(new TypeError(f(c,e.constructor,i))),new Map}if(null==t.keyType)return o.getErrorHandler()(new TypeError(\"Could not deserialize \"+i+\" as Map: missing key constructor.\")),new Map;if(null==t.valueType)return o.getErrorHandler()(new TypeError(\"Could not deserialize \"+i+\" as Map: missing value constructor.\")),new Map;var l=i+\"[].key\",d=i+\"[].value\",h=new Map;return 1===u?Object.keys(e).forEach((function(i){try{var s=o.convertSingleValue(i,t.keyType,r,l,a);(0,n.Jf)(s)&&h.set(s,o.convertSingleValue(e[i],t.valueType,r,d,a))}catch(e){o.getErrorHandler()(e)}})):e.forEach((function(e){try{var i=o.convertSingleValue(e.key,t.keyType,r,l,a);(0,n.Jf)(i)&&h.set(i,o.convertSingleValue(e.value,t.valueType,r,d,a))}catch(e){o.getErrorHandler()(e)}})),h}function b(e,t,r,n){if(\"number\"==typeof e){if(e%1!=0)throw new TypeError(\"Could not deserialize \"+n+\" as Date: expected an integer, got a number with decimal places.\");return new Date(e)}return\"string\"==typeof e?new Date(e):e instanceof Date?e:void c(\"Date\",\"an ISO-8601 string\",l(e),n)}function m(e,t,r,n){return\"string\"!=typeof e&&c(\"ArrayBuffer\",\"a string source\",l(e),n),v(e)}function g(e,t,r,n){return\"string\"!=typeof e&&c(\"DataView\",\"a string source\",l(e),n),new DataView(v(e))}function v(e){for(var t=new ArrayBuffer(2*e.length),r=new Uint16Array(t),n=0,i=e.length;n<i;n++)r[n]=e.charCodeAt(n);return t}function w(e,t,r,n){var i=t.ctor;return Array.isArray(e)&&e.every((function(e){return!isNaN(e)}))?new i(e):c(i.name,\"a numeric source array\",l(e),n)}function E(e,t,r,n){var i=t.ctor;return Array.isArray(e)&&e.every((function(e){return!isNaN(e)}))?new i(e.map((function(e){return~~e}))):c(t.ctor.name,\"a numeric source array\",l(e),n)}},5077:(e,t,r)=>{\"use strict\";r.d(t,{$0:()=>b,AZ:()=>s,H:()=>l,Jf:()=>h,KE:()=>d,V9:()=>p,Vf:()=>o,W0:()=>c,by:()=>u,df:()=>y,lW:()=>a,me:()=>f,yR:()=>m});var n=r(8145),i=r(8665),o=\"If the type is not yet defined, for example due to circular references, add '() => ' before it. E.g. @jsonMember(() => Foo)\",s='Make sure that you have both \"experimentalDecorators\" and \"emitDecoratorMetadata\" enabled in your tsconfig.json';function a(e){return-1!==[Date,Number,String,Boolean].indexOf(e)}function u(e){return-1!==[Float32Array,Float64Array,Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array].indexOf(e)}function c(e,t){return\"string\"!=typeof e||function(e,t){var r=t===String||t===ArrayBuffer||t===DataView,n=e.length>=2&&'\"'===e[0]&&'\"'===e[e.length-1];if(t===Date){var i=!isNaN(Number(e.trim()));return!n&&!i}return r&&!n}(e,t)?e:JSON.parse(e)}function f(e,t){return e===t||e.prototype instanceof t}function l(e){for(var t=[],r=1;r<arguments.length;r++)t[r-1]=arguments[r];\"object\"==typeof console&&\"function\"==typeof console.error?console.error.apply(console,(0,n.pr)([e],t)):\"object\"==typeof console&&\"function\"==typeof console.log&&console.log.apply(console,(0,n.pr)([\"ERROR: \"+e],t))}function d(e){for(var t=[],r=1;r<arguments.length;r++)t[r-1]=arguments[r];\"object\"==typeof console&&\"function\"==typeof console.warn?console.warn.apply(console,(0,n.pr)([e],t)):\"object\"==typeof console&&\"function\"==typeof console.log&&console.log.apply(console,(0,n.pr)([\"WARNING: \"+e],t))}function h(e){return!(null==e)}function p(e,t){return t===i.IK.ctor||(\"number\"==typeof e?t===Number:\"string\"==typeof e?t===String:\"boolean\"==typeof e?t===Boolean:!!function(e){return\"object\"==typeof e}(e)&&e instanceof t)}var y=\"object\"==typeof Reflect&&\"function\"==typeof Reflect.getMetadata;function b(e){return\"string\"==typeof e.name?e.name:\"undefined\"}function m(e){return e}},4546:(e,t,r)=>{\"use strict\";r.r(t),r.d(t,{AnyT:()=>h.IK,ArrayT:()=>h.AJ,ArrayTypeDescriptor:()=>h.GJ,JsonObjectMetadata:()=>s.WR,MapT:()=>h.mY,MapTypeDescriptor:()=>h.br,SetT:()=>h.zc,SetTypeDescriptor:()=>h.do,TypedJSON:()=>n.r5,defaultTypeEmitter:()=>o.C,defaultTypeResolver:()=>i.m,jsonArrayMember:()=>c.g,jsonMapMember:()=>l.W,jsonMember:()=>u.R,jsonObject:()=>a.O,jsonSetMember:()=>f.b,toJson:()=>d.Q});var n=r(3380),i=r(188),o=r(6844),s=r(4606),a=r(4991),u=r(255),c=r(8991),f=r(8120),l=r(6558),d=r(9225),h=r(8665),p=r(7759),y={};for(const e in p)[\"default\",\"TypedJSON\",\"defaultTypeResolver\",\"defaultTypeEmitter\",\"JsonObjectMetadata\",\"jsonObject\",\"jsonMember\",\"jsonArrayMember\",\"jsonSetMember\",\"jsonMapMember\",\"toJson\",\"ArrayT\",\"AnyT\",\"SetT\",\"MapT\",\"SetTypeDescriptor\",\"ArrayTypeDescriptor\",\"MapTypeDescriptor\"].indexOf(e)<0&&(y[e]=()=>p[e]);r.d(t,y)},8991:(e,t,r)=>{\"use strict\";r.d(t,{g:()=>a,r:()=>u});var n=r(5077),i=r(4606),o=r(2651),s=r(8665);function a(e,t){return void 0===t&&(t={}),function(r,a){var c,f=\"@jsonArrayMember on \"+(0,n.$0)(r.constructor)+\".\"+String(a),l=(0,s.JD)(e,f),d=null==t.dimensions?1:t.dimensions;if(!isNaN(d)&&d<1)(0,n.H)(f+\": 'dimensions' option must be at least 1.\");else{var h=n.df?Reflect.getMetadata(\"design:type\",r,a):null;null==h||h===Array||h===Object?(0,i.d3)(r,a,{type:function(){return u((0,s._k)(l()),d)},emitDefaultValue:t.emitDefaultValue,isRequired:t.isRequired,options:(0,o.M3)(t),key:a.toString(),name:null!==(c=t.name)&&void 0!==c?c:a.toString(),deserializer:t.deserializer,serializer:t.serializer}):(0,n.H)(f+\": property is not an Array. \"+n.AZ)}}}function u(e,t){for(var r=new s.GJ(e),n=1;n<t;++n)r=new s.GJ(r);return r}},6558:(e,t,r)=>{\"use strict\";r.d(t,{W:()=>a});var n=r(5077),i=r(4606),o=r(2651),s=r(8665);function a(e,t,r){return void 0===r&&(r={}),function(a,u){var c,f=\"@jsonMapMember on \"+(0,n.$0)(a.constructor)+\".\"+String(u),l=(0,s.JD)(e,f),d=(0,s.JD)(t,f),h=n.df?Reflect.getMetadata(\"design:type\",a,u):null;null==h||h===Map||h===Object?(0,i.d3)(a,u,{type:function(){return(0,s.mY)(l(),d(),{shape:r.shape})},emitDefaultValue:r.emitDefaultValue,isRequired:r.isRequired,options:(0,o.M3)(r),key:u.toString(),name:null!==(c=r.name)&&void 0!==c?c:u.toString(),deserializer:r.deserializer,serializer:r.serializer}):(0,n.H)(f+\": property is not a Map. \"+n.AZ)}}},255:(e,t,r)=>{\"use strict\";r.d(t,{R:()=>a});var n=r(5077),i=r(4606),o=r(2651),s=r(8665);function a(e,t){var r,a;if(\"string\"!=typeof t&&\"symbol\"!=typeof t)return r=e,a=t,function(e,t){var u,f,l=\"@jsonMember on \"+(0,n.$0)(e.constructor)+\".\"+String(t);if((0,s.nW)(r)||(0,s.p3)(r)?f=(0,s.JD)(r,l):a=r,a=null!=a?a:{},Object.prototype.hasOwnProperty.call(a,\"constructor\")){if(void 0!==f)throw new Error(\"Cannot both define constructor option and type. Only one allowed.\");if(!(0,n.Jf)(a.constructor))return void(0,n.H)(l+\": cannot resolve specified property constructor at runtime. \"+n.Vf);var d=(0,s._k)(a.constructor);f=function(){return d},n.df&&!(0,n.me)(d.ctor,Reflect.getMetadata(\"design:type\",e,t))&&(0,n.KE)(l+\": detected property type does not match 'constructor' option.\")}else if(void 0!==f);else if(n.df){var h=Reflect.getMetadata(\"design:type\",e,t);if(null==h)return void(0,n.H)(l+\": cannot resolve detected property constructor at runtime. \"+n.Vf);f=function(){return(0,s._k)(h)}}else if(void 0===a.deserializer)return void(0,n.H)(l+\": Cannot determine type\");var p=null==f?void 0:f();void 0!==p&&c(l,p)||(0,i.d3)(e,t,{type:void 0===f?void 0:function(){return(0,s._k)(f())},emitDefaultValue:a.emitDefaultValue,isRequired:a.isRequired,options:(0,o.M3)(a),key:t.toString(),name:null!==(u=a.name)&&void 0!==u?u:t.toString(),deserializer:a.deserializer,serializer:a.serializer})};var u=t,f=e,l=\"@jsonMember on \"+(0,n.$0)(f.constructor)+\".\"+String(u);if(n.df){var d=Reflect.getMetadata(\"design:type\",f,u);if(null!=d){var h=(0,s._k)(d);c(l,h)||(0,i.d3)(f,u,{type:function(){return h},key:t.toString(),name:t.toString()})}else(0,n.H)(l+\": could not resolve detected property constructor at runtime. Potential solutions:\\n - \"+n.Vf+\"\\n - \"+n.AZ)}else(0,n.H)(l+\": ReflectDecorators is required if the type is not explicitly provided with e.g. @jsonMember(Number)\")}function u(e,t){return e instanceof s.eh?e.ctor===t:e===t}function c(e,t){return t instanceof s.GJ||!u(t,Array)?t instanceof s.do||!u(t,Set)?!(t instanceof s.br||!u(t,Map)||((0,n.H)(e+\": property is a Map. Use the jsonMapMember decorator to serialize this property.\"),0)):((0,n.H)(e+\": property is a Set. Use the jsonSetMember decorator to serialize this property.\"),!0):((0,n.H)(e+\": property is an Array. Use the jsonArrayMember decorator to serialize this property.\"),!0)}},4991:(e,t,r)=>{\"use strict\";r.d(t,{O:()=>o});var n=r(4606),i=r(2651);function o(e){var t;function r(e){var r=n.WR.ensurePresentInPrototype(e.prototype);r.isExplicitlyMarked=!0,r.onDeserializedMethodName=t.onDeserialized,r.beforeSerializationMethodName=t.beforeSerialization,null!=t.typeResolver&&(r.typeResolver=t.typeResolver),null!=t.typeHintEmitter&&(r.typeHintEmitter=t.typeHintEmitter),r.initializerCallback=t.initializer,null!=t.name&&(r.name=t.name);var o=(0,i.M3)(t);void 0!==o&&(r.options=o),null!=t.knownTypes&&t.knownTypes.filter((function(e){return Boolean(e)})).forEach((function(e){return r.knownTypes.add(e)}))}if(t=\"function\"==typeof e?{}:null!=e?e:{},\"function\"!=typeof e)return r;r(e)}},8120:(e,t,r)=>{\"use strict\";r.d(t,{b:()=>a});var n=r(5077),i=r(4606),o=r(2651),s=r(8665);function a(e,t){return void 0===t&&(t={}),function(r,a){var u,c=\"@jsonSetMember on \"+(0,n.$0)(r.constructor)+\".\"+String(a),f=(0,s.JD)(e,c),l=n.df?Reflect.getMetadata(\"design:type\",r,a):null;null==l||l===Set||l===Object?(0,i.d3)(r,a,{type:function(){return(0,s.zc)(f())},emitDefaultValue:t.emitDefaultValue,isRequired:t.isRequired,options:(0,o.M3)(t),key:a.toString(),name:null!==(u=t.name)&&void 0!==u?u:a.toString(),deserializer:t.deserializer,serializer:t.serializer}):(0,n.H)(c+\": property is not a Set. \"+n.AZ)}}},4606:(e,t,r)=>{\"use strict\";r.d(t,{WR:()=>o,d3:()=>s});var n=r(5077),i=\"__typedJsonJsonObjectMetadataInformation__\",o=function(){function e(e){this.dataMembers=new Map,this.knownTypes=new Set,this.knownTypesDeferred=[],this.isExplicitlyMarked=!1,this.isHandledWithoutAnnotation=!1,this.classType=e}return e.getJsonObjectName=function(t){var r=e.getFromConstructor(t);return void 0===r?(0,n.$0)(t):(0,n.$0)(r.classType)},e.getFromConstructor=function(t){var r=t.prototype;if(null!=r){var n;if(Object.prototype.hasOwnProperty.call(r,i)&&(n=r[i]),!0===(null==n?void 0:n.isExplicitlyMarked))return n;if(e.doesHandleWithoutAnnotation(t)){var o=new e(t);return o.isExplicitlyMarked=!0,o}}},e.ensurePresentInPrototype=function(t){if(Object.prototype.hasOwnProperty.call(t,i))return t[i];var r=new e(t.constructor),n=t[i];return void 0!==n&&(n.dataMembers.forEach((function(e,t){r.dataMembers.set(t,e)})),n.knownTypes.forEach((function(e){r.knownTypes.add(e)})),r.typeResolver=n.typeResolver,r.typeHintEmitter=n.typeHintEmitter),Object.defineProperty(t,i,{enumerable:!1,configurable:!1,writable:!1,value:r}),r},e.getKnownTypeNameFromType=function(t){var r=e.getFromConstructor(t);return void 0===r?(0,n.$0)(t):(0,n.$0)(r.classType)},e.doesHandleWithoutAnnotation=function(e){return(0,n.lW)(e)||(0,n.by)(e)||e===DataView||e===ArrayBuffer},e.prototype.processDeferredKnownTypes=function(){var e=this;this.knownTypesDeferred.forEach((function(t){t().getTypes().forEach((function(t){return e.knownTypes.add(t)}))})),this.knownTypesDeferred=[]},e}();function s(e,t,r){var i=\"@jsonMember on \"+(0,n.$0)(e.constructor)+\".\"+String(t);if(\"function\"!=typeof e)if(\"function\"!=typeof e[t])if(null==r||void 0===r.type&&void 0===r.deserializer)(0,n.H)(i+\": JsonMemberMetadata has unknown type.\");else{var s=o.ensurePresentInPrototype(e);void 0===r.deserializer&&s.knownTypesDeferred.push(r.type),Object.keys(r).forEach((function(e){return void 0===r[e]&&delete r[e]})),s.dataMembers.set(r.name,r)}else(0,n.H)(i+\": cannot use a method property.\");else(0,n.H)(i+\": cannot use a static property.\")}},2651:(e,t,r)=>{\"use strict\";r.d(t,{JH:()=>a,M3:()=>o,l_:()=>s});var n=r(8145),i=[\"preserveNull\"];function o(e){var t=Object.keys(e).filter((function(e){return i.indexOf(e)>-1})).reduce((function(t,r){return t[r]=e[r],t}),{});return Object.keys(t).length>0?t:void 0}function s(e,t){return null!=t&&null!=t[e]?t[e]:function(e){return\"preserveNull\"!==e&&null}(e)}function a(e,t){return null==t?e:(0,n.pi)((0,n.pi)({},e),t)}},3380:(e,t,r)=>{\"use strict\";r.d(t,{r5:()=>l});var n=r(8145),i=r(188),o=r(5077),s=r(8991),a=r(4606),u=r(2651),c=r(6844),f=r(8665),l=function(){function e(e,t){this.serializer=new c.e,this.deserializer=new i.Z,this.globalKnownTypes=[],this.indent=0;var r=a.WR.getFromConstructor(e);if(void 0===r||!r.isExplicitlyMarked&&!r.isHandledWithoutAnnotation)throw new TypeError(\"The TypedJSON root data type must have the @jsonObject decorator used.\");this.nameResolver=function(e){return(0,o.$0)(e)},this.rootConstructor=e,this.errorHandler=function(e){return(0,o.H)(e)},this.config(t)}return e.parse=function(t,r,n){return new e(r,n).parse(t)},e.parseAsArray=function(t,r,n,i){return new e(r,n).parseAsArray(t,i)},e.parseAsSet=function(t,r,n){return new e(r,n).parseAsSet(t)},e.parseAsMap=function(t,r,n,i){return new e(n,i).parseAsMap(t,r)},e.toPlainJson=function(t,r,n){return new e(r,n).toPlainJson(t)},e.toPlainArray=function(t,r,n,i){return new e(r,i).toPlainArray(t,n)},e.toPlainSet=function(t,r,n){return new e(r,n).toPlainSet(t)},e.toPlainMap=function(t,r,n,i){return new e(n,i).toPlainMap(t,r)},e.stringify=function(t,r,n){return new e(r,n).stringify(t)},e.stringifyAsArray=function(t,r,n,i){return new e(r,i).stringifyAsArray(t,n)},e.stringifyAsSet=function(t,r,n){return new e(r,n).stringifyAsSet(t)},e.stringifyAsMap=function(t,r,n,i){return new e(n,i).stringifyAsMap(t,r)},e.setGlobalConfig=function(e){Object.assign(this._globalConfig,e)},e.mapType=function(e,t){null==this._globalConfig.mappedTypes&&(this._globalConfig.mappedTypes=new Map),this._globalConfig.mappedTypes.set(e,t)},e.prototype.config=function(t){var r=this;null!=(t=(0,n.pi)((0,n.pi)({},e._globalConfig),t)).knownTypes&&null!=e._globalConfig.knownTypes&&(t.knownTypes=Array.from(new Set(t.knownTypes.concat(e._globalConfig.knownTypes))));var i=(0,u.M3)(t);this.serializer.options=i,this.deserializer.options=i,null!=t.errorHandler&&(this.errorHandler=t.errorHandler,this.deserializer.setErrorHandler(t.errorHandler),this.serializer.setErrorHandler(t.errorHandler)),null!=t.replacer&&(this.replacer=t.replacer),null!=t.typeResolver&&this.deserializer.setTypeResolver(t.typeResolver),null!=t.typeHintEmitter&&this.serializer.setTypeHintEmitter(t.typeHintEmitter),null!=t.indent&&(this.indent=t.indent),null!=t.mappedTypes&&t.mappedTypes.forEach((function(e,t){r.setSerializationStrategies(t,e)})),null!=t.nameResolver&&(this.nameResolver=t.nameResolver,this.deserializer.setNameResolver(t.nameResolver)),null!=t.knownTypes&&(t.knownTypes.forEach((function(e,t){null==e&&(0,o.KE)(\"TypedJSON.config: 'knownTypes' contains an undefined/null value (element \"+t+\").\")})),this.globalKnownTypes=t.knownTypes)},e.prototype.mapType=function(e,t){this.setSerializationStrategies(e,t)},e.prototype.parse=function(e){var t,r=this,n=(0,o.W0)(e,this.rootConstructor),i=a.WR.getFromConstructor(this.rootConstructor),s=new Map;this.globalKnownTypes.filter((function(e){return e})).forEach((function(e){s.set(r.nameResolver(e),e)})),void 0!==i&&(i.processDeferredKnownTypes(),i.knownTypes.forEach((function(e){s.set(r.nameResolver(e),e)})));try{t=this.deserializer.convertSingleValue(n,(0,f._k)(this.rootConstructor),s)}catch(e){this.errorHandler(e)}return t},e.prototype.parseAsArray=function(e,t){void 0===t&&(t=1);var r=(0,o.W0)(e,Array);return this.deserializer.convertSingleValue(r,(0,s.r)((0,f._k)(this.rootConstructor),t),this._mapKnownTypes(this.globalKnownTypes))},e.prototype.parseAsSet=function(e){var t=(0,o.W0)(e,Set);return this.deserializer.convertSingleValue(t,(0,f.zc)(this.rootConstructor),this._mapKnownTypes(this.globalKnownTypes))},e.prototype.parseAsMap=function(e,t){var r=(0,o.W0)(e,Map);return this.deserializer.convertSingleValue(r,(0,f.mY)(t,this.rootConstructor),this._mapKnownTypes(this.globalKnownTypes))},e.prototype.toPlainJson=function(e){try{return this.serializer.convertSingleValue(e,(0,f._k)(this.rootConstructor))}catch(e){this.errorHandler(e)}},e.prototype.toPlainArray=function(e,t){void 0===t&&(t=1);try{return this.serializer.convertSingleValue(e,(0,s.r)((0,f._k)(this.rootConstructor),t))}catch(e){this.errorHandler(e)}},e.prototype.toPlainSet=function(e){try{return this.serializer.convertSingleValue(e,(0,f.zc)(this.rootConstructor))}catch(e){this.errorHandler(e)}},e.prototype.toPlainMap=function(e,t){try{return this.serializer.convertSingleValue(e,(0,f.mY)(t,this.rootConstructor))}catch(e){this.errorHandler(e)}},e.prototype.stringify=function(e){var t=this.toPlainJson(e);return void 0===t?\"\":JSON.stringify(t,this.replacer,this.indent)},e.prototype.stringifyAsArray=function(e,t){return JSON.stringify(this.toPlainArray(e,t),this.replacer,this.indent)},e.prototype.stringifyAsSet=function(e){return JSON.stringify(this.toPlainSet(e),this.replacer,this.indent)},e.prototype.stringifyAsMap=function(e,t){return JSON.stringify(this.toPlainMap(e,t),this.replacer,this.indent)},e.prototype._mapKnownTypes=function(e){var t=this,r=new Map;return e.filter((function(e){return e})).forEach((function(e){return r.set(t.nameResolver(e),e)})),r},e.prototype.setSerializationStrategies=function(e,t){null!=t.deserializer&&this.deserializer.setDeserializationStrategy(e,(function(e){return t.deserializer(e)})),null!=t.serializer&&this.serializer.setSerializationStrategy(e,(function(e){return t.serializer(e)}))},e._globalConfig={},e}()},6844:(e,t,r)=>{\"use strict\";r.d(t,{C:()=>u,e:()=>c});var n=r(8145),i=r(5077),o=r(4606),s=r(2651),a=r(8665);function u(e,t,r,n){var o;t.constructor!==r&&(e.__type=null!==(o=null==n?void 0:n.name)&&void 0!==o?o:(0,i.$0)(t.constructor))}var c=function(){function e(){this.typeHintEmitter=u,this.errorHandler=i.H,this.serializationStrategy=new Map([[a.IK.ctor,i.yR],[Date,i.yR],[Number,i.yR],[String,i.yR],[Boolean,i.yR],[ArrayBuffer,p],[DataView,y],[Array,f],[Set,l],[Map,d],[Float32Array,h],[Float64Array,h],[Int8Array,h],[Uint8Array,h],[Uint8ClampedArray,h],[Int16Array,h],[Uint16Array,h],[Int32Array,h],[Uint32Array,h]])}return e.prototype.setSerializationStrategy=function(e,t){this.serializationStrategy.set(e,t)},e.prototype.setTypeHintEmitter=function(e){if(\"function\"!=typeof e)throw new TypeError(\"'typeEmitterCallback' is not a function.\");this.typeHintEmitter=e},e.prototype.getTypeHintEmitter=function(){return this.typeHintEmitter},e.prototype.setErrorHandler=function(e){if(\"function\"!=typeof e)throw new TypeError(\"'errorHandlerCallback' is not a function.\");this.errorHandler=e},e.prototype.getErrorHandler=function(){return this.errorHandler},e.prototype.retrievePreserveNull=function(e){return(0,s.l_)(\"preserveNull\",(0,s.JH)(this.options,e))},e.prototype.convertSingleValue=function(e,t,r,a){if(void 0===r&&(r=\"object\"),this.retrievePreserveNull(a)&&null===e)return null;if((0,i.Jf)(e))if((0,i.V9)(e,t.ctor)){var u=this.serializationStrategy.get(t.ctor);if(void 0!==u)return u(e,t,r,this,a);if(\"object\"==typeof e)return function(e,t,r,a,u){var c,f,l=a.getTypeHintEmitter();if(void 0===(c=e.constructor!==t.ctor&&e instanceof t.ctor?o.WR.getFromConstructor(e.constructor):o.WR.getFromConstructor(t.ctor)))f=(0,n.pi)({},e);else{var d=c.beforeSerializationMethodName;null!=d&&(\"function\"==typeof e[d]?e[d]():\"function\"==typeof e.constructor[d]?e.constructor[d]():a.getErrorHandler()(new TypeError(\"beforeSerialization callback '\"+(0,i.$0)(c.classType)+\".\"+d+\"' is not a method.\")));var h=c;f={};var p=(0,s.JH)(a.options,h.options);null!=h.typeHintEmitter&&(l=h.typeHintEmitter),h.dataMembers.forEach((function(t){var r,n=(0,s.JH)(p,t.options);if(null!=t.serializer)r=t.serializer(e[t.key]);else{if(null==t.type)throw new TypeError(\"Could not serialize \"+t.name+\", there is no constructor nor serialization function to use.\");r=a.convertSingleValue(e[t.key],t.type(),(0,i.$0)(h.classType)+\".\"+t.key,n)}(a.retrievePreserveNull(n)&&null===r||(0,i.Jf)(r))&&(f[t.name]=r)}))}return l(f,e,t.ctor,c),f}(e,t,0,this);var c=\"Could not serialize '\"+r+\"'; don't know how to serialize type\";t.hasFriendlyName()&&(c+=\" '\"+t.ctor.name+\"'\"),this.errorHandler(new TypeError(c+\".\"))}else{var f=(0,i.$0)(t.ctor),l=(0,i.$0)(e.constructor);this.errorHandler(new TypeError(\"Could not serialize '\"+r+\"': expected '\"+f+\"', got '\"+l+\"'.\"))}},e}();function f(e,t,r,n,o){if(!(t instanceof a.GJ))throw new TypeError(\"Could not serialize \"+r+\" as Array: incorrect TypeDescriptor detected, please use proper annotation or function for this type\");if(null==t.elementType)throw new TypeError(\"Could not serialize \"+r+\" as Array: missing element type definition.\");return e.forEach((function(e,s){if(!(n.retrievePreserveNull(o)&&null===e||(0,i.V9)(e,t.elementType.ctor))){var a=(0,i.$0)(t.elementType.ctor),u=e&&(0,i.$0)(e.constructor);throw new TypeError(\"Could not serialize \"+r+\"[\"+s+\"]: expected '\"+a+\"', got '\"+u+\"'.\")}})),e.map((function(e,i){return n.convertSingleValue(e,t.elementType,r+\"[\"+i+\"]\",o)}))}function l(e,t,r,n,o){if(!(t instanceof a.do))throw new TypeError(\"Could not serialize \"+r+\" as Set: incorrect TypeDescriptor detected, please use proper annotation or function for this type\");if(null==t.elementType)throw new TypeError(\"Could not serialize \"+r+\" as Set: missing element type definition.\");r+=\"[]\";var s=[];return e.forEach((function(e){var a=n.convertSingleValue(e,t.elementType,r,o);(0,i.Jf)(e)&&!(0,i.Jf)(a)||s.push(a)})),s}function d(e,t,r,n,o){if(!(t instanceof a.br))throw new TypeError(\"Could not serialize \"+r+\" as Map: incorrect TypeDescriptor detected, please use proper annotation or function for this type\");if(null==t.valueType)throw new TypeError(\"Could not serialize \"+r+\" as Map: missing value type definition.\");if(null==t.keyType)throw new TypeError(\"Could not serialize \"+r+\" as Map: missing key type definition.\");var s=r+\"[].key\",u=r+\"[].value\",c=t.getCompleteOptions().shape,f=1===c?{}:[],l=n.retrievePreserveNull(o);return e.forEach((function(e,r){var a={key:n.convertSingleValue(r,t.keyType,s,o),value:n.convertSingleValue(e,t.valueType,u,o)},d=(0,i.Jf)(a.key),h=null===a.value&&l||(0,i.Jf)(a.value);d&&h&&(1===c?f[a.key]=a.value:f.push(a))})),f}function h(e){return Array.from(e)}function p(e){return Array.from(new Uint16Array(e)).map((function(e){return String.fromCharCode(e)})).join(\"\")}function y(e){return p(e.buffer)}},9225:(e,t,r)=>{\"use strict\";r.d(t,{Q:()=>i});var n=r(3380);function i(e){if(\"function\"!=typeof e)return function(t){o(t,e)};o(e,{})}function o(e,t){if(!0!==t.overwrite&&void 0!==e.prototype.toJSON)throw new Error(e.name+\" already has toJSON defined!\");e.prototype.toJSON=function(){return n.r5.toPlainJson(this,Object.getPrototypeOf(this).constructor)}}},8665:(e,t,r)=>{\"use strict\";r.d(t,{AJ:()=>c,GJ:()=>u,IK:()=>p,JD:()=>g,_k:()=>m,br:()=>d,do:()=>f,eh:()=>o,h2:()=>s,mY:()=>h,nW:()=>y,p3:()=>b,zc:()=>l});var n=r(8145),i=r(5077),o=function(){function e(e){this.ctor=e}return e.prototype.getTypes=function(){return[this.ctor]},e.prototype.hasFriendlyName=function(){return\"Object\"!==this.ctor.name},e}(),s=function(e){function t(t){return e.call(this,t)||this}return(0,n.ZT)(t,e),t}(o),a=function(e){function t(t){return e.call(this,t)||this}return(0,n.ZT)(t,e),t}(o),u=function(e){function t(t){var r=e.call(this,Array)||this;return r.elementType=t,r}return(0,n.ZT)(t,e),t.prototype.getTypes=function(){return e.prototype.getTypes.call(this).concat(this.elementType.getTypes())},t}(a);function c(e){return new u(m(e))}var f=function(e){function t(t){var r=e.call(this,Set)||this;return r.elementType=t,r}return(0,n.ZT)(t,e),t.prototype.getTypes=function(){return e.prototype.getTypes.call(this).concat(this.elementType.getTypes())},t}(a);function l(e){return new f(m(e))}var d=function(e){function t(t,r,n){var i=e.call(this,Map)||this;return i.keyType=t,i.valueType=r,i.options=n,i}return(0,n.ZT)(t,e),t.prototype.getTypes=function(){return e.prototype.getTypes.call(this).concat(this.keyType.getTypes(),this.valueType.getTypes())},t.prototype.getCompleteOptions=function(){var e,t;return{shape:null!==(t=null===(e=this.options)||void 0===e?void 0:e.shape)&&void 0!==t?t:0}},t}(a);function h(e,t,r){return new d(m(e),m(t),r)}var p=new s((function(){}));function y(e){return null!=e&&(\"function\"==typeof e||e instanceof o)}function b(e){return\"function\"==typeof e&&\"\"===e.name}function m(e){return e instanceof o?e:new s(e)}function g(e,t){if(null==e)throw new Error(\"No type given on \"+t+\". \"+i.Vf);return b(e)?e:function(){return e}}},7759:()=>{},8145:(e,t,r)=>{\"use strict\";r.d(t,{ZT:()=>i,pi:()=>o,pr:()=>s});var n=function(e,t){return n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])},n(e,t)};function i(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Class extends value \"+String(t)+\" is not a constructor or null\");function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}var o=function(){return o=Object.assign||function(e){for(var t,r=1,n=arguments.length;r<n;r++)for(var i in t=arguments[r])Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i]);return e},o.apply(this,arguments)};function s(){for(var e=0,t=0,r=arguments.length;t<r;t++)e+=arguments[t].length;var n=Array(e),i=0;for(t=0;t<r;t++)for(var o=arguments[t],s=0,a=o.length;s<a;s++,i++)n[i]=o[s];return n}Object.create,Object.create},2511:function(e,t,r){var n;e=r.nmd(e),function(i){t&&t.nodeType,e&&e.nodeType;var o=\"object\"==typeof r.g&&r.g;o.global!==o&&o.window!==o&&o.self;var s,a=2147483647,u=36,c=1,f=26,l=38,d=700,h=72,p=128,y=\"-\",b=/^xn--/,m=/[^\\x20-\\x7E]/,g=/[\\x2E\\u3002\\uFF0E\\uFF61]/g,v={overflow:\"Overflow: input needs wider integers to process\",\"not-basic\":\"Illegal input >= 0x80 (not a basic code point)\",\"invalid-input\":\"Invalid input\"},w=u-c,E=Math.floor,_=String.fromCharCode;function S(e){throw RangeError(v[e])}function T(e,t){for(var r=e.length,n=[];r--;)n[r]=t(e[r]);return n}function B(e,t){var r=e.split(\"@\"),n=\"\";return r.length>1&&(n=r[0]+\"@\",e=r[1]),n+T((e=e.replace(g,\".\")).split(\".\"),t).join(\".\")}function A(e){for(var t,r,n=[],i=0,o=e.length;i<o;)(t=e.charCodeAt(i++))>=55296&&t<=56319&&i<o?56320==(64512&(r=e.charCodeAt(i++)))?n.push(((1023&t)<<10)+(1023&r)+65536):(n.push(t),i--):n.push(t);return n}function x(e){return T(e,(function(e){var t=\"\";return e>65535&&(t+=_((e-=65536)>>>10&1023|55296),e=56320|1023&e),t+_(e)})).join(\"\")}function P(e,t){return e+22+75*(e<26)-((0!=t)<<5)}function M(e,t,r){var n=0;for(e=r?E(e/d):e>>1,e+=E(e/t);e>w*f>>1;n+=u)e=E(e/w);return E(n+(w+1)*e/(e+l))}function C(e){var t,r,n,i,o,s,l,d,b,m,g,v=[],w=e.length,_=0,T=p,B=h;for((r=e.lastIndexOf(y))<0&&(r=0),n=0;n<r;++n)e.charCodeAt(n)>=128&&S(\"not-basic\"),v.push(e.charCodeAt(n));for(i=r>0?r+1:0;i<w;){for(o=_,s=1,l=u;i>=w&&S(\"invalid-input\"),((d=(g=e.charCodeAt(i++))-48<10?g-22:g-65<26?g-65:g-97<26?g-97:u)>=u||d>E((a-_)/s))&&S(\"overflow\"),_+=d*s,!(d<(b=l<=B?c:l>=B+f?f:l-B));l+=u)s>E(a/(m=u-b))&&S(\"overflow\"),s*=m;B=M(_-o,t=v.length+1,0==o),E(_/t)>a-T&&S(\"overflow\"),T+=E(_/t),_%=t,v.splice(_++,0,T)}return x(v)}function O(e){var t,r,n,i,o,s,l,d,b,m,g,v,w,T,B,x=[];for(v=(e=A(e)).length,t=p,r=0,o=h,s=0;s<v;++s)(g=e[s])<128&&x.push(_(g));for(n=i=x.length,i&&x.push(y);n<v;){for(l=a,s=0;s<v;++s)(g=e[s])>=t&&g<l&&(l=g);for(l-t>E((a-r)/(w=n+1))&&S(\"overflow\"),r+=(l-t)*w,t=l,s=0;s<v;++s)if((g=e[s])<t&&++r>a&&S(\"overflow\"),g==t){for(d=r,b=u;!(d<(m=b<=o?c:b>=o+f?f:b-o));b+=u)B=d-m,T=u-m,x.push(_(P(m+B%T,0))),d=E(B/T);x.push(_(P(d,0))),o=M(r,w,n==i),r=0,++n}++r,++t}return x.join(\"\")}s={version:\"1.3.2\",ucs2:{decode:A,encode:x},decode:C,encode:O,toASCII:function(e){return B(e,(function(e){return m.test(e)?\"xn--\"+O(e):e}))},toUnicode:function(e){return B(e,(function(e){return b.test(e)?C(e.slice(4).toLowerCase()):e}))}},void 0===(n=function(){return s}.call(t,r,t,e))||(e.exports=n)}()},8575:(e,t,r)=>{\"use strict\";var n=r(2511),i=r(2502);function o(){this.protocol=null,this.slashes=null,this.auth=null,this.host=null,this.port=null,this.hostname=null,this.hash=null,this.search=null,this.query=null,this.pathname=null,this.path=null,this.href=null}t.parse=v,t.resolve=function(e,t){return v(e,!1,!0).resolve(t)},t.resolveObject=function(e,t){return e?v(e,!1,!0).resolveObject(t):t},t.format=function(e){return i.isString(e)&&(e=v(e)),e instanceof o?e.format():o.prototype.format.call(e)},t.Url=o;var s=/^([a-z0-9.+-]+:)/i,a=/:[0-9]*$/,u=/^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,c=[\"{\",\"}\",\"|\",\"\\\\\",\"^\",\"`\"].concat([\"<\",\">\",'\"',\"`\",\" \",\"\\r\",\"\\n\",\"\\t\"]),f=[\"'\"].concat(c),l=[\"%\",\"/\",\"?\",\";\",\"#\"].concat(f),d=[\"/\",\"?\",\"#\"],h=/^[+a-z0-9A-Z_-]{0,63}$/,p=/^([+a-z0-9A-Z_-]{0,63})(.*)$/,y={javascript:!0,\"javascript:\":!0},b={javascript:!0,\"javascript:\":!0},m={http:!0,https:!0,ftp:!0,gopher:!0,file:!0,\"http:\":!0,\"https:\":!0,\"ftp:\":!0,\"gopher:\":!0,\"file:\":!0},g=r(7673);function v(e,t,r){if(e&&i.isObject(e)&&e instanceof o)return e;var n=new o;return n.parse(e,t,r),n}o.prototype.parse=function(e,t,r){if(!i.isString(e))throw new TypeError(\"Parameter 'url' must be a string, not \"+typeof e);var o=e.indexOf(\"?\"),a=-1!==o&&o<e.indexOf(\"#\")?\"?\":\"#\",c=e.split(a);c[0]=c[0].replace(/\\\\/g,\"/\");var v=e=c.join(a);if(v=v.trim(),!r&&1===e.split(\"#\").length){var w=u.exec(v);if(w)return this.path=v,this.href=v,this.pathname=w[1],w[2]?(this.search=w[2],this.query=t?g.parse(this.search.substr(1)):this.search.substr(1)):t&&(this.search=\"\",this.query={}),this}var E=s.exec(v);if(E){var _=(E=E[0]).toLowerCase();this.protocol=_,v=v.substr(E.length)}if(r||E||v.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)){var S=\"//\"===v.substr(0,2);!S||E&&b[E]||(v=v.substr(2),this.slashes=!0)}if(!b[E]&&(S||E&&!m[E])){for(var T,B,A=-1,x=0;x<d.length;x++)-1!==(P=v.indexOf(d[x]))&&(-1===A||P<A)&&(A=P);for(-1!==(B=-1===A?v.lastIndexOf(\"@\"):v.lastIndexOf(\"@\",A))&&(T=v.slice(0,B),v=v.slice(B+1),this.auth=decodeURIComponent(T)),A=-1,x=0;x<l.length;x++){var P;-1!==(P=v.indexOf(l[x]))&&(-1===A||P<A)&&(A=P)}-1===A&&(A=v.length),this.host=v.slice(0,A),v=v.slice(A),this.parseHost(),this.hostname=this.hostname||\"\";var M=\"[\"===this.hostname[0]&&\"]\"===this.hostname[this.hostname.length-1];if(!M)for(var C=this.hostname.split(/\\./),O=(x=0,C.length);x<O;x++){var k=C[x];if(k&&!k.match(h)){for(var R=\"\",L=0,I=k.length;L<I;L++)k.charCodeAt(L)>127?R+=\"x\":R+=k[L];if(!R.match(h)){var N=C.slice(0,x),U=C.slice(x+1),j=k.match(p);j&&(N.push(j[1]),U.unshift(j[2])),U.length&&(v=\"/\"+U.join(\".\")+v),this.hostname=N.join(\".\");break}}}this.hostname.length>255?this.hostname=\"\":this.hostname=this.hostname.toLowerCase(),M||(this.hostname=n.toASCII(this.hostname));var H=this.port?\":\"+this.port:\"\",D=this.hostname||\"\";this.host=D+H,this.href+=this.host,M&&(this.hostname=this.hostname.substr(1,this.hostname.length-2),\"/\"!==v[0]&&(v=\"/\"+v))}if(!y[_])for(x=0,O=f.length;x<O;x++){var q=f[x];if(-1!==v.indexOf(q)){var K=encodeURIComponent(q);K===q&&(K=escape(q)),v=v.split(q).join(K)}}var z=v.indexOf(\"#\");-1!==z&&(this.hash=v.substr(z),v=v.slice(0,z));var F=v.indexOf(\"?\");if(-1!==F?(this.search=v.substr(F),this.query=v.substr(F+1),t&&(this.query=g.parse(this.query)),v=v.slice(0,F)):t&&(this.search=\"\",this.query={}),v&&(this.pathname=v),m[_]&&this.hostname&&!this.pathname&&(this.pathname=\"/\"),this.pathname||this.search){H=this.pathname||\"\";var V=this.search||\"\";this.path=H+V}return this.href=this.format(),this},o.prototype.format=function(){var e=this.auth||\"\";e&&(e=(e=encodeURIComponent(e)).replace(/%3A/i,\":\"),e+=\"@\");var t=this.protocol||\"\",r=this.pathname||\"\",n=this.hash||\"\",o=!1,s=\"\";this.host?o=e+this.host:this.hostname&&(o=e+(-1===this.hostname.indexOf(\":\")?this.hostname:\"[\"+this.hostname+\"]\"),this.port&&(o+=\":\"+this.port)),this.query&&i.isObject(this.query)&&Object.keys(this.query).length&&(s=g.stringify(this.query));var a=this.search||s&&\"?\"+s||\"\";return t&&\":\"!==t.substr(-1)&&(t+=\":\"),this.slashes||(!t||m[t])&&!1!==o?(o=\"//\"+(o||\"\"),r&&\"/\"!==r.charAt(0)&&(r=\"/\"+r)):o||(o=\"\"),n&&\"#\"!==n.charAt(0)&&(n=\"#\"+n),a&&\"?\"!==a.charAt(0)&&(a=\"?\"+a),t+o+(r=r.replace(/[?#]/g,(function(e){return encodeURIComponent(e)})))+(a=a.replace(\"#\",\"%23\"))+n},o.prototype.resolve=function(e){return this.resolveObject(v(e,!1,!0)).format()},o.prototype.resolveObject=function(e){if(i.isString(e)){var t=new o;t.parse(e,!1,!0),e=t}for(var r=new o,n=Object.keys(this),s=0;s<n.length;s++){var a=n[s];r[a]=this[a]}if(r.hash=e.hash,\"\"===e.href)return r.href=r.format(),r;if(e.slashes&&!e.protocol){for(var u=Object.keys(e),c=0;c<u.length;c++){var f=u[c];\"protocol\"!==f&&(r[f]=e[f])}return m[r.protocol]&&r.hostname&&!r.pathname&&(r.path=r.pathname=\"/\"),r.href=r.format(),r}if(e.protocol&&e.protocol!==r.protocol){if(!m[e.protocol]){for(var l=Object.keys(e),d=0;d<l.length;d++){var h=l[d];r[h]=e[h]}return r.href=r.format(),r}if(r.protocol=e.protocol,e.host||b[e.protocol])r.pathname=e.pathname;else{for(var p=(e.pathname||\"\").split(\"/\");p.length&&!(e.host=p.shift()););e.host||(e.host=\"\"),e.hostname||(e.hostname=\"\"),\"\"!==p[0]&&p.unshift(\"\"),p.length<2&&p.unshift(\"\"),r.pathname=p.join(\"/\")}if(r.search=e.search,r.query=e.query,r.host=e.host||\"\",r.auth=e.auth,r.hostname=e.hostname||e.host,r.port=e.port,r.pathname||r.search){var y=r.pathname||\"\",g=r.search||\"\";r.path=y+g}return r.slashes=r.slashes||e.slashes,r.href=r.format(),r}var v=r.pathname&&\"/\"===r.pathname.charAt(0),w=e.host||e.pathname&&\"/\"===e.pathname.charAt(0),E=w||v||r.host&&e.pathname,_=E,S=r.pathname&&r.pathname.split(\"/\")||[],T=(p=e.pathname&&e.pathname.split(\"/\")||[],r.protocol&&!m[r.protocol]);if(T&&(r.hostname=\"\",r.port=null,r.host&&(\"\"===S[0]?S[0]=r.host:S.unshift(r.host)),r.host=\"\",e.protocol&&(e.hostname=null,e.port=null,e.host&&(\"\"===p[0]?p[0]=e.host:p.unshift(e.host)),e.host=null),E=E&&(\"\"===p[0]||\"\"===S[0])),w)r.host=e.host||\"\"===e.host?e.host:r.host,r.hostname=e.hostname||\"\"===e.hostname?e.hostname:r.hostname,r.search=e.search,r.query=e.query,S=p;else if(p.length)S||(S=[]),S.pop(),S=S.concat(p),r.search=e.search,r.query=e.query;else if(!i.isNullOrUndefined(e.search))return T&&(r.hostname=r.host=S.shift(),(M=!!(r.host&&r.host.indexOf(\"@\")>0)&&r.host.split(\"@\"))&&(r.auth=M.shift(),r.host=r.hostname=M.shift())),r.search=e.search,r.query=e.query,i.isNull(r.pathname)&&i.isNull(r.search)||(r.path=(r.pathname?r.pathname:\"\")+(r.search?r.search:\"\")),r.href=r.format(),r;if(!S.length)return r.pathname=null,r.search?r.path=\"/\"+r.search:r.path=null,r.href=r.format(),r;for(var B=S.slice(-1)[0],A=(r.host||e.host||S.length>1)&&(\".\"===B||\"..\"===B)||\"\"===B,x=0,P=S.length;P>=0;P--)\".\"===(B=S[P])?S.splice(P,1):\"..\"===B?(S.splice(P,1),x++):x&&(S.splice(P,1),x--);if(!E&&!_)for(;x--;x)S.unshift(\"..\");!E||\"\"===S[0]||S[0]&&\"/\"===S[0].charAt(0)||S.unshift(\"\"),A&&\"/\"!==S.join(\"/\").substr(-1)&&S.push(\"\");var M,C=\"\"===S[0]||S[0]&&\"/\"===S[0].charAt(0);return T&&(r.hostname=r.host=C?\"\":S.length?S.shift():\"\",(M=!!(r.host&&r.host.indexOf(\"@\")>0)&&r.host.split(\"@\"))&&(r.auth=M.shift(),r.host=r.hostname=M.shift())),(E=E||r.host&&S.length)&&!C&&S.unshift(\"\"),S.length?r.pathname=S.join(\"/\"):(r.pathname=null,r.path=null),i.isNull(r.pathname)&&i.isNull(r.search)||(r.path=(r.pathname?r.pathname:\"\")+(r.search?r.search:\"\")),r.auth=e.auth||r.auth,r.slashes=r.slashes||e.slashes,r.href=r.format(),r},o.prototype.parseHost=function(){var e=this.host,t=a.exec(e);t&&(\":\"!==(t=t[0])&&(this.port=t.substr(1)),e=e.substr(0,e.length-t.length)),e&&(this.hostname=e)}},2502:e=>{\"use strict\";e.exports={isString:function(e){return\"string\"==typeof e},isObject:function(e){return\"object\"==typeof e&&null!==e},isNull:function(e){return null===e},isNullOrUndefined:function(e){return null==e}}},7781:(e,t,r)=>{function n(e){try{if(!r.g.localStorage)return!1}catch(e){return!1}var t=r.g.localStorage[e];return null!=t&&\"true\"===String(t).toLowerCase()}e.exports=function(e,t){if(n(\"noDeprecation\"))return e;var r=!1;return function(){if(!r){if(n(\"throwDeprecation\"))throw new Error(t);n(\"traceDeprecation\")?console.trace(t):console.warn(t),r=!0}return e.apply(this,arguments)}}},7147:(e,t,r)=>{\"use strict\";r.r(t),r.d(t,{DOMException:()=>E,Headers:()=>f,Request:()=>m,Response:()=>v,fetch:()=>_});var n=\"undefined\"!=typeof globalThis&&globalThis||\"undefined\"!=typeof self&&self||void 0!==n&&n,i={searchParams:\"URLSearchParams\"in n,iterable:\"Symbol\"in n&&\"iterator\"in Symbol,blob:\"FileReader\"in n&&\"Blob\"in n&&function(){try{return new Blob,!0}catch(e){return!1}}(),formData:\"FormData\"in n,arrayBuffer:\"ArrayBuffer\"in n};if(i.arrayBuffer)var o=[\"[object Int8Array]\",\"[object Uint8Array]\",\"[object Uint8ClampedArray]\",\"[object Int16Array]\",\"[object Uint16Array]\",\"[object Int32Array]\",\"[object Uint32Array]\",\"[object Float32Array]\",\"[object Float64Array]\"],s=ArrayBuffer.isView||function(e){return e&&o.indexOf(Object.prototype.toString.call(e))>-1};function a(e){if(\"string\"!=typeof e&&(e=String(e)),/[^a-z0-9\\-#$%&'*+.^_`|~!]/i.test(e)||\"\"===e)throw new TypeError('Invalid character in header field name: \"'+e+'\"');return e.toLowerCase()}function u(e){return\"string\"!=typeof e&&(e=String(e)),e}function c(e){var t={next:function(){var t=e.shift();return{done:void 0===t,value:t}}};return i.iterable&&(t[Symbol.iterator]=function(){return t}),t}function f(e){this.map={},e instanceof f?e.forEach((function(e,t){this.append(t,e)}),this):Array.isArray(e)?e.forEach((function(e){this.append(e[0],e[1])}),this):e&&Object.getOwnPropertyNames(e).forEach((function(t){this.append(t,e[t])}),this)}function l(e){if(e.bodyUsed)return Promise.reject(new TypeError(\"Already read\"));e.bodyUsed=!0}function d(e){return new Promise((function(t,r){e.onload=function(){t(e.result)},e.onerror=function(){r(e.error)}}))}function h(e){var t=new FileReader,r=d(t);return t.readAsArrayBuffer(e),r}function p(e){if(e.slice)return e.slice(0);var t=new Uint8Array(e.byteLength);return t.set(new Uint8Array(e)),t.buffer}function y(){return this.bodyUsed=!1,this._initBody=function(e){var t;this.bodyUsed=this.bodyUsed,this._bodyInit=e,e?\"string\"==typeof e?this._bodyText=e:i.blob&&Blob.prototype.isPrototypeOf(e)?this._bodyBlob=e:i.formData&&FormData.prototype.isPrototypeOf(e)?this._bodyFormData=e:i.searchParams&&URLSearchParams.prototype.isPrototypeOf(e)?this._bodyText=e.toString():i.arrayBuffer&&i.blob&&(t=e)&&DataView.prototype.isPrototypeOf(t)?(this._bodyArrayBuffer=p(e.buffer),this._bodyInit=new Blob([this._bodyArrayBuffer])):i.arrayBuffer&&(ArrayBuffer.prototype.isPrototypeOf(e)||s(e))?this._bodyArrayBuffer=p(e):this._bodyText=e=Object.prototype.toString.call(e):this._bodyText=\"\",this.headers.get(\"content-type\")||(\"string\"==typeof e?this.headers.set(\"content-type\",\"text/plain;charset=UTF-8\"):this._bodyBlob&&this._bodyBlob.type?this.headers.set(\"content-type\",this._bodyBlob.type):i.searchParams&&URLSearchParams.prototype.isPrototypeOf(e)&&this.headers.set(\"content-type\",\"application/x-www-form-urlencoded;charset=UTF-8\"))},i.blob&&(this.blob=function(){var e=l(this);if(e)return e;if(this._bodyBlob)return Promise.resolve(this._bodyBlob);if(this._bodyArrayBuffer)return Promise.resolve(new Blob([this._bodyArrayBuffer]));if(this._bodyFormData)throw new Error(\"could not read FormData body as blob\");return Promise.resolve(new Blob([this._bodyText]))},this.arrayBuffer=function(){return this._bodyArrayBuffer?l(this)||(ArrayBuffer.isView(this._bodyArrayBuffer)?Promise.resolve(this._bodyArrayBuffer.buffer.slice(this._bodyArrayBuffer.byteOffset,this._bodyArrayBuffer.byteOffset+this._bodyArrayBuffer.byteLength)):Promise.resolve(this._bodyArrayBuffer)):this.blob().then(h)}),this.text=function(){var e,t,r,n=l(this);if(n)return n;if(this._bodyBlob)return e=this._bodyBlob,r=d(t=new FileReader),t.readAsText(e),r;if(this._bodyArrayBuffer)return Promise.resolve(function(e){for(var t=new Uint8Array(e),r=new Array(t.length),n=0;n<t.length;n++)r[n]=String.fromCharCode(t[n]);return r.join(\"\")}(this._bodyArrayBuffer));if(this._bodyFormData)throw new Error(\"could not read FormData body as text\");return Promise.resolve(this._bodyText)},i.formData&&(this.formData=function(){return this.text().then(g)}),this.json=function(){return this.text().then(JSON.parse)},this}f.prototype.append=function(e,t){e=a(e),t=u(t);var r=this.map[e];this.map[e]=r?r+\", \"+t:t},f.prototype.delete=function(e){delete this.map[a(e)]},f.prototype.get=function(e){return e=a(e),this.has(e)?this.map[e]:null},f.prototype.has=function(e){return this.map.hasOwnProperty(a(e))},f.prototype.set=function(e,t){this.map[a(e)]=u(t)},f.prototype.forEach=function(e,t){for(var r in this.map)this.map.hasOwnProperty(r)&&e.call(t,this.map[r],r,this)},f.prototype.keys=function(){var e=[];return this.forEach((function(t,r){e.push(r)})),c(e)},f.prototype.values=function(){var e=[];return this.forEach((function(t){e.push(t)})),c(e)},f.prototype.entries=function(){var e=[];return this.forEach((function(t,r){e.push([r,t])})),c(e)},i.iterable&&(f.prototype[Symbol.iterator]=f.prototype.entries);var b=[\"DELETE\",\"GET\",\"HEAD\",\"OPTIONS\",\"POST\",\"PUT\"];function m(e,t){if(!(this instanceof m))throw new TypeError('Please use the \"new\" operator, this DOM object constructor cannot be called as a function.');var r,n,i=(t=t||{}).body;if(e instanceof m){if(e.bodyUsed)throw new TypeError(\"Already read\");this.url=e.url,this.credentials=e.credentials,t.headers||(this.headers=new f(e.headers)),this.method=e.method,this.mode=e.mode,this.signal=e.signal,i||null==e._bodyInit||(i=e._bodyInit,e.bodyUsed=!0)}else this.url=String(e);if(this.credentials=t.credentials||this.credentials||\"same-origin\",!t.headers&&this.headers||(this.headers=new f(t.headers)),this.method=(n=(r=t.method||this.method||\"GET\").toUpperCase(),b.indexOf(n)>-1?n:r),this.mode=t.mode||this.mode||null,this.signal=t.signal||this.signal,this.referrer=null,(\"GET\"===this.method||\"HEAD\"===this.method)&&i)throw new TypeError(\"Body not allowed for GET or HEAD requests\");if(this._initBody(i),!(\"GET\"!==this.method&&\"HEAD\"!==this.method||\"no-store\"!==t.cache&&\"no-cache\"!==t.cache)){var o=/([?&])_=[^&]*/;o.test(this.url)?this.url=this.url.replace(o,\"$1_=\"+(new Date).getTime()):this.url+=(/\\?/.test(this.url)?\"&\":\"?\")+\"_=\"+(new Date).getTime()}}function g(e){var t=new FormData;return e.trim().split(\"&\").forEach((function(e){if(e){var r=e.split(\"=\"),n=r.shift().replace(/\\+/g,\" \"),i=r.join(\"=\").replace(/\\+/g,\" \");t.append(decodeURIComponent(n),decodeURIComponent(i))}})),t}function v(e,t){if(!(this instanceof v))throw new TypeError('Please use the \"new\" operator, this DOM object constructor cannot be called as a function.');t||(t={}),this.type=\"default\",this.status=void 0===t.status?200:t.status,this.ok=this.status>=200&&this.status<300,this.statusText=void 0===t.statusText?\"\":\"\"+t.statusText,this.headers=new f(t.headers),this.url=t.url||\"\",this._initBody(e)}m.prototype.clone=function(){return new m(this,{body:this._bodyInit})},y.call(m.prototype),y.call(v.prototype),v.prototype.clone=function(){return new v(this._bodyInit,{status:this.status,statusText:this.statusText,headers:new f(this.headers),url:this.url})},v.error=function(){var e=new v(null,{status:0,statusText:\"\"});return e.type=\"error\",e};var w=[301,302,303,307,308];v.redirect=function(e,t){if(-1===w.indexOf(t))throw new RangeError(\"Invalid status code\");return new v(null,{status:t,headers:{location:e}})};var E=n.DOMException;try{new E}catch(e){(E=function(e,t){this.message=e,this.name=t;var r=Error(e);this.stack=r.stack}).prototype=Object.create(Error.prototype),E.prototype.constructor=E}function _(e,t){return new Promise((function(r,o){var s=new m(e,t);if(s.signal&&s.signal.aborted)return o(new E(\"Aborted\",\"AbortError\"));var a=new XMLHttpRequest;function c(){a.abort()}a.onload=function(){var e,t,n={status:a.status,statusText:a.statusText,headers:(e=a.getAllResponseHeaders()||\"\",t=new f,e.replace(/\\r?\\n[\\t ]+/g,\" \").split(\"\\r\").map((function(e){return 0===e.indexOf(\"\\n\")?e.substr(1,e.length):e})).forEach((function(e){var r=e.split(\":\"),n=r.shift().trim();if(n){var i=r.join(\":\").trim();t.append(n,i)}})),t)};n.url=\"responseURL\"in a?a.responseURL:n.headers.get(\"X-Request-URL\");var i=\"response\"in a?a.response:a.responseText;setTimeout((function(){r(new v(i,n))}),0)},a.onerror=function(){setTimeout((function(){o(new TypeError(\"Network request failed\"))}),0)},a.ontimeout=function(){setTimeout((function(){o(new TypeError(\"Network request failed\"))}),0)},a.onabort=function(){setTimeout((function(){o(new E(\"Aborted\",\"AbortError\"))}),0)},a.open(s.method,function(e){try{return\"\"===e&&n.location.href?n.location.href:e}catch(t){return e}}(s.url),!0),\"include\"===s.credentials?a.withCredentials=!0:\"omit\"===s.credentials&&(a.withCredentials=!1),\"responseType\"in a&&(i.blob?a.responseType=\"blob\":i.arrayBuffer&&s.headers.get(\"Content-Type\")&&-1!==s.headers.get(\"Content-Type\").indexOf(\"application/octet-stream\")&&(a.responseType=\"arraybuffer\")),!t||\"object\"!=typeof t.headers||t.headers instanceof f?s.headers.forEach((function(e,t){a.setRequestHeader(t,e)})):Object.getOwnPropertyNames(t.headers).forEach((function(e){a.setRequestHeader(e,u(t.headers[e]))})),s.signal&&(s.signal.addEventListener(\"abort\",c),a.onreadystatechange=function(){4===a.readyState&&s.signal.removeEventListener(\"abort\",c)}),a.send(void 0===s._bodyInit?null:s._bodyInit)}))}_.polyfill=!0,n.fetch||(n.fetch=_,n.Headers=f,n.Request=m,n.Response=v)},7529:e=>{e.exports=function(){for(var e={},r=0;r<arguments.length;r++){var n=arguments[r];for(var i in n)t.call(n,i)&&(e[i]=n[i])}return e};var t=Object.prototype.hasOwnProperty},3094:()=>{},9159:()=>{},6601:()=>{},9214:()=>{},2361:()=>{},4616:()=>{},2349:()=>{},8597:e=>{\"use strict\";e.exports={i8:\"6.5.4\"}}},t={};function r(n){var i=t[n];if(void 0!==i)return i.exports;var o=t[n]={id:n,loaded:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.loaded=!0,o.exports}return r.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return r.d(t,{a:t}),t},r.d=(e,t)=>{for(var n in t)r.o(t,n)&&!r.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},r.g=function(){if(\"object\"==typeof globalThis)return globalThis;try{return this||new Function(\"return this\")()}catch(e){if(\"object\"==typeof window)return window}}(),r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r.r=e=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},r.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),r(7108)})()));\n//# sourceMappingURL=lib.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/casper-js-sdk/dist/lib.js\n"));

/***/ }),

/***/ "./node_modules/eventemitter3/index.js":
/*!*********************************************!*\
  !*** ./node_modules/eventemitter3/index.js ***!
  \*********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif (true) {\n  module.exports = EventEmitter;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/eventemitter3/index.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[11].oneOf[14].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[11].oneOf[14].use[2]!./pages/globals.css":
/*!***********************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[11].oneOf[14].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[11].oneOf[14].use[2]!./pages/globals.css ***!
  \***********************************************************************************************************************************************************************************************************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js\");\n/* harmony import */ var _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);\n// Imports\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(true);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/*\\n! tailwindcss v3.4.0 | MIT License | https://tailwindcss.com\\n*//*\\n1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)\\n2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)\\n*/\\n\\n*,\\n::before,\\n::after {\\n  box-sizing: border-box; /* 1 */\\n  border-width: 0; /* 2 */\\n  border-style: solid; /* 2 */\\n  border-color: #e5e7eb; /* 2 */\\n}\\n\\n::before,\\n::after {\\n  --tw-content: '';\\n}\\n\\n/*\\n1. Use a consistent sensible line-height in all browsers.\\n2. Prevent adjustments of font size after orientation changes in iOS.\\n3. Use a more readable tab size.\\n4. Use the user's configured `sans` font-family by default.\\n5. Use the user's configured `sans` font-feature-settings by default.\\n6. Use the user's configured `sans` font-variation-settings by default.\\n7. Disable tap highlights on iOS\\n*/\\n\\nhtml,\\n:host {\\n  line-height: 1.5; /* 1 */\\n  -webkit-text-size-adjust: 100%; /* 2 */\\n  -moz-tab-size: 4; /* 3 */\\n  -o-tab-size: 4;\\n     tab-size: 4; /* 3 */\\n  font-family: ui-sans-serif, system-ui, sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\", \\\"Noto Color Emoji\\\"; /* 4 */\\n  font-feature-settings: normal; /* 5 */\\n  font-variation-settings: normal; /* 6 */\\n  -webkit-tap-highlight-color: transparent; /* 7 */\\n}\\n\\n/*\\n1. Remove the margin in all browsers.\\n2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.\\n*/\\n\\nbody {\\n  margin: 0; /* 1 */\\n  line-height: inherit; /* 2 */\\n}\\n\\n/*\\n1. Add the correct height in Firefox.\\n2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)\\n3. Ensure horizontal rules are visible by default.\\n*/\\n\\nhr {\\n  height: 0; /* 1 */\\n  color: inherit; /* 2 */\\n  border-top-width: 1px; /* 3 */\\n}\\n\\n/*\\nAdd the correct text decoration in Chrome, Edge, and Safari.\\n*/\\n\\nabbr:where([title]) {\\n  -webkit-text-decoration: underline dotted;\\n          text-decoration: underline dotted;\\n}\\n\\n/*\\nRemove the default font size and weight for headings.\\n*/\\n\\nh1,\\nh2,\\nh3,\\nh4,\\nh5,\\nh6 {\\n  font-size: inherit;\\n  font-weight: inherit;\\n}\\n\\n/*\\nReset links to optimize for opt-in styling instead of opt-out.\\n*/\\n\\na {\\n  color: inherit;\\n  text-decoration: inherit;\\n}\\n\\n/*\\nAdd the correct font weight in Edge and Safari.\\n*/\\n\\nb,\\nstrong {\\n  font-weight: bolder;\\n}\\n\\n/*\\n1. Use the user's configured `mono` font-family by default.\\n2. Use the user's configured `mono` font-feature-settings by default.\\n3. Use the user's configured `mono` font-variation-settings by default.\\n4. Correct the odd `em` font sizing in all browsers.\\n*/\\n\\ncode,\\nkbd,\\nsamp,\\npre {\\n  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, \\\"Liberation Mono\\\", \\\"Courier New\\\", monospace; /* 1 */\\n  font-feature-settings: normal; /* 2 */\\n  font-variation-settings: normal; /* 3 */\\n  font-size: 1em; /* 4 */\\n}\\n\\n/*\\nAdd the correct font size in all browsers.\\n*/\\n\\nsmall {\\n  font-size: 80%;\\n}\\n\\n/*\\nPrevent `sub` and `sup` elements from affecting the line height in all browsers.\\n*/\\n\\nsub,\\nsup {\\n  font-size: 75%;\\n  line-height: 0;\\n  position: relative;\\n  vertical-align: baseline;\\n}\\n\\nsub {\\n  bottom: -0.25em;\\n}\\n\\nsup {\\n  top: -0.5em;\\n}\\n\\n/*\\n1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)\\n2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)\\n3. Remove gaps between table borders by default.\\n*/\\n\\ntable {\\n  text-indent: 0; /* 1 */\\n  border-color: inherit; /* 2 */\\n  border-collapse: collapse; /* 3 */\\n}\\n\\n/*\\n1. Change the font styles in all browsers.\\n2. Remove the margin in Firefox and Safari.\\n3. Remove default padding in all browsers.\\n*/\\n\\nbutton,\\ninput,\\noptgroup,\\nselect,\\ntextarea {\\n  font-family: inherit; /* 1 */\\n  font-feature-settings: inherit; /* 1 */\\n  font-variation-settings: inherit; /* 1 */\\n  font-size: 100%; /* 1 */\\n  font-weight: inherit; /* 1 */\\n  line-height: inherit; /* 1 */\\n  color: inherit; /* 1 */\\n  margin: 0; /* 2 */\\n  padding: 0; /* 3 */\\n}\\n\\n/*\\nRemove the inheritance of text transform in Edge and Firefox.\\n*/\\n\\nbutton,\\nselect {\\n  text-transform: none;\\n}\\n\\n/*\\n1. Correct the inability to style clickable types in iOS and Safari.\\n2. Remove default button styles.\\n*/\\n\\nbutton,\\n[type='button'],\\n[type='reset'],\\n[type='submit'] {\\n  -webkit-appearance: button; /* 1 */\\n  background-color: transparent; /* 2 */\\n  background-image: none; /* 2 */\\n}\\n\\n/*\\nUse the modern Firefox focus style for all focusable elements.\\n*/\\n\\n:-moz-focusring {\\n  outline: auto;\\n}\\n\\n/*\\nRemove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)\\n*/\\n\\n:-moz-ui-invalid {\\n  box-shadow: none;\\n}\\n\\n/*\\nAdd the correct vertical alignment in Chrome and Firefox.\\n*/\\n\\nprogress {\\n  vertical-align: baseline;\\n}\\n\\n/*\\nCorrect the cursor style of increment and decrement buttons in Safari.\\n*/\\n\\n::-webkit-inner-spin-button,\\n::-webkit-outer-spin-button {\\n  height: auto;\\n}\\n\\n/*\\n1. Correct the odd appearance in Chrome and Safari.\\n2. Correct the outline style in Safari.\\n*/\\n\\n[type='search'] {\\n  -webkit-appearance: textfield; /* 1 */\\n  outline-offset: -2px; /* 2 */\\n}\\n\\n/*\\nRemove the inner padding in Chrome and Safari on macOS.\\n*/\\n\\n::-webkit-search-decoration {\\n  -webkit-appearance: none;\\n}\\n\\n/*\\n1. Correct the inability to style clickable types in iOS and Safari.\\n2. Change font properties to `inherit` in Safari.\\n*/\\n\\n::-webkit-file-upload-button {\\n  -webkit-appearance: button; /* 1 */\\n  font: inherit; /* 2 */\\n}\\n\\n/*\\nAdd the correct display in Chrome and Safari.\\n*/\\n\\nsummary {\\n  display: list-item;\\n}\\n\\n/*\\nRemoves the default spacing and border for appropriate elements.\\n*/\\n\\nblockquote,\\ndl,\\ndd,\\nh1,\\nh2,\\nh3,\\nh4,\\nh5,\\nh6,\\nhr,\\nfigure,\\np,\\npre {\\n  margin: 0;\\n}\\n\\nfieldset {\\n  margin: 0;\\n  padding: 0;\\n}\\n\\nlegend {\\n  padding: 0;\\n}\\n\\nol,\\nul,\\nmenu {\\n  list-style: none;\\n  margin: 0;\\n  padding: 0;\\n}\\n\\n/*\\nReset default styling for dialogs.\\n*/\\ndialog {\\n  padding: 0;\\n}\\n\\n/*\\nPrevent resizing textareas horizontally by default.\\n*/\\n\\ntextarea {\\n  resize: vertical;\\n}\\n\\n/*\\n1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)\\n2. Set the default placeholder color to the user's configured gray 400 color.\\n*/\\n\\ninput::-moz-placeholder, textarea::-moz-placeholder {\\n  opacity: 1; /* 1 */\\n  color: #9ca3af; /* 2 */\\n}\\n\\ninput::placeholder,\\ntextarea::placeholder {\\n  opacity: 1; /* 1 */\\n  color: #9ca3af; /* 2 */\\n}\\n\\n/*\\nSet the default cursor for buttons.\\n*/\\n\\nbutton,\\n[role=\\\"button\\\"] {\\n  cursor: pointer;\\n}\\n\\n/*\\nMake sure disabled buttons don't get the pointer cursor.\\n*/\\n:disabled {\\n  cursor: default;\\n}\\n\\n/*\\n1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)\\n2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)\\n   This can trigger a poorly considered lint error in some tools but is included by design.\\n*/\\n\\nimg,\\nsvg,\\nvideo,\\ncanvas,\\naudio,\\niframe,\\nembed,\\nobject {\\n  display: block; /* 1 */\\n  vertical-align: middle; /* 2 */\\n}\\n\\n/*\\nConstrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)\\n*/\\n\\nimg,\\nvideo {\\n  max-width: 100%;\\n  height: auto;\\n}\\n\\n/* Make elements with the HTML hidden attribute stay hidden by default */\\n[hidden] {\\n  display: none;\\n}\\n\\n*, ::before, ::after {\\n  --tw-border-spacing-x: 0;\\n  --tw-border-spacing-y: 0;\\n  --tw-translate-x: 0;\\n  --tw-translate-y: 0;\\n  --tw-rotate: 0;\\n  --tw-skew-x: 0;\\n  --tw-skew-y: 0;\\n  --tw-scale-x: 1;\\n  --tw-scale-y: 1;\\n  --tw-pan-x:  ;\\n  --tw-pan-y:  ;\\n  --tw-pinch-zoom:  ;\\n  --tw-scroll-snap-strictness: proximity;\\n  --tw-gradient-from-position:  ;\\n  --tw-gradient-via-position:  ;\\n  --tw-gradient-to-position:  ;\\n  --tw-ordinal:  ;\\n  --tw-slashed-zero:  ;\\n  --tw-numeric-figure:  ;\\n  --tw-numeric-spacing:  ;\\n  --tw-numeric-fraction:  ;\\n  --tw-ring-inset:  ;\\n  --tw-ring-offset-width: 0px;\\n  --tw-ring-offset-color: #fff;\\n  --tw-ring-color: rgb(59 130 246 / 0.5);\\n  --tw-ring-offset-shadow: 0 0 #0000;\\n  --tw-ring-shadow: 0 0 #0000;\\n  --tw-shadow: 0 0 #0000;\\n  --tw-shadow-colored: 0 0 #0000;\\n  --tw-blur:  ;\\n  --tw-brightness:  ;\\n  --tw-contrast:  ;\\n  --tw-grayscale:  ;\\n  --tw-hue-rotate:  ;\\n  --tw-invert:  ;\\n  --tw-saturate:  ;\\n  --tw-sepia:  ;\\n  --tw-drop-shadow:  ;\\n  --tw-backdrop-blur:  ;\\n  --tw-backdrop-brightness:  ;\\n  --tw-backdrop-contrast:  ;\\n  --tw-backdrop-grayscale:  ;\\n  --tw-backdrop-hue-rotate:  ;\\n  --tw-backdrop-invert:  ;\\n  --tw-backdrop-opacity:  ;\\n  --tw-backdrop-saturate:  ;\\n  --tw-backdrop-sepia:  ;\\n}\\n\\n::backdrop {\\n  --tw-border-spacing-x: 0;\\n  --tw-border-spacing-y: 0;\\n  --tw-translate-x: 0;\\n  --tw-translate-y: 0;\\n  --tw-rotate: 0;\\n  --tw-skew-x: 0;\\n  --tw-skew-y: 0;\\n  --tw-scale-x: 1;\\n  --tw-scale-y: 1;\\n  --tw-pan-x:  ;\\n  --tw-pan-y:  ;\\n  --tw-pinch-zoom:  ;\\n  --tw-scroll-snap-strictness: proximity;\\n  --tw-gradient-from-position:  ;\\n  --tw-gradient-via-position:  ;\\n  --tw-gradient-to-position:  ;\\n  --tw-ordinal:  ;\\n  --tw-slashed-zero:  ;\\n  --tw-numeric-figure:  ;\\n  --tw-numeric-spacing:  ;\\n  --tw-numeric-fraction:  ;\\n  --tw-ring-inset:  ;\\n  --tw-ring-offset-width: 0px;\\n  --tw-ring-offset-color: #fff;\\n  --tw-ring-color: rgb(59 130 246 / 0.5);\\n  --tw-ring-offset-shadow: 0 0 #0000;\\n  --tw-ring-shadow: 0 0 #0000;\\n  --tw-shadow: 0 0 #0000;\\n  --tw-shadow-colored: 0 0 #0000;\\n  --tw-blur:  ;\\n  --tw-brightness:  ;\\n  --tw-contrast:  ;\\n  --tw-grayscale:  ;\\n  --tw-hue-rotate:  ;\\n  --tw-invert:  ;\\n  --tw-saturate:  ;\\n  --tw-sepia:  ;\\n  --tw-drop-shadow:  ;\\n  --tw-backdrop-blur:  ;\\n  --tw-backdrop-brightness:  ;\\n  --tw-backdrop-contrast:  ;\\n  --tw-backdrop-grayscale:  ;\\n  --tw-backdrop-hue-rotate:  ;\\n  --tw-backdrop-invert:  ;\\n  --tw-backdrop-opacity:  ;\\n  --tw-backdrop-saturate:  ;\\n  --tw-backdrop-sepia:  ;\\n}\\n.fixed {\\n  position: fixed;\\n}\\n.top-0 {\\n  top: 0px;\\n}\\n.ml-2 {\\n  margin-left: 0.5rem;\\n}\\n.ml-auto {\\n  margin-left: auto;\\n}\\n.mr-10 {\\n  margin-right: 2.5rem;\\n}\\n.mr-2 {\\n  margin-right: 0.5rem;\\n}\\n.mr-auto {\\n  margin-right: auto;\\n}\\n.mt-2 {\\n  margin-top: 0.5rem;\\n}\\n.mt-4 {\\n  margin-top: 1rem;\\n}\\n.inline-block {\\n  display: inline-block;\\n}\\n.flex {\\n  display: flex;\\n}\\n.grid {\\n  display: grid;\\n}\\n.h-16 {\\n  height: 4rem;\\n}\\n.h-20 {\\n  height: 5rem;\\n}\\n.min-h-screen {\\n  min-height: 100vh;\\n}\\n.w-3\\\\/4 {\\n  width: 75%;\\n}\\n.w-\\\\[100vw\\\\] {\\n  width: 100vw;\\n}\\n.w-full {\\n  width: 100%;\\n}\\n.grow {\\n  flex-grow: 1;\\n}\\n.cursor-pointer {\\n  cursor: pointer;\\n}\\n.grid-cols-1 {\\n  grid-template-columns: repeat(1, minmax(0, 1fr));\\n}\\n.flex-col {\\n  flex-direction: column;\\n}\\n.items-center {\\n  align-items: center;\\n}\\n.justify-end {\\n  justify-content: flex-end;\\n}\\n.justify-between {\\n  justify-content: space-between;\\n}\\n.gap-2 {\\n  gap: 0.5rem;\\n}\\n.gap-4 {\\n  gap: 1rem;\\n}\\n.self-end {\\n  align-self: flex-end;\\n}\\n.rounded {\\n  border-radius: 0.25rem;\\n}\\n.rounded-full {\\n  border-radius: 9999px;\\n}\\n.bg-\\\\[\\\\#0a0b0b\\\\] {\\n  --tw-bg-opacity: 1;\\n  background-color: rgb(10 11 11 / var(--tw-bg-opacity));\\n}\\n.bg-red-500 {\\n  --tw-bg-opacity: 1;\\n  background-color: rgb(239 68 68 / var(--tw-bg-opacity));\\n}\\n.bg-slate-800 {\\n  --tw-bg-opacity: 1;\\n  background-color: rgb(30 41 59 / var(--tw-bg-opacity));\\n}\\n.bg-gradient-to-r {\\n  background-image: linear-gradient(to right, var(--tw-gradient-stops));\\n}\\n.from-pink-500 {\\n  --tw-gradient-from: #ec4899 var(--tw-gradient-from-position);\\n  --tw-gradient-to: rgb(236 72 153 / 0) var(--tw-gradient-to-position);\\n  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\\n}\\n.via-green-400 {\\n  --tw-gradient-to: rgb(74 222 128 / 0)  var(--tw-gradient-to-position);\\n  --tw-gradient-stops: var(--tw-gradient-from), #4ade80 var(--tw-gradient-via-position), var(--tw-gradient-to);\\n}\\n.to-yellow-400 {\\n  --tw-gradient-to: #facc15 var(--tw-gradient-to-position);\\n}\\n.bg-clip-text {\\n  -webkit-background-clip: text;\\n          background-clip: text;\\n}\\n.object-cover {\\n  -o-object-fit: cover;\\n     object-fit: cover;\\n}\\n.p-24 {\\n  padding: 6rem;\\n}\\n.px-10 {\\n  padding-left: 2.5rem;\\n  padding-right: 2.5rem;\\n}\\n.py-2 {\\n  padding-top: 0.5rem;\\n  padding-bottom: 0.5rem;\\n}\\n.\\\\!font-sans {\\n  font-family: ui-sans-serif, system-ui, sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\", \\\"Noto Color Emoji\\\" !important;\\n}\\n.font-sans {\\n  font-family: ui-sans-serif, system-ui, sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\", \\\"Noto Color Emoji\\\";\\n}\\n.text-2xl {\\n  font-size: 1.5rem;\\n  line-height: 2rem;\\n}\\n.font-bold {\\n  font-weight: 700;\\n}\\n.font-semibold {\\n  font-weight: 600;\\n}\\n.italic {\\n  font-style: italic;\\n}\\n.\\\\!text-gray-500 {\\n  --tw-text-opacity: 1 !important;\\n  color: rgb(107 114 128 / var(--tw-text-opacity)) !important;\\n}\\n.text-blue-400 {\\n  --tw-text-opacity: 1;\\n  color: rgb(96 165 250 / var(--tw-text-opacity));\\n}\\n.text-gray-500 {\\n  --tw-text-opacity: 1;\\n  color: rgb(107 114 128 / var(--tw-text-opacity));\\n}\\n.text-transparent {\\n  color: transparent;\\n}\\n.underline {\\n  text-decoration-line: underline;\\n}\\n.opacity-90 {\\n  opacity: 0.9;\\n}\\n.shadow-lg {\\n  --tw-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);\\n  --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);\\n  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);\\n}\\n.drop-shadow-lg {\\n  --tw-drop-shadow: drop-shadow(0 10px 8px rgb(0 0 0 / 0.04)) drop-shadow(0 4px 3px rgb(0 0 0 / 0.1));\\n  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);\\n}\\n\\n:root {\\n  --foreground-rgb: 0, 0, 0;\\n  --background-start-rgb: 214, 219, 220;\\n  --background-end-rgb: 255, 255, 255;\\n}\\n\\n@media (prefers-color-scheme: dark) {\\n  :root {\\n    --foreground-rgb: 255, 255, 255;\\n    --background-start-rgb: 0, 0, 0;\\n    --background-end-rgb: 0, 0, 0;\\n  }\\n}\\n\\n/* @font-face {\\n  font-family: 'SuperMario256';\\n  src: URL('/fonts/SuperMario256.ttf') format('truetype');\\n} */\\n\\n* {\\n  font-family: var(--my-font) !important;\\n}\\n\\nbody {\\n  color: rgb(var(--foreground-rgb));\\n  font-family: var(--my-font) !important;\\n}\\n\\n@media (min-width: 768px) {\\n\\n  .md\\\\:grid-cols-2 {\\n    grid-template-columns: repeat(2, minmax(0, 1fr));\\n  }\\n}\\n\\n@media (min-width: 1024px) {\\n\\n  .lg\\\\:grid-cols-3 {\\n    grid-template-columns: repeat(3, minmax(0, 1fr));\\n  }\\n}\\n\\n@media (min-width: 1280px) {\\n\\n  .xl\\\\:grid-cols-4 {\\n    grid-template-columns: repeat(4, minmax(0, 1fr));\\n  }\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://pages/globals.css\"],\"names\":[],\"mappings\":\"AAAA;;CAA0B,CAA1B;;;CAA0B;;AAA1B;;;EAAA,sBAA0B,EAA1B,MAA0B;EAA1B,eAA0B,EAA1B,MAA0B;EAA1B,mBAA0B,EAA1B,MAA0B;EAA1B,qBAA0B,EAA1B,MAA0B;AAAA;;AAA1B;;EAAA,gBAA0B;AAAA;;AAA1B;;;;;;;;CAA0B;;AAA1B;;EAAA,gBAA0B,EAA1B,MAA0B;EAA1B,8BAA0B,EAA1B,MAA0B;EAA1B,gBAA0B,EAA1B,MAA0B;EAA1B,cAA0B;KAA1B,WAA0B,EAA1B,MAA0B;EAA1B,+HAA0B,EAA1B,MAA0B;EAA1B,6BAA0B,EAA1B,MAA0B;EAA1B,+BAA0B,EAA1B,MAA0B;EAA1B,wCAA0B,EAA1B,MAA0B;AAAA;;AAA1B;;;CAA0B;;AAA1B;EAAA,SAA0B,EAA1B,MAA0B;EAA1B,oBAA0B,EAA1B,MAA0B;AAAA;;AAA1B;;;;CAA0B;;AAA1B;EAAA,SAA0B,EAA1B,MAA0B;EAA1B,cAA0B,EAA1B,MAA0B;EAA1B,qBAA0B,EAA1B,MAA0B;AAAA;;AAA1B;;CAA0B;;AAA1B;EAAA,yCAA0B;UAA1B,iCAA0B;AAAA;;AAA1B;;CAA0B;;AAA1B;;;;;;EAAA,kBAA0B;EAA1B,oBAA0B;AAAA;;AAA1B;;CAA0B;;AAA1B;EAAA,cAA0B;EAA1B,wBAA0B;AAAA;;AAA1B;;CAA0B;;AAA1B;;EAAA,mBAA0B;AAAA;;AAA1B;;;;;CAA0B;;AAA1B;;;;EAAA,+GAA0B,EAA1B,MAA0B;EAA1B,6BAA0B,EAA1B,MAA0B;EAA1B,+BAA0B,EAA1B,MAA0B;EAA1B,cAA0B,EAA1B,MAA0B;AAAA;;AAA1B;;CAA0B;;AAA1B;EAAA,cAA0B;AAAA;;AAA1B;;CAA0B;;AAA1B;;EAAA,cAA0B;EAA1B,cAA0B;EAA1B,kBAA0B;EAA1B,wBAA0B;AAAA;;AAA1B;EAAA,eAA0B;AAAA;;AAA1B;EAAA,WAA0B;AAAA;;AAA1B;;;;CAA0B;;AAA1B;EAAA,cAA0B,EAA1B,MAA0B;EAA1B,qBAA0B,EAA1B,MAA0B;EAA1B,yBAA0B,EAA1B,MAA0B;AAAA;;AAA1B;;;;CAA0B;;AAA1B;;;;;EAAA,oBAA0B,EAA1B,MAA0B;EAA1B,8BAA0B,EAA1B,MAA0B;EAA1B,gCAA0B,EAA1B,MAA0B;EAA1B,eAA0B,EAA1B,MAA0B;EAA1B,oBAA0B,EAA1B,MAA0B;EAA1B,oBAA0B,EAA1B,MAA0B;EAA1B,cAA0B,EAA1B,MAA0B;EAA1B,SAA0B,EAA1B,MAA0B;EAA1B,UAA0B,EAA1B,MAA0B;AAAA;;AAA1B;;CAA0B;;AAA1B;;EAAA,oBAA0B;AAAA;;AAA1B;;;CAA0B;;AAA1B;;;;EAAA,0BAA0B,EAA1B,MAA0B;EAA1B,6BAA0B,EAA1B,MAA0B;EAA1B,sBAA0B,EAA1B,MAA0B;AAAA;;AAA1B;;CAA0B;;AAA1B;EAAA,aAA0B;AAAA;;AAA1B;;CAA0B;;AAA1B;EAAA,gBAA0B;AAAA;;AAA1B;;CAA0B;;AAA1B;EAAA,wBAA0B;AAAA;;AAA1B;;CAA0B;;AAA1B;;EAAA,YAA0B;AAAA;;AAA1B;;;CAA0B;;AAA1B;EAAA,6BAA0B,EAA1B,MAA0B;EAA1B,oBAA0B,EAA1B,MAA0B;AAAA;;AAA1B;;CAA0B;;AAA1B;EAAA,wBAA0B;AAAA;;AAA1B;;;CAA0B;;AAA1B;EAAA,0BAA0B,EAA1B,MAA0B;EAA1B,aAA0B,EAA1B,MAA0B;AAAA;;AAA1B;;CAA0B;;AAA1B;EAAA,kBAA0B;AAAA;;AAA1B;;CAA0B;;AAA1B;;;;;;;;;;;;;EAAA,SAA0B;AAAA;;AAA1B;EAAA,SAA0B;EAA1B,UAA0B;AAAA;;AAA1B;EAAA,UAA0B;AAAA;;AAA1B;;;EAAA,gBAA0B;EAA1B,SAA0B;EAA1B,UAA0B;AAAA;;AAA1B;;CAA0B;AAA1B;EAAA,UAA0B;AAAA;;AAA1B;;CAA0B;;AAA1B;EAAA,gBAA0B;AAAA;;AAA1B;;;CAA0B;;AAA1B;EAAA,UAA0B,EAA1B,MAA0B;EAA1B,cAA0B,EAA1B,MAA0B;AAAA;;AAA1B;;EAAA,UAA0B,EAA1B,MAA0B;EAA1B,cAA0B,EAA1B,MAA0B;AAAA;;AAA1B;;CAA0B;;AAA1B;;EAAA,eAA0B;AAAA;;AAA1B;;CAA0B;AAA1B;EAAA,eAA0B;AAAA;;AAA1B;;;;CAA0B;;AAA1B;;;;;;;;EAAA,cAA0B,EAA1B,MAA0B;EAA1B,sBAA0B,EAA1B,MAA0B;AAAA;;AAA1B;;CAA0B;;AAA1B;;EAAA,eAA0B;EAA1B,YAA0B;AAAA;;AAA1B,wEAA0B;AAA1B;EAAA,aAA0B;AAAA;;AAA1B;EAAA,wBAA0B;EAA1B,wBAA0B;EAA1B,mBAA0B;EAA1B,mBAA0B;EAA1B,cAA0B;EAA1B,cAA0B;EAA1B,cAA0B;EAA1B,eAA0B;EAA1B,eAA0B;EAA1B,aAA0B;EAA1B,aAA0B;EAA1B,kBAA0B;EAA1B,sCAA0B;EAA1B,8BAA0B;EAA1B,6BAA0B;EAA1B,4BAA0B;EAA1B,eAA0B;EAA1B,oBAA0B;EAA1B,sBAA0B;EAA1B,uBAA0B;EAA1B,wBAA0B;EAA1B,kBAA0B;EAA1B,2BAA0B;EAA1B,4BAA0B;EAA1B,sCAA0B;EAA1B,kCAA0B;EAA1B,2BAA0B;EAA1B,sBAA0B;EAA1B,8BAA0B;EAA1B,YAA0B;EAA1B,kBAA0B;EAA1B,gBAA0B;EAA1B,iBAA0B;EAA1B,kBAA0B;EAA1B,cAA0B;EAA1B,gBAA0B;EAA1B,aAA0B;EAA1B,mBAA0B;EAA1B,qBAA0B;EAA1B,2BAA0B;EAA1B,yBAA0B;EAA1B,0BAA0B;EAA1B,2BAA0B;EAA1B,uBAA0B;EAA1B,wBAA0B;EAA1B,yBAA0B;EAA1B;AAA0B;;AAA1B;EAAA,wBAA0B;EAA1B,wBAA0B;EAA1B,mBAA0B;EAA1B,mBAA0B;EAA1B,cAA0B;EAA1B,cAA0B;EAA1B,cAA0B;EAA1B,eAA0B;EAA1B,eAA0B;EAA1B,aAA0B;EAA1B,aAA0B;EAA1B,kBAA0B;EAA1B,sCAA0B;EAA1B,8BAA0B;EAA1B,6BAA0B;EAA1B,4BAA0B;EAA1B,eAA0B;EAA1B,oBAA0B;EAA1B,sBAA0B;EAA1B,uBAA0B;EAA1B,wBAA0B;EAA1B,kBAA0B;EAA1B,2BAA0B;EAA1B,4BAA0B;EAA1B,sCAA0B;EAA1B,kCAA0B;EAA1B,2BAA0B;EAA1B,sBAA0B;EAA1B,8BAA0B;EAA1B,YAA0B;EAA1B,kBAA0B;EAA1B,gBAA0B;EAA1B,iBAA0B;EAA1B,kBAA0B;EAA1B,cAA0B;EAA1B,gBAA0B;EAA1B,aAA0B;EAA1B,mBAA0B;EAA1B,qBAA0B;EAA1B,2BAA0B;EAA1B,yBAA0B;EAA1B,0BAA0B;EAA1B,2BAA0B;EAA1B,uBAA0B;EAA1B,wBAA0B;EAA1B,yBAA0B;EAA1B;AAA0B;AAE1B;EAAA;AAA+B;AAA/B;EAAA;AAA+B;AAA/B;EAAA;AAA+B;AAA/B;EAAA;AAA+B;AAA/B;EAAA;AAA+B;AAA/B;EAAA;AAA+B;AAA/B;EAAA;AAA+B;AAA/B;EAAA;AAA+B;AAA/B;EAAA;AAA+B;AAA/B;EAAA;AAA+B;AAA/B;EAAA;AAA+B;AAA/B;EAAA;AAA+B;AAA/B;EAAA;AAA+B;AAA/B;EAAA;AAA+B;AAA/B;EAAA;AAA+B;AAA/B;EAAA;AAA+B;AAA/B;EAAA;AAA+B;AAA/B;EAAA;AAA+B;AAA/B;EAAA;AAA+B;AAA/B;EAAA;AAA+B;AAA/B;EAAA;AAA+B;AAA/B;EAAA;AAA+B;AAA/B;EAAA;AAA+B;AAA/B;EAAA;AAA+B;AAA/B;EAAA;AAA+B;AAA/B;EAAA;AAA+B;AAA/B;EAAA;AAA+B;AAA/B;EAAA;AAA+B;AAA/B;EAAA;AAA+B;AAA/B;EAAA;AAA+B;AAA/B;EAAA,kBAA+B;EAA/B;AAA+B;AAA/B;EAAA,kBAA+B;EAA/B;AAA+B;AAA/B;EAAA,kBAA+B;EAA/B;AAA+B;AAA/B;EAAA;AAA+B;AAA/B;EAAA,4DAA+B;EAA/B,oEAA+B;EAA/B;AAA+B;AAA/B;EAAA,qEAA+B;EAA/B;AAA+B;AAA/B;EAAA;AAA+B;AAA/B;EAAA,6BAA+B;UAA/B;AAA+B;AAA/B;EAAA,oBAA+B;KAA/B;AAA+B;AAA/B;EAAA;AAA+B;AAA/B;EAAA,oBAA+B;EAA/B;AAA+B;AAA/B;EAAA,mBAA+B;EAA/B;AAA+B;AAA/B;EAAA;AAA+B;AAA/B;EAAA;AAA+B;AAA/B;EAAA,iBAA+B;EAA/B;AAA+B;AAA/B;EAAA;AAA+B;AAA/B;EAAA;AAA+B;AAA/B;EAAA;AAA+B;AAA/B;EAAA,+BAA+B;EAA/B;AAA+B;AAA/B;EAAA,oBAA+B;EAA/B;AAA+B;AAA/B;EAAA,oBAA+B;EAA/B;AAA+B;AAA/B;EAAA;AAA+B;AAA/B;EAAA;AAA+B;AAA/B;EAAA;AAA+B;AAA/B;EAAA,+EAA+B;EAA/B,mGAA+B;EAA/B;AAA+B;AAA/B;EAAA,mGAA+B;EAA/B;AAA+B;;AAE/B;EACE,yBAAyB;EACzB,qCAAqC;EACrC,mCAAmC;AACrC;;AAEA;EACE;IACE,+BAA+B;IAC/B,+BAA+B;IAC/B,6BAA6B;EAC/B;AACF;;AAEA;;;GAGG;;AAEH;EACE,sCAAsC;AACxC;;AAEA;EACE,iCAAiC;EACjC,sCAAsC;AACxC;;AA9BA;;EAAA;IAAA;EA+BA;AAAA;;AA/BA;;EAAA;IAAA;EA+BA;AAAA;;AA/BA;;EAAA;IAAA;EA+BA;AAAA\",\"sourcesContent\":[\"@import 'tailwindcss/base';\\n@import 'tailwindcss/components';\\n@import 'tailwindcss/utilities';\\n\\n:root {\\n  --foreground-rgb: 0, 0, 0;\\n  --background-start-rgb: 214, 219, 220;\\n  --background-end-rgb: 255, 255, 255;\\n}\\n\\n@media (prefers-color-scheme: dark) {\\n  :root {\\n    --foreground-rgb: 255, 255, 255;\\n    --background-start-rgb: 0, 0, 0;\\n    --background-end-rgb: 0, 0, 0;\\n  }\\n}\\n\\n/* @font-face {\\n  font-family: 'SuperMario256';\\n  src: URL('/fonts/SuperMario256.ttf') format('truetype');\\n} */\\n\\n* {\\n  font-family: var(--my-font) !important;\\n}\\n\\nbody {\\n  color: rgb(var(--foreground-rgb));\\n  font-family: var(--my-font) !important;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n/* harmony default export */ __webpack_exports__[\"default\"] = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[11].oneOf[14].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[11].oneOf[14].use[2]!./pages/globals.css\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js":
/*!************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js ***!
  \************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/ // css base code, injected by the css-loader\n// eslint-disable-next-line func-names\n\nmodule.exports = function(useSourceMap) {\n    var list = [] // return the list of modules as css string\n    ;\n    list.toString = function toString() {\n        return this.map(function(item) {\n            // eslint-disable-next-line @typescript-eslint/no-use-before-define\n            var content = cssWithMappingToString(item, useSourceMap);\n            if (item[2]) {\n                return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n            }\n            return content;\n        }).join(\"\");\n    } // import a list of modules into the list\n    ;\n    // eslint-disable-next-line func-names\n    // @ts-expect-error TODO: fix type\n    list.i = function(modules, mediaQuery, dedupe) {\n        if (typeof modules === \"string\") {\n            // eslint-disable-next-line no-param-reassign\n            modules = [\n                [\n                    null,\n                    modules,\n                    \"\"\n                ]\n            ];\n        }\n        var alreadyImportedModules = {};\n        if (dedupe) {\n            for(var i = 0; i < this.length; i++){\n                // eslint-disable-next-line prefer-destructuring\n                var id = this[i][0];\n                if (id != null) {\n                    alreadyImportedModules[id] = true;\n                }\n            }\n        }\n        for(var _i = 0; _i < modules.length; _i++){\n            var item = [].concat(modules[_i]);\n            if (dedupe && alreadyImportedModules[item[0]]) {\n                continue;\n            }\n            if (mediaQuery) {\n                if (!item[2]) {\n                    item[2] = mediaQuery;\n                } else {\n                    item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n                }\n            }\n            list.push(item);\n        }\n    };\n    return list;\n};\nfunction cssWithMappingToString(item, useSourceMap) {\n    var content = item[1] || \"\" // eslint-disable-next-line prefer-destructuring\n    ;\n    var cssMapping = item[3];\n    if (!cssMapping) {\n        return content;\n    }\n    if (useSourceMap && typeof btoa === \"function\") {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        var sourceMapping = toComment(cssMapping);\n        var sourceURLs = cssMapping.sources.map(function(source) {\n            return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || \"\").concat(source, \" */\");\n        });\n        return [\n            content\n        ].concat(sourceURLs).concat([\n            sourceMapping\n        ]).join(\"\\n\");\n    }\n    return [\n        content\n    ].join(\"\\n\");\n} // Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n    // eslint-disable-next-line no-undef\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    return \"/*# \".concat(data, \" */\");\n}\n\n//# sourceMappingURL=api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9jc3MtbG9hZGVyL3NyYy9ydW50aW1lL2FwaS5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ2E7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0RBQW9ELHFCQUFxQjtBQUN6RTtBQUNBO0FBQ0EsU0FBUztBQUNULE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQixpQkFBaUI7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IscUJBQXFCO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRTtBQUNGO0FBQ0E7QUFDQTtBQUNBLHVEQUF1RCxjQUFjO0FBQ3JFO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvY3NzLWxvYWRlci9zcmMvcnVudGltZS9hcGkuanM/Y2E0ZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qLyAvLyBjc3MgYmFzZSBjb2RlLCBpbmplY3RlZCBieSB0aGUgY3NzLWxvYWRlclxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGZ1bmMtbmFtZXNcblwidXNlIHN0cmljdFwiO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbih1c2VTb3VyY2VNYXApIHtcbiAgICB2YXIgbGlzdCA9IFtdIC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcbiAgICA7XG4gICAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24oaXRlbSkge1xuICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11c2UtYmVmb3JlLWRlZmluZVxuICAgICAgICAgICAgdmFyIGNvbnRlbnQgPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0sIHVzZVNvdXJjZU1hcCk7XG4gICAgICAgICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoY29udGVudCwgXCJ9XCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgICAgIH0pLmpvaW4oXCJcIik7XG4gICAgfSAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuICAgIDtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuYy1uYW1lc1xuICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgVE9ETzogZml4IHR5cGVcbiAgICBsaXN0LmkgPSBmdW5jdGlvbihtb2R1bGVzLCBtZWRpYVF1ZXJ5LCBkZWR1cGUpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcGFyYW0tcmVhc3NpZ25cbiAgICAgICAgICAgIG1vZHVsZXMgPSBbXG4gICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgICBudWxsLFxuICAgICAgICAgICAgICAgICAgICBtb2R1bGVzLFxuICAgICAgICAgICAgICAgICAgICBcIlwiXG4gICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgXTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuICAgICAgICBpZiAoZGVkdXBlKSB7XG4gICAgICAgICAgICBmb3IodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKyl7XG4gICAgICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHByZWZlci1kZXN0cnVjdHVyaW5nXG4gICAgICAgICAgICAgICAgdmFyIGlkID0gdGhpc1tpXVswXTtcbiAgICAgICAgICAgICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGZvcih2YXIgX2kgPSAwOyBfaSA8IG1vZHVsZXMubGVuZ3RoOyBfaSsrKXtcbiAgICAgICAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2ldKTtcbiAgICAgICAgICAgIGlmIChkZWR1cGUgJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKG1lZGlhUXVlcnkpIHtcbiAgICAgICAgICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICAgICAgICAgICAgaXRlbVsyXSA9IG1lZGlhUXVlcnk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgaXRlbVsyXSA9IFwiXCIuY29uY2F0KG1lZGlhUXVlcnksIFwiIGFuZCBcIikuY29uY2F0KGl0ZW1bMl0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgcmV0dXJuIGxpc3Q7XG59O1xuZnVuY3Rpb24gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtLCB1c2VTb3VyY2VNYXApIHtcbiAgICB2YXIgY29udGVudCA9IGl0ZW1bMV0gfHwgXCJcIiAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcHJlZmVyLWRlc3RydWN0dXJpbmdcbiAgICA7XG4gICAgdmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuICAgIGlmICghY3NzTWFwcGluZykge1xuICAgICAgICByZXR1cm4gY29udGVudDtcbiAgICB9XG4gICAgaWYgKHVzZVNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdXNlLWJlZm9yZS1kZWZpbmVcbiAgICAgICAgdmFyIHNvdXJjZU1hcHBpbmcgPSB0b0NvbW1lbnQoY3NzTWFwcGluZyk7XG4gICAgICAgIHZhciBzb3VyY2VVUkxzID0gY3NzTWFwcGluZy5zb3VyY2VzLm1hcChmdW5jdGlvbihzb3VyY2UpIHtcbiAgICAgICAgICAgIHJldHVybiBcIi8qIyBzb3VyY2VVUkw9XCIuY29uY2F0KGNzc01hcHBpbmcuc291cmNlUm9vdCB8fCBcIlwiKS5jb25jYXQoc291cmNlLCBcIiAqL1wiKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICBjb250ZW50XG4gICAgICAgIF0uY29uY2F0KHNvdXJjZVVSTHMpLmNvbmNhdChbXG4gICAgICAgICAgICBzb3VyY2VNYXBwaW5nXG4gICAgICAgIF0pLmpvaW4oXCJcXG5cIik7XG4gICAgfVxuICAgIHJldHVybiBbXG4gICAgICAgIGNvbnRlbnRcbiAgICBdLmpvaW4oXCJcXG5cIik7XG59IC8vIEFkYXB0ZWQgZnJvbSBjb252ZXJ0LXNvdXJjZS1tYXAgKE1JVClcbmZ1bmN0aW9uIHRvQ29tbWVudChzb3VyY2VNYXApIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5kZWZcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKTtcbiAgICB2YXIgZGF0YSA9IFwic291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsXCIuY29uY2F0KGJhc2U2NCk7XG4gICAgcmV0dXJuIFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBpLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=private-next-pages%2F_app&page=%2F_app!":
/*!*******************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=private-next-pages%2F_app&page=%2F_app! ***!
  \*******************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/_app\",\n      function () {\n        return __webpack_require__(/*! private-next-pages/_app */ \"./pages/_app.tsx\");\n      }\n    ]);\n    if(true) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/_app\"])\n      });\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWNsaWVudC1wYWdlcy1sb2FkZXIuanM/YWJzb2x1dGVQYWdlUGF0aD1wcml2YXRlLW5leHQtcGFnZXMlMkZfYXBwJnBhZ2U9JTJGX2FwcCEiLCJtYXBwaW5ncyI6IjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsbUJBQU8sQ0FBQyxpREFBeUI7QUFDaEQ7QUFDQTtBQUNBLE9BQU8sSUFBVTtBQUNqQixNQUFNLFVBQVU7QUFDaEI7QUFDQSxPQUFPO0FBQ1A7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvPzY3ODIiXSwic291cmNlc0NvbnRlbnQiOlsiXG4gICAgKHdpbmRvdy5fX05FWFRfUCA9IHdpbmRvdy5fX05FWFRfUCB8fCBbXSkucHVzaChbXG4gICAgICBcIi9fYXBwXCIsXG4gICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiByZXF1aXJlKFwicHJpdmF0ZS1uZXh0LXBhZ2VzL19hcHBcIik7XG4gICAgICB9XG4gICAgXSk7XG4gICAgaWYobW9kdWxlLmhvdCkge1xuICAgICAgbW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgd2luZG93Ll9fTkVYVF9QLnB1c2goW1wiL19hcHBcIl0pXG4gICAgICB9KTtcbiAgICB9XG4gICJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=private-next-pages%2F_app&page=%2F_app!\n"));

/***/ }),

/***/ "./pages/globals.css":
/*!***************************!*\
  !*** ./pages/globals.css ***!
  \***************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var api = __webpack_require__(/*! !../node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js\");\n            var content = __webpack_require__(/*! !!../node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[11].oneOf[14].use[1]!../node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[11].oneOf[14].use[2]!./globals.css */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[11].oneOf[14].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[11].oneOf[14].use[2]!./pages/globals.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function(element) {\n                    // By default, style-loader injects CSS into the bottom\n                    // of <head>. This causes ordering problems between dev\n                    // and prod. To fix this, we render a <noscript> tag as\n                    // an anchor for the styles to be placed before. These\n                    // styles will be applied _before_ <style jsx global>.\n                    // These elements should always exist. If they do not,\n                    // this code should fail.\n                    var anchorElement = document.querySelector(\"#__next_css__DO_NOT_USE__\");\n                    var parentNode = anchorElement.parentNode// Normally <head>\n                    ;\n                    // Each style tag should be placed right before our\n                    // anchor. By inserting before and not after, we do not\n                    // need to track the last inserted element.\n                    parentNode.insertBefore(element, anchorElement);\n                };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (true) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n    if (!a && b || a && !b) {\n        return false;\n    }\n    let p;\n    for(p in a){\n        if (isNamedExport && p === \"default\") {\n            continue;\n        }\n        if (a[p] !== b[p]) {\n            return false;\n        }\n    }\n    for(p in b){\n        if (isNamedExport && p === \"default\") {\n            continue;\n        }\n        if (!a[p]) {\n            return false;\n        }\n    }\n    return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      /*! !!../node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[11].oneOf[14].use[1]!../node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[11].oneOf[14].use[2]!./globals.css */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[11].oneOf[14].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[11].oneOf[14].use[2]!./pages/globals.css\",\n      function () {\n        content = __webpack_require__(/*! !!../node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[11].oneOf[14].use[1]!../node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[11].oneOf[14].use[2]!./globals.css */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[11].oneOf[14].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[11].oneOf[14].use[2]!./pages/globals.css\");\n\n              content = content.__esModule ? content.default : content;\n\n              if (typeof content === 'string') {\n                content = [[module.id, content, '']];\n              }\n\n              if (!isEqualLocals(oldLocals, content.locals)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nmodule.exports = content.locals || {};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9nbG9iYWxzLmNzcyIsIm1hcHBpbmdzIjoiQUFBQSxVQUFVLG1CQUFPLENBQUMsb05BQXdHO0FBQzFILDBCQUEwQixtQkFBTyxDQUFDLDhlQUFtUDs7QUFFclI7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7OztBQUdBLElBQUksSUFBVTtBQUNkLHlCQUF5QixVQUFVO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxJQUFJLGlCQUFpQjtBQUNyQixNQUFNLDhlQUFtUDtBQUN6UDtBQUNBLGtCQUFrQixtQkFBTyxDQUFDLDhlQUFtUDs7QUFFN1E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EsZ0JBQWdCLFVBQVU7O0FBRTFCO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsRUFBRSxVQUFVO0FBQ1o7QUFDQSxHQUFHO0FBQ0g7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vcGFnZXMvZ2xvYmFscy5jc3M/MmU3NSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYXBpID0gcmVxdWlyZShcIiEuLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXN0eWxlLWxvYWRlci9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiKTtcbiAgICAgICAgICAgIHZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvY3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3J1bGVTZXRbMV0ucnVsZXNbMTFdLm9uZU9mWzE0XS51c2VbMV0hLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzExXS5vbmVPZlsxNF0udXNlWzJdIS4vZ2xvYmFscy5jc3NcIik7XG5cbiAgICAgICAgICAgIGNvbnRlbnQgPSBjb250ZW50Ll9fZXNNb2R1bGUgPyBjb250ZW50LmRlZmF1bHQgOiBjb250ZW50O1xuXG4gICAgICAgICAgICBpZiAodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbiAgICAgICAgICAgIH1cblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5pbnNlcnQgPSBmdW5jdGlvbihlbGVtZW50KSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIEJ5IGRlZmF1bHQsIHN0eWxlLWxvYWRlciBpbmplY3RzIENTUyBpbnRvIHRoZSBib3R0b21cbiAgICAgICAgICAgICAgICAgICAgLy8gb2YgPGhlYWQ+LiBUaGlzIGNhdXNlcyBvcmRlcmluZyBwcm9ibGVtcyBiZXR3ZWVuIGRldlxuICAgICAgICAgICAgICAgICAgICAvLyBhbmQgcHJvZC4gVG8gZml4IHRoaXMsIHdlIHJlbmRlciBhIDxub3NjcmlwdD4gdGFnIGFzXG4gICAgICAgICAgICAgICAgICAgIC8vIGFuIGFuY2hvciBmb3IgdGhlIHN0eWxlcyB0byBiZSBwbGFjZWQgYmVmb3JlLiBUaGVzZVxuICAgICAgICAgICAgICAgICAgICAvLyBzdHlsZXMgd2lsbCBiZSBhcHBsaWVkIF9iZWZvcmVfIDxzdHlsZSBqc3ggZ2xvYmFsPi5cbiAgICAgICAgICAgICAgICAgICAgLy8gVGhlc2UgZWxlbWVudHMgc2hvdWxkIGFsd2F5cyBleGlzdC4gSWYgdGhleSBkbyBub3QsXG4gICAgICAgICAgICAgICAgICAgIC8vIHRoaXMgY29kZSBzaG91bGQgZmFpbC5cbiAgICAgICAgICAgICAgICAgICAgdmFyIGFuY2hvckVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI19fbmV4dF9jc3NfX0RPX05PVF9VU0VfX1wiKTtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHBhcmVudE5vZGUgPSBhbmNob3JFbGVtZW50LnBhcmVudE5vZGUvLyBOb3JtYWxseSA8aGVhZD5cbiAgICAgICAgICAgICAgICAgICAgO1xuICAgICAgICAgICAgICAgICAgICAvLyBFYWNoIHN0eWxlIHRhZyBzaG91bGQgYmUgcGxhY2VkIHJpZ2h0IGJlZm9yZSBvdXJcbiAgICAgICAgICAgICAgICAgICAgLy8gYW5jaG9yLiBCeSBpbnNlcnRpbmcgYmVmb3JlIGFuZCBub3QgYWZ0ZXIsIHdlIGRvIG5vdFxuICAgICAgICAgICAgICAgICAgICAvLyBuZWVkIHRvIHRyYWNrIHRoZSBsYXN0IGluc2VydGVkIGVsZW1lbnQuXG4gICAgICAgICAgICAgICAgICAgIHBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGVsZW1lbnQsIGFuY2hvckVsZW1lbnQpO1xuICAgICAgICAgICAgICAgIH07XG5vcHRpb25zLnNpbmdsZXRvbiA9IGZhbHNlO1xuXG52YXIgdXBkYXRlID0gYXBpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cbmlmIChtb2R1bGUuaG90KSB7XG4gIGlmICghY29udGVudC5sb2NhbHMgfHwgbW9kdWxlLmhvdC5pbnZhbGlkYXRlKSB7XG4gICAgdmFyIGlzRXF1YWxMb2NhbHMgPSBmdW5jdGlvbiBpc0VxdWFsTG9jYWxzKGEsIGIsIGlzTmFtZWRFeHBvcnQpIHtcbiAgICBpZiAoIWEgJiYgYiB8fCBhICYmICFiKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgbGV0IHA7XG4gICAgZm9yKHAgaW4gYSl7XG4gICAgICAgIGlmIChpc05hbWVkRXhwb3J0ICYmIHAgPT09IFwiZGVmYXVsdFwiKSB7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoYVtwXSAhPT0gYltwXSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuICAgIGZvcihwIGluIGIpe1xuICAgICAgICBpZiAoaXNOYW1lZEV4cG9ydCAmJiBwID09PSBcImRlZmF1bHRcIikge1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFhW3BdKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG59O1xuICAgIHZhciBvbGRMb2NhbHMgPSBjb250ZW50LmxvY2FscztcblxuICAgIG1vZHVsZS5ob3QuYWNjZXB0KFxuICAgICAgXCIhIS4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL2Nzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzExXS5vbmVPZlsxNF0udXNlWzFdIS4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cnVsZVNldFsxXS5ydWxlc1sxMV0ub25lT2ZbMTRdLnVzZVsyXSEuL2dsb2JhbHMuY3NzXCIsXG4gICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9jc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cnVsZVNldFsxXS5ydWxlc1sxMV0ub25lT2ZbMTRdLnVzZVsxXSEuLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3J1bGVTZXRbMV0ucnVsZXNbMTFdLm9uZU9mWzE0XS51c2VbMl0hLi9nbG9iYWxzLmNzc1wiKTtcblxuICAgICAgICAgICAgICBjb250ZW50ID0gY29udGVudC5fX2VzTW9kdWxlID8gY29udGVudC5kZWZhdWx0IDogY29udGVudDtcblxuICAgICAgICAgICAgICBpZiAodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgICAgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgaWYgKCFpc0VxdWFsTG9jYWxzKG9sZExvY2FscywgY29udGVudC5sb2NhbHMpKSB7XG4gICAgICAgICAgICAgICAgbW9kdWxlLmhvdC5pbnZhbGlkYXRlKCk7XG5cbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICBvbGRMb2NhbHMgPSBjb250ZW50LmxvY2FscztcblxuICAgICAgICAgICAgICB1cGRhdGUoY29udGVudCk7XG4gICAgICB9XG4gICAgKVxuICB9XG5cbiAgbW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkge1xuICAgIHVwZGF0ZSgpO1xuICB9KTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscyB8fCB7fTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./pages/globals.css\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js ***!
  \************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nconst isOldIE = function isOldIE() {\n    let memo;\n    return function memorize() {\n        if (typeof memo === \"undefined\") {\n            // Test for IE <= 9 as proposed by Browserhacks\n            // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n            // Tests for existence of standard globals is to allow style-loader\n            // to operate correctly into non-standard environments\n            // @see https://github.com/webpack-contrib/style-loader/issues/177\n            memo = Boolean(window && document && document.all && !window.atob);\n        }\n        return memo;\n    };\n}();\nconst getTargetElement = function() {\n    const memo = {};\n    return function memorize(target) {\n        if (typeof memo[target] === \"undefined\") {\n            let styleTarget = document.querySelector(target);\n            // Special case to return head of iframe instead of iframe itself\n            if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n                try {\n                    // This will throw an exception if access to iframe is blocked\n                    // due to cross-origin restrictions\n                    styleTarget = styleTarget.contentDocument.head;\n                } catch (e) {\n                    // istanbul ignore next\n                    styleTarget = null;\n                }\n            }\n            memo[target] = styleTarget;\n        }\n        return memo[target];\n    };\n}();\nconst stylesInDom = [];\nfunction getIndexByIdentifier(identifier) {\n    let result = -1;\n    for(let i = 0; i < stylesInDom.length; i++){\n        if (stylesInDom[i].identifier === identifier) {\n            result = i;\n            break;\n        }\n    }\n    return result;\n}\nfunction modulesToDom(list, options) {\n    const idCountMap = {};\n    const identifiers = [];\n    for(let i = 0; i < list.length; i++){\n        const item = list[i];\n        const id = options.base ? item[0] + options.base : item[0];\n        const count = idCountMap[id] || 0;\n        const identifier = id + \" \" + count.toString();\n        idCountMap[id] = count + 1;\n        const index = getIndexByIdentifier(identifier);\n        const obj = {\n            css: item[1],\n            media: item[2],\n            sourceMap: item[3]\n        };\n        if (index !== -1) {\n            stylesInDom[index].references++;\n            stylesInDom[index].updater(obj);\n        } else {\n            stylesInDom.push({\n                identifier: identifier,\n                // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                updater: addStyle(obj, options),\n                references: 1\n            });\n        }\n        identifiers.push(identifier);\n    }\n    return identifiers;\n}\nfunction insertStyleElement(options) {\n    const style = document.createElement(\"style\");\n    const attributes = options.attributes || {};\n    if (typeof attributes.nonce === \"undefined\") {\n        const nonce = // eslint-disable-next-line no-undef\n         true ? __webpack_require__.nc : 0;\n        if (nonce) {\n            attributes.nonce = nonce;\n        }\n    }\n    Object.keys(attributes).forEach(function(key) {\n        style.setAttribute(key, attributes[key]);\n    });\n    if (typeof options.insert === \"function\") {\n        options.insert(style);\n    } else {\n        const target = getTargetElement(options.insert || \"head\");\n        if (!target) {\n            throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n        }\n        target.appendChild(style);\n    }\n    return style;\n}\nfunction removeStyleElement(style) {\n    // istanbul ignore if\n    if (style.parentNode === null) {\n        return false;\n    }\n    style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */ const replaceText = function replaceText() {\n    const textStore = [];\n    return function replace(index, replacement) {\n        textStore[index] = replacement;\n        return textStore.filter(Boolean).join(\"\\n\");\n    };\n}();\nfunction applyToSingletonTag(style, index, remove, obj) {\n    const css = remove ? \"\" : obj.media ? \"@media \" + obj.media + \" {\" + obj.css + \"}\" : obj.css;\n    // For old IE\n    /* istanbul ignore if  */ if (style.styleSheet) {\n        style.styleSheet.cssText = replaceText(index, css);\n    } else {\n        const cssNode = document.createTextNode(css);\n        const childNodes = style.childNodes;\n        if (childNodes[index]) {\n            style.removeChild(childNodes[index]);\n        }\n        if (childNodes.length) {\n            style.insertBefore(cssNode, childNodes[index]);\n        } else {\n            style.appendChild(cssNode);\n        }\n    }\n}\nfunction applyToTag(style, _options, obj) {\n    let css = obj.css;\n    const media = obj.media;\n    const sourceMap = obj.sourceMap;\n    if (media) {\n        style.setAttribute(\"media\", media);\n    } else {\n        style.removeAttribute(\"media\");\n    }\n    if (sourceMap && typeof btoa !== \"undefined\") {\n        css += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n    }\n    // For old IE\n    /* istanbul ignore if  */ if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n    } else {\n        while(style.firstChild){\n            style.removeChild(style.firstChild);\n        }\n        style.appendChild(document.createTextNode(css));\n    }\n}\nlet singleton = null;\nlet singletonCounter = 0;\nfunction addStyle(obj, options) {\n    let style;\n    let update;\n    let remove;\n    if (options.singleton) {\n        const styleIndex = singletonCounter++;\n        style = singleton || (singleton = insertStyleElement(options));\n        update = applyToSingletonTag.bind(null, style, styleIndex, false);\n        remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n    } else {\n        style = insertStyleElement(options);\n        update = applyToTag.bind(null, style, options);\n        remove = function() {\n            removeStyleElement(style);\n        };\n    }\n    update(obj);\n    return function updateStyle(newObj) {\n        if (newObj) {\n            if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n                return;\n            }\n            update(obj = newObj);\n        } else {\n            remove();\n        }\n    };\n}\nmodule.exports = function(list, options) {\n    options = options || {};\n    // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n    // tags it will allow on a page\n    if (!options.singleton && typeof options.singleton !== \"boolean\") {\n        options.singleton = isOldIE();\n    }\n    list = list || [];\n    let lastIdentifiers = modulesToDom(list, options);\n    return function update(newList) {\n        newList = newList || [];\n        if (Object.prototype.toString.call(newList) !== \"[object Array]\") {\n            return;\n        }\n        for(let i = 0; i < lastIdentifiers.length; i++){\n            const identifier = lastIdentifiers[i];\n            const index = getIndexByIdentifier(identifier);\n            stylesInDom[index].references--;\n        }\n        const newLastIdentifiers = modulesToDom(newList, options);\n        for(let i = 0; i < lastIdentifiers.length; i++){\n            const identifier = lastIdentifiers[i];\n            const index = getIndexByIdentifier(identifier);\n            if (stylesInDom[index].references === 0) {\n                stylesInDom[index].updater();\n                stylesInDom.splice(index, 1);\n            }\n        }\n        lastIdentifiers = newLastIdentifiers;\n    };\n};\n\n//# sourceMappingURL=injectStylesIntoStyleTag.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js\n"));

/***/ }),

/***/ "./pages/_app.tsx":
/*!************************!*\
  !*** ./pages/_app.tsx ***!
  \************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var next_font_local_target_css_path_pages_app_tsx_import_arguments_src_SuperMario256_ttf_variable_my_font_variableName_myFont___WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/font/local/target.css?{\"path\":\"pages/_app.tsx\",\"import\":\"\",\"arguments\":[{\"src\":\"./SuperMario256.ttf\",\"variable\":\"--my-font\"}],\"variableName\":\"myFont\"} */ \"./node_modules/next/font/local/target.css?{\\\"path\\\":\\\"pages/_app.tsx\\\",\\\"import\\\":\\\"\\\",\\\"arguments\\\":[{\\\"src\\\":\\\"./SuperMario256.ttf\\\",\\\"variable\\\":\\\"--my-font\\\"}],\\\"variableName\\\":\\\"myFont\\\"}\");\n/* harmony import */ var next_font_local_target_css_path_pages_app_tsx_import_arguments_src_SuperMario256_ttf_variable_my_font_variableName_myFont___WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_font_local_target_css_path_pages_app_tsx_import_arguments_src_SuperMario256_ttf_variable_my_font_variableName_myFont___WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _providers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./providers */ \"./pages/providers.tsx\");\n/* harmony import */ var _globals_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./globals.css */ \"./pages/globals.css\");\n/* harmony import */ var _globals_css__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_globals_css__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\n\nfunction MyApp(param) {\n    let { Component, pageProps } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_providers__WEBPACK_IMPORTED_MODULE_1__.Providers, {\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"main\", {\n            className: \"\".concat((next_font_local_target_css_path_pages_app_tsx_import_arguments_src_SuperMario256_ttf_variable_my_font_variableName_myFont___WEBPACK_IMPORTED_MODULE_3___default().variable), \" !font-sans\"),\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Component, {\n                ...pageProps\n            }, void 0, false, {\n                fileName: \"/Users/gaupoit/Work/crossx/drinking-game-landing/pages/_app.tsx\",\n                lineNumber: 12,\n                columnNumber: 9\n            }, this)\n        }, void 0, false, {\n            fileName: \"/Users/gaupoit/Work/crossx/drinking-game-landing/pages/_app.tsx\",\n            lineNumber: 11,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/Users/gaupoit/Work/crossx/drinking-game-landing/pages/_app.tsx\",\n        lineNumber: 10,\n        columnNumber: 5\n    }, this);\n}\n_c = MyApp;\n/* harmony default export */ __webpack_exports__[\"default\"] = (MyApp);\nvar _c;\n$RefreshReg$(_c, \"MyApp\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9fYXBwLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUtNQTtBQUxrQztBQUdqQjtBQUl2QixTQUFTRSxNQUFNLEtBQWtDO1FBQWxDLEVBQUVDLFNBQVMsRUFBRUMsU0FBUyxFQUFZLEdBQWxDO0lBQ2IscUJBQ0UsOERBQUNILGlEQUFTQTtrQkFDUiw0RUFBQ0k7WUFBS0MsV0FBVyxHQUFtQixPQUFoQk4sNEtBQWUsRUFBQztzQkFDbEMsNEVBQUNHO2dCQUFXLEdBQUdDLFNBQVM7Ozs7Ozs7Ozs7Ozs7Ozs7QUFJaEM7S0FSU0Y7QUFVVCwrREFBZUEsS0FBS0EsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9wYWdlcy9fYXBwLnRzeD8yZmJlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFByb3ZpZGVycyB9IGZyb20gJy4vcHJvdmlkZXJzJztcbmltcG9ydCB7IEFwcFByb3BzIH0gZnJvbSAnbmV4dC9hcHAnO1xuaW1wb3J0IGxvY2FsRm9udCBmcm9tICduZXh0L2ZvbnQvbG9jYWwnO1xuaW1wb3J0ICcuL2dsb2JhbHMuY3NzJztcblxuY29uc3QgbXlGb250ID0gbG9jYWxGb250KHsgc3JjOiAnLi9TdXBlck1hcmlvMjU2LnR0ZicsIHZhcmlhYmxlOiAnLS1teS1mb250JyB9KTtcblxuZnVuY3Rpb24gTXlBcHAoeyBDb21wb25lbnQsIHBhZ2VQcm9wcyB9OiBBcHBQcm9wcykge1xuICByZXR1cm4gKFxuICAgIDxQcm92aWRlcnM+XG4gICAgICA8bWFpbiBjbGFzc05hbWU9e2Ake215Rm9udC52YXJpYWJsZX0gIWZvbnQtc2Fuc2B9PlxuICAgICAgICA8Q29tcG9uZW50IHsuLi5wYWdlUHJvcHN9IC8+XG4gICAgICA8L21haW4+XG4gICAgPC9Qcm92aWRlcnM+XG4gICk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IE15QXBwO1xuIl0sIm5hbWVzIjpbIm15Rm9udCIsIlByb3ZpZGVycyIsIk15QXBwIiwiQ29tcG9uZW50IiwicGFnZVByb3BzIiwibWFpbiIsImNsYXNzTmFtZSIsInZhcmlhYmxlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./pages/_app.tsx\n"));

/***/ }),

/***/ "./pages/providers.tsx":
/*!*****************************!*\
  !*** ./pages/providers.tsx ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Providers: function() { return /* binding */ Providers; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _casperdash_usewallet__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @casperdash/usewallet */ \"./node_modules/@casperdash/usewallet/dist/index.js\");\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @tanstack/react-query */ \"./node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/queryClient.js\");\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @tanstack/react-query */ \"./node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js\");\n/* __next_internal_client_entry_do_not_use__ Providers,default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\nconst Providers = (param)=>{\n    let { children } = param;\n    _s();\n    const [queryClient] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(()=>new _tanstack_react_query__WEBPACK_IMPORTED_MODULE_3__.QueryClient());\n    const [useWalletClient] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(()=>{\n        return (0,_casperdash_usewallet__WEBPACK_IMPORTED_MODULE_2__.createClient)({\n            connectors: [\n                new _casperdash_usewallet__WEBPACK_IMPORTED_MODULE_2__.CasperSignerConnector(),\n                new _casperdash_usewallet__WEBPACK_IMPORTED_MODULE_2__.CasperDashConnector(),\n                new _casperdash_usewallet__WEBPACK_IMPORTED_MODULE_2__.CasperWalletConnector()\n            ],\n            autoConnect: true\n        });\n    });\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_tanstack_react_query__WEBPACK_IMPORTED_MODULE_4__.QueryClientProvider, {\n        client: queryClient,\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_casperdash_usewallet__WEBPACK_IMPORTED_MODULE_2__.CasperProvider, {\n            client: useWalletClient,\n            children: children\n        }, void 0, false, {\n            fileName: \"/Users/gaupoit/Work/crossx/drinking-game-landing/pages/providers.tsx\",\n            lineNumber: 34,\n            columnNumber: 7\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"/Users/gaupoit/Work/crossx/drinking-game-landing/pages/providers.tsx\",\n        lineNumber: 33,\n        columnNumber: 5\n    }, undefined);\n};\n_s(Providers, \"JSdIDI8f94iShO5TFnIUpDYlLPA=\");\n_c = Providers;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Providers);\nvar _c;\n$RefreshReg$(_c, \"Providers\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9wcm92aWRlcnMudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUUwQjtBQUNPO0FBUUY7QUFDMEM7QUFNbEUsTUFBTVMsWUFBWTtRQUFDLEVBQUVDLFFBQVEsRUFBUzs7SUFDM0MsTUFBTSxDQUFDQyxZQUFZLEdBQUdWLCtDQUFRQSxDQUFDLElBQU0sSUFBSU0sOERBQVdBO0lBQ3BELE1BQU0sQ0FBQ0ssZ0JBQWdCLEdBQUdYLCtDQUFRQSxDQUFDO1FBQ2pDLE9BQU9LLG1FQUFZQSxDQUFDO1lBQ2xCTyxZQUFZO2dCQUNWLElBQUlULHdFQUFxQkE7Z0JBQ3pCLElBQUlGLHNFQUFtQkE7Z0JBQ3ZCLElBQUlHLHdFQUFxQkE7YUFDMUI7WUFDRFMsYUFBYTtRQUNmO0lBQ0Y7SUFFQSxxQkFDRSw4REFBQ04sc0VBQW1CQTtRQUFDTyxRQUFRSjtrQkFDM0IsNEVBQUNSLGlFQUFjQTtZQUFDWSxRQUFRSDtzQkFBa0JGOzs7Ozs7Ozs7OztBQUdoRCxFQUFFO0dBbEJXRDtLQUFBQTtBQW9CYiwrREFBZUEsU0FBU0EsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9wYWdlcy9wcm92aWRlcnMudHN4PzE5NTYiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBjbGllbnQnO1xuXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCB7XG4gIENhc3BlckRhc2hDb25uZWN0b3IsXG4gIENhc3BlclByb3ZpZGVyLFxuICBDYXNwZXJTaWduZXJDb25uZWN0b3IsXG4gIENhc3BlcldhbGxldENvbm5lY3RvcixcbiAgY3JlYXRlQ2xpZW50LFxufSBmcm9tICdAY2FzcGVyZGFzaC91c2V3YWxsZXQnO1xuaW1wb3J0IHsgUXVlcnlDbGllbnQsIFF1ZXJ5Q2xpZW50UHJvdmlkZXIgfSBmcm9tICdAdGFuc3RhY2svcmVhY3QtcXVlcnknO1xuXG50eXBlIFByb3BzID0ge1xuICBjaGlsZHJlbjogUmVhY3QuUmVhY3ROb2RlO1xufTtcblxuZXhwb3J0IGNvbnN0IFByb3ZpZGVycyA9ICh7IGNoaWxkcmVuIH06IFByb3BzKSA9PiB7XG4gIGNvbnN0IFtxdWVyeUNsaWVudF0gPSB1c2VTdGF0ZSgoKSA9PiBuZXcgUXVlcnlDbGllbnQoKSk7XG4gIGNvbnN0IFt1c2VXYWxsZXRDbGllbnRdID0gdXNlU3RhdGUoKCkgPT4ge1xuICAgIHJldHVybiBjcmVhdGVDbGllbnQoe1xuICAgICAgY29ubmVjdG9yczogW1xuICAgICAgICBuZXcgQ2FzcGVyU2lnbmVyQ29ubmVjdG9yKCksXG4gICAgICAgIG5ldyBDYXNwZXJEYXNoQ29ubmVjdG9yKCksXG4gICAgICAgIG5ldyBDYXNwZXJXYWxsZXRDb25uZWN0b3IoKSxcbiAgICAgIF0sXG4gICAgICBhdXRvQ29ubmVjdDogdHJ1ZSxcbiAgICB9KTtcbiAgfSk7XG5cbiAgcmV0dXJuIChcbiAgICA8UXVlcnlDbGllbnRQcm92aWRlciBjbGllbnQ9e3F1ZXJ5Q2xpZW50fT5cbiAgICAgIDxDYXNwZXJQcm92aWRlciBjbGllbnQ9e3VzZVdhbGxldENsaWVudH0+e2NoaWxkcmVufTwvQ2FzcGVyUHJvdmlkZXI+XG4gICAgPC9RdWVyeUNsaWVudFByb3ZpZGVyPlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgUHJvdmlkZXJzO1xuIl0sIm5hbWVzIjpbIlJlYWN0IiwidXNlU3RhdGUiLCJDYXNwZXJEYXNoQ29ubmVjdG9yIiwiQ2FzcGVyUHJvdmlkZXIiLCJDYXNwZXJTaWduZXJDb25uZWN0b3IiLCJDYXNwZXJXYWxsZXRDb25uZWN0b3IiLCJjcmVhdGVDbGllbnQiLCJRdWVyeUNsaWVudCIsIlF1ZXJ5Q2xpZW50UHJvdmlkZXIiLCJQcm92aWRlcnMiLCJjaGlsZHJlbiIsInF1ZXJ5Q2xpZW50IiwidXNlV2FsbGV0Q2xpZW50IiwiY29ubmVjdG9ycyIsImF1dG9Db25uZWN0IiwiY2xpZW50Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./pages/providers.tsx\n"));

/***/ }),

/***/ "./node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js ***!
  \*********************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var __dirname = \"/\";\n(()=>{\"use strict\";var e={686:(e,r,t)=>{var n=t(808);var i=Object.create(null);var a=typeof document===\"undefined\";var o=Array.prototype.forEach;function debounce(e,r){var t=0;return function(){var n=this;var i=arguments;var a=function functionCall(){return e.apply(n,i)};clearTimeout(t);t=setTimeout(a,r)}}function noop(){}function getCurrentScriptUrl(e){var r=i[e];if(!r){if(document.currentScript){r=document.currentScript.src}else{var t=document.getElementsByTagName(\"script\");var a=t[t.length-1];if(a){r=a.src}}i[e]=r}return function(e){if(!r){return null}var t=r.split(/([^\\\\/]+)\\.js$/);var i=t&&t[1];if(!i){return[r.replace(\".js\",\".css\")]}if(!e){return[r.replace(\".js\",\".css\")]}return e.split(\",\").map((function(e){var t=new RegExp(\"\".concat(i,\"\\\\.js$\"),\"g\");return n(r.replace(t,\"\".concat(e.replace(/{fileName}/g,i),\".css\")))}))}}function updateCss(e,r){if(!r){if(!e.href){return}r=e.href.split(\"?\")[0]}if(!isUrlRequest(r)){return}if(e.isLoaded===false){return}if(!r||!(r.indexOf(\".css\")>-1)){return}e.visited=true;var t=e.cloneNode();t.isLoaded=false;t.addEventListener(\"load\",(function(){if(t.isLoaded){return}t.isLoaded=true;e.parentNode.removeChild(e)}));t.addEventListener(\"error\",(function(){if(t.isLoaded){return}t.isLoaded=true;e.parentNode.removeChild(e)}));t.href=\"\".concat(r,\"?\").concat(Date.now());if(e.nextSibling){e.parentNode.insertBefore(t,e.nextSibling)}else{e.parentNode.appendChild(t)}}function getReloadUrl(e,r){var t;e=n(e,{stripWWW:false});r.some((function(n){if(e.indexOf(r)>-1){t=n}}));return t}function reloadStyle(e){if(!e){return false}var r=document.querySelectorAll(\"link\");var t=false;o.call(r,(function(r){if(!r.href){return}var n=getReloadUrl(r.href,e);if(!isUrlRequest(n)){return}if(r.visited===true){return}if(n){updateCss(r,n);t=true}}));return t}function reloadAll(){var e=document.querySelectorAll(\"link\");o.call(e,(function(e){if(e.visited===true){return}updateCss(e)}))}function isUrlRequest(e){if(!/^[a-zA-Z][a-zA-Z\\d+\\-.]*:/.test(e)){return false}return true}e.exports=function(e,r){if(a){console.log(\"no window.document found, will not HMR CSS\");return noop}var t=getCurrentScriptUrl(e);function update(){var e=t(r.filename);var n=reloadStyle(e);if(r.locals){console.log(\"[HMR] Detected local css modules. Reload all css\");reloadAll();return}if(n){console.log(\"[HMR] css reload %s\",e.join(\" \"))}else{console.log(\"[HMR] Reload all css\");reloadAll()}}return debounce(update,50)}},808:e=>{function normalizeUrl(e){return e.reduce((function(e,r){switch(r){case\"..\":e.pop();break;case\".\":break;default:e.push(r)}return e}),[]).join(\"/\")}e.exports=function(e){e=e.trim();if(/^data:/i.test(e)){return e}var r=e.indexOf(\"//\")!==-1?e.split(\"//\")[0]+\"//\":\"\";var t=e.replace(new RegExp(r,\"i\"),\"\").split(\"/\");var n=t[0].toLowerCase().replace(/\\.$/,\"\");t[0]=\"\";var i=normalizeUrl(t);return r+n+i}}};var r={};function __nccwpck_require__(t){var n=r[t];if(n!==undefined){return n.exports}var i=r[t]={exports:{}};var a=true;try{e[t](i,i.exports,__nccwpck_require__);a=false}finally{if(a)delete r[t]}return i.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var t=__nccwpck_require__(686);module.exports=t})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL21pbmktY3NzLWV4dHJhY3QtcGx1Z2luL2htci9ob3RNb2R1bGVSZXBsYWNlbWVudC5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsTUFBTSxhQUFhLE9BQU8sY0FBYyxhQUFhLDBCQUEwQixvQ0FBb0MsOEJBQThCLHVCQUF1QixRQUFRLGtCQUFrQixXQUFXLGdCQUFnQiw4QkFBOEIscUJBQXFCLGdCQUFnQixtQkFBbUIsaUJBQWlCLGdDQUFnQyxXQUFXLE9BQU8sMkJBQTJCLDZCQUE2QixLQUFLLDhDQUE4QyxvQkFBb0IsTUFBTSxTQUFTLE9BQU8sbUJBQW1CLE9BQU8sWUFBWSxnQ0FBZ0MsY0FBYyxPQUFPLGdDQUFnQyxPQUFPLGdDQUFnQyxxQ0FBcUMsNENBQTRDLDJDQUEyQyxTQUFTLGdCQUFnQixJQUFJLHdCQUF3QixPQUFPLFlBQVksT0FBTyx1QkFBdUIscUJBQXFCLE9BQU8sdUJBQXVCLE9BQU8sZ0NBQWdDLE9BQU8sZUFBZSxvQkFBb0IsaUJBQWlCLHNDQUFzQyxlQUFlLE9BQU8sZ0JBQWdCLDRCQUE0QixHQUFHLHVDQUF1QyxlQUFlLE9BQU8sZ0JBQWdCLDRCQUE0QixHQUFHLDJDQUEyQyxrQkFBa0IsMkNBQTJDLEtBQUssNkJBQTZCLDJCQUEyQixNQUFNLE9BQU8sZUFBZSxFQUFFLG9CQUFvQixvQkFBb0IsS0FBSyxHQUFHLFNBQVMsd0JBQXdCLE9BQU8sYUFBYSx3Q0FBd0MsWUFBWSxzQkFBc0IsWUFBWSxPQUFPLDZCQUE2QixxQkFBcUIsT0FBTyxxQkFBcUIsT0FBTyxNQUFNLGVBQWUsUUFBUSxHQUFHLFNBQVMscUJBQXFCLHdDQUF3QyxzQkFBc0IscUJBQXFCLE9BQU8sYUFBYSxHQUFHLHlCQUF5Qix5Q0FBeUMsYUFBYSxZQUFZLHdCQUF3QixNQUFNLDBEQUEwRCxZQUFZLDZCQUE2QixrQkFBa0Isb0JBQW9CLHFCQUFxQixhQUFhLGdFQUFnRSxZQUFZLE9BQU8sTUFBTSwrQ0FBK0MsS0FBSyxvQ0FBb0MsYUFBYSw0QkFBNEIsU0FBUyx5QkFBeUIsK0JBQStCLFVBQVUsaUJBQWlCLE1BQU0sY0FBYyxrQkFBa0IsU0FBUyxnQkFBZ0Isc0JBQXNCLFdBQVcsc0JBQXNCLFNBQVMsb0RBQW9ELGlEQUFpRCwyQ0FBMkMsUUFBUSxzQkFBc0IsZ0JBQWdCLFNBQVMsZ0NBQWdDLFdBQVcsa0JBQWtCLGlCQUFpQixZQUFZLFlBQVksV0FBVyxJQUFJLHNDQUFzQyxRQUFRLFFBQVEsaUJBQWlCLGlCQUFpQixtRUFBbUUsU0FBUyxLQUFLLCtCQUErQixpQkFBaUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9taW5pLWNzcy1leHRyYWN0LXBsdWdpbi9obXIvaG90TW9kdWxlUmVwbGFjZW1lbnQuanM/NWQ0OSJdLCJzb3VyY2VzQ29udGVudCI6WyIoKCk9PntcInVzZSBzdHJpY3RcIjt2YXIgZT17Njg2OihlLHIsdCk9Pnt2YXIgbj10KDgwOCk7dmFyIGk9T2JqZWN0LmNyZWF0ZShudWxsKTt2YXIgYT10eXBlb2YgZG9jdW1lbnQ9PT1cInVuZGVmaW5lZFwiO3ZhciBvPUFycmF5LnByb3RvdHlwZS5mb3JFYWNoO2Z1bmN0aW9uIGRlYm91bmNlKGUscil7dmFyIHQ9MDtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgbj10aGlzO3ZhciBpPWFyZ3VtZW50czt2YXIgYT1mdW5jdGlvbiBmdW5jdGlvbkNhbGwoKXtyZXR1cm4gZS5hcHBseShuLGkpfTtjbGVhclRpbWVvdXQodCk7dD1zZXRUaW1lb3V0KGEscil9fWZ1bmN0aW9uIG5vb3AoKXt9ZnVuY3Rpb24gZ2V0Q3VycmVudFNjcmlwdFVybChlKXt2YXIgcj1pW2VdO2lmKCFyKXtpZihkb2N1bWVudC5jdXJyZW50U2NyaXB0KXtyPWRvY3VtZW50LmN1cnJlbnRTY3JpcHQuc3JjfWVsc2V7dmFyIHQ9ZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJzY3JpcHRcIik7dmFyIGE9dFt0Lmxlbmd0aC0xXTtpZihhKXtyPWEuc3JjfX1pW2VdPXJ9cmV0dXJuIGZ1bmN0aW9uKGUpe2lmKCFyKXtyZXR1cm4gbnVsbH12YXIgdD1yLnNwbGl0KC8oW15cXFxcL10rKVxcLmpzJC8pO3ZhciBpPXQmJnRbMV07aWYoIWkpe3JldHVybltyLnJlcGxhY2UoXCIuanNcIixcIi5jc3NcIildfWlmKCFlKXtyZXR1cm5bci5yZXBsYWNlKFwiLmpzXCIsXCIuY3NzXCIpXX1yZXR1cm4gZS5zcGxpdChcIixcIikubWFwKChmdW5jdGlvbihlKXt2YXIgdD1uZXcgUmVnRXhwKFwiXCIuY29uY2F0KGksXCJcXFxcLmpzJFwiKSxcImdcIik7cmV0dXJuIG4oci5yZXBsYWNlKHQsXCJcIi5jb25jYXQoZS5yZXBsYWNlKC97ZmlsZU5hbWV9L2csaSksXCIuY3NzXCIpKSl9KSl9fWZ1bmN0aW9uIHVwZGF0ZUNzcyhlLHIpe2lmKCFyKXtpZighZS5ocmVmKXtyZXR1cm59cj1lLmhyZWYuc3BsaXQoXCI/XCIpWzBdfWlmKCFpc1VybFJlcXVlc3Qocikpe3JldHVybn1pZihlLmlzTG9hZGVkPT09ZmFsc2Upe3JldHVybn1pZighcnx8IShyLmluZGV4T2YoXCIuY3NzXCIpPi0xKSl7cmV0dXJufWUudmlzaXRlZD10cnVlO3ZhciB0PWUuY2xvbmVOb2RlKCk7dC5pc0xvYWRlZD1mYWxzZTt0LmFkZEV2ZW50TGlzdGVuZXIoXCJsb2FkXCIsKGZ1bmN0aW9uKCl7aWYodC5pc0xvYWRlZCl7cmV0dXJufXQuaXNMb2FkZWQ9dHJ1ZTtlLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoZSl9KSk7dC5hZGRFdmVudExpc3RlbmVyKFwiZXJyb3JcIiwoZnVuY3Rpb24oKXtpZih0LmlzTG9hZGVkKXtyZXR1cm59dC5pc0xvYWRlZD10cnVlO2UucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChlKX0pKTt0LmhyZWY9XCJcIi5jb25jYXQocixcIj9cIikuY29uY2F0KERhdGUubm93KCkpO2lmKGUubmV4dFNpYmxpbmcpe2UucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUodCxlLm5leHRTaWJsaW5nKX1lbHNle2UucGFyZW50Tm9kZS5hcHBlbmRDaGlsZCh0KX19ZnVuY3Rpb24gZ2V0UmVsb2FkVXJsKGUscil7dmFyIHQ7ZT1uKGUse3N0cmlwV1dXOmZhbHNlfSk7ci5zb21lKChmdW5jdGlvbihuKXtpZihlLmluZGV4T2Yocik+LTEpe3Q9bn19KSk7cmV0dXJuIHR9ZnVuY3Rpb24gcmVsb2FkU3R5bGUoZSl7aWYoIWUpe3JldHVybiBmYWxzZX12YXIgcj1kb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwibGlua1wiKTt2YXIgdD1mYWxzZTtvLmNhbGwociwoZnVuY3Rpb24ocil7aWYoIXIuaHJlZil7cmV0dXJufXZhciBuPWdldFJlbG9hZFVybChyLmhyZWYsZSk7aWYoIWlzVXJsUmVxdWVzdChuKSl7cmV0dXJufWlmKHIudmlzaXRlZD09PXRydWUpe3JldHVybn1pZihuKXt1cGRhdGVDc3MocixuKTt0PXRydWV9fSkpO3JldHVybiB0fWZ1bmN0aW9uIHJlbG9hZEFsbCgpe3ZhciBlPWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCJsaW5rXCIpO28uY2FsbChlLChmdW5jdGlvbihlKXtpZihlLnZpc2l0ZWQ9PT10cnVlKXtyZXR1cm59dXBkYXRlQ3NzKGUpfSkpfWZ1bmN0aW9uIGlzVXJsUmVxdWVzdChlKXtpZighL15bYS16QS1aXVthLXpBLVpcXGQrXFwtLl0qOi8udGVzdChlKSl7cmV0dXJuIGZhbHNlfXJldHVybiB0cnVlfWUuZXhwb3J0cz1mdW5jdGlvbihlLHIpe2lmKGEpe2NvbnNvbGUubG9nKFwibm8gd2luZG93LmRvY3VtZW50IGZvdW5kLCB3aWxsIG5vdCBITVIgQ1NTXCIpO3JldHVybiBub29wfXZhciB0PWdldEN1cnJlbnRTY3JpcHRVcmwoZSk7ZnVuY3Rpb24gdXBkYXRlKCl7dmFyIGU9dChyLmZpbGVuYW1lKTt2YXIgbj1yZWxvYWRTdHlsZShlKTtpZihyLmxvY2Fscyl7Y29uc29sZS5sb2coXCJbSE1SXSBEZXRlY3RlZCBsb2NhbCBjc3MgbW9kdWxlcy4gUmVsb2FkIGFsbCBjc3NcIik7cmVsb2FkQWxsKCk7cmV0dXJufWlmKG4pe2NvbnNvbGUubG9nKFwiW0hNUl0gY3NzIHJlbG9hZCAlc1wiLGUuam9pbihcIiBcIikpfWVsc2V7Y29uc29sZS5sb2coXCJbSE1SXSBSZWxvYWQgYWxsIGNzc1wiKTtyZWxvYWRBbGwoKX19cmV0dXJuIGRlYm91bmNlKHVwZGF0ZSw1MCl9fSw4MDg6ZT0+e2Z1bmN0aW9uIG5vcm1hbGl6ZVVybChlKXtyZXR1cm4gZS5yZWR1Y2UoKGZ1bmN0aW9uKGUscil7c3dpdGNoKHIpe2Nhc2VcIi4uXCI6ZS5wb3AoKTticmVhaztjYXNlXCIuXCI6YnJlYWs7ZGVmYXVsdDplLnB1c2gocil9cmV0dXJuIGV9KSxbXSkuam9pbihcIi9cIil9ZS5leHBvcnRzPWZ1bmN0aW9uKGUpe2U9ZS50cmltKCk7aWYoL15kYXRhOi9pLnRlc3QoZSkpe3JldHVybiBlfXZhciByPWUuaW5kZXhPZihcIi8vXCIpIT09LTE/ZS5zcGxpdChcIi8vXCIpWzBdK1wiLy9cIjpcIlwiO3ZhciB0PWUucmVwbGFjZShuZXcgUmVnRXhwKHIsXCJpXCIpLFwiXCIpLnNwbGl0KFwiL1wiKTt2YXIgbj10WzBdLnRvTG93ZXJDYXNlKCkucmVwbGFjZSgvXFwuJC8sXCJcIik7dFswXT1cIlwiO3ZhciBpPW5vcm1hbGl6ZVVybCh0KTtyZXR1cm4gcituK2l9fX07dmFyIHI9e307ZnVuY3Rpb24gX19uY2N3cGNrX3JlcXVpcmVfXyh0KXt2YXIgbj1yW3RdO2lmKG4hPT11bmRlZmluZWQpe3JldHVybiBuLmV4cG9ydHN9dmFyIGk9clt0XT17ZXhwb3J0czp7fX07dmFyIGE9dHJ1ZTt0cnl7ZVt0XShpLGkuZXhwb3J0cyxfX25jY3dwY2tfcmVxdWlyZV9fKTthPWZhbHNlfWZpbmFsbHl7aWYoYSlkZWxldGUgclt0XX1yZXR1cm4gaS5leHBvcnRzfWlmKHR5cGVvZiBfX25jY3dwY2tfcmVxdWlyZV9fIT09XCJ1bmRlZmluZWRcIilfX25jY3dwY2tfcmVxdWlyZV9fLmFiPV9fZGlybmFtZStcIi9cIjt2YXIgdD1fX25jY3dwY2tfcmVxdWlyZV9fKDY4Nik7bW9kdWxlLmV4cG9ydHM9dH0pKCk7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js\n"));

/***/ }),

/***/ "./node_modules/next/font/local/target.css?{\"path\":\"pages/_app.tsx\",\"import\":\"\",\"arguments\":[{\"src\":\"./SuperMario256.ttf\",\"variable\":\"--my-font\"}],\"variableName\":\"myFont\"}":
/*!**********************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/font/local/target.css?{"path":"pages/_app.tsx","import":"","arguments":[{"src":"./SuperMario256.ttf","variable":"--my-font"}],"variableName":"myFont"} ***!
  \**********************************************************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("// extracted by mini-css-extract-plugin\nmodule.exports = {\"style\":{\"fontFamily\":\"'__myFont_502ea1', '__myFont_Fallback_502ea1'\"},\"className\":\"__className_502ea1\",\"variable\":\"__variable_502ea1\"};\n    if(true) {\n      // 1714530256434\n      var cssReload = __webpack_require__(/*! ./node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js */ \"./node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js\")(module.id, {\"publicPath\":\"/_next/\",\"esModule\":false,\"locals\":true});\n      module.hot.dispose(cssReload);\n      \n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9mb250L2xvY2FsL3RhcmdldC5jc3M/e1wicGF0aFwiOlwicGFnZXMvX2FwcC50c3hcIixcImltcG9ydFwiOlwiXCIsXCJhcmd1bWVudHNcIjpbe1wic3JjXCI6XCIuL1N1cGVyTWFyaW8yNTYudHRmXCIsXCJ2YXJpYWJsZVwiOlwiLS1teS1mb250XCJ9XSxcInZhcmlhYmxlTmFtZVwiOlwibXlGb250XCJ9IiwibWFwcGluZ3MiOiJBQUFBO0FBQ0Esa0JBQWtCLFNBQVMsNkRBQTZEO0FBQ3hGLE9BQU8sSUFBVTtBQUNqQjtBQUNBLHNCQUFzQixtQkFBTyxDQUFDLG9MQUFzSSxjQUFjLHNEQUFzRDtBQUN4TyxNQUFNLFVBQVU7QUFDaEI7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2ZvbnQvbG9jYWwvdGFyZ2V0LmNzcz85NzkyIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxubW9kdWxlLmV4cG9ydHMgPSB7XCJzdHlsZVwiOntcImZvbnRGYW1pbHlcIjpcIidfX215Rm9udF81MDJlYTEnLCAnX19teUZvbnRfRmFsbGJhY2tfNTAyZWExJ1wifSxcImNsYXNzTmFtZVwiOlwiX19jbGFzc05hbWVfNTAyZWExXCIsXCJ2YXJpYWJsZVwiOlwiX192YXJpYWJsZV81MDJlYTFcIn07XG4gICAgaWYobW9kdWxlLmhvdCkge1xuICAgICAgLy8gMTcxNDUzMDI1NjQzNFxuICAgICAgdmFyIGNzc1JlbG9hZCA9IHJlcXVpcmUoXCIvVXNlcnMvZ2F1cG9pdC9Xb3JrL2Nyb3NzeC9kcmlua2luZy1nYW1lLWxhbmRpbmcvbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9taW5pLWNzcy1leHRyYWN0LXBsdWdpbi9obXIvaG90TW9kdWxlUmVwbGFjZW1lbnQuanNcIikobW9kdWxlLmlkLCB7XCJwdWJsaWNQYXRoXCI6XCIvX25leHQvXCIsXCJlc01vZHVsZVwiOmZhbHNlLFwibG9jYWxzXCI6dHJ1ZX0pO1xuICAgICAgbW9kdWxlLmhvdC5kaXNwb3NlKGNzc1JlbG9hZCk7XG4gICAgICBcbiAgICB9XG4gICJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/font/local/target.css?{\"path\":\"pages/_app.tsx\",\"import\":\"\",\"arguments\":[{\"src\":\"./SuperMario256.ttf\",\"variable\":\"--my-font\"}],\"variableName\":\"myFont\"}\n"));

/***/ }),

/***/ "./node_modules/react/cjs/react-jsx-dev-runtime.development.js":
/*!*********************************************************************!*\
  !*** ./node_modules/react/cjs/react-jsx-dev-runtime.development.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false; // Track which Fiber(s) schedule render work.\n\nvar REACT_MODULE_REFERENCE;\n\n{\n  REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');\n}\n\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === 'number') {\n      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n        return getContextName(context) + '.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        var provider = type;\n        return getContextName(provider._context) + '.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n\n      // eslint-disable-next-line no-fallthrough\n    }\n  }\n\n  return null;\n}\n\nvar assign = Object.assign;\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if ( !fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  var control;\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n\n  try {\n    // This should throw.\n    if (construct) {\n      // Something should be setting the props in the constructor.\n      var Fake = function () {\n        throw Error();\n      }; // $FlowFixMe\n\n\n      Object.defineProperty(Fake.prototype, 'props', {\n        set: function () {\n          // We use a throwing setter instead of frozen or non-writable props\n          // because that won't throw in a non-strict mode function.\n          throw Error();\n        }\n      });\n\n      if (typeof Reflect === 'object' && Reflect.construct) {\n        // We construct a different control for this case to include any extra\n        // frames added by the construct call.\n        try {\n          Reflect.construct(Fake, []);\n        } catch (x) {\n          control = x;\n        }\n\n        Reflect.construct(fn, [], Fake);\n      } else {\n        try {\n          Fake.call();\n        } catch (x) {\n          control = x;\n        }\n\n        fn.call(Fake.prototype);\n      }\n    } else {\n      try {\n        throw Error();\n      } catch (x) {\n        control = x;\n      }\n\n      fn();\n    }\n  } catch (sample) {\n    // This is inlined manually because closure doesn't do it for us.\n    if (sample && control && typeof sample.stack === 'string') {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sample.stack.split('\\n');\n      var controlLines = control.stack.split('\\n');\n      var s = sampleLines.length - 1;\n      var c = controlLines.length - 1;\n\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n        // We expect at least one stack frame to be shared.\n        // Typically this will be the root most one. However, stack frames may be\n        // cut off due to maximum stack limits. In this case, one maybe cut off\n        // earlier than the other. We assume that the sample is longer or the same\n        // and there for cut off earlier. So we should find the root most frame in\n        // the sample somewhere in the control.\n        c--;\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar loggedTypeFailures = {};\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\n  {\n    // $FlowFixMe This is okay but Flow doesn't know it.\n    var has = Function.call.bind(hasOwnProperty);\n\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            // eslint-disable-next-line react-internal/prod-error-codes\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n        } catch (ex) {\n          error$1 = ex;\n        }\n\n        if (error$1 && !(error$1 instanceof Error)) {\n          setCurrentlyValidatingElement(element);\n\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\n\n          setCurrentlyValidatingElement(null);\n        }\n\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error$1.message] = true;\n          setCurrentlyValidatingElement(element);\n\n          error('Failed %s type: %s', location, error$1.message);\n\n          setCurrentlyValidatingElement(null);\n        }\n      }\n    }\n  }\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n/*\n * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';\n    return type;\n  }\n} // $FlowFixMe only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\nvar didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingRef = function () {\n      if (!specialPropRefWarningShown) {\n        specialPropRefWarningShown = true;\n\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingRef.isReactWarning = true;\n    Object.defineProperty(props, 'ref', {\n      get: warnAboutAccessingRef,\n      configurable: true\n    });\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // self and source are DEV only properties.\n\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    }); // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV(type, config, maybeKey, source, self) {\n  {\n    var propName; // Reserved names are extracted\n\n    var props = {};\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      {\n        checkKeyStringCoercion(maybeKey);\n      }\n\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) {\n      ref = config.ref;\n      warnIfStringRefCannotBeAutoConverted(config, self);\n    } // Remaining properties are added to a new props object\n\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    } // Resolve default props\n\n\n    if (type && type.defaultProps) {\n      var defaultProps = type.defaultProps;\n\n      for (propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n\n    return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n  }\n}\n\nvar ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement$1(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n    }\n  }\n}\n\nvar propTypesMisspellWarningShown;\n\n{\n  propTypesMisspellWarningShown = false;\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\n\nfunction isValidElement(object) {\n  {\n    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    if (ReactCurrentOwner$1.current) {\n      var name = getComponentNameFromType(ReactCurrentOwner$1.current.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n\nfunction getSourceInfoErrorAddendum(source) {\n  {\n    if (source !== undefined) {\n      var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n      var lineNumber = source.lineNumber;\n      return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n    }\n\n    return '';\n  }\n}\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\n\n\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) {\n      // Give the component that originally created this child.\n      childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n    }\n\n    setCurrentlyValidatingElement$1(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement$1(null);\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object') {\n      return;\n    }\n\n    if (isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else if (node) {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n          var step;\n\n          while (!(step = iterator.next()).done) {\n            if (isValidElement(step.value)) {\n              validateExplicitKey(step.value, parentType);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\n\n\nfunction validatePropTypes(element) {\n  {\n    var type = element.type;\n\n    if (type === null || type === undefined || typeof type === 'string') {\n      return;\n    }\n\n    var propTypes;\n\n    if (typeof type === 'function') {\n      propTypes = type.propTypes;\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n    // Inner props are checked in the reconciler.\n    type.$$typeof === REACT_MEMO_TYPE)) {\n      propTypes = type.propTypes;\n    } else {\n      return;\n    }\n\n    if (propTypes) {\n      // Intentionally inside to avoid triggering lazy initializers:\n      var name = getComponentNameFromType(type);\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n\n      var _name = getComponentNameFromType(type);\n\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');\n    }\n\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n    }\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement$1(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement$1(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement$1(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement$1(null);\n    }\n  }\n}\n\nfunction jsxWithValidation(type, props, key, isStaticChildren, source, self) {\n  {\n    var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n    // succeed and there will likely be errors in render.\n\n    if (!validType) {\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var sourceInfo = getSourceInfoErrorAddendum(source);\n\n      if (sourceInfo) {\n        info += sourceInfo;\n      } else {\n        info += getDeclarationErrorAddendum();\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    }\n\n    var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.\n    // TODO: Drop this when these are no longer allowed as the type argument.\n\n    if (element == null) {\n      return element;\n    } // Skip key warning if the type isn't valid since our key validation logic\n    // doesn't expect a non-string/function type and can throw confusing errors.\n    // We don't want exception behavior to differ between dev and prod.\n    // (Rendering will throw with a helpful message and as soon as the type is\n    // fixed, the key warnings will appear.)\n\n\n    if (validType) {\n      var children = props.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    }\n\n    if (type === REACT_FRAGMENT_TYPE) {\n      validateFragmentProps(element);\n    } else {\n      validatePropTypes(element);\n    }\n\n    return element;\n  }\n} // These two functions exist to still get child warnings in dev\n\nvar jsxDEV$1 =  jsxWithValidation ;\n\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsxDEV = jsxDEV$1;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react/cjs/react-jsx-dev-runtime.development.js\n"));

/***/ }),

/***/ "./node_modules/react/jsx-dev-runtime.js":
/*!***********************************************!*\
  !*** ./node_modules/react/jsx-dev-runtime.js ***!
  \***********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"./node_modules/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsRUFBRSx1SkFBc0U7QUFDeEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2pzeC1kZXYtcnVudGltZS5qcz81Nzc3Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1qc3gtZGV2LXJ1bnRpbWUucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLmRldmVsb3BtZW50LmpzJyk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/react/jsx-dev-runtime.js\n"));

/***/ }),

/***/ "./node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.development.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.development.js ***!
  \**********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * use-sync-external-store-shim.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n\n          'use strict';\n\n/* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n}\n          var React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x, y) {\n  return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare\n  ;\n}\n\nvar objectIs = typeof Object.is === 'function' ? Object.is : is;\n\n// dispatch for CommonJS interop named imports.\n\nvar useState = React.useState,\n    useEffect = React.useEffect,\n    useLayoutEffect = React.useLayoutEffect,\n    useDebugValue = React.useDebugValue;\nvar didWarnOld18Alpha = false;\nvar didWarnUncachedGetSnapshot = false; // Disclaimer: This shim breaks many of the rules of React, and only works\n// because of a very particular set of implementation details and assumptions\n// -- change any one of them and it will break. The most important assumption\n// is that updates are always synchronous, because concurrent rendering is\n// only available in versions of React that also have a built-in\n// useSyncExternalStore API. And we only use this shim when the built-in API\n// does not exist.\n//\n// Do not assume that the clever hacks used by this hook also work in general.\n// The point of this shim is to replace the need for hacks by other libraries.\n\nfunction useSyncExternalStore(subscribe, getSnapshot, // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n// React do not expose a way to check if we're hydrating. So users of the shim\n// will need to track that themselves and return the correct value\n// from `getSnapshot`.\ngetServerSnapshot) {\n  {\n    if (!didWarnOld18Alpha) {\n      if (React.startTransition !== undefined) {\n        didWarnOld18Alpha = true;\n\n        error('You are using an outdated, pre-release alpha of React 18 that ' + 'does not support useSyncExternalStore. The ' + 'use-sync-external-store shim will not work correctly. Upgrade ' + 'to a newer pre-release.');\n      }\n    }\n  } // Read the current snapshot from the store on every render. Again, this\n  // breaks the rules of React, and only works here because of specific\n  // implementation details, most importantly that updates are\n  // always synchronous.\n\n\n  var value = getSnapshot();\n\n  {\n    if (!didWarnUncachedGetSnapshot) {\n      var cachedValue = getSnapshot();\n\n      if (!objectIs(value, cachedValue)) {\n        error('The result of getSnapshot should be cached to avoid an infinite loop');\n\n        didWarnUncachedGetSnapshot = true;\n      }\n    }\n  } // Because updates are synchronous, we don't queue them. Instead we force a\n  // re-render whenever the subscribed state changes by updating an some\n  // arbitrary useState hook. Then, during render, we call getSnapshot to read\n  // the current value.\n  //\n  // Because we don't actually use the state returned by the useState hook, we\n  // can save a bit of memory by storing other stuff in that slot.\n  //\n  // To implement the early bailout, we need to track some things on a mutable\n  // object. Usually, we would put that in a useRef hook, but we can stash it in\n  // our useState hook instead.\n  //\n  // To force a re-render, we call forceUpdate({inst}). That works because the\n  // new object always fails an equality check.\n\n\n  var _useState = useState({\n    inst: {\n      value: value,\n      getSnapshot: getSnapshot\n    }\n  }),\n      inst = _useState[0].inst,\n      forceUpdate = _useState[1]; // Track the latest getSnapshot function with a ref. This needs to be updated\n  // in the layout phase so we can access it during the tearing check that\n  // happens on subscribe.\n\n\n  useLayoutEffect(function () {\n    inst.value = value;\n    inst.getSnapshot = getSnapshot; // Whenever getSnapshot or subscribe changes, we need to check in the\n    // commit phase if there was an interleaved mutation. In concurrent mode\n    // this can happen all the time, but even in synchronous mode, an earlier\n    // effect may have mutated the store.\n\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({\n        inst: inst\n      });\n    }\n  }, [subscribe, value, getSnapshot]);\n  useEffect(function () {\n    // Check for changes right before subscribing. Subsequent changes will be\n    // detected in the subscription handler.\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({\n        inst: inst\n      });\n    }\n\n    var handleStoreChange = function () {\n      // TODO: Because there is no cross-renderer API for batching updates, it's\n      // up to the consumer of this library to wrap their subscription event\n      // with unstable_batchedUpdates. Should we try to detect when this isn't\n      // the case and print a warning in development?\n      // The store changed. Check if the snapshot changed since the last time we\n      // read from the store.\n      if (checkIfSnapshotChanged(inst)) {\n        // Force a re-render.\n        forceUpdate({\n          inst: inst\n        });\n      }\n    }; // Subscribe to the store and return a clean-up function.\n\n\n    return subscribe(handleStoreChange);\n  }, [subscribe]);\n  useDebugValue(value);\n  return value;\n}\n\nfunction checkIfSnapshotChanged(inst) {\n  var latestGetSnapshot = inst.getSnapshot;\n  var prevValue = inst.value;\n\n  try {\n    var nextValue = latestGetSnapshot();\n    return !objectIs(prevValue, nextValue);\n  } catch (error) {\n    return true;\n  }\n}\n\nfunction useSyncExternalStore$1(subscribe, getSnapshot, getServerSnapshot) {\n  // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n  // React do not expose a way to check if we're hydrating. So users of the shim\n  // will need to track that themselves and return the correct value\n  // from `getSnapshot`.\n  return getSnapshot();\n}\n\nvar canUseDOM = !!(typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined');\n\nvar isServerEnvironment = !canUseDOM;\n\nvar shim = isServerEnvironment ? useSyncExternalStore$1 : useSyncExternalStore;\nvar useSyncExternalStore$2 = React.useSyncExternalStore !== undefined ? React.useSyncExternalStore : shim;\n\nexports.useSyncExternalStore = useSyncExternalStore$2;\n          /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n}\n        \n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.development.js\n"));

/***/ }),

/***/ "./node_modules/use-sync-external-store/shim/index.js":
/*!************************************************************!*\
  !*** ./node_modules/use-sync-external-store/shim/index.js ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ../cjs/use-sync-external-store-shim.development.js */ \"./node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXNlLXN5bmMtZXh0ZXJuYWwtc3RvcmUvc2hpbS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixJQUFJLEtBQXFDLEVBQUUsRUFFMUMsQ0FBQztBQUNGLEVBQUUsd0xBQThFO0FBQ2hGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy91c2Utc3luYy1leHRlcm5hbC1zdG9yZS9zaGltL2luZGV4LmpzPzJlODciXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4uL2Nqcy91c2Utc3luYy1leHRlcm5hbC1zdG9yZS1zaGltLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4uL2Nqcy91c2Utc3luYy1leHRlcm5hbC1zdG9yZS1zaGltLmRldmVsb3BtZW50LmpzJyk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/use-sync-external-store/shim/index.js\n"));

/***/ }),

/***/ "./node_modules/@casperdash/usewallet-core/dist/index.js":
/*!***************************************************************!*\
  !*** ./node_modules/@casperdash/usewallet-core/dist/index.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("var casper_js_sdk__WEBPACK_IMPORTED_MODULE_4___namespace_cache;\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AlgoEnum: function() { return /* binding */ AlgoEnum; },\n/* harmony export */   CONNECT_ERROR_MESSAGE: function() { return /* binding */ CONNECT_ERROR_MESSAGE; },\n/* harmony export */   CasperDashConnector: function() { return /* binding */ CasperDashConnector; },\n/* harmony export */   CasperDashWebConnector: function() { return /* binding */ CasperDashWebConnector; },\n/* harmony export */   CasperSignerConnector: function() { return /* binding */ CasperSignerConnector; },\n/* harmony export */   CasperWalletConnector: function() { return /* binding */ CasperWalletConnector; },\n/* harmony export */   Client: function() { return /* binding */ Client; },\n/* harmony export */   ClientNotFoundError: function() { return /* binding */ ClientNotFoundError; },\n/* harmony export */   Connector: function() { return /* binding */ Connector2; },\n/* harmony export */   ConnectorAlreadyConnectedError: function() { return /* binding */ ConnectorAlreadyConnectedError; },\n/* harmony export */   ConnectorNotFoundError: function() { return /* binding */ ConnectorNotFoundError; },\n/* harmony export */   ConnectorNotLedgerError: function() { return /* binding */ ConnectorNotLedgerError; },\n/* harmony export */   DeployTypes: function() { return /* binding */ DeployTypes; },\n/* harmony export */   LedgerEnum: function() { return /* binding */ LedgerEnum; },\n/* harmony export */   ProviderUrlDoesNotExistError: function() { return /* binding */ ProviderUrlDoesNotExistError; },\n/* harmony export */   RejectedSignDeployError: function() { return /* binding */ RejectedSignDeployError; },\n/* harmony export */   RejectedSignMessageError: function() { return /* binding */ RejectedSignMessageError; },\n/* harmony export */   StatusEnum: function() { return /* binding */ StatusEnum; },\n/* harmony export */   client: function() { return /* binding */ client; },\n/* harmony export */   connect: function() { return /* binding */ connect; },\n/* harmony export */   createClient: function() { return /* binding */ createClient; },\n/* harmony export */   deepEqual: function() { return /* binding */ deepEqual; },\n/* harmony export */   disconnect: function() { return /* binding */ disconnect; },\n/* harmony export */   getAccount: function() { return /* binding */ getAccount; },\n/* harmony export */   getActivePublicKey: function() { return /* binding */ getActivePublicKey; },\n/* harmony export */   getClient: function() { return /* binding */ getClient; },\n/* harmony export */   getDeployType: function() { return /* binding */ getDeployType; },\n/* harmony export */   getLedgerAccountIndex: function() { return /* binding */ getLedgerAccountIndex; },\n/* harmony export */   getLedgerError: function() { return /* binding */ getLedgerError; },\n/* harmony export */   getLedgerPath: function() { return /* binding */ getLedgerPath; },\n/* harmony export */   getLedgerPublicKey: function() { return /* binding */ getLedgerPublicKey; },\n/* harmony export */   isConnected: function() { return /* binding */ isConnected; },\n/* harmony export */   setLedgerAccountIndex: function() { return /* binding */ setLedgerAccountIndex; },\n/* harmony export */   sign: function() { return /* binding */ sign; },\n/* harmony export */   signMessage: function() { return /* binding */ signMessage; },\n/* harmony export */   watchAccount: function() { return /* binding */ watchAccount; }\n/* harmony export */ });\n/* harmony import */ var zustand_vanilla__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! zustand/vanilla */ \"./node_modules/zustand/esm/vanilla.mjs\");\n/* harmony import */ var zustand_middleware__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! zustand/middleware */ \"./node_modules/zustand/esm/middleware.mjs\");\n/* harmony import */ var zustand_shallow__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! zustand/shallow */ \"./node_modules/zustand/esm/shallow.mjs\");\n/* harmony import */ var eventemitter3__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! eventemitter3 */ \"./node_modules/eventemitter3/index.mjs\");\n/* harmony import */ var casper_js_sdk__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! casper-js-sdk */ \"./node_modules/casper-js-sdk/dist/lib.js\");\n// src/utils/client.ts\n\n\n\n// src/enums/status.ts\nvar StatusEnum = /* @__PURE__ */ ((StatusEnum2) => {\n  StatusEnum2[\"CONNECTED\"] = \"connected\";\n  StatusEnum2[\"CONNECTING\"] = \"connecting\";\n  StatusEnum2[\"RECONNECTING\"] = \"reconnecting\";\n  StatusEnum2[\"DISCONNECTED\"] = \"disconnected\";\n  StatusEnum2[\"LOCKED\"] = \"locked\";\n  return StatusEnum2;\n})(StatusEnum || {});\n\n// src/enums/algo.ts\nvar AlgoEnum = /* @__PURE__ */ ((AlgoEnum2) => {\n  AlgoEnum2[\"SECP256K1\"] = \"02\";\n  return AlgoEnum2;\n})(AlgoEnum || {});\n\n// src/enums/deployTypes.ts\nvar DeployTypes = /* @__PURE__ */ ((DeployTypes2) => {\n  DeployTypes2[\"WASM\"] = \"wasm\";\n  DeployTypes2[\"TRANSFER\"] = \"transfer\";\n  DeployTypes2[\"CONTRACT_CALL\"] = \"contractCall\";\n  DeployTypes2[\"CONTRACT_PACKAGE_CALL\"] = \"contractPackageCall\";\n  return DeployTypes2;\n})(DeployTypes || {});\n\n// src/enums/ledger.ts\nvar LedgerEnum = /* @__PURE__ */ ((LedgerEnum2) => {\n  LedgerEnum2[\"CASPER_KEY_PATH\"] = \"m/44'/506'/0'/0/\";\n  return LedgerEnum2;\n})(LedgerEnum || {});\n\n// src/errors/ConnectorNotFoundError.ts\nvar ConnectorNotFoundError = class extends Error {\n  constructor() {\n    super(...arguments);\n    this.name = \"ConnectorNotFoundError\";\n    this.message = \"Connector not found\";\n  }\n};\n\n// src/errors/ConnectorAlreadyConnectedError.ts\nvar ConnectorAlreadyConnectedError = class extends Error {\n  constructor() {\n    super(...arguments);\n    this.name = \"ConnectorAlreadyConnectedError\";\n    this.message = \"Connector already connected\";\n  }\n};\n\n// src/errors/ClientNotFoundError.ts\nvar ClientNotFoundError = class extends Error {\n  constructor() {\n    super(...arguments);\n    this.name = \"ClientNotFoundError\";\n    this.message = \"Client not found\";\n  }\n};\n\n// src/errors/ProviderUrlDoesNotExistError.ts\nvar ProviderUrlDoesNotExistError = class extends Error {\n  constructor() {\n    super(...arguments);\n    this.name = \"ProviderUrlDoesNotExistError\";\n    this.message = \"Provider URL does not exist\";\n  }\n};\n\n// src/errors/RejectedSignDeployError.ts\nvar RejectedSignDeployError = class extends Error {\n  constructor() {\n    super(...arguments);\n    this.name = \"RejectedSignDeployError\";\n    this.message = \"Rejected sign message\";\n  }\n};\n\n// src/errors/RejectedSignMessageError.ts\nvar RejectedSignMessageError = class extends Error {\n  constructor() {\n    super(...arguments);\n    this.name = \"RejectedSignMessageError\";\n    this.message = \"Rejected sign message\";\n  }\n};\n\n// src/errors/ConnectorNotLedgerError.ts\nvar ConnectorNotLedgerError = class extends Error {\n  constructor() {\n    super(...arguments);\n    this.name = \"ConnectorNotLedgerError\";\n    this.message = \"Connector is not ledger\";\n  }\n};\n\n// src/utils/storage.ts\nvar noopStorage = {\n  getItem: (_key) => \"\",\n  setItem: (_key, _value) => null,\n  removeItem: (_key) => null\n};\nfunction createStorage({\n  key: prefix = \"casperdash-usewallet\",\n  storage\n}) {\n  return {\n    ...storage,\n    getItem: (key, defaultState = null) => {\n      const value = storage.getItem(`${prefix}.${key}`);\n      try {\n        return value ? JSON.parse(value) : value;\n      } catch (error) {\n        console.warn(error);\n        return defaultState;\n      }\n    },\n    setItem: (key, value) => {\n      if (value === null) {\n        storage.removeItem(`${prefix}.${key}`);\n        return;\n      }\n      try {\n        storage.setItem(`${prefix}.${key}`, JSON.stringify(value));\n      } catch (err) {\n        console.error(err);\n      }\n    },\n    removeItem: (key) => storage.removeItem(`${prefix}.${key}`)\n  };\n}\n\n// src/utils/parser.ts\nvar maybeParseDetailEvent = (detail) => {\n  if (typeof detail === \"string\") {\n    return JSON.parse(detail);\n  }\n  return detail;\n};\n\n// src/utils/client.ts\nvar Client = class {\n  constructor({\n    autoConnect = false,\n    connectors,\n    storage = createStorage({\n      storage: typeof window !== \"undefined\" ? window.localStorage : noopStorage\n    })\n  }) {\n    this.store = (0,zustand_vanilla__WEBPACK_IMPORTED_MODULE_0__.createStore)((0,zustand_middleware__WEBPACK_IMPORTED_MODULE_1__.subscribeWithSelector)(() => ({\n      connectors,\n      status: \"disconnected\" /* DISCONNECTED */,\n      autoConnect\n    })));\n    this.triggerEvent();\n    this.lastUsedConnector = storage.getItem(\"wallet\");\n    this.storage = storage;\n    void this.triggerAutoConnect(autoConnect, connectors);\n  }\n  get state() {\n    return this.store.getState();\n  }\n  get connector() {\n    return this.store.getState().connector;\n  }\n  get connectors() {\n    return this.store.getState().connectors;\n  }\n  get subscribe() {\n    return this.store.subscribe;\n  }\n  get data() {\n    return this.store.getState().data;\n  }\n  get status() {\n    return this.store.getState().status;\n  }\n  setLastUsedConnector(lastUsedConnector = null) {\n    this.storage?.setItem(\"wallet\", lastUsedConnector);\n  }\n  clearState() {\n    this.setState((x) => ({\n      ...x,\n      connector: void 0,\n      data: void 0,\n      status: \"disconnected\" /* DISCONNECTED */\n    }));\n  }\n  setState(updater) {\n    const newState = typeof updater === \"function\" ? updater(this.store.getState()) : updater;\n    this.store.setState(newState, true);\n  }\n  async autoConnect() {\n    if (this.isAutoConnecting) {\n      return;\n    }\n    if (this.status === \"connected\" /* CONNECTED */) {\n      return;\n    }\n    this.isAutoConnecting = true;\n    this.setState((x) => ({\n      ...x,\n      status: x.data?.activeKey ? \"reconnecting\" /* RECONNECTING */ : \"connecting\" /* CONNECTING */\n    }));\n    let isConnected2 = false;\n    const sortedConnectors = this.lastUsedConnector && this.connectors ? [...this.connectors].sort(\n      (connector) => connector.id === this.lastUsedConnector ? -1 : 1\n    ) : this.connectors;\n    for (const connector of sortedConnectors || []) {\n      let isConnectedWithConnector;\n      try {\n        isConnectedWithConnector = await connector.isConnected();\n      } catch (_err) {\n        isConnectedWithConnector = false;\n      }\n      if (isConnectedWithConnector) {\n        let publicKey = await this.getPublicKeyFromConnector(connector);\n        if (!publicKey) {\n          this.setState((x) => ({\n            ...x,\n            connector\n          }));\n          try {\n            await connector.connect();\n          } catch (err) {\n            console.error(err);\n          }\n        }\n        try {\n          publicKey = await connector?.getActivePublicKey();\n          this.setState((x) => ({\n            ...x,\n            status: \"connected\" /* CONNECTED */,\n            connector,\n            data: {\n              ...x.data,\n              activeKey: publicKey\n            }\n          }));\n          isConnected2 = true;\n          break;\n        } catch (err) {\n          console.error(err);\n        }\n      }\n    }\n    if (!isConnected2) {\n      this.setState((x) => ({\n        ...x,\n        status: \"disconnected\" /* DISCONNECTED */\n      }));\n    }\n    this.isAutoConnecting = false;\n    return this.data;\n  }\n  async triggerAutoConnect(autoConnect, connectors) {\n    if (autoConnect && typeof window !== \"undefined\") {\n      let x = 0;\n      const intervalID = setInterval(async () => {\n        let isReady = false;\n        for (let index = 0; index < connectors.length; index++) {\n          const connector = connectors[index];\n          if (!connector) {\n            continue;\n          }\n          try {\n            const isConnected2 = await connector.getProvider();\n            if (isConnected2) {\n              isReady = true;\n            }\n          } catch (err) {\n          }\n        }\n        if (++x === 5 || isReady) {\n          setTimeout(async () => this.autoConnect(), 0);\n          window?.clearInterval(intervalID);\n        }\n      }, 100);\n    }\n  }\n  triggerEvent() {\n    if (typeof window === \"undefined\") {\n      return;\n    }\n    const onChange = async (data) => {\n      const isConnected2 = await this.connector?.isConnected();\n      this.setState((x) => ({\n        ...x,\n        data: { ...x.data, ...data, isConnected: isConnected2 }\n      }));\n    };\n    const onUnlock = async ({ isUnlocked }) => {\n      if (!isUnlocked) {\n        return;\n      }\n      const publicKey = await this.getPublicKeyFromConnector(this.connector);\n      this.setState((oldState) => ({\n        ...oldState,\n        data: { ...oldState.data, activeKey: publicKey },\n        status: publicKey ? \"connected\" /* CONNECTED */ : \"disconnected\" /* DISCONNECTED */\n      }));\n    };\n    const onDisconnect = () => {\n      this.clearState();\n    };\n    const onConnect = (data) => {\n      this.setState((x) => ({\n        ...x,\n        data: { ...x.data, ...data },\n        status: \"connected\" /* CONNECTED */\n      }));\n    };\n    window?.addEventListener(\n      \"casper:change\",\n      async (event) => onChange(maybeParseDetailEvent(event.detail))\n    );\n    window?.addEventListener(\"casper:disconnect\", () => onDisconnect());\n    window?.addEventListener(\n      \"casper:connect\",\n      (event) => onConnect(maybeParseDetailEvent(event.detail))\n    );\n    window?.addEventListener(\n      \"casper:unlocked\",\n      async (event) => onUnlock(maybeParseDetailEvent(event.detail))\n    );\n  }\n  async getPublicKeyFromConnector(connector) {\n    let publicKey;\n    try {\n      publicKey = await connector?.getActivePublicKey();\n    } catch (err) {\n      publicKey = void 0;\n    }\n    return publicKey;\n  }\n};\nvar client;\nvar createClient = (clientConfig) => {\n  client = new Client(clientConfig);\n  return client;\n};\nvar getClient = () => {\n  if (!client) {\n    throw new ClientNotFoundError();\n  }\n  return client;\n};\n\n// src/actions/account/connect.ts\nvar getActiveKey = async (connector) => {\n  const activeKey = await connector.getActivePublicKey();\n  if (!activeKey) {\n    throw new Error(\"Public key not found\");\n  }\n  return {\n    activeKey\n  };\n};\nvar connect = async ({ connector }) => {\n  const client2 = getClient();\n  const activeConnector = client2?.connector;\n  if (activeConnector && activeConnector.id !== connector.id) {\n    throw new ConnectorAlreadyConnectedError();\n  }\n  try {\n    client2.setState((x) => ({ ...x, status: \"connecting\" /* CONNECTING */ }));\n    await connector.connect();\n    let isConnected2 = false;\n    let customData = {};\n    try {\n      isConnected2 = !!await connector.isConnected();\n      if (isConnected2) {\n        const { activeKey } = await getActiveKey(connector);\n        customData = {\n          activeKey\n        };\n      }\n    } catch (err) {\n      if (connector.id === \"ledger\") {\n        throw err;\n      }\n      await connector.connect();\n      try {\n        const { activeKey } = await getActiveKey(connector);\n        customData = {\n          activeKey\n        };\n      } catch {\n        customData = {};\n      }\n    }\n    client2.setLastUsedConnector(connector.id);\n    client2.setState((oldState) => ({\n      ...oldState,\n      connector,\n      status: customData.activeKey ? \"connected\" /* CONNECTED */ : \"connecting\" /* CONNECTING */,\n      data: {\n        ...oldState.data,\n        ...customData\n      }\n    }));\n    return { connector };\n  } catch (error) {\n    client2.setState((oldState) => {\n      return {\n        ...oldState,\n        status: oldState.connector ? \"connected\" /* CONNECTED */ : \"disconnected\" /* DISCONNECTED */\n      };\n    });\n    console.error(error);\n    throw error;\n  }\n};\n\n// src/actions/account/disconnect.ts\nvar disconnect = async () => {\n  const client2 = getClient();\n  try {\n    await client2.connector?.disconnect();\n    client2.clearState();\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// src/actions/account/isConnected.ts\nvar isConnected = async () => {\n  const connector = getClient()?.connector;\n  try {\n    const hasConnected = await connector?.isConnected();\n    return !!hasConnected;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n};\n\n// src/actions/account/getActivePublicKey.ts\nvar getActivePublicKey = async () => {\n  try {\n    const connector = getClient()?.connector;\n    const activeKey = await connector?.getActivePublicKey();\n    return activeKey;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\n// src/actions/account/watchAccount.ts\n\n\n// src/utils/deepEqual.ts\nfunction deepEqual(a, b) {\n  if (a === b)\n    return true;\n  if (a && b && typeof a === \"object\" && typeof b === \"object\") {\n    if (a.constructor !== b.constructor)\n      return false;\n    let length;\n    let i;\n    if (Array.isArray(a) && Array.isArray(b)) {\n      length = a.length;\n      if (length != b.length)\n        return false;\n      for (i = length; i-- !== 0; )\n        if (!deepEqual(a[i], b[i]))\n          return false;\n      return true;\n    }\n    if (a.valueOf !== Object.prototype.valueOf)\n      return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString)\n      return a.toString() === b.toString();\n    const keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length)\n      return false;\n    for (i = length; i-- !== 0; )\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i]))\n        return false;\n    for (i = length; i-- !== 0; ) {\n      const key = keys[i];\n      if (key && !deepEqual(a[key], b[key]))\n        return false;\n    }\n    return true;\n  }\n  return a !== a && b !== b;\n}\n\n// src/utils/deploy.ts\nvar getDeployType = (deploy) => {\n  return deploy.isTransfer() ? \"transfer\" /* TRANSFER */ : deploy.session.isModuleBytes() ? \"wasm\" /* WASM */ : deploy.session.isStoredContractByHash() || deploy.session.isStoredContractByName() ? \"contractCall\" /* CONTRACT_CALL */ : \"contractPackageCall\" /* CONTRACT_PACKAGE_CALL */;\n};\n\n// src/utils/ledger.ts\nvar CONNECT_ERROR_MESSAGE = \"You must open the Casper app on your Ledger device to connect.\";\nvar getLedgerError = (error, code) => {\n  if (\"TransportInterfaceNotAvailable\" === error.name || code === 27014) {\n    return CONNECT_ERROR_MESSAGE;\n  }\n  if (code === 27012) {\n    return \"Unsupported Deploy\";\n  }\n  return error.message;\n};\nvar getLedgerPath = (index) => {\n  return `${\"m/44'/506'/0'/0/\" /* CASPER_KEY_PATH */}${index}`;\n};\n\n// src/actions/account/getAccount.ts\nvar getAccount = () => {\n  try {\n    const client2 = getClient();\n    const { data, status, connector } = client2;\n    return {\n      publicKey: data?.activeKey,\n      status,\n      connector,\n      isConnected: data?.isConnected,\n      ledgerAccountIndex: data?.ledgerAccountIndex || \"0\"\n    };\n  } catch (error) {\n    console.error(error);\n    return null;\n  }\n};\n\n// src/actions/account/watchAccount.ts\nvar watchAccount = (callback, { selector = (params) => params } = {}) => {\n  const client2 = getClient();\n  const handleOnChange = () => callback(getAccount());\n  const unsubscribe = client2.subscribe(\n    ({ data, connector, status }) => {\n      return selector?.({\n        isConnected: data?.isConnected,\n        publicKey: data?.activeKey,\n        status,\n        connector,\n        ledgerAccountIndex: data?.ledgerAccountIndex || \"0\"\n      });\n    },\n    handleOnChange,\n    {\n      equalityFn: zustand_shallow__WEBPACK_IMPORTED_MODULE_2__.shallow\n    }\n  );\n  return unsubscribe;\n};\n\n// src/actions/account/getLedgerAccountIndex.ts\nvar getLedgerAccountIndex = async () => {\n  const connector = getClient()?.connector;\n  try {\n    if (connector && connector.id !== \"ledger\") {\n      throw new ConnectorNotLedgerError();\n    }\n    const accountIndex = connector?.getAccountIndex();\n    if (!accountIndex) {\n      throw new Error(\"Account index not found\");\n    }\n    return accountIndex;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\n// src/actions/account/setLedgerAccountIndex.ts\nvar setLedgerAccountIndex = async ({ index = \"0\" } = { index: \"0\" }) => {\n  try {\n    const client2 = getClient();\n    const { connector } = client2;\n    if (!connector || connector && connector.id !== \"ledger\") {\n      throw new ConnectorNotLedgerError();\n    }\n    const publicKey = await connector.getPublicKey(index);\n    client2.setState((oldState) => ({\n      ...oldState,\n      data: {\n        ...oldState.data,\n        ledgerAccountIndex: index,\n        activeKey: publicKey\n      }\n    }));\n    connector.setAccountIndex(index);\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\n// src/actions/account/getLedgerPublicKey.ts\nvar getLedgerPublicKey = async ({ index = \"0\" } = { index: \"0\" }) => {\n  const connector = getClient()?.connector;\n  try {\n    if (connector && connector.id !== \"ledger\") {\n      throw new ConnectorNotLedgerError();\n    }\n    const publicKey = await connector?.getPublicKey(index);\n    return publicKey;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\n// src/actions/signing/sign.ts\nvar sign = async ({ deploy, signingPublicKeyHex, targetPublicKeyHex }) => {\n  const connector = getClient()?.connector;\n  try {\n    if (!connector) {\n      throw new ConnectorNotFoundError();\n    }\n    return connector.sign(deploy, signingPublicKeyHex, targetPublicKeyHex);\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// src/actions/signing/signMessage.ts\nvar signMessage = async ({ message, signingPublicKeyHex }) => {\n  const connector = getClient()?.connector;\n  try {\n    if (!connector) {\n      throw new ConnectorNotFoundError();\n    }\n    return await connector.signMessage(message, signingPublicKeyHex);\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// src/connectors/base.ts\n\nvar Connector2 = class extends eventemitter3__WEBPACK_IMPORTED_MODULE_3__[\"default\"] {\n  constructor({\n    options\n  }) {\n    super();\n    this.options = options;\n  }\n  getOptions() {\n    return this.options;\n  }\n  emit(event, ...args) {\n    return super.emit(event, ...args);\n  }\n};\n\n// src/connectors/casperDash.ts\nvar CasperDashConnector = class extends Connector2 {\n  constructor({\n    options: defaultOptions\n  } = {}) {\n    const options = {\n      name: \"CasperDash\",\n      getProvider: () => {\n        return typeof window !== \"undefined\" ? window.casperDashHelper : void 0;\n      },\n      getEventProvider: () => {\n        return window;\n      },\n      ...defaultOptions\n    };\n    super({ options });\n    this.id = \"casperDash\";\n    this.isReady = false;\n    const provider = options.getProvider();\n    this.isReady = !!provider;\n  }\n  async getProvider() {\n    const provider = this.options.getProvider?.();\n    if (!provider) {\n      throw new ConnectorNotFoundError();\n    }\n    this.isReady = true;\n    return provider;\n  }\n  async getEventProvider() {\n    const eventProvider = this.options.getEventProvider?.();\n    if (!eventProvider) {\n      throw new ConnectorNotFoundError();\n    }\n    this.eventProvider = eventProvider;\n    return this.eventProvider;\n  }\n  async isConnected() {\n    try {\n      const provider = await this.getProvider();\n      const isConnected2 = await provider.isConnected();\n      return isConnected2;\n    } catch (err) {\n      console.error(err);\n      return false;\n    }\n  }\n  async disconnect() {\n    const provider = await this.getProvider();\n    const eventProvider = await this.getEventProvider();\n    eventProvider?.removeEventListener(\"casperdash:activeKeyChanged\", this.onActiveKeyChanged);\n    eventProvider?.removeEventListener(\"casperdash:disconnected\", this.onDisconnected);\n    eventProvider?.removeEventListener(\"casperdash:connected\", this.onConnected);\n    await provider?.disconnectFromSite();\n  }\n  async connect() {\n    const provider = await this.getProvider();\n    const eventProvider = await this.getEventProvider();\n    eventProvider?.addEventListener(\"casperdash:activeKeyChanged\", this.onActiveKeyChanged);\n    eventProvider?.addEventListener(\"casperdash:disconnected\", this.onDisconnected);\n    eventProvider?.addEventListener(\"casperdash:connected\", this.onConnected);\n    await provider.requestConnection();\n  }\n  async getActivePublicKey() {\n    const provider = await this.getProvider();\n    return provider?.getActivePublicKey();\n  }\n  async signMessage(message, signingPublicKeyHex) {\n    const provider = await this.getProvider();\n    return provider.signMessage(message, signingPublicKeyHex);\n  }\n  async sign(deploy, signingPublicKeyHex, targetPublicKey) {\n    const provider = await this.getProvider();\n    return provider.sign(deploy, signingPublicKeyHex, targetPublicKey);\n  }\n  onDisconnected() {\n    const customEvent = new CustomEvent(\"casper:disconnect\");\n    window.dispatchEvent(customEvent);\n  }\n  onActiveKeyChanged(event) {\n    const customEvent = new CustomEvent(\"casper:change\", event);\n    window.dispatchEvent(customEvent);\n  }\n  onConnected(event) {\n    const customEvent = new CustomEvent(\"casper:connect\", event);\n    window.dispatchEvent(customEvent);\n  }\n};\n\n// src/connectors/casperSigner.ts\nvar CasperSignerConnector = class extends Connector2 {\n  constructor({\n    options: defaultOptions\n  } = {}) {\n    const options = {\n      name: \"CasperSigner\",\n      getProvider: () => {\n        return typeof window !== \"undefined\" ? window.casperlabsHelper : void 0;\n      },\n      getEventProvider: () => {\n        return window;\n      },\n      ...defaultOptions\n    };\n    super({ options });\n    this.id = \"casperSigner\";\n    this.isReady = false;\n    const provider = options.getProvider();\n    this.isReady = !!provider;\n  }\n  async getProvider() {\n    const provider = this.options.getProvider?.();\n    if (!provider) {\n      throw new ConnectorNotFoundError();\n    }\n    this.provider = provider;\n    this.isReady = true;\n    return this.provider;\n  }\n  async getEventProvider() {\n    const eventProvider = this.options.getEventProvider?.();\n    if (!eventProvider) {\n      throw new ConnectorNotFoundError();\n    }\n    this.eventProvider = eventProvider;\n    return this.eventProvider;\n  }\n  async isConnected() {\n    try {\n      const provider = await this.getProvider();\n      return await provider.isConnected();\n    } catch (err) {\n      return false;\n    }\n  }\n  async disconnect() {\n    const provider = await this.getProvider();\n    const eventProvider = await this.getEventProvider();\n    eventProvider?.removeEventListener(\n      \"signer:activeKeyChanged\",\n      this.onActiveKeyChanged\n    );\n    eventProvider?.removeEventListener(\n      \"signer:disconnected\",\n      this.onDisconnected\n    );\n    eventProvider?.removeEventListener(\"signer:connected\", this.onConnected);\n    eventProvider?.removeEventListener(\"signer:unlocked\", this.onUnlocked);\n    provider.disconnectFromSite();\n  }\n  async connect() {\n    const provider = await this.getProvider();\n    const eventProvider = await this.getEventProvider();\n    eventProvider?.addEventListener(\n      \"signer:activeKeyChanged\",\n      this.onActiveKeyChanged\n    );\n    eventProvider?.addEventListener(\"signer:disconnected\", this.onDisconnected);\n    eventProvider?.addEventListener(\"signer:connected\", this.onConnected);\n    eventProvider?.addEventListener(\"signer:unlocked\", this.onUnlocked);\n    provider.requestConnection();\n  }\n  async getActivePublicKey() {\n    const provider = await this.getProvider();\n    return provider.getActivePublicKey();\n  }\n  async signMessage(message, signingPublicKeyHex) {\n    const provider = await this.getProvider();\n    return provider.signMessage(message, signingPublicKeyHex);\n  }\n  async sign(deploy, signingPublicKeyHex, targetPublicKeyHex) {\n    const provider = await this.getProvider();\n    return provider.sign(deploy, signingPublicKeyHex, targetPublicKeyHex);\n  }\n  onDisconnected() {\n    const customEvent = new CustomEvent(\"casper:disconnect\");\n    window.dispatchEvent(customEvent);\n  }\n  onActiveKeyChanged(event) {\n    const customEvent = new CustomEvent(\"casper:change\", event);\n    window.dispatchEvent(customEvent);\n  }\n  onConnected(event) {\n    const customEvent = new CustomEvent(\"casper:connect\", event);\n    window.dispatchEvent(customEvent);\n  }\n  onUnlocked(event) {\n    const customEvent = new CustomEvent(\"casper:unlocked\", event);\n    window.dispatchEvent(customEvent);\n  }\n};\n\n// src/connectors/casperWallet.ts\n\nvar { DeployUtil, CLPublicKey } = /*#__PURE__*/ (casper_js_sdk__WEBPACK_IMPORTED_MODULE_4___namespace_cache || (casper_js_sdk__WEBPACK_IMPORTED_MODULE_4___namespace_cache = __webpack_require__.t(casper_js_sdk__WEBPACK_IMPORTED_MODULE_4__, 2)));\nvar CasperWalletConnector = class extends Connector2 {\n  constructor({\n    options: defaultOptions\n  } = {}) {\n    const options = {\n      name: \"CasperSigner\",\n      getProvider: () => {\n        return typeof window !== \"undefined\" && window.CasperWalletProvider ? window.CasperWalletProvider() : void 0;\n      },\n      getEventProvider: () => {\n        return window;\n      },\n      ...defaultOptions\n    };\n    super({ options });\n    this.id = \"casperWallet\";\n    this.isReady = false;\n    const provider = options.getProvider();\n    this.isReady = !!provider;\n  }\n  async getProvider() {\n    const provider = this.options.getProvider?.();\n    if (!provider) {\n      throw new ConnectorNotFoundError();\n    }\n    this.provider = provider;\n    this.isReady = true;\n    return this.provider;\n  }\n  async getEventProvider() {\n    const eventProvider = this.options.getEventProvider?.();\n    if (!eventProvider) {\n      throw new ConnectorNotFoundError();\n    }\n    this.eventProvider = eventProvider;\n    return this.eventProvider;\n  }\n  async isConnected() {\n    try {\n      const provider = await this.getProvider();\n      return await provider.isConnected();\n    } catch (err) {\n      return false;\n    }\n  }\n  async disconnect() {\n    const provider = await this.getProvider();\n    const eventProvider = await this.getEventProvider();\n    eventProvider?.removeEventListener(\n      \"casper-wallet:activeKeyChanged\",\n      this.onActiveKeyChanged\n    );\n    eventProvider?.removeEventListener(\n      \"casper-wallet:disconnected\",\n      this.onDisconnected\n    );\n    eventProvider?.removeEventListener(\"casper-wallet:connected\", this.onConnected);\n    eventProvider?.removeEventListener(\"casper-wallet:unlocked\", this.onUnlocked);\n    await provider.disconnectFromSite();\n  }\n  async connect() {\n    const provider = await this.getProvider();\n    const eventProvider = await this.getEventProvider();\n    eventProvider?.addEventListener(\n      \"casper-wallet:activeKeyChanged\",\n      this.onActiveKeyChanged\n    );\n    eventProvider?.addEventListener(\"casper-wallet:disconnected\", this.onDisconnected);\n    eventProvider?.addEventListener(\"casper-wallet:connected\", this.onConnected);\n    eventProvider?.addEventListener(\"casper-wallet:unlocked\", this.onUnlocked);\n    await provider.requestConnection();\n  }\n  async getActivePublicKey() {\n    const provider = await this.getProvider();\n    return provider.getActivePublicKey();\n  }\n  async signMessage(message, signingPublicKeyHex) {\n    const provider = await this.getProvider();\n    const signatureResponse = await provider.signMessage(message, signingPublicKeyHex);\n    if (signatureResponse.cancelled) {\n      return void 0;\n    }\n    return signatureResponse.signatureHex;\n  }\n  async sign(deploy, signingPublicKeyHex) {\n    const provider = await this.getProvider();\n    const deployJson = DeployUtil.deployFromJson(deploy);\n    const res = await provider.sign(JSON.stringify(deploy), signingPublicKeyHex);\n    if (res.cancelled) {\n      return void 0;\n    }\n    const signedDeploy = DeployUtil.setSignature(\n      deployJson.unwrap(),\n      res.signature,\n      CLPublicKey.fromHex(signingPublicKeyHex)\n    );\n    return DeployUtil.deployToJson(signedDeploy);\n  }\n  onDisconnected() {\n    const customEvent = new CustomEvent(\"casper:disconnect\");\n    window.dispatchEvent(customEvent);\n  }\n  onActiveKeyChanged(event) {\n    const customEvent = new CustomEvent(\"casper:change\", event);\n    window.dispatchEvent(customEvent);\n  }\n  onConnected(event) {\n    const customEvent = new CustomEvent(\"casper:connect\", event);\n    window.dispatchEvent(customEvent);\n  }\n  onUnlocked(event) {\n    const customEvent = new CustomEvent(\"casper:unlocked\", event);\n    window.dispatchEvent(customEvent);\n  }\n};\n\n// src/connectors/casperDashWeb.ts\nvar CasperDashWebConnector = class extends Connector2 {\n  constructor({\n    options: defaultOptions,\n    providerUrl\n  } = {}) {\n    const options = {\n      name: \"casperDashWeb\",\n      providerUrl: providerUrl || \"https://wallet.casperdash.io\",\n      getProvider: () => {\n        return this.provider;\n      },\n      getEventProvider: () => {\n        return window;\n      },\n      ...defaultOptions\n    };\n    super({ options });\n    this.id = \"casperDashWeb\";\n    this.isReady = false;\n    this.nextRequestId = 0;\n  }\n  async getProvider() {\n    const provider = this.options.getProvider?.();\n    if (!provider) {\n      throw new ConnectorNotFoundError();\n    }\n    this.provider = provider;\n    this.isReady = true;\n    return this.provider;\n  }\n  async getEventProvider() {\n    const eventProvider = this.options.getEventProvider?.();\n    if (!eventProvider) {\n      throw new ConnectorNotFoundError();\n    }\n    this.eventProvider = eventProvider;\n    return this.eventProvider;\n  }\n  async isConnected() {\n    return !!this.publicKey;\n  }\n  async disconnect() {\n    this.publicKey = void 0;\n    this.sendPostMessage({\n      method: \"disconnect\" /* DISCONNECT */\n    });\n    const eventProvider = await this.getEventProvider();\n    eventProvider?.removeEventListener(\"message\", (e) => this.handleMessage(e));\n    clearInterval(this.checkOpennerInterval);\n    if (this.popup) {\n      this.popup.close();\n    }\n    this.onDisconnected();\n  }\n  async connect() {\n    if (this.popup) {\n      this.popup.close();\n    }\n    this.popup = window.open(\n      `${this.options.providerUrl}?originUrl=${window.location.origin}`,\n      \"_blank\",\n      \"location,resizable,width=460,height=675\"\n    );\n    const eventProvider = await this.getEventProvider();\n    eventProvider?.addEventListener(\"message\", (e) => this.handleMessage(e));\n    this.checkOpennerInterval = setInterval(() => {\n      if (this.popup?.closed) {\n        void this.disconnect();\n      }\n    }, 500);\n  }\n  async getActivePublicKey() {\n    return void 0;\n  }\n  async signMessage(message, signingPublicKeyHex) {\n    this.sendPostMessage({\n      method: \"signMessage\" /* SIGN_MESSAGE */,\n      params: {\n        message,\n        signingPublicKeyHex\n      }\n    });\n    this.popup?.focus();\n    return new Promise((resolve, reject) => {\n      super.on(\"approvedSignMessage\", (signedMessage) => {\n        return resolve(signedMessage);\n      });\n      super.on(\"rejectedSignMessage\", () => {\n        reject(new RejectedSignMessageError());\n      });\n    });\n  }\n  async sign(deploy, signingPublicKeyHex, targetPublicKeyHex) {\n    this.sendPostMessage({\n      method: \"sign\" /* SIGN */,\n      params: {\n        deploy: JSON.stringify(deploy),\n        signingPublicKeyHex,\n        targetPublicKeyHex\n      }\n    });\n    this.popup?.focus();\n    return new Promise((resolve, reject) => {\n      super.on(\"approvedSign\", (params) => {\n        return resolve(params.deploy);\n      });\n      super.on(\"rejectedSign\", () => {\n        reject(new RejectedSignDeployError());\n      });\n    });\n  }\n  onDisconnected() {\n    const customEvent = new CustomEvent(\"casper:disconnect\");\n    window.dispatchEvent(customEvent);\n  }\n  onActiveKeyChanged(_event) {\n  }\n  onConnected(event) {\n    const customEvent = new CustomEvent(\"casper:connect\", event);\n    window.dispatchEvent(customEvent);\n  }\n  onUnlocked(_event) {\n  }\n  handleMessage(event) {\n    const { data } = event;\n    switch (data.method) {\n      case \"connected\" /* CONNECTED */: {\n        const { data: { params } } = event;\n        this.publicKey = params.publicKey;\n        this.onConnected(new CustomEvent(\"casperDashWeb:connect\", { detail: { activeKey: this.publicKey, isConnected: true } }));\n        break;\n      }\n      case \"disconnected\" /* DISCONNECTED */: {\n        void this.disconnect();\n        break;\n      }\n      case \"approvedSign\" /* APPROVED_SIGN */:\n        super.emit(\"approvedSign\", data.params);\n        break;\n      case \"rejectedSign\" /* REJECTED_SIGN */:\n        super.emit(\"rejectedSign\");\n        break;\n      case \"approvedSignMessage\" /* APPROVED_SIGN_MESSAGE */: {\n        const { data: { params } } = event;\n        super.emit(\"approvedSignMessage\", params.signedMessage);\n        break;\n      }\n      case \"rejectedSignMessage\" /* REJECTED_SIGN_MESSAGE */:\n        super.emit(\"rejectedSignMessage\");\n        break;\n      default:\n    }\n  }\n  sendPostMessage({\n    method,\n    params\n  }) {\n    if (!this.options.providerUrl) {\n      throw new ProviderUrlDoesNotExistError();\n    }\n    this.nextRequestId = this.nextRequestId + 1;\n    return this.popup?.postMessage({\n      jsonrpc: \"2.0\",\n      id: this.nextRequestId,\n      method,\n      params: {\n        ...params\n      }\n    }, this.options.providerUrl ?? \"\");\n  }\n};\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@casperdash/usewallet-core/dist/index.js\n"));

/***/ }),

/***/ "./node_modules/@casperdash/usewallet/dist/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@casperdash/usewallet/dist/index.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CasperDashConnector: function() { return /* reexport safe */ _casperdash_usewallet_core__WEBPACK_IMPORTED_MODULE_0__.CasperDashConnector; },\n/* harmony export */   CasperDashWebConnector: function() { return /* reexport safe */ _casperdash_usewallet_core__WEBPACK_IMPORTED_MODULE_0__.CasperDashWebConnector; },\n/* harmony export */   CasperProvider: function() { return /* binding */ CasperProvider; },\n/* harmony export */   CasperSignerConnector: function() { return /* reexport safe */ _casperdash_usewallet_core__WEBPACK_IMPORTED_MODULE_0__.CasperSignerConnector; },\n/* harmony export */   CasperWalletConnector: function() { return /* reexport safe */ _casperdash_usewallet_core__WEBPACK_IMPORTED_MODULE_0__.CasperWalletConnector; },\n/* harmony export */   MutationKeysEnum: function() { return /* binding */ MutationKeysEnum; },\n/* harmony export */   QueryKeysEnum: function() { return /* binding */ QueryKeysEnum; },\n/* harmony export */   createClient: function() { return /* binding */ createClient; },\n/* harmony export */   useAccount: function() { return /* binding */ useAccount; },\n/* harmony export */   useConnect: function() { return /* binding */ useConnect; },\n/* harmony export */   useDisconnect: function() { return /* binding */ useDisconnect; },\n/* harmony export */   useFetchLedgerAccounts: function() { return /* binding */ useFetchLedgerAccounts; },\n/* harmony export */   useSetLedgerAccountIndex: function() { return /* binding */ useSetLedgerAccountIndex; },\n/* harmony export */   useSign: function() { return /* binding */ useSign; },\n/* harmony export */   useSignMessage: function() { return /* binding */ useSignMessage; }\n/* harmony export */ });\n/* harmony import */ var _casperdash_usewallet_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @casperdash/usewallet-core */ \"./node_modules/@casperdash/usewallet-core/dist/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @tanstack/react-query */ \"./node_modules/@casperdash/usewallet/node_modules/@tanstack/react-query/build/lib/useMutation.mjs\");\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @tanstack/react-query */ \"./node_modules/@casperdash/usewallet/node_modules/@tanstack/react-query/build/lib/QueryClientProvider.mjs\");\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @tanstack/react-query */ \"./node_modules/@tanstack/query-core/build/lib/queryClient.mjs\");\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @tanstack/react-query */ \"./node_modules/@casperdash/usewallet/node_modules/@tanstack/react-query/build/lib/useInfiniteQuery.mjs\");\n// src/hooks/useAccount.ts\n\n\nvar useAccount = ({ onConnect, onDisconnect, onError, onChange } = {}) => {\n  const [publicKey, setPublicKey] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n  const [ledgerAccountIndex, setLedgerAccountIndex] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n  const [connector, setConnector] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)();\n  const [status, setStatus] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(_casperdash_usewallet_core__WEBPACK_IMPORTED_MODULE_0__.StatusEnum.DISCONNECTED);\n  const ref = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    const initAccount = async () => {\n      try {\n        const account = (0,_casperdash_usewallet_core__WEBPACK_IMPORTED_MODULE_0__.getAccount)();\n        if (account && account.status === _casperdash_usewallet_core__WEBPACK_IMPORTED_MODULE_0__.StatusEnum.CONNECTED) {\n          setPublicKey(account.publicKey || null);\n          setStatus(account.status);\n          setLedgerAccountIndex(account.ledgerAccountIndex || null);\n          setConnector(account.connector);\n        }\n      } catch (error) {\n        onError?.(error);\n      }\n    };\n    void initAccount();\n    const unsubscribe = (0,_casperdash_usewallet_core__WEBPACK_IMPORTED_MODULE_0__.watchAccount)((account) => {\n      if (!account) {\n        return;\n      }\n      if (ref.current?.publicKey && account.publicKey && account.publicKey !== ref.current?.publicKey) {\n        onChange?.(account);\n      }\n      setPublicKey(account.publicKey || null);\n      setStatus(account.status || _casperdash_usewallet_core__WEBPACK_IMPORTED_MODULE_0__.StatusEnum.DISCONNECTED);\n      setLedgerAccountIndex(account.ledgerAccountIndex || null);\n      setConnector(account.connector);\n      if (!(0,_casperdash_usewallet_core__WEBPACK_IMPORTED_MODULE_0__.deepEqual)(account, ref.current)) {\n        if (account?.publicKey && account.status === _casperdash_usewallet_core__WEBPACK_IMPORTED_MODULE_0__.StatusEnum.CONNECTED) {\n          onConnect?.({\n            publicKey: account.publicKey,\n            connector: account.connector\n          });\n        }\n        if (account.status === _casperdash_usewallet_core__WEBPACK_IMPORTED_MODULE_0__.StatusEnum.DISCONNECTED) {\n          onDisconnect?.();\n        }\n      }\n      ref.current = account;\n    });\n    return () => {\n      unsubscribe();\n    };\n  }, []);\n  return {\n    status,\n    publicKey,\n    ledgerAccountIndex,\n    connector\n  };\n};\n\n// src/hooks/useConnect.ts\n\n\n\nvar mutationFn = async (args) => {\n  const { connector } = args;\n  if (!connector) {\n    throw new Error(\"connector is required\");\n  }\n  return (0,_casperdash_usewallet_core__WEBPACK_IMPORTED_MODULE_0__.connect)({ connector });\n};\nvar useConnect = ({\n  connector,\n  onError,\n  onMutate,\n  onSettled,\n  onSuccess\n}) => {\n  const {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    reset,\n    status,\n    variables,\n    mutate,\n    mutateAsync\n  } = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_2__.useMutation)([\"connect\" /* CONNECT */], mutationFn, {\n    onError,\n    onMutate,\n    onSettled,\n    onSuccess\n  });\n  const connect = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(() => {\n    return mutate({\n      connector\n    });\n  }, [connector]);\n  const connectAsync = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(async () => {\n    return mutateAsync({\n      connector\n    });\n  }, [connector]);\n  return {\n    connect,\n    connectAsync,\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    reset,\n    status,\n    variables\n  };\n};\n\n// src/hooks/useDisconnect.ts\n\n\n\nvar mutationFn2 = async () => {\n  return (0,_casperdash_usewallet_core__WEBPACK_IMPORTED_MODULE_0__.disconnect)();\n};\nvar useDisconnect = ({\n  onError,\n  onMutate,\n  onSettled,\n  onSuccess\n} = {}) => {\n  const {\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    status,\n    reset,\n    mutate,\n    mutateAsync\n  } = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_2__.useMutation)([\"disconnect\" /* DISCONNECT */], mutationFn2, {\n    onError,\n    onMutate,\n    onSettled,\n    onSuccess\n  });\n  const disconnect = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(() => {\n    return mutate();\n  }, []);\n  const disconnectAsync = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(async () => {\n    return mutateAsync();\n  }, []);\n  return {\n    disconnect,\n    disconnectAsync,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    status,\n    reset\n  };\n};\n\n// src/hooks/useSign.ts\n\n\n\nvar mutationFn3 = async ({ deploy, signingPublicKeyHex, targetPublicKeyHex }) => {\n  if (!deploy) {\n    throw new Error(\"Deploy must be a non-empty\");\n  }\n  if (!signingPublicKeyHex) {\n    throw new Error(\"signingPublicKeyHex must be a non-empty string\");\n  }\n  if (!targetPublicKeyHex) {\n    throw new Error(\"targetPublicKeyHex must be a non-empty string\");\n  }\n  return (0,_casperdash_usewallet_core__WEBPACK_IMPORTED_MODULE_0__.sign)({ deploy, signingPublicKeyHex, targetPublicKeyHex });\n};\nvar useSign = ({\n  deploy,\n  signingPublicKeyHex,\n  targetPublicKeyHex,\n  onError,\n  onMutate,\n  onSettled,\n  onSuccess\n} = {}) => {\n  const {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    reset,\n    status,\n    variables,\n    mutate,\n    mutateAsync\n  } = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_2__.useMutation)([\"sign\" /* SIGN */], mutationFn3, {\n    onError,\n    onMutate,\n    onSettled,\n    onSuccess\n  });\n  const sign = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((params) => {\n    return mutate(params || {\n      deploy,\n      signingPublicKeyHex,\n      targetPublicKeyHex\n    });\n  }, [deploy, signingPublicKeyHex, targetPublicKeyHex, mutate]);\n  const signAsync = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(async (params) => {\n    return mutateAsync(params || {\n      deploy,\n      signingPublicKeyHex,\n      targetPublicKeyHex\n    });\n  }, [deploy, signingPublicKeyHex, targetPublicKeyHex, mutateAsync]);\n  return {\n    sign,\n    signAsync,\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    reset,\n    status,\n    variables\n  };\n};\n\n// src/hooks/useSignMessage.ts\n\n\n\nvar mutationFn4 = async ({ message, signingPublicKeyHex }) => {\n  if (!message) {\n    throw new Error(\"Message must be a non-empty string\");\n  }\n  if (!signingPublicKeyHex) {\n    throw new Error(\"signingPublicKeyHex must be a non-empty string\");\n  }\n  return (0,_casperdash_usewallet_core__WEBPACK_IMPORTED_MODULE_0__.signMessage)({ message, signingPublicKeyHex });\n};\nvar useSignMessage = ({\n  message,\n  signingPublicKeyHex,\n  onError,\n  onMutate,\n  onSettled,\n  onSuccess\n} = {}) => {\n  const {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    reset,\n    status,\n    variables,\n    mutate,\n    mutateAsync\n  } = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_2__.useMutation)([\"sign_message\" /* SIGN_MESSAGE */, signingPublicKeyHex, message], mutationFn4, {\n    onError,\n    onMutate,\n    onSettled,\n    onSuccess\n  });\n  const signMessage = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((params) => {\n    return mutate(params || {\n      message,\n      signingPublicKeyHex\n    });\n  }, [message, signingPublicKeyHex, mutate]);\n  const signMessageAsync = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(async (params) => {\n    return mutateAsync(params || {\n      message,\n      signingPublicKeyHex\n    });\n  }, [message, signingPublicKeyHex, mutateAsync]);\n  return {\n    signMessage,\n    signMessageAsync,\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    reset,\n    status,\n    variables\n  };\n};\n\n// src/provider.ts\n\n\nvar Context = react__WEBPACK_IMPORTED_MODULE_1__.createContext(void 0);\nvar queryClientContext = react__WEBPACK_IMPORTED_MODULE_1__.createContext(\n  void 0\n);\nvar CasperProvider = ({ children, client }) => {\n  return react__WEBPACK_IMPORTED_MODULE_1__.createElement(\n    Context.Provider,\n    {\n      children: react__WEBPACK_IMPORTED_MODULE_1__.createElement(\n        _tanstack_react_query__WEBPACK_IMPORTED_MODULE_3__.QueryClientProvider,\n        {\n          children,\n          client: client.queryClient\n        }\n      ),\n      value: client\n    }\n  );\n};\n\n// src/client.ts\n\n\n\nvar createClient = ({\n  queryClient = new _tanstack_react_query__WEBPACK_IMPORTED_MODULE_4__.QueryClient({\n    defaultOptions: {\n      queries: {\n        cacheTime: 1e3 * 60 * 60 * 24,\n        networkMode: \"offlineFirst\",\n        refetchOnWindowFocus: false,\n        retry: 0\n      },\n      mutations: {\n        networkMode: \"offlineFirst\"\n      }\n    }\n  }),\n  ...config\n}) => {\n  const casperClient = (0,_casperdash_usewallet_core__WEBPACK_IMPORTED_MODULE_0__.createClient)(config);\n  return Object.assign(casperClient, {\n    queryClient\n  });\n};\n\n// src/enums/queryKeys.ts\nvar QueryKeysEnum = /* @__PURE__ */ ((QueryKeysEnum2) => {\n  QueryKeysEnum2[\"CONNECT\"] = \"connect\";\n  return QueryKeysEnum2;\n})(QueryKeysEnum || {});\n\n// src/enums/mutationKeys.ts\nvar MutationKeysEnum = /* @__PURE__ */ ((MutationKeysEnum2) => {\n  MutationKeysEnum2[\"CONNECT\"] = \"connect\";\n  MutationKeysEnum2[\"DISCONNECT\"] = \"disconnect\";\n  MutationKeysEnum2[\"SIGN\"] = \"sign\";\n  MutationKeysEnum2[\"SIGN_MESSAGE\"] = \"sign_message\";\n  MutationKeysEnum2[\"SET_LEDGER_ACCOUNT_INDEX\"] = \"set_ledger_account_index\";\n  return MutationKeysEnum2;\n})(MutationKeysEnum || {});\n\n// src/hooks/useFetchLedgerAccounts.ts\n\n\nvar useFetchLedgerAccounts = ({ startIndex = 0, total = 10 }, options) => {\n  const { data, ...query } = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_5__.useInfiniteQuery)(\n    [\"casper-ledger-accounts\"],\n    async (context) => {\n      const accounts = [];\n      const { pageParam = startIndex } = context;\n      for (let i = pageParam; i < pageParam + total; i++) {\n        const publicKey = await (0,_casperdash_usewallet_core__WEBPACK_IMPORTED_MODULE_0__.getLedgerPublicKey)({ index: i.toString() });\n        accounts.push({\n          path: (0,_casperdash_usewallet_core__WEBPACK_IMPORTED_MODULE_0__.getLedgerPath)(i.toString()),\n          publicKey,\n          index: i\n        });\n      }\n      return accounts;\n    },\n    {\n      ...options,\n      getNextPageParam: (lastPage) => (lastPage[lastPage.length - 1]?.index || 0) + 1\n    }\n  );\n  const flattedData = data?.pages.reduce((acc, page) => {\n    return [...acc, ...page];\n  }, []);\n  return {\n    data: flattedData,\n    paggedData: data,\n    ...query\n  };\n};\n\n// src/hooks/useSetLedgerAccountIndex.ts\n\n\n\nvar mutationFn5 = async ({ index }) => {\n  if (!index) {\n    throw new Error(\"index must be a non-empty string\");\n  }\n  await (0,_casperdash_usewallet_core__WEBPACK_IMPORTED_MODULE_0__.setLedgerAccountIndex)({ index });\n  return {\n    index\n  };\n};\nvar useSetLedgerAccountIndex = ({\n  index,\n  onError,\n  onMutate,\n  onSettled,\n  onSuccess\n} = {}) => {\n  const {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    reset,\n    status,\n    variables,\n    mutate,\n    mutateAsync\n  } = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_2__.useMutation)([\"set_ledger_account_index\"], mutationFn5, {\n    onError,\n    onMutate,\n    onSettled,\n    onSuccess\n  });\n  const setLedgerAccountIndex = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((params) => {\n    return mutate(params || {\n      index\n    });\n  }, [index, mutate]);\n  const setLedgerAccountIndexAsync = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(async (params) => {\n    return mutateAsync(params || {\n      index\n    });\n  }, [index, mutateAsync]);\n  return {\n    setLedgerAccountIndex,\n    setLedgerAccountIndexAsync,\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    reset,\n    status,\n    variables\n  };\n};\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNhc3BlcmRhc2gvdXNld2FsbGV0L2Rpc3QvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFNb0M7QUFDZ0I7QUFDcEQsb0JBQW9CLDZDQUE2QyxJQUFJO0FBQ3JFLG9DQUFvQywrQ0FBUTtBQUM1QyxzREFBc0QsK0NBQVE7QUFDOUQsb0NBQW9DLCtDQUFRO0FBQzVDLDhCQUE4QiwrQ0FBUSxDQUFDLGtFQUFVO0FBQ2pELGNBQWMsNkNBQU07QUFDcEIsRUFBRSxnREFBUztBQUNYO0FBQ0E7QUFDQSx3QkFBd0Isc0VBQVU7QUFDbEMsMENBQTBDLGtFQUFVO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0Isd0VBQVk7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0Msa0VBQVU7QUFDNUM7QUFDQTtBQUNBLFdBQVcscUVBQVM7QUFDcEIscURBQXFELGtFQUFVO0FBQy9EO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBLCtCQUErQixrRUFBVTtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDb0M7QUFDZ0I7QUFDZ0I7QUFDcEU7QUFDQSxVQUFVLFlBQVk7QUFDdEI7QUFDQTtBQUNBO0FBQ0EsU0FBUyxtRUFBVyxHQUFHLFdBQVc7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSSxFQUFFLGtFQUFXO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNILGtCQUFrQixrREFBVztBQUM3QjtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSCx1QkFBdUIsa0RBQVc7QUFDbEM7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNvRDtBQUNnQjtBQUNNO0FBQzFFO0FBQ0EsU0FBUyxzRUFBYztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFLElBQUk7QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUksRUFBRSxrRUFBWTtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCxxQkFBcUIsa0RBQVk7QUFDakM7QUFDQSxHQUFHO0FBQ0gsMEJBQTBCLGtEQUFZO0FBQ3RDO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNvRDtBQUNnQjtBQUNOO0FBQzlELDJCQUEyQixpREFBaUQ7QUFDNUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUyxnRUFBUSxHQUFHLGlEQUFpRDtBQUNyRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFLElBQUk7QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJLEVBQUUsa0VBQVk7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsZUFBZSxrREFBWTtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0gsb0JBQW9CLGtEQUFZO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ29EO0FBQ2dCO0FBR2hDO0FBQ3BDLDJCQUEyQiw4QkFBOEI7QUFDekQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUyx1RUFBZSxHQUFHLDhCQUE4QjtBQUN6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRSxJQUFJO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSSxFQUFFLGtFQUFZO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNILHNCQUFzQixrREFBWTtBQUNsQztBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRztBQUNILDJCQUEyQixrREFBWTtBQUN2QztBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDK0I7QUFDNkI7QUFDNUQsY0FBYyxnREFBbUI7QUFDakMseUJBQXlCLGdEQUFtQjtBQUM1QztBQUNBO0FBQ0Esd0JBQXdCLGtCQUFrQjtBQUMxQyxTQUFTLGdEQUFtQjtBQUM1QjtBQUNBO0FBQ0EsZ0JBQWdCLGdEQUFtQjtBQUNuQyxRQUFRLHNFQUFtQjtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDb0Q7QUFHaEI7QUFNQTtBQUNwQztBQUNBLG9CQUFvQiw4REFBVztBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQSxDQUFDO0FBQ0QsdUJBQXVCLHdFQUFrQjtBQUN6QztBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxxQkFBcUI7O0FBRXRCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLHdCQUF3Qjs7QUFFekI7QUFHK0I7QUFDZ0Q7QUFDL0UsZ0NBQWdDLDRCQUE0QjtBQUM1RCxVQUFVLGlCQUFpQixFQUFFLHVFQUFnQjtBQUM3QztBQUNBO0FBQ0E7QUFDQSxjQUFjLHlCQUF5QjtBQUN2Qyw4QkFBOEIsdUJBQXVCO0FBQ3JELGdDQUFnQyw4RUFBa0IsR0FBRyxxQkFBcUI7QUFDMUU7QUFDQSxnQkFBZ0IseUVBQWE7QUFDN0I7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNvRDtBQUNnQjtBQUdoQztBQUNwQywyQkFBMkIsT0FBTztBQUNsQztBQUNBO0FBQ0E7QUFDQSxRQUFRLGlGQUF5QixHQUFHLE9BQU87QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFLElBQUk7QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJLEVBQUUsa0VBQVk7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsZ0NBQWdDLGtEQUFZO0FBQzVDO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRztBQUNILHFDQUFxQyxrREFBWTtBQUNqRDtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBaUJFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjYXNwZXJkYXNoL3VzZXdhbGxldC9kaXN0L2luZGV4LmpzPzU5YjMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL2hvb2tzL3VzZUFjY291bnQudHNcbmltcG9ydCB7XG4gIHdhdGNoQWNjb3VudCxcbiAgU3RhdHVzRW51bSxcbiAgZ2V0QWNjb3VudCxcbiAgZGVlcEVxdWFsXG59IGZyb20gXCJAY2FzcGVyZGFzaC91c2V3YWxsZXQtY29yZVwiO1xuaW1wb3J0IHsgdXNlRWZmZWN0LCB1c2VSZWYsIHVzZVN0YXRlIH0gZnJvbSBcInJlYWN0XCI7XG52YXIgdXNlQWNjb3VudCA9ICh7IG9uQ29ubmVjdCwgb25EaXNjb25uZWN0LCBvbkVycm9yLCBvbkNoYW5nZSB9ID0ge30pID0+IHtcbiAgY29uc3QgW3B1YmxpY0tleSwgc2V0UHVibGljS2V5XSA9IHVzZVN0YXRlKG51bGwpO1xuICBjb25zdCBbbGVkZ2VyQWNjb3VudEluZGV4LCBzZXRMZWRnZXJBY2NvdW50SW5kZXhdID0gdXNlU3RhdGUobnVsbCk7XG4gIGNvbnN0IFtjb25uZWN0b3IsIHNldENvbm5lY3Rvcl0gPSB1c2VTdGF0ZSgpO1xuICBjb25zdCBbc3RhdHVzLCBzZXRTdGF0dXNdID0gdXNlU3RhdGUoU3RhdHVzRW51bS5ESVNDT05ORUNURUQpO1xuICBjb25zdCByZWYgPSB1c2VSZWYobnVsbCk7XG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgY29uc3QgaW5pdEFjY291bnQgPSBhc3luYyAoKSA9PiB7XG4gICAgICB0cnkge1xuICAgICAgICBjb25zdCBhY2NvdW50ID0gZ2V0QWNjb3VudCgpO1xuICAgICAgICBpZiAoYWNjb3VudCAmJiBhY2NvdW50LnN0YXR1cyA9PT0gU3RhdHVzRW51bS5DT05ORUNURUQpIHtcbiAgICAgICAgICBzZXRQdWJsaWNLZXkoYWNjb3VudC5wdWJsaWNLZXkgfHwgbnVsbCk7XG4gICAgICAgICAgc2V0U3RhdHVzKGFjY291bnQuc3RhdHVzKTtcbiAgICAgICAgICBzZXRMZWRnZXJBY2NvdW50SW5kZXgoYWNjb3VudC5sZWRnZXJBY2NvdW50SW5kZXggfHwgbnVsbCk7XG4gICAgICAgICAgc2V0Q29ubmVjdG9yKGFjY291bnQuY29ubmVjdG9yKTtcbiAgICAgICAgfVxuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgb25FcnJvcj8uKGVycm9yKTtcbiAgICAgIH1cbiAgICB9O1xuICAgIHZvaWQgaW5pdEFjY291bnQoKTtcbiAgICBjb25zdCB1bnN1YnNjcmliZSA9IHdhdGNoQWNjb3VudCgoYWNjb3VudCkgPT4ge1xuICAgICAgaWYgKCFhY2NvdW50KSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGlmIChyZWYuY3VycmVudD8ucHVibGljS2V5ICYmIGFjY291bnQucHVibGljS2V5ICYmIGFjY291bnQucHVibGljS2V5ICE9PSByZWYuY3VycmVudD8ucHVibGljS2V5KSB7XG4gICAgICAgIG9uQ2hhbmdlPy4oYWNjb3VudCk7XG4gICAgICB9XG4gICAgICBzZXRQdWJsaWNLZXkoYWNjb3VudC5wdWJsaWNLZXkgfHwgbnVsbCk7XG4gICAgICBzZXRTdGF0dXMoYWNjb3VudC5zdGF0dXMgfHwgU3RhdHVzRW51bS5ESVNDT05ORUNURUQpO1xuICAgICAgc2V0TGVkZ2VyQWNjb3VudEluZGV4KGFjY291bnQubGVkZ2VyQWNjb3VudEluZGV4IHx8IG51bGwpO1xuICAgICAgc2V0Q29ubmVjdG9yKGFjY291bnQuY29ubmVjdG9yKTtcbiAgICAgIGlmICghZGVlcEVxdWFsKGFjY291bnQsIHJlZi5jdXJyZW50KSkge1xuICAgICAgICBpZiAoYWNjb3VudD8ucHVibGljS2V5ICYmIGFjY291bnQuc3RhdHVzID09PSBTdGF0dXNFbnVtLkNPTk5FQ1RFRCkge1xuICAgICAgICAgIG9uQ29ubmVjdD8uKHtcbiAgICAgICAgICAgIHB1YmxpY0tleTogYWNjb3VudC5wdWJsaWNLZXksXG4gICAgICAgICAgICBjb25uZWN0b3I6IGFjY291bnQuY29ubmVjdG9yXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGFjY291bnQuc3RhdHVzID09PSBTdGF0dXNFbnVtLkRJU0NPTk5FQ1RFRCkge1xuICAgICAgICAgIG9uRGlzY29ubmVjdD8uKCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHJlZi5jdXJyZW50ID0gYWNjb3VudDtcbiAgICB9KTtcbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgdW5zdWJzY3JpYmUoKTtcbiAgICB9O1xuICB9LCBbXSk7XG4gIHJldHVybiB7XG4gICAgc3RhdHVzLFxuICAgIHB1YmxpY0tleSxcbiAgICBsZWRnZXJBY2NvdW50SW5kZXgsXG4gICAgY29ubmVjdG9yXG4gIH07XG59O1xuXG4vLyBzcmMvaG9va3MvdXNlQ29ubmVjdC50c1xuaW1wb3J0IHsgdXNlQ2FsbGJhY2sgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IHVzZU11dGF0aW9uIH0gZnJvbSBcIkB0YW5zdGFjay9yZWFjdC1xdWVyeVwiO1xuaW1wb3J0IHsgY29ubmVjdCBhcyBjb25uZWN0RGFwcCB9IGZyb20gXCJAY2FzcGVyZGFzaC91c2V3YWxsZXQtY29yZVwiO1xudmFyIG11dGF0aW9uRm4gPSBhc3luYyAoYXJncykgPT4ge1xuICBjb25zdCB7IGNvbm5lY3RvciB9ID0gYXJncztcbiAgaWYgKCFjb25uZWN0b3IpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJjb25uZWN0b3IgaXMgcmVxdWlyZWRcIik7XG4gIH1cbiAgcmV0dXJuIGNvbm5lY3REYXBwKHsgY29ubmVjdG9yIH0pO1xufTtcbnZhciB1c2VDb25uZWN0ID0gKHtcbiAgY29ubmVjdG9yLFxuICBvbkVycm9yLFxuICBvbk11dGF0ZSxcbiAgb25TZXR0bGVkLFxuICBvblN1Y2Nlc3Ncbn0pID0+IHtcbiAgY29uc3Qge1xuICAgIGRhdGEsXG4gICAgZXJyb3IsXG4gICAgaXNFcnJvcixcbiAgICBpc0lkbGUsXG4gICAgaXNMb2FkaW5nLFxuICAgIGlzU3VjY2VzcyxcbiAgICByZXNldCxcbiAgICBzdGF0dXMsXG4gICAgdmFyaWFibGVzLFxuICAgIG11dGF0ZSxcbiAgICBtdXRhdGVBc3luY1xuICB9ID0gdXNlTXV0YXRpb24oW1wiY29ubmVjdFwiIC8qIENPTk5FQ1QgKi9dLCBtdXRhdGlvbkZuLCB7XG4gICAgb25FcnJvcixcbiAgICBvbk11dGF0ZSxcbiAgICBvblNldHRsZWQsXG4gICAgb25TdWNjZXNzXG4gIH0pO1xuICBjb25zdCBjb25uZWN0ID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgIHJldHVybiBtdXRhdGUoe1xuICAgICAgY29ubmVjdG9yXG4gICAgfSk7XG4gIH0sIFtjb25uZWN0b3JdKTtcbiAgY29uc3QgY29ubmVjdEFzeW5jID0gdXNlQ2FsbGJhY2soYXN5bmMgKCkgPT4ge1xuICAgIHJldHVybiBtdXRhdGVBc3luYyh7XG4gICAgICBjb25uZWN0b3JcbiAgICB9KTtcbiAgfSwgW2Nvbm5lY3Rvcl0pO1xuICByZXR1cm4ge1xuICAgIGNvbm5lY3QsXG4gICAgY29ubmVjdEFzeW5jLFxuICAgIGRhdGEsXG4gICAgZXJyb3IsXG4gICAgaXNFcnJvcixcbiAgICBpc0lkbGUsXG4gICAgaXNMb2FkaW5nLFxuICAgIGlzU3VjY2VzcyxcbiAgICByZXNldCxcbiAgICBzdGF0dXMsXG4gICAgdmFyaWFibGVzXG4gIH07XG59O1xuXG4vLyBzcmMvaG9va3MvdXNlRGlzY29ubmVjdC50c1xuaW1wb3J0IHsgdXNlQ2FsbGJhY2sgYXMgdXNlQ2FsbGJhY2syIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyB1c2VNdXRhdGlvbiBhcyB1c2VNdXRhdGlvbjIgfSBmcm9tIFwiQHRhbnN0YWNrL3JlYWN0LXF1ZXJ5XCI7XG5pbXBvcnQgeyBkaXNjb25uZWN0IGFzIGRpc2Nvbm5lY3REYXBwIH0gZnJvbSBcIkBjYXNwZXJkYXNoL3VzZXdhbGxldC1jb3JlXCI7XG52YXIgbXV0YXRpb25GbjIgPSBhc3luYyAoKSA9PiB7XG4gIHJldHVybiBkaXNjb25uZWN0RGFwcCgpO1xufTtcbnZhciB1c2VEaXNjb25uZWN0ID0gKHtcbiAgb25FcnJvcixcbiAgb25NdXRhdGUsXG4gIG9uU2V0dGxlZCxcbiAgb25TdWNjZXNzXG59ID0ge30pID0+IHtcbiAgY29uc3Qge1xuICAgIGVycm9yLFxuICAgIGlzRXJyb3IsXG4gICAgaXNJZGxlLFxuICAgIGlzTG9hZGluZyxcbiAgICBpc1N1Y2Nlc3MsXG4gICAgc3RhdHVzLFxuICAgIHJlc2V0LFxuICAgIG11dGF0ZSxcbiAgICBtdXRhdGVBc3luY1xuICB9ID0gdXNlTXV0YXRpb24yKFtcImRpc2Nvbm5lY3RcIiAvKiBESVNDT05ORUNUICovXSwgbXV0YXRpb25GbjIsIHtcbiAgICBvbkVycm9yLFxuICAgIG9uTXV0YXRlLFxuICAgIG9uU2V0dGxlZCxcbiAgICBvblN1Y2Nlc3NcbiAgfSk7XG4gIGNvbnN0IGRpc2Nvbm5lY3QgPSB1c2VDYWxsYmFjazIoKCkgPT4ge1xuICAgIHJldHVybiBtdXRhdGUoKTtcbiAgfSwgW10pO1xuICBjb25zdCBkaXNjb25uZWN0QXN5bmMgPSB1c2VDYWxsYmFjazIoYXN5bmMgKCkgPT4ge1xuICAgIHJldHVybiBtdXRhdGVBc3luYygpO1xuICB9LCBbXSk7XG4gIHJldHVybiB7XG4gICAgZGlzY29ubmVjdCxcbiAgICBkaXNjb25uZWN0QXN5bmMsXG4gICAgZXJyb3IsXG4gICAgaXNFcnJvcixcbiAgICBpc0lkbGUsXG4gICAgaXNMb2FkaW5nLFxuICAgIGlzU3VjY2VzcyxcbiAgICBzdGF0dXMsXG4gICAgcmVzZXRcbiAgfTtcbn07XG5cbi8vIHNyYy9ob29rcy91c2VTaWduLnRzXG5pbXBvcnQgeyB1c2VDYWxsYmFjayBhcyB1c2VDYWxsYmFjazMgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IHVzZU11dGF0aW9uIGFzIHVzZU11dGF0aW9uMyB9IGZyb20gXCJAdGFuc3RhY2svcmVhY3QtcXVlcnlcIjtcbmltcG9ydCB7IHNpZ24gYXMgc2lnbkRhcHAgfSBmcm9tIFwiQGNhc3BlcmRhc2gvdXNld2FsbGV0LWNvcmVcIjtcbnZhciBtdXRhdGlvbkZuMyA9IGFzeW5jICh7IGRlcGxveSwgc2lnbmluZ1B1YmxpY0tleUhleCwgdGFyZ2V0UHVibGljS2V5SGV4IH0pID0+IHtcbiAgaWYgKCFkZXBsb3kpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJEZXBsb3kgbXVzdCBiZSBhIG5vbi1lbXB0eVwiKTtcbiAgfVxuICBpZiAoIXNpZ25pbmdQdWJsaWNLZXlIZXgpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJzaWduaW5nUHVibGljS2V5SGV4IG11c3QgYmUgYSBub24tZW1wdHkgc3RyaW5nXCIpO1xuICB9XG4gIGlmICghdGFyZ2V0UHVibGljS2V5SGV4KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwidGFyZ2V0UHVibGljS2V5SGV4IG11c3QgYmUgYSBub24tZW1wdHkgc3RyaW5nXCIpO1xuICB9XG4gIHJldHVybiBzaWduRGFwcCh7IGRlcGxveSwgc2lnbmluZ1B1YmxpY0tleUhleCwgdGFyZ2V0UHVibGljS2V5SGV4IH0pO1xufTtcbnZhciB1c2VTaWduID0gKHtcbiAgZGVwbG95LFxuICBzaWduaW5nUHVibGljS2V5SGV4LFxuICB0YXJnZXRQdWJsaWNLZXlIZXgsXG4gIG9uRXJyb3IsXG4gIG9uTXV0YXRlLFxuICBvblNldHRsZWQsXG4gIG9uU3VjY2Vzc1xufSA9IHt9KSA9PiB7XG4gIGNvbnN0IHtcbiAgICBkYXRhLFxuICAgIGVycm9yLFxuICAgIGlzRXJyb3IsXG4gICAgaXNJZGxlLFxuICAgIGlzTG9hZGluZyxcbiAgICBpc1N1Y2Nlc3MsXG4gICAgcmVzZXQsXG4gICAgc3RhdHVzLFxuICAgIHZhcmlhYmxlcyxcbiAgICBtdXRhdGUsXG4gICAgbXV0YXRlQXN5bmNcbiAgfSA9IHVzZU11dGF0aW9uMyhbXCJzaWduXCIgLyogU0lHTiAqL10sIG11dGF0aW9uRm4zLCB7XG4gICAgb25FcnJvcixcbiAgICBvbk11dGF0ZSxcbiAgICBvblNldHRsZWQsXG4gICAgb25TdWNjZXNzXG4gIH0pO1xuICBjb25zdCBzaWduID0gdXNlQ2FsbGJhY2szKChwYXJhbXMpID0+IHtcbiAgICByZXR1cm4gbXV0YXRlKHBhcmFtcyB8fCB7XG4gICAgICBkZXBsb3ksXG4gICAgICBzaWduaW5nUHVibGljS2V5SGV4LFxuICAgICAgdGFyZ2V0UHVibGljS2V5SGV4XG4gICAgfSk7XG4gIH0sIFtkZXBsb3ksIHNpZ25pbmdQdWJsaWNLZXlIZXgsIHRhcmdldFB1YmxpY0tleUhleCwgbXV0YXRlXSk7XG4gIGNvbnN0IHNpZ25Bc3luYyA9IHVzZUNhbGxiYWNrMyhhc3luYyAocGFyYW1zKSA9PiB7XG4gICAgcmV0dXJuIG11dGF0ZUFzeW5jKHBhcmFtcyB8fCB7XG4gICAgICBkZXBsb3ksXG4gICAgICBzaWduaW5nUHVibGljS2V5SGV4LFxuICAgICAgdGFyZ2V0UHVibGljS2V5SGV4XG4gICAgfSk7XG4gIH0sIFtkZXBsb3ksIHNpZ25pbmdQdWJsaWNLZXlIZXgsIHRhcmdldFB1YmxpY0tleUhleCwgbXV0YXRlQXN5bmNdKTtcbiAgcmV0dXJuIHtcbiAgICBzaWduLFxuICAgIHNpZ25Bc3luYyxcbiAgICBkYXRhLFxuICAgIGVycm9yLFxuICAgIGlzRXJyb3IsXG4gICAgaXNJZGxlLFxuICAgIGlzTG9hZGluZyxcbiAgICBpc1N1Y2Nlc3MsXG4gICAgcmVzZXQsXG4gICAgc3RhdHVzLFxuICAgIHZhcmlhYmxlc1xuICB9O1xufTtcblxuLy8gc3JjL2hvb2tzL3VzZVNpZ25NZXNzYWdlLnRzXG5pbXBvcnQgeyB1c2VDYWxsYmFjayBhcyB1c2VDYWxsYmFjazQgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IHVzZU11dGF0aW9uIGFzIHVzZU11dGF0aW9uNCB9IGZyb20gXCJAdGFuc3RhY2svcmVhY3QtcXVlcnlcIjtcbmltcG9ydCB7XG4gIHNpZ25NZXNzYWdlIGFzIHNpZ25NZXNzYWdlRGFwcFxufSBmcm9tIFwiQGNhc3BlcmRhc2gvdXNld2FsbGV0LWNvcmVcIjtcbnZhciBtdXRhdGlvbkZuNCA9IGFzeW5jICh7IG1lc3NhZ2UsIHNpZ25pbmdQdWJsaWNLZXlIZXggfSkgPT4ge1xuICBpZiAoIW1lc3NhZ2UpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJNZXNzYWdlIG11c3QgYmUgYSBub24tZW1wdHkgc3RyaW5nXCIpO1xuICB9XG4gIGlmICghc2lnbmluZ1B1YmxpY0tleUhleCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcInNpZ25pbmdQdWJsaWNLZXlIZXggbXVzdCBiZSBhIG5vbi1lbXB0eSBzdHJpbmdcIik7XG4gIH1cbiAgcmV0dXJuIHNpZ25NZXNzYWdlRGFwcCh7IG1lc3NhZ2UsIHNpZ25pbmdQdWJsaWNLZXlIZXggfSk7XG59O1xudmFyIHVzZVNpZ25NZXNzYWdlID0gKHtcbiAgbWVzc2FnZSxcbiAgc2lnbmluZ1B1YmxpY0tleUhleCxcbiAgb25FcnJvcixcbiAgb25NdXRhdGUsXG4gIG9uU2V0dGxlZCxcbiAgb25TdWNjZXNzXG59ID0ge30pID0+IHtcbiAgY29uc3Qge1xuICAgIGRhdGEsXG4gICAgZXJyb3IsXG4gICAgaXNFcnJvcixcbiAgICBpc0lkbGUsXG4gICAgaXNMb2FkaW5nLFxuICAgIGlzU3VjY2VzcyxcbiAgICByZXNldCxcbiAgICBzdGF0dXMsXG4gICAgdmFyaWFibGVzLFxuICAgIG11dGF0ZSxcbiAgICBtdXRhdGVBc3luY1xuICB9ID0gdXNlTXV0YXRpb240KFtcInNpZ25fbWVzc2FnZVwiIC8qIFNJR05fTUVTU0FHRSAqLywgc2lnbmluZ1B1YmxpY0tleUhleCwgbWVzc2FnZV0sIG11dGF0aW9uRm40LCB7XG4gICAgb25FcnJvcixcbiAgICBvbk11dGF0ZSxcbiAgICBvblNldHRsZWQsXG4gICAgb25TdWNjZXNzXG4gIH0pO1xuICBjb25zdCBzaWduTWVzc2FnZSA9IHVzZUNhbGxiYWNrNCgocGFyYW1zKSA9PiB7XG4gICAgcmV0dXJuIG11dGF0ZShwYXJhbXMgfHwge1xuICAgICAgbWVzc2FnZSxcbiAgICAgIHNpZ25pbmdQdWJsaWNLZXlIZXhcbiAgICB9KTtcbiAgfSwgW21lc3NhZ2UsIHNpZ25pbmdQdWJsaWNLZXlIZXgsIG11dGF0ZV0pO1xuICBjb25zdCBzaWduTWVzc2FnZUFzeW5jID0gdXNlQ2FsbGJhY2s0KGFzeW5jIChwYXJhbXMpID0+IHtcbiAgICByZXR1cm4gbXV0YXRlQXN5bmMocGFyYW1zIHx8IHtcbiAgICAgIG1lc3NhZ2UsXG4gICAgICBzaWduaW5nUHVibGljS2V5SGV4XG4gICAgfSk7XG4gIH0sIFttZXNzYWdlLCBzaWduaW5nUHVibGljS2V5SGV4LCBtdXRhdGVBc3luY10pO1xuICByZXR1cm4ge1xuICAgIHNpZ25NZXNzYWdlLFxuICAgIHNpZ25NZXNzYWdlQXN5bmMsXG4gICAgZGF0YSxcbiAgICBlcnJvcixcbiAgICBpc0Vycm9yLFxuICAgIGlzSWRsZSxcbiAgICBpc0xvYWRpbmcsXG4gICAgaXNTdWNjZXNzLFxuICAgIHJlc2V0LFxuICAgIHN0YXR1cyxcbiAgICB2YXJpYWJsZXNcbiAgfTtcbn07XG5cbi8vIHNyYy9wcm92aWRlci50c1xuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBRdWVyeUNsaWVudFByb3ZpZGVyIH0gZnJvbSBcIkB0YW5zdGFjay9yZWFjdC1xdWVyeVwiO1xudmFyIENvbnRleHQgPSBSZWFjdC5jcmVhdGVDb250ZXh0KHZvaWQgMCk7XG52YXIgcXVlcnlDbGllbnRDb250ZXh0ID0gUmVhY3QuY3JlYXRlQ29udGV4dChcbiAgdm9pZCAwXG4pO1xudmFyIENhc3BlclByb3ZpZGVyID0gKHsgY2hpbGRyZW4sIGNsaWVudCB9KSA9PiB7XG4gIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgIENvbnRleHQuUHJvdmlkZXIsXG4gICAge1xuICAgICAgY2hpbGRyZW46IFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgIFF1ZXJ5Q2xpZW50UHJvdmlkZXIsXG4gICAgICAgIHtcbiAgICAgICAgICBjaGlsZHJlbixcbiAgICAgICAgICBjbGllbnQ6IGNsaWVudC5xdWVyeUNsaWVudFxuICAgICAgICB9XG4gICAgICApLFxuICAgICAgdmFsdWU6IGNsaWVudFxuICAgIH1cbiAgKTtcbn07XG5cbi8vIHNyYy9jbGllbnQudHNcbmltcG9ydCB7IFF1ZXJ5Q2xpZW50IH0gZnJvbSBcIkB0YW5zdGFjay9yZWFjdC1xdWVyeVwiO1xuaW1wb3J0IHtcbiAgY3JlYXRlQ2xpZW50IGFzIGNyZWF0ZUNhc3BlckNsaWVudFxufSBmcm9tIFwiQGNhc3BlcmRhc2gvdXNld2FsbGV0LWNvcmVcIjtcbmltcG9ydCB7XG4gIENhc3BlckRhc2hDb25uZWN0b3IsXG4gIENhc3BlclNpZ25lckNvbm5lY3RvcixcbiAgQ2FzcGVyV2FsbGV0Q29ubmVjdG9yLFxuICBDYXNwZXJEYXNoV2ViQ29ubmVjdG9yXG59IGZyb20gXCJAY2FzcGVyZGFzaC91c2V3YWxsZXQtY29yZVwiO1xudmFyIGNyZWF0ZUNsaWVudCA9ICh7XG4gIHF1ZXJ5Q2xpZW50ID0gbmV3IFF1ZXJ5Q2xpZW50KHtcbiAgICBkZWZhdWx0T3B0aW9uczoge1xuICAgICAgcXVlcmllczoge1xuICAgICAgICBjYWNoZVRpbWU6IDFlMyAqIDYwICogNjAgKiAyNCxcbiAgICAgICAgbmV0d29ya01vZGU6IFwib2ZmbGluZUZpcnN0XCIsXG4gICAgICAgIHJlZmV0Y2hPbldpbmRvd0ZvY3VzOiBmYWxzZSxcbiAgICAgICAgcmV0cnk6IDBcbiAgICAgIH0sXG4gICAgICBtdXRhdGlvbnM6IHtcbiAgICAgICAgbmV0d29ya01vZGU6IFwib2ZmbGluZUZpcnN0XCJcbiAgICAgIH1cbiAgICB9XG4gIH0pLFxuICAuLi5jb25maWdcbn0pID0+IHtcbiAgY29uc3QgY2FzcGVyQ2xpZW50ID0gY3JlYXRlQ2FzcGVyQ2xpZW50KGNvbmZpZyk7XG4gIHJldHVybiBPYmplY3QuYXNzaWduKGNhc3BlckNsaWVudCwge1xuICAgIHF1ZXJ5Q2xpZW50XG4gIH0pO1xufTtcblxuLy8gc3JjL2VudW1zL3F1ZXJ5S2V5cy50c1xudmFyIFF1ZXJ5S2V5c0VudW0gPSAvKiBAX19QVVJFX18gKi8gKChRdWVyeUtleXNFbnVtMikgPT4ge1xuICBRdWVyeUtleXNFbnVtMltcIkNPTk5FQ1RcIl0gPSBcImNvbm5lY3RcIjtcbiAgcmV0dXJuIFF1ZXJ5S2V5c0VudW0yO1xufSkoUXVlcnlLZXlzRW51bSB8fCB7fSk7XG5cbi8vIHNyYy9lbnVtcy9tdXRhdGlvbktleXMudHNcbnZhciBNdXRhdGlvbktleXNFbnVtID0gLyogQF9fUFVSRV9fICovICgoTXV0YXRpb25LZXlzRW51bTIpID0+IHtcbiAgTXV0YXRpb25LZXlzRW51bTJbXCJDT05ORUNUXCJdID0gXCJjb25uZWN0XCI7XG4gIE11dGF0aW9uS2V5c0VudW0yW1wiRElTQ09OTkVDVFwiXSA9IFwiZGlzY29ubmVjdFwiO1xuICBNdXRhdGlvbktleXNFbnVtMltcIlNJR05cIl0gPSBcInNpZ25cIjtcbiAgTXV0YXRpb25LZXlzRW51bTJbXCJTSUdOX01FU1NBR0VcIl0gPSBcInNpZ25fbWVzc2FnZVwiO1xuICBNdXRhdGlvbktleXNFbnVtMltcIlNFVF9MRURHRVJfQUNDT1VOVF9JTkRFWFwiXSA9IFwic2V0X2xlZGdlcl9hY2NvdW50X2luZGV4XCI7XG4gIHJldHVybiBNdXRhdGlvbktleXNFbnVtMjtcbn0pKE11dGF0aW9uS2V5c0VudW0gfHwge30pO1xuXG4vLyBzcmMvaG9va3MvdXNlRmV0Y2hMZWRnZXJBY2NvdW50cy50c1xuaW1wb3J0IHtcbiAgdXNlSW5maW5pdGVRdWVyeVxufSBmcm9tIFwiQHRhbnN0YWNrL3JlYWN0LXF1ZXJ5XCI7XG5pbXBvcnQgeyBnZXRMZWRnZXJQdWJsaWNLZXksIGdldExlZGdlclBhdGggfSBmcm9tIFwiQGNhc3BlcmRhc2gvdXNld2FsbGV0LWNvcmVcIjtcbnZhciB1c2VGZXRjaExlZGdlckFjY291bnRzID0gKHsgc3RhcnRJbmRleCA9IDAsIHRvdGFsID0gMTAgfSwgb3B0aW9ucykgPT4ge1xuICBjb25zdCB7IGRhdGEsIC4uLnF1ZXJ5IH0gPSB1c2VJbmZpbml0ZVF1ZXJ5KFxuICAgIFtcImNhc3Blci1sZWRnZXItYWNjb3VudHNcIl0sXG4gICAgYXN5bmMgKGNvbnRleHQpID0+IHtcbiAgICAgIGNvbnN0IGFjY291bnRzID0gW107XG4gICAgICBjb25zdCB7IHBhZ2VQYXJhbSA9IHN0YXJ0SW5kZXggfSA9IGNvbnRleHQ7XG4gICAgICBmb3IgKGxldCBpID0gcGFnZVBhcmFtOyBpIDwgcGFnZVBhcmFtICsgdG90YWw7IGkrKykge1xuICAgICAgICBjb25zdCBwdWJsaWNLZXkgPSBhd2FpdCBnZXRMZWRnZXJQdWJsaWNLZXkoeyBpbmRleDogaS50b1N0cmluZygpIH0pO1xuICAgICAgICBhY2NvdW50cy5wdXNoKHtcbiAgICAgICAgICBwYXRoOiBnZXRMZWRnZXJQYXRoKGkudG9TdHJpbmcoKSksXG4gICAgICAgICAgcHVibGljS2V5LFxuICAgICAgICAgIGluZGV4OiBpXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGFjY291bnRzO1xuICAgIH0sXG4gICAge1xuICAgICAgLi4ub3B0aW9ucyxcbiAgICAgIGdldE5leHRQYWdlUGFyYW06IChsYXN0UGFnZSkgPT4gKGxhc3RQYWdlW2xhc3RQYWdlLmxlbmd0aCAtIDFdPy5pbmRleCB8fCAwKSArIDFcbiAgICB9XG4gICk7XG4gIGNvbnN0IGZsYXR0ZWREYXRhID0gZGF0YT8ucGFnZXMucmVkdWNlKChhY2MsIHBhZ2UpID0+IHtcbiAgICByZXR1cm4gWy4uLmFjYywgLi4ucGFnZV07XG4gIH0sIFtdKTtcbiAgcmV0dXJuIHtcbiAgICBkYXRhOiBmbGF0dGVkRGF0YSxcbiAgICBwYWdnZWREYXRhOiBkYXRhLFxuICAgIC4uLnF1ZXJ5XG4gIH07XG59O1xuXG4vLyBzcmMvaG9va3MvdXNlU2V0TGVkZ2VyQWNjb3VudEluZGV4LnRzXG5pbXBvcnQgeyB1c2VDYWxsYmFjayBhcyB1c2VDYWxsYmFjazUgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IHVzZU11dGF0aW9uIGFzIHVzZU11dGF0aW9uNSB9IGZyb20gXCJAdGFuc3RhY2svcmVhY3QtcXVlcnlcIjtcbmltcG9ydCB7XG4gIHNldExlZGdlckFjY291bnRJbmRleCBhcyBzZXRMZWRnZXJBY2NvdW50SW5kZXhEYXBwXG59IGZyb20gXCJAY2FzcGVyZGFzaC91c2V3YWxsZXQtY29yZVwiO1xudmFyIG11dGF0aW9uRm41ID0gYXN5bmMgKHsgaW5kZXggfSkgPT4ge1xuICBpZiAoIWluZGV4KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiaW5kZXggbXVzdCBiZSBhIG5vbi1lbXB0eSBzdHJpbmdcIik7XG4gIH1cbiAgYXdhaXQgc2V0TGVkZ2VyQWNjb3VudEluZGV4RGFwcCh7IGluZGV4IH0pO1xuICByZXR1cm4ge1xuICAgIGluZGV4XG4gIH07XG59O1xudmFyIHVzZVNldExlZGdlckFjY291bnRJbmRleCA9ICh7XG4gIGluZGV4LFxuICBvbkVycm9yLFxuICBvbk11dGF0ZSxcbiAgb25TZXR0bGVkLFxuICBvblN1Y2Nlc3Ncbn0gPSB7fSkgPT4ge1xuICBjb25zdCB7XG4gICAgZGF0YSxcbiAgICBlcnJvcixcbiAgICBpc0Vycm9yLFxuICAgIGlzSWRsZSxcbiAgICBpc0xvYWRpbmcsXG4gICAgaXNTdWNjZXNzLFxuICAgIHJlc2V0LFxuICAgIHN0YXR1cyxcbiAgICB2YXJpYWJsZXMsXG4gICAgbXV0YXRlLFxuICAgIG11dGF0ZUFzeW5jXG4gIH0gPSB1c2VNdXRhdGlvbjUoW1wic2V0X2xlZGdlcl9hY2NvdW50X2luZGV4XCJdLCBtdXRhdGlvbkZuNSwge1xuICAgIG9uRXJyb3IsXG4gICAgb25NdXRhdGUsXG4gICAgb25TZXR0bGVkLFxuICAgIG9uU3VjY2Vzc1xuICB9KTtcbiAgY29uc3Qgc2V0TGVkZ2VyQWNjb3VudEluZGV4ID0gdXNlQ2FsbGJhY2s1KChwYXJhbXMpID0+IHtcbiAgICByZXR1cm4gbXV0YXRlKHBhcmFtcyB8fCB7XG4gICAgICBpbmRleFxuICAgIH0pO1xuICB9LCBbaW5kZXgsIG11dGF0ZV0pO1xuICBjb25zdCBzZXRMZWRnZXJBY2NvdW50SW5kZXhBc3luYyA9IHVzZUNhbGxiYWNrNShhc3luYyAocGFyYW1zKSA9PiB7XG4gICAgcmV0dXJuIG11dGF0ZUFzeW5jKHBhcmFtcyB8fCB7XG4gICAgICBpbmRleFxuICAgIH0pO1xuICB9LCBbaW5kZXgsIG11dGF0ZUFzeW5jXSk7XG4gIHJldHVybiB7XG4gICAgc2V0TGVkZ2VyQWNjb3VudEluZGV4LFxuICAgIHNldExlZGdlckFjY291bnRJbmRleEFzeW5jLFxuICAgIGRhdGEsXG4gICAgZXJyb3IsXG4gICAgaXNFcnJvcixcbiAgICBpc0lkbGUsXG4gICAgaXNMb2FkaW5nLFxuICAgIGlzU3VjY2VzcyxcbiAgICByZXNldCxcbiAgICBzdGF0dXMsXG4gICAgdmFyaWFibGVzXG4gIH07XG59O1xuZXhwb3J0IHtcbiAgQ2FzcGVyRGFzaENvbm5lY3RvcixcbiAgQ2FzcGVyRGFzaFdlYkNvbm5lY3RvcixcbiAgQ2FzcGVyUHJvdmlkZXIsXG4gIENhc3BlclNpZ25lckNvbm5lY3RvcixcbiAgQ2FzcGVyV2FsbGV0Q29ubmVjdG9yLFxuICBNdXRhdGlvbktleXNFbnVtLFxuICBRdWVyeUtleXNFbnVtLFxuICBjcmVhdGVDbGllbnQsXG4gIHVzZUFjY291bnQsXG4gIHVzZUNvbm5lY3QsXG4gIHVzZURpc2Nvbm5lY3QsXG4gIHVzZUZldGNoTGVkZ2VyQWNjb3VudHMsXG4gIHVzZVNldExlZGdlckFjY291bnRJbmRleCxcbiAgdXNlU2lnbixcbiAgdXNlU2lnbk1lc3NhZ2Vcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@casperdash/usewallet/dist/index.js\n"));

/***/ }),

/***/ "./node_modules/@casperdash/usewallet/node_modules/@tanstack/react-query/build/lib/QueryClientProvider.mjs":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/@casperdash/usewallet/node_modules/@tanstack/react-query/build/lib/QueryClientProvider.mjs ***!
  \*****************************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   QueryClientProvider: function() { return /* binding */ QueryClientProvider; },\n/* harmony export */   defaultContext: function() { return /* binding */ defaultContext; },\n/* harmony export */   useQueryClient: function() { return /* binding */ useQueryClient; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n'use client';\n\n\nconst defaultContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createContext(undefined);\nconst QueryClientSharingContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createContext(false); // If we are given a context, we will use it.\n// Otherwise, if contextSharing is on, we share the first and at least one\n// instance of the context across the window\n// to ensure that if React Query is used across\n// different bundles or microfrontends they will\n// all use the same **instance** of context, regardless\n// of module scoping.\n\nfunction getQueryClientContext(context, contextSharing) {\n  if (context) {\n    return context;\n  }\n\n  if (contextSharing && typeof window !== 'undefined') {\n    if (!window.ReactQueryClientContext) {\n      window.ReactQueryClientContext = defaultContext;\n    }\n\n    return window.ReactQueryClientContext;\n  }\n\n  return defaultContext;\n}\n\nconst useQueryClient = ({\n  context\n} = {}) => {\n  const queryClient = react__WEBPACK_IMPORTED_MODULE_0__.useContext(getQueryClientContext(context, react__WEBPACK_IMPORTED_MODULE_0__.useContext(QueryClientSharingContext)));\n\n  if (!queryClient) {\n    throw new Error('No QueryClient set, use QueryClientProvider to set one');\n  }\n\n  return queryClient;\n};\nconst QueryClientProvider = ({\n  client,\n  children,\n  context,\n  contextSharing = false\n}) => {\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    client.mount();\n    return () => {\n      client.unmount();\n    };\n  }, [client]);\n\n  if ( true && contextSharing) {\n    client.getLogger().error(\"The contextSharing option has been deprecated and will be removed in the next major version\");\n  }\n\n  const Context = getQueryClientContext(context, contextSharing);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(QueryClientSharingContext.Provider, {\n    value: !context && contextSharing\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(Context.Provider, {\n    value: client\n  }, children));\n};\n\n\n//# sourceMappingURL=QueryClientProvider.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNhc3BlcmRhc2gvdXNld2FsbGV0L25vZGVfbW9kdWxlcy9AdGFuc3RhY2svcmVhY3QtcXVlcnkvYnVpbGQvbGliL1F1ZXJ5Q2xpZW50UHJvdmlkZXIubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUMrQjs7QUFFL0Isb0NBQW9DLGdEQUFtQjtBQUN2RCwrQ0FBK0MsZ0RBQW1CLFNBQVM7QUFDM0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsRUFBRSxJQUFJO0FBQ04sc0JBQXNCLDZDQUFnQixnQ0FBZ0MsNkNBQWdCOztBQUV0RjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsRUFBRSw0Q0FBZTtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUgsTUFBTSxLQUFxQztBQUMzQztBQUNBOztBQUVBO0FBQ0Esc0JBQXNCLGdEQUFtQjtBQUN6QztBQUNBLEdBQUcsZUFBZSxnREFBbUI7QUFDckM7QUFDQSxHQUFHO0FBQ0g7O0FBRStEO0FBQy9EIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY2FzcGVyZGFzaC91c2V3YWxsZXQvbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9yZWFjdC1xdWVyeS9idWlsZC9saWIvUXVlcnlDbGllbnRQcm92aWRlci5tanM/YWI4MSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIGNsaWVudCc7XG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbmNvbnN0IGRlZmF1bHRDb250ZXh0ID0gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUNvbnRleHQodW5kZWZpbmVkKTtcbmNvbnN0IFF1ZXJ5Q2xpZW50U2hhcmluZ0NvbnRleHQgPSAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlQ29udGV4dChmYWxzZSk7IC8vIElmIHdlIGFyZSBnaXZlbiBhIGNvbnRleHQsIHdlIHdpbGwgdXNlIGl0LlxuLy8gT3RoZXJ3aXNlLCBpZiBjb250ZXh0U2hhcmluZyBpcyBvbiwgd2Ugc2hhcmUgdGhlIGZpcnN0IGFuZCBhdCBsZWFzdCBvbmVcbi8vIGluc3RhbmNlIG9mIHRoZSBjb250ZXh0IGFjcm9zcyB0aGUgd2luZG93XG4vLyB0byBlbnN1cmUgdGhhdCBpZiBSZWFjdCBRdWVyeSBpcyB1c2VkIGFjcm9zc1xuLy8gZGlmZmVyZW50IGJ1bmRsZXMgb3IgbWljcm9mcm9udGVuZHMgdGhleSB3aWxsXG4vLyBhbGwgdXNlIHRoZSBzYW1lICoqaW5zdGFuY2UqKiBvZiBjb250ZXh0LCByZWdhcmRsZXNzXG4vLyBvZiBtb2R1bGUgc2NvcGluZy5cblxuZnVuY3Rpb24gZ2V0UXVlcnlDbGllbnRDb250ZXh0KGNvbnRleHQsIGNvbnRleHRTaGFyaW5nKSB7XG4gIGlmIChjb250ZXh0KSB7XG4gICAgcmV0dXJuIGNvbnRleHQ7XG4gIH1cblxuICBpZiAoY29udGV4dFNoYXJpbmcgJiYgdHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICBpZiAoIXdpbmRvdy5SZWFjdFF1ZXJ5Q2xpZW50Q29udGV4dCkge1xuICAgICAgd2luZG93LlJlYWN0UXVlcnlDbGllbnRDb250ZXh0ID0gZGVmYXVsdENvbnRleHQ7XG4gICAgfVxuXG4gICAgcmV0dXJuIHdpbmRvdy5SZWFjdFF1ZXJ5Q2xpZW50Q29udGV4dDtcbiAgfVxuXG4gIHJldHVybiBkZWZhdWx0Q29udGV4dDtcbn1cblxuY29uc3QgdXNlUXVlcnlDbGllbnQgPSAoe1xuICBjb250ZXh0XG59ID0ge30pID0+IHtcbiAgY29uc3QgcXVlcnlDbGllbnQgPSBSZWFjdC51c2VDb250ZXh0KGdldFF1ZXJ5Q2xpZW50Q29udGV4dChjb250ZXh0LCBSZWFjdC51c2VDb250ZXh0KFF1ZXJ5Q2xpZW50U2hhcmluZ0NvbnRleHQpKSk7XG5cbiAgaWYgKCFxdWVyeUNsaWVudCkge1xuICAgIHRocm93IG5ldyBFcnJvcignTm8gUXVlcnlDbGllbnQgc2V0LCB1c2UgUXVlcnlDbGllbnRQcm92aWRlciB0byBzZXQgb25lJyk7XG4gIH1cblxuICByZXR1cm4gcXVlcnlDbGllbnQ7XG59O1xuY29uc3QgUXVlcnlDbGllbnRQcm92aWRlciA9ICh7XG4gIGNsaWVudCxcbiAgY2hpbGRyZW4sXG4gIGNvbnRleHQsXG4gIGNvbnRleHRTaGFyaW5nID0gZmFsc2Vcbn0pID0+IHtcbiAgUmVhY3QudXNlRWZmZWN0KCgpID0+IHtcbiAgICBjbGllbnQubW91bnQoKTtcbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgY2xpZW50LnVubW91bnQoKTtcbiAgICB9O1xuICB9LCBbY2xpZW50XSk7XG5cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgY29udGV4dFNoYXJpbmcpIHtcbiAgICBjbGllbnQuZ2V0TG9nZ2VyKCkuZXJyb3IoXCJUaGUgY29udGV4dFNoYXJpbmcgb3B0aW9uIGhhcyBiZWVuIGRlcHJlY2F0ZWQgYW5kIHdpbGwgYmUgcmVtb3ZlZCBpbiB0aGUgbmV4dCBtYWpvciB2ZXJzaW9uXCIpO1xuICB9XG5cbiAgY29uc3QgQ29udGV4dCA9IGdldFF1ZXJ5Q2xpZW50Q29udGV4dChjb250ZXh0LCBjb250ZXh0U2hhcmluZyk7XG4gIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChRdWVyeUNsaWVudFNoYXJpbmdDb250ZXh0LlByb3ZpZGVyLCB7XG4gICAgdmFsdWU6ICFjb250ZXh0ICYmIGNvbnRleHRTaGFyaW5nXG4gIH0sIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KENvbnRleHQuUHJvdmlkZXIsIHtcbiAgICB2YWx1ZTogY2xpZW50XG4gIH0sIGNoaWxkcmVuKSk7XG59O1xuXG5leHBvcnQgeyBRdWVyeUNsaWVudFByb3ZpZGVyLCBkZWZhdWx0Q29udGV4dCwgdXNlUXVlcnlDbGllbnQgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVF1ZXJ5Q2xpZW50UHJvdmlkZXIubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@casperdash/usewallet/node_modules/@tanstack/react-query/build/lib/QueryClientProvider.mjs\n"));

/***/ }),

/***/ "./node_modules/@casperdash/usewallet/node_modules/@tanstack/react-query/build/lib/QueryErrorResetBoundary.mjs":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/@casperdash/usewallet/node_modules/@tanstack/react-query/build/lib/QueryErrorResetBoundary.mjs ***!
  \*********************************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   QueryErrorResetBoundary: function() { return /* binding */ QueryErrorResetBoundary; },\n/* harmony export */   useQueryErrorResetBoundary: function() { return /* binding */ useQueryErrorResetBoundary; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n'use client';\n\n\nfunction createValue() {\n  let isReset = false;\n  return {\n    clearReset: () => {\n      isReset = false;\n    },\n    reset: () => {\n      isReset = true;\n    },\n    isReset: () => {\n      return isReset;\n    }\n  };\n}\n\nconst QueryErrorResetBoundaryContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createContext(createValue()); // HOOK\n\nconst useQueryErrorResetBoundary = () => react__WEBPACK_IMPORTED_MODULE_0__.useContext(QueryErrorResetBoundaryContext); // COMPONENT\n\nconst QueryErrorResetBoundary = ({\n  children\n}) => {\n  const [value] = react__WEBPACK_IMPORTED_MODULE_0__.useState(() => createValue());\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(QueryErrorResetBoundaryContext.Provider, {\n    value: value\n  }, typeof children === 'function' ? children(value) : children);\n};\n\n\n//# sourceMappingURL=QueryErrorResetBoundary.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNhc3BlcmRhc2gvdXNld2FsbGV0L25vZGVfbW9kdWxlcy9AdGFuc3RhY2svcmVhY3QtcXVlcnkvYnVpbGQvbGliL1F1ZXJ5RXJyb3JSZXNldEJvdW5kYXJ5Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUMrQjs7QUFFL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsb0RBQW9ELGdEQUFtQixpQkFBaUI7O0FBRXhGLHlDQUF5Qyw2Q0FBZ0Isa0NBQWtDOztBQUUzRjtBQUNBO0FBQ0EsQ0FBQztBQUNELGtCQUFrQiwyQ0FBYztBQUNoQyxzQkFBc0IsZ0RBQW1CO0FBQ3pDO0FBQ0EsR0FBRztBQUNIOztBQUUrRDtBQUMvRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNhc3BlcmRhc2gvdXNld2FsbGV0L25vZGVfbW9kdWxlcy9AdGFuc3RhY2svcmVhY3QtcXVlcnkvYnVpbGQvbGliL1F1ZXJ5RXJyb3JSZXNldEJvdW5kYXJ5Lm1qcz84OWI3Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2UgY2xpZW50JztcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcblxuZnVuY3Rpb24gY3JlYXRlVmFsdWUoKSB7XG4gIGxldCBpc1Jlc2V0ID0gZmFsc2U7XG4gIHJldHVybiB7XG4gICAgY2xlYXJSZXNldDogKCkgPT4ge1xuICAgICAgaXNSZXNldCA9IGZhbHNlO1xuICAgIH0sXG4gICAgcmVzZXQ6ICgpID0+IHtcbiAgICAgIGlzUmVzZXQgPSB0cnVlO1xuICAgIH0sXG4gICAgaXNSZXNldDogKCkgPT4ge1xuICAgICAgcmV0dXJuIGlzUmVzZXQ7XG4gICAgfVxuICB9O1xufVxuXG5jb25zdCBRdWVyeUVycm9yUmVzZXRCb3VuZGFyeUNvbnRleHQgPSAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlQ29udGV4dChjcmVhdGVWYWx1ZSgpKTsgLy8gSE9PS1xuXG5jb25zdCB1c2VRdWVyeUVycm9yUmVzZXRCb3VuZGFyeSA9ICgpID0+IFJlYWN0LnVzZUNvbnRleHQoUXVlcnlFcnJvclJlc2V0Qm91bmRhcnlDb250ZXh0KTsgLy8gQ09NUE9ORU5UXG5cbmNvbnN0IFF1ZXJ5RXJyb3JSZXNldEJvdW5kYXJ5ID0gKHtcbiAgY2hpbGRyZW5cbn0pID0+IHtcbiAgY29uc3QgW3ZhbHVlXSA9IFJlYWN0LnVzZVN0YXRlKCgpID0+IGNyZWF0ZVZhbHVlKCkpO1xuICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoUXVlcnlFcnJvclJlc2V0Qm91bmRhcnlDb250ZXh0LlByb3ZpZGVyLCB7XG4gICAgdmFsdWU6IHZhbHVlXG4gIH0sIHR5cGVvZiBjaGlsZHJlbiA9PT0gJ2Z1bmN0aW9uJyA/IGNoaWxkcmVuKHZhbHVlKSA6IGNoaWxkcmVuKTtcbn07XG5cbmV4cG9ydCB7IFF1ZXJ5RXJyb3JSZXNldEJvdW5kYXJ5LCB1c2VRdWVyeUVycm9yUmVzZXRCb3VuZGFyeSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9UXVlcnlFcnJvclJlc2V0Qm91bmRhcnkubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@casperdash/usewallet/node_modules/@tanstack/react-query/build/lib/QueryErrorResetBoundary.mjs\n"));

/***/ }),

/***/ "./node_modules/@casperdash/usewallet/node_modules/@tanstack/react-query/build/lib/errorBoundaryUtils.mjs":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/@casperdash/usewallet/node_modules/@tanstack/react-query/build/lib/errorBoundaryUtils.mjs ***!
  \****************************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ensurePreventErrorBoundaryRetry: function() { return /* binding */ ensurePreventErrorBoundaryRetry; },\n/* harmony export */   getHasError: function() { return /* binding */ getHasError; },\n/* harmony export */   useClearResetErrorBoundary: function() { return /* binding */ useClearResetErrorBoundary; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var _utils_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.mjs */ \"./node_modules/@casperdash/usewallet/node_modules/@tanstack/react-query/build/lib/utils.mjs\");\n'use client';\n\n\n\nconst ensurePreventErrorBoundaryRetry = (options, errorResetBoundary) => {\n  if (options.suspense || options.useErrorBoundary) {\n    // Prevent retrying failed query if the error boundary has not been reset yet\n    if (!errorResetBoundary.isReset()) {\n      options.retryOnMount = false;\n    }\n  }\n};\nconst useClearResetErrorBoundary = errorResetBoundary => {\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    errorResetBoundary.clearReset();\n  }, [errorResetBoundary]);\n};\nconst getHasError = ({\n  result,\n  errorResetBoundary,\n  useErrorBoundary,\n  query\n}) => {\n  return result.isError && !errorResetBoundary.isReset() && !result.isFetching && (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.shouldThrowError)(useErrorBoundary, [result.error, query]);\n};\n\n\n//# sourceMappingURL=errorBoundaryUtils.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNhc3BlcmRhc2gvdXNld2FsbGV0L25vZGVfbW9kdWxlcy9AdGFuc3RhY2svcmVhY3QtcXVlcnkvYnVpbGQvbGliL2Vycm9yQm91bmRhcnlVdGlscy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUMrQjtBQUNnQjs7QUFFL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRSw0Q0FBZTtBQUNqQjtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Qsa0ZBQWtGLDREQUFnQjtBQUNsRzs7QUFFb0Y7QUFDcEYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjYXNwZXJkYXNoL3VzZXdhbGxldC9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3JlYWN0LXF1ZXJ5L2J1aWxkL2xpYi9lcnJvckJvdW5kYXJ5VXRpbHMubWpzP2I0NzgiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBjbGllbnQnO1xuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgc2hvdWxkVGhyb3dFcnJvciB9IGZyb20gJy4vdXRpbHMubWpzJztcblxuY29uc3QgZW5zdXJlUHJldmVudEVycm9yQm91bmRhcnlSZXRyeSA9IChvcHRpb25zLCBlcnJvclJlc2V0Qm91bmRhcnkpID0+IHtcbiAgaWYgKG9wdGlvbnMuc3VzcGVuc2UgfHwgb3B0aW9ucy51c2VFcnJvckJvdW5kYXJ5KSB7XG4gICAgLy8gUHJldmVudCByZXRyeWluZyBmYWlsZWQgcXVlcnkgaWYgdGhlIGVycm9yIGJvdW5kYXJ5IGhhcyBub3QgYmVlbiByZXNldCB5ZXRcbiAgICBpZiAoIWVycm9yUmVzZXRCb3VuZGFyeS5pc1Jlc2V0KCkpIHtcbiAgICAgIG9wdGlvbnMucmV0cnlPbk1vdW50ID0gZmFsc2U7XG4gICAgfVxuICB9XG59O1xuY29uc3QgdXNlQ2xlYXJSZXNldEVycm9yQm91bmRhcnkgPSBlcnJvclJlc2V0Qm91bmRhcnkgPT4ge1xuICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuICAgIGVycm9yUmVzZXRCb3VuZGFyeS5jbGVhclJlc2V0KCk7XG4gIH0sIFtlcnJvclJlc2V0Qm91bmRhcnldKTtcbn07XG5jb25zdCBnZXRIYXNFcnJvciA9ICh7XG4gIHJlc3VsdCxcbiAgZXJyb3JSZXNldEJvdW5kYXJ5LFxuICB1c2VFcnJvckJvdW5kYXJ5LFxuICBxdWVyeVxufSkgPT4ge1xuICByZXR1cm4gcmVzdWx0LmlzRXJyb3IgJiYgIWVycm9yUmVzZXRCb3VuZGFyeS5pc1Jlc2V0KCkgJiYgIXJlc3VsdC5pc0ZldGNoaW5nICYmIHNob3VsZFRocm93RXJyb3IodXNlRXJyb3JCb3VuZGFyeSwgW3Jlc3VsdC5lcnJvciwgcXVlcnldKTtcbn07XG5cbmV4cG9ydCB7IGVuc3VyZVByZXZlbnRFcnJvckJvdW5kYXJ5UmV0cnksIGdldEhhc0Vycm9yLCB1c2VDbGVhclJlc2V0RXJyb3JCb3VuZGFyeSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZXJyb3JCb3VuZGFyeVV0aWxzLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@casperdash/usewallet/node_modules/@tanstack/react-query/build/lib/errorBoundaryUtils.mjs\n"));

/***/ }),

/***/ "./node_modules/@casperdash/usewallet/node_modules/@tanstack/react-query/build/lib/isRestoring.mjs":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/@casperdash/usewallet/node_modules/@tanstack/react-query/build/lib/isRestoring.mjs ***!
  \*********************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IsRestoringProvider: function() { return /* binding */ IsRestoringProvider; },\n/* harmony export */   useIsRestoring: function() { return /* binding */ useIsRestoring; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n'use client';\n\n\nconst IsRestoringContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createContext(false);\nconst useIsRestoring = () => react__WEBPACK_IMPORTED_MODULE_0__.useContext(IsRestoringContext);\nconst IsRestoringProvider = IsRestoringContext.Provider;\n\n\n//# sourceMappingURL=isRestoring.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNhc3BlcmRhc2gvdXNld2FsbGV0L25vZGVfbW9kdWxlcy9AdGFuc3RhY2svcmVhY3QtcXVlcnkvYnVpbGQvbGliL2lzUmVzdG9yaW5nLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUMrQjs7QUFFL0Isd0NBQXdDLGdEQUFtQjtBQUMzRCw2QkFBNkIsNkNBQWdCO0FBQzdDOztBQUUrQztBQUMvQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNhc3BlcmRhc2gvdXNld2FsbGV0L25vZGVfbW9kdWxlcy9AdGFuc3RhY2svcmVhY3QtcXVlcnkvYnVpbGQvbGliL2lzUmVzdG9yaW5nLm1qcz9iYzMxIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2UgY2xpZW50JztcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcblxuY29uc3QgSXNSZXN0b3JpbmdDb250ZXh0ID0gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUNvbnRleHQoZmFsc2UpO1xuY29uc3QgdXNlSXNSZXN0b3JpbmcgPSAoKSA9PiBSZWFjdC51c2VDb250ZXh0KElzUmVzdG9yaW5nQ29udGV4dCk7XG5jb25zdCBJc1Jlc3RvcmluZ1Byb3ZpZGVyID0gSXNSZXN0b3JpbmdDb250ZXh0LlByb3ZpZGVyO1xuXG5leHBvcnQgeyBJc1Jlc3RvcmluZ1Byb3ZpZGVyLCB1c2VJc1Jlc3RvcmluZyB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aXNSZXN0b3JpbmcubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@casperdash/usewallet/node_modules/@tanstack/react-query/build/lib/isRestoring.mjs\n"));

/***/ }),

/***/ "./node_modules/@casperdash/usewallet/node_modules/@tanstack/react-query/build/lib/suspense.mjs":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@casperdash/usewallet/node_modules/@tanstack/react-query/build/lib/suspense.mjs ***!
  \******************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ensureStaleTime: function() { return /* binding */ ensureStaleTime; },\n/* harmony export */   fetchOptimistic: function() { return /* binding */ fetchOptimistic; },\n/* harmony export */   shouldSuspend: function() { return /* binding */ shouldSuspend; },\n/* harmony export */   willFetch: function() { return /* binding */ willFetch; }\n/* harmony export */ });\nconst ensureStaleTime = defaultedOptions => {\n  if (defaultedOptions.suspense) {\n    // Always set stale time when using suspense to prevent\n    // fetching again when directly mounting after suspending\n    if (typeof defaultedOptions.staleTime !== 'number') {\n      defaultedOptions.staleTime = 1000;\n    }\n  }\n};\nconst willFetch = (result, isRestoring) => result.isLoading && result.isFetching && !isRestoring;\nconst shouldSuspend = (defaultedOptions, result, isRestoring) => (defaultedOptions == null ? void 0 : defaultedOptions.suspense) && willFetch(result, isRestoring);\nconst fetchOptimistic = (defaultedOptions, observer, errorResetBoundary) => observer.fetchOptimistic(defaultedOptions).then(({\n  data\n}) => {\n  defaultedOptions.onSuccess == null ? void 0 : defaultedOptions.onSuccess(data);\n  defaultedOptions.onSettled == null ? void 0 : defaultedOptions.onSettled(data, null);\n}).catch(error => {\n  errorResetBoundary.clearReset();\n  defaultedOptions.onError == null ? void 0 : defaultedOptions.onError(error);\n  defaultedOptions.onSettled == null ? void 0 : defaultedOptions.onSettled(undefined, error);\n});\n\n\n//# sourceMappingURL=suspense.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNhc3BlcmRhc2gvdXNld2FsbGV0L25vZGVfbW9kdWxlcy9AdGFuc3RhY2svcmVhY3QtcXVlcnkvYnVpbGQvbGliL3N1c3BlbnNlLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVxRTtBQUN0RSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNhc3BlcmRhc2gvdXNld2FsbGV0L25vZGVfbW9kdWxlcy9AdGFuc3RhY2svcmVhY3QtcXVlcnkvYnVpbGQvbGliL3N1c3BlbnNlLm1qcz8xM2U2Il0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGVuc3VyZVN0YWxlVGltZSA9IGRlZmF1bHRlZE9wdGlvbnMgPT4ge1xuICBpZiAoZGVmYXVsdGVkT3B0aW9ucy5zdXNwZW5zZSkge1xuICAgIC8vIEFsd2F5cyBzZXQgc3RhbGUgdGltZSB3aGVuIHVzaW5nIHN1c3BlbnNlIHRvIHByZXZlbnRcbiAgICAvLyBmZXRjaGluZyBhZ2FpbiB3aGVuIGRpcmVjdGx5IG1vdW50aW5nIGFmdGVyIHN1c3BlbmRpbmdcbiAgICBpZiAodHlwZW9mIGRlZmF1bHRlZE9wdGlvbnMuc3RhbGVUaW1lICE9PSAnbnVtYmVyJykge1xuICAgICAgZGVmYXVsdGVkT3B0aW9ucy5zdGFsZVRpbWUgPSAxMDAwO1xuICAgIH1cbiAgfVxufTtcbmNvbnN0IHdpbGxGZXRjaCA9IChyZXN1bHQsIGlzUmVzdG9yaW5nKSA9PiByZXN1bHQuaXNMb2FkaW5nICYmIHJlc3VsdC5pc0ZldGNoaW5nICYmICFpc1Jlc3RvcmluZztcbmNvbnN0IHNob3VsZFN1c3BlbmQgPSAoZGVmYXVsdGVkT3B0aW9ucywgcmVzdWx0LCBpc1Jlc3RvcmluZykgPT4gKGRlZmF1bHRlZE9wdGlvbnMgPT0gbnVsbCA/IHZvaWQgMCA6IGRlZmF1bHRlZE9wdGlvbnMuc3VzcGVuc2UpICYmIHdpbGxGZXRjaChyZXN1bHQsIGlzUmVzdG9yaW5nKTtcbmNvbnN0IGZldGNoT3B0aW1pc3RpYyA9IChkZWZhdWx0ZWRPcHRpb25zLCBvYnNlcnZlciwgZXJyb3JSZXNldEJvdW5kYXJ5KSA9PiBvYnNlcnZlci5mZXRjaE9wdGltaXN0aWMoZGVmYXVsdGVkT3B0aW9ucykudGhlbigoe1xuICBkYXRhXG59KSA9PiB7XG4gIGRlZmF1bHRlZE9wdGlvbnMub25TdWNjZXNzID09IG51bGwgPyB2b2lkIDAgOiBkZWZhdWx0ZWRPcHRpb25zLm9uU3VjY2VzcyhkYXRhKTtcbiAgZGVmYXVsdGVkT3B0aW9ucy5vblNldHRsZWQgPT0gbnVsbCA/IHZvaWQgMCA6IGRlZmF1bHRlZE9wdGlvbnMub25TZXR0bGVkKGRhdGEsIG51bGwpO1xufSkuY2F0Y2goZXJyb3IgPT4ge1xuICBlcnJvclJlc2V0Qm91bmRhcnkuY2xlYXJSZXNldCgpO1xuICBkZWZhdWx0ZWRPcHRpb25zLm9uRXJyb3IgPT0gbnVsbCA/IHZvaWQgMCA6IGRlZmF1bHRlZE9wdGlvbnMub25FcnJvcihlcnJvcik7XG4gIGRlZmF1bHRlZE9wdGlvbnMub25TZXR0bGVkID09IG51bGwgPyB2b2lkIDAgOiBkZWZhdWx0ZWRPcHRpb25zLm9uU2V0dGxlZCh1bmRlZmluZWQsIGVycm9yKTtcbn0pO1xuXG5leHBvcnQgeyBlbnN1cmVTdGFsZVRpbWUsIGZldGNoT3B0aW1pc3RpYywgc2hvdWxkU3VzcGVuZCwgd2lsbEZldGNoIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zdXNwZW5zZS5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@casperdash/usewallet/node_modules/@tanstack/react-query/build/lib/suspense.mjs\n"));

/***/ }),

/***/ "./node_modules/@casperdash/usewallet/node_modules/@tanstack/react-query/build/lib/useBaseQuery.mjs":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/@casperdash/usewallet/node_modules/@tanstack/react-query/build/lib/useBaseQuery.mjs ***!
  \**********************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useBaseQuery: function() { return /* binding */ useBaseQuery; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var _tanstack_query_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @tanstack/query-core */ \"./node_modules/@tanstack/query-core/build/lib/notifyManager.mjs\");\n/* harmony import */ var _useSyncExternalStore_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./useSyncExternalStore.mjs */ \"./node_modules/@casperdash/usewallet/node_modules/@tanstack/react-query/build/lib/useSyncExternalStore.mjs\");\n/* harmony import */ var _QueryErrorResetBoundary_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./QueryErrorResetBoundary.mjs */ \"./node_modules/@casperdash/usewallet/node_modules/@tanstack/react-query/build/lib/QueryErrorResetBoundary.mjs\");\n/* harmony import */ var _QueryClientProvider_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./QueryClientProvider.mjs */ \"./node_modules/@casperdash/usewallet/node_modules/@tanstack/react-query/build/lib/QueryClientProvider.mjs\");\n/* harmony import */ var _isRestoring_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./isRestoring.mjs */ \"./node_modules/@casperdash/usewallet/node_modules/@tanstack/react-query/build/lib/isRestoring.mjs\");\n/* harmony import */ var _errorBoundaryUtils_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./errorBoundaryUtils.mjs */ \"./node_modules/@casperdash/usewallet/node_modules/@tanstack/react-query/build/lib/errorBoundaryUtils.mjs\");\n/* harmony import */ var _suspense_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./suspense.mjs */ \"./node_modules/@casperdash/usewallet/node_modules/@tanstack/react-query/build/lib/suspense.mjs\");\n'use client';\n\n\n\n\n\n\n\n\n\nfunction useBaseQuery(options, Observer) {\n  const queryClient = (0,_QueryClientProvider_mjs__WEBPACK_IMPORTED_MODULE_1__.useQueryClient)({\n    context: options.context\n  });\n  const isRestoring = (0,_isRestoring_mjs__WEBPACK_IMPORTED_MODULE_2__.useIsRestoring)();\n  const errorResetBoundary = (0,_QueryErrorResetBoundary_mjs__WEBPACK_IMPORTED_MODULE_3__.useQueryErrorResetBoundary)();\n  const defaultedOptions = queryClient.defaultQueryOptions(options); // Make sure results are optimistically set in fetching state before subscribing or updating options\n\n  defaultedOptions._optimisticResults = isRestoring ? 'isRestoring' : 'optimistic'; // Include callbacks in batch renders\n\n  if (defaultedOptions.onError) {\n    defaultedOptions.onError = _tanstack_query_core__WEBPACK_IMPORTED_MODULE_4__.notifyManager.batchCalls(defaultedOptions.onError);\n  }\n\n  if (defaultedOptions.onSuccess) {\n    defaultedOptions.onSuccess = _tanstack_query_core__WEBPACK_IMPORTED_MODULE_4__.notifyManager.batchCalls(defaultedOptions.onSuccess);\n  }\n\n  if (defaultedOptions.onSettled) {\n    defaultedOptions.onSettled = _tanstack_query_core__WEBPACK_IMPORTED_MODULE_4__.notifyManager.batchCalls(defaultedOptions.onSettled);\n  }\n\n  (0,_suspense_mjs__WEBPACK_IMPORTED_MODULE_5__.ensureStaleTime)(defaultedOptions);\n  (0,_errorBoundaryUtils_mjs__WEBPACK_IMPORTED_MODULE_6__.ensurePreventErrorBoundaryRetry)(defaultedOptions, errorResetBoundary);\n  (0,_errorBoundaryUtils_mjs__WEBPACK_IMPORTED_MODULE_6__.useClearResetErrorBoundary)(errorResetBoundary);\n  const [observer] = react__WEBPACK_IMPORTED_MODULE_0__.useState(() => new Observer(queryClient, defaultedOptions));\n  const result = observer.getOptimisticResult(defaultedOptions);\n  (0,_useSyncExternalStore_mjs__WEBPACK_IMPORTED_MODULE_7__.useSyncExternalStore)(react__WEBPACK_IMPORTED_MODULE_0__.useCallback(onStoreChange => {\n    const unsubscribe = isRestoring ? () => undefined : observer.subscribe(_tanstack_query_core__WEBPACK_IMPORTED_MODULE_4__.notifyManager.batchCalls(onStoreChange)); // Update result to make sure we did not miss any query updates\n    // between creating the observer and subscribing to it.\n\n    observer.updateResult();\n    return unsubscribe;\n  }, [observer, isRestoring]), () => observer.getCurrentResult(), () => observer.getCurrentResult());\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    // Do not notify on updates because of changes in the options because\n    // these changes should already be reflected in the optimistic result.\n    observer.setOptions(defaultedOptions, {\n      listeners: false\n    });\n  }, [defaultedOptions, observer]); // Handle suspense\n\n  if ((0,_suspense_mjs__WEBPACK_IMPORTED_MODULE_5__.shouldSuspend)(defaultedOptions, result, isRestoring)) {\n    throw (0,_suspense_mjs__WEBPACK_IMPORTED_MODULE_5__.fetchOptimistic)(defaultedOptions, observer, errorResetBoundary);\n  } // Handle error boundary\n\n\n  if ((0,_errorBoundaryUtils_mjs__WEBPACK_IMPORTED_MODULE_6__.getHasError)({\n    result,\n    errorResetBoundary,\n    useErrorBoundary: defaultedOptions.useErrorBoundary,\n    query: observer.getCurrentQuery()\n  })) {\n    throw result.error;\n  } // Handle result property usage tracking\n\n\n  return !defaultedOptions.notifyOnChangeProps ? observer.trackResult(result) : result;\n}\n\n\n//# sourceMappingURL=useBaseQuery.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNhc3BlcmRhc2gvdXNld2FsbGV0L25vZGVfbW9kdWxlcy9AdGFuc3RhY2svcmVhY3QtcXVlcnkvYnVpbGQvbGliL3VzZUJhc2VRdWVyeS5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUE7QUFDK0I7QUFDc0I7QUFDYTtBQUNTO0FBQ2hCO0FBQ1I7QUFDaUU7QUFDbkM7O0FBRWpGO0FBQ0Esc0JBQXNCLHdFQUFjO0FBQ3BDO0FBQ0EsR0FBRztBQUNILHNCQUFzQixnRUFBYztBQUNwQyw2QkFBNkIsd0ZBQTBCO0FBQ3ZELHFFQUFxRTs7QUFFckUsb0ZBQW9GOztBQUVwRjtBQUNBLCtCQUErQiwrREFBYTtBQUM1Qzs7QUFFQTtBQUNBLGlDQUFpQywrREFBYTtBQUM5Qzs7QUFFQTtBQUNBLGlDQUFpQywrREFBYTtBQUM5Qzs7QUFFQSxFQUFFLDhEQUFlO0FBQ2pCLEVBQUUsd0ZBQStCO0FBQ2pDLEVBQUUsbUZBQTBCO0FBQzVCLHFCQUFxQiwyQ0FBYztBQUNuQztBQUNBLEVBQUUsK0VBQW9CLENBQUMsOENBQWlCO0FBQ3hDLDJFQUEyRSwrREFBYSw2QkFBNkI7QUFDckg7O0FBRUE7QUFDQTtBQUNBLEdBQUc7QUFDSCxFQUFFLDRDQUFlO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUcsaUNBQWlDOztBQUVwQyxNQUFNLDREQUFhO0FBQ25CLFVBQVUsOERBQWU7QUFDekIsSUFBSTs7O0FBR0osTUFBTSxvRUFBVztBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBLElBQUk7OztBQUdKO0FBQ0E7O0FBRXdCO0FBQ3hCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY2FzcGVyZGFzaC91c2V3YWxsZXQvbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9yZWFjdC1xdWVyeS9idWlsZC9saWIvdXNlQmFzZVF1ZXJ5Lm1qcz8wOGI5Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2UgY2xpZW50JztcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IG5vdGlmeU1hbmFnZXIgfSBmcm9tICdAdGFuc3RhY2svcXVlcnktY29yZSc7XG5pbXBvcnQgeyB1c2VTeW5jRXh0ZXJuYWxTdG9yZSB9IGZyb20gJy4vdXNlU3luY0V4dGVybmFsU3RvcmUubWpzJztcbmltcG9ydCB7IHVzZVF1ZXJ5RXJyb3JSZXNldEJvdW5kYXJ5IH0gZnJvbSAnLi9RdWVyeUVycm9yUmVzZXRCb3VuZGFyeS5tanMnO1xuaW1wb3J0IHsgdXNlUXVlcnlDbGllbnQgfSBmcm9tICcuL1F1ZXJ5Q2xpZW50UHJvdmlkZXIubWpzJztcbmltcG9ydCB7IHVzZUlzUmVzdG9yaW5nIH0gZnJvbSAnLi9pc1Jlc3RvcmluZy5tanMnO1xuaW1wb3J0IHsgZW5zdXJlUHJldmVudEVycm9yQm91bmRhcnlSZXRyeSwgdXNlQ2xlYXJSZXNldEVycm9yQm91bmRhcnksIGdldEhhc0Vycm9yIH0gZnJvbSAnLi9lcnJvckJvdW5kYXJ5VXRpbHMubWpzJztcbmltcG9ydCB7IGVuc3VyZVN0YWxlVGltZSwgc2hvdWxkU3VzcGVuZCwgZmV0Y2hPcHRpbWlzdGljIH0gZnJvbSAnLi9zdXNwZW5zZS5tanMnO1xuXG5mdW5jdGlvbiB1c2VCYXNlUXVlcnkob3B0aW9ucywgT2JzZXJ2ZXIpIHtcbiAgY29uc3QgcXVlcnlDbGllbnQgPSB1c2VRdWVyeUNsaWVudCh7XG4gICAgY29udGV4dDogb3B0aW9ucy5jb250ZXh0XG4gIH0pO1xuICBjb25zdCBpc1Jlc3RvcmluZyA9IHVzZUlzUmVzdG9yaW5nKCk7XG4gIGNvbnN0IGVycm9yUmVzZXRCb3VuZGFyeSA9IHVzZVF1ZXJ5RXJyb3JSZXNldEJvdW5kYXJ5KCk7XG4gIGNvbnN0IGRlZmF1bHRlZE9wdGlvbnMgPSBxdWVyeUNsaWVudC5kZWZhdWx0UXVlcnlPcHRpb25zKG9wdGlvbnMpOyAvLyBNYWtlIHN1cmUgcmVzdWx0cyBhcmUgb3B0aW1pc3RpY2FsbHkgc2V0IGluIGZldGNoaW5nIHN0YXRlIGJlZm9yZSBzdWJzY3JpYmluZyBvciB1cGRhdGluZyBvcHRpb25zXG5cbiAgZGVmYXVsdGVkT3B0aW9ucy5fb3B0aW1pc3RpY1Jlc3VsdHMgPSBpc1Jlc3RvcmluZyA/ICdpc1Jlc3RvcmluZycgOiAnb3B0aW1pc3RpYyc7IC8vIEluY2x1ZGUgY2FsbGJhY2tzIGluIGJhdGNoIHJlbmRlcnNcblxuICBpZiAoZGVmYXVsdGVkT3B0aW9ucy5vbkVycm9yKSB7XG4gICAgZGVmYXVsdGVkT3B0aW9ucy5vbkVycm9yID0gbm90aWZ5TWFuYWdlci5iYXRjaENhbGxzKGRlZmF1bHRlZE9wdGlvbnMub25FcnJvcik7XG4gIH1cblxuICBpZiAoZGVmYXVsdGVkT3B0aW9ucy5vblN1Y2Nlc3MpIHtcbiAgICBkZWZhdWx0ZWRPcHRpb25zLm9uU3VjY2VzcyA9IG5vdGlmeU1hbmFnZXIuYmF0Y2hDYWxscyhkZWZhdWx0ZWRPcHRpb25zLm9uU3VjY2Vzcyk7XG4gIH1cblxuICBpZiAoZGVmYXVsdGVkT3B0aW9ucy5vblNldHRsZWQpIHtcbiAgICBkZWZhdWx0ZWRPcHRpb25zLm9uU2V0dGxlZCA9IG5vdGlmeU1hbmFnZXIuYmF0Y2hDYWxscyhkZWZhdWx0ZWRPcHRpb25zLm9uU2V0dGxlZCk7XG4gIH1cblxuICBlbnN1cmVTdGFsZVRpbWUoZGVmYXVsdGVkT3B0aW9ucyk7XG4gIGVuc3VyZVByZXZlbnRFcnJvckJvdW5kYXJ5UmV0cnkoZGVmYXVsdGVkT3B0aW9ucywgZXJyb3JSZXNldEJvdW5kYXJ5KTtcbiAgdXNlQ2xlYXJSZXNldEVycm9yQm91bmRhcnkoZXJyb3JSZXNldEJvdW5kYXJ5KTtcbiAgY29uc3QgW29ic2VydmVyXSA9IFJlYWN0LnVzZVN0YXRlKCgpID0+IG5ldyBPYnNlcnZlcihxdWVyeUNsaWVudCwgZGVmYXVsdGVkT3B0aW9ucykpO1xuICBjb25zdCByZXN1bHQgPSBvYnNlcnZlci5nZXRPcHRpbWlzdGljUmVzdWx0KGRlZmF1bHRlZE9wdGlvbnMpO1xuICB1c2VTeW5jRXh0ZXJuYWxTdG9yZShSZWFjdC51c2VDYWxsYmFjayhvblN0b3JlQ2hhbmdlID0+IHtcbiAgICBjb25zdCB1bnN1YnNjcmliZSA9IGlzUmVzdG9yaW5nID8gKCkgPT4gdW5kZWZpbmVkIDogb2JzZXJ2ZXIuc3Vic2NyaWJlKG5vdGlmeU1hbmFnZXIuYmF0Y2hDYWxscyhvblN0b3JlQ2hhbmdlKSk7IC8vIFVwZGF0ZSByZXN1bHQgdG8gbWFrZSBzdXJlIHdlIGRpZCBub3QgbWlzcyBhbnkgcXVlcnkgdXBkYXRlc1xuICAgIC8vIGJldHdlZW4gY3JlYXRpbmcgdGhlIG9ic2VydmVyIGFuZCBzdWJzY3JpYmluZyB0byBpdC5cblxuICAgIG9ic2VydmVyLnVwZGF0ZVJlc3VsdCgpO1xuICAgIHJldHVybiB1bnN1YnNjcmliZTtcbiAgfSwgW29ic2VydmVyLCBpc1Jlc3RvcmluZ10pLCAoKSA9PiBvYnNlcnZlci5nZXRDdXJyZW50UmVzdWx0KCksICgpID0+IG9ic2VydmVyLmdldEN1cnJlbnRSZXN1bHQoKSk7XG4gIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG4gICAgLy8gRG8gbm90IG5vdGlmeSBvbiB1cGRhdGVzIGJlY2F1c2Ugb2YgY2hhbmdlcyBpbiB0aGUgb3B0aW9ucyBiZWNhdXNlXG4gICAgLy8gdGhlc2UgY2hhbmdlcyBzaG91bGQgYWxyZWFkeSBiZSByZWZsZWN0ZWQgaW4gdGhlIG9wdGltaXN0aWMgcmVzdWx0LlxuICAgIG9ic2VydmVyLnNldE9wdGlvbnMoZGVmYXVsdGVkT3B0aW9ucywge1xuICAgICAgbGlzdGVuZXJzOiBmYWxzZVxuICAgIH0pO1xuICB9LCBbZGVmYXVsdGVkT3B0aW9ucywgb2JzZXJ2ZXJdKTsgLy8gSGFuZGxlIHN1c3BlbnNlXG5cbiAgaWYgKHNob3VsZFN1c3BlbmQoZGVmYXVsdGVkT3B0aW9ucywgcmVzdWx0LCBpc1Jlc3RvcmluZykpIHtcbiAgICB0aHJvdyBmZXRjaE9wdGltaXN0aWMoZGVmYXVsdGVkT3B0aW9ucywgb2JzZXJ2ZXIsIGVycm9yUmVzZXRCb3VuZGFyeSk7XG4gIH0gLy8gSGFuZGxlIGVycm9yIGJvdW5kYXJ5XG5cblxuICBpZiAoZ2V0SGFzRXJyb3Ioe1xuICAgIHJlc3VsdCxcbiAgICBlcnJvclJlc2V0Qm91bmRhcnksXG4gICAgdXNlRXJyb3JCb3VuZGFyeTogZGVmYXVsdGVkT3B0aW9ucy51c2VFcnJvckJvdW5kYXJ5LFxuICAgIHF1ZXJ5OiBvYnNlcnZlci5nZXRDdXJyZW50UXVlcnkoKVxuICB9KSkge1xuICAgIHRocm93IHJlc3VsdC5lcnJvcjtcbiAgfSAvLyBIYW5kbGUgcmVzdWx0IHByb3BlcnR5IHVzYWdlIHRyYWNraW5nXG5cblxuICByZXR1cm4gIWRlZmF1bHRlZE9wdGlvbnMubm90aWZ5T25DaGFuZ2VQcm9wcyA/IG9ic2VydmVyLnRyYWNrUmVzdWx0KHJlc3VsdCkgOiByZXN1bHQ7XG59XG5cbmV4cG9ydCB7IHVzZUJhc2VRdWVyeSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXNlQmFzZVF1ZXJ5Lm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@casperdash/usewallet/node_modules/@tanstack/react-query/build/lib/useBaseQuery.mjs\n"));

/***/ }),

/***/ "./node_modules/@casperdash/usewallet/node_modules/@tanstack/react-query/build/lib/useInfiniteQuery.mjs":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/@casperdash/usewallet/node_modules/@tanstack/react-query/build/lib/useInfiniteQuery.mjs ***!
  \**************************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useInfiniteQuery: function() { return /* binding */ useInfiniteQuery; }\n/* harmony export */ });\n/* harmony import */ var _tanstack_query_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tanstack/query-core */ \"./node_modules/@tanstack/query-core/build/lib/utils.mjs\");\n/* harmony import */ var _tanstack_query_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @tanstack/query-core */ \"./node_modules/@tanstack/query-core/build/lib/infiniteQueryObserver.mjs\");\n/* harmony import */ var _useBaseQuery_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./useBaseQuery.mjs */ \"./node_modules/@casperdash/usewallet/node_modules/@tanstack/react-query/build/lib/useBaseQuery.mjs\");\n'use client';\n\n\n\nfunction useInfiniteQuery(arg1, arg2, arg3) {\n  const options = (0,_tanstack_query_core__WEBPACK_IMPORTED_MODULE_0__.parseQueryArgs)(arg1, arg2, arg3);\n  return (0,_useBaseQuery_mjs__WEBPACK_IMPORTED_MODULE_1__.useBaseQuery)(options, _tanstack_query_core__WEBPACK_IMPORTED_MODULE_2__.InfiniteQueryObserver);\n}\n\n\n//# sourceMappingURL=useInfiniteQuery.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNhc3BlcmRhc2gvdXNld2FsbGV0L25vZGVfbW9kdWxlcy9AdGFuc3RhY2svcmVhY3QtcXVlcnkvYnVpbGQvbGliL3VzZUluZmluaXRlUXVlcnkubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUM2RTtBQUMzQjs7QUFFbEQ7QUFDQSxrQkFBa0Isb0VBQWM7QUFDaEMsU0FBUywrREFBWSxVQUFVLHVFQUFxQjtBQUNwRDs7QUFFNEI7QUFDNUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjYXNwZXJkYXNoL3VzZXdhbGxldC9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3JlYWN0LXF1ZXJ5L2J1aWxkL2xpYi91c2VJbmZpbml0ZVF1ZXJ5Lm1qcz83YzFmIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2UgY2xpZW50JztcbmltcG9ydCB7IHBhcnNlUXVlcnlBcmdzLCBJbmZpbml0ZVF1ZXJ5T2JzZXJ2ZXIgfSBmcm9tICdAdGFuc3RhY2svcXVlcnktY29yZSc7XG5pbXBvcnQgeyB1c2VCYXNlUXVlcnkgfSBmcm9tICcuL3VzZUJhc2VRdWVyeS5tanMnO1xuXG5mdW5jdGlvbiB1c2VJbmZpbml0ZVF1ZXJ5KGFyZzEsIGFyZzIsIGFyZzMpIHtcbiAgY29uc3Qgb3B0aW9ucyA9IHBhcnNlUXVlcnlBcmdzKGFyZzEsIGFyZzIsIGFyZzMpO1xuICByZXR1cm4gdXNlQmFzZVF1ZXJ5KG9wdGlvbnMsIEluZmluaXRlUXVlcnlPYnNlcnZlcik7XG59XG5cbmV4cG9ydCB7IHVzZUluZmluaXRlUXVlcnkgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXVzZUluZmluaXRlUXVlcnkubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@casperdash/usewallet/node_modules/@tanstack/react-query/build/lib/useInfiniteQuery.mjs\n"));

/***/ }),

/***/ "./node_modules/@casperdash/usewallet/node_modules/@tanstack/react-query/build/lib/useMutation.mjs":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/@casperdash/usewallet/node_modules/@tanstack/react-query/build/lib/useMutation.mjs ***!
  \*********************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useMutation: function() { return /* binding */ useMutation; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var _tanstack_query_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tanstack/query-core */ \"./node_modules/@tanstack/query-core/build/lib/utils.mjs\");\n/* harmony import */ var _tanstack_query_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @tanstack/query-core */ \"./node_modules/@tanstack/query-core/build/lib/mutationObserver.mjs\");\n/* harmony import */ var _tanstack_query_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @tanstack/query-core */ \"./node_modules/@tanstack/query-core/build/lib/notifyManager.mjs\");\n/* harmony import */ var _useSyncExternalStore_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./useSyncExternalStore.mjs */ \"./node_modules/@casperdash/usewallet/node_modules/@tanstack/react-query/build/lib/useSyncExternalStore.mjs\");\n/* harmony import */ var _QueryClientProvider_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./QueryClientProvider.mjs */ \"./node_modules/@casperdash/usewallet/node_modules/@tanstack/react-query/build/lib/QueryClientProvider.mjs\");\n/* harmony import */ var _utils_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utils.mjs */ \"./node_modules/@casperdash/usewallet/node_modules/@tanstack/react-query/build/lib/utils.mjs\");\n'use client';\n\n\n\n\n\n\nfunction useMutation(arg1, arg2, arg3) {\n  const options = (0,_tanstack_query_core__WEBPACK_IMPORTED_MODULE_1__.parseMutationArgs)(arg1, arg2, arg3);\n  const queryClient = (0,_QueryClientProvider_mjs__WEBPACK_IMPORTED_MODULE_2__.useQueryClient)({\n    context: options.context\n  });\n  const [observer] = react__WEBPACK_IMPORTED_MODULE_0__.useState(() => new _tanstack_query_core__WEBPACK_IMPORTED_MODULE_3__.MutationObserver(queryClient, options));\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    observer.setOptions(options);\n  }, [observer, options]);\n  const result = (0,_useSyncExternalStore_mjs__WEBPACK_IMPORTED_MODULE_4__.useSyncExternalStore)(react__WEBPACK_IMPORTED_MODULE_0__.useCallback(onStoreChange => observer.subscribe(_tanstack_query_core__WEBPACK_IMPORTED_MODULE_5__.notifyManager.batchCalls(onStoreChange)), [observer]), () => observer.getCurrentResult(), () => observer.getCurrentResult());\n  const mutate = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((variables, mutateOptions) => {\n    observer.mutate(variables, mutateOptions).catch(noop);\n  }, [observer]);\n\n  if (result.error && (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_6__.shouldThrowError)(observer.options.useErrorBoundary, [result.error])) {\n    throw result.error;\n  }\n\n  return { ...result,\n    mutate,\n    mutateAsync: result.mutate\n  };\n} // eslint-disable-next-line @typescript-eslint/no-empty-function\n\nfunction noop() {}\n\n\n//# sourceMappingURL=useMutation.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNhc3BlcmRhc2gvdXNld2FsbGV0L25vZGVfbW9kdWxlcy9AdGFuc3RhY2svcmVhY3QtcXVlcnkvYnVpbGQvbGliL3VzZU11dGF0aW9uLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBO0FBQytCO0FBQzJEO0FBQ3hCO0FBQ1A7QUFDWjs7QUFFL0M7QUFDQSxrQkFBa0IsdUVBQWlCO0FBQ25DLHNCQUFzQix3RUFBYztBQUNwQztBQUNBLEdBQUc7QUFDSCxxQkFBcUIsMkNBQWMsV0FBVyxrRUFBZ0I7QUFDOUQsRUFBRSw0Q0FBZTtBQUNqQjtBQUNBLEdBQUc7QUFDSCxpQkFBaUIsK0VBQW9CLENBQUMsOENBQWlCLHFDQUFxQywrREFBYTtBQUN6RyxpQkFBaUIsOENBQWlCO0FBQ2xDO0FBQ0EsR0FBRzs7QUFFSCxzQkFBc0IsNERBQWdCO0FBQ3RDO0FBQ0E7O0FBRUEsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBLEVBQUU7O0FBRUY7O0FBRXVCO0FBQ3ZCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY2FzcGVyZGFzaC91c2V3YWxsZXQvbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9yZWFjdC1xdWVyeS9idWlsZC9saWIvdXNlTXV0YXRpb24ubWpzPzUxOGIiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBjbGllbnQnO1xuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgcGFyc2VNdXRhdGlvbkFyZ3MsIE11dGF0aW9uT2JzZXJ2ZXIsIG5vdGlmeU1hbmFnZXIgfSBmcm9tICdAdGFuc3RhY2svcXVlcnktY29yZSc7XG5pbXBvcnQgeyB1c2VTeW5jRXh0ZXJuYWxTdG9yZSB9IGZyb20gJy4vdXNlU3luY0V4dGVybmFsU3RvcmUubWpzJztcbmltcG9ydCB7IHVzZVF1ZXJ5Q2xpZW50IH0gZnJvbSAnLi9RdWVyeUNsaWVudFByb3ZpZGVyLm1qcyc7XG5pbXBvcnQgeyBzaG91bGRUaHJvd0Vycm9yIH0gZnJvbSAnLi91dGlscy5tanMnO1xuXG5mdW5jdGlvbiB1c2VNdXRhdGlvbihhcmcxLCBhcmcyLCBhcmczKSB7XG4gIGNvbnN0IG9wdGlvbnMgPSBwYXJzZU11dGF0aW9uQXJncyhhcmcxLCBhcmcyLCBhcmczKTtcbiAgY29uc3QgcXVlcnlDbGllbnQgPSB1c2VRdWVyeUNsaWVudCh7XG4gICAgY29udGV4dDogb3B0aW9ucy5jb250ZXh0XG4gIH0pO1xuICBjb25zdCBbb2JzZXJ2ZXJdID0gUmVhY3QudXNlU3RhdGUoKCkgPT4gbmV3IE11dGF0aW9uT2JzZXJ2ZXIocXVlcnlDbGllbnQsIG9wdGlvbnMpKTtcbiAgUmVhY3QudXNlRWZmZWN0KCgpID0+IHtcbiAgICBvYnNlcnZlci5zZXRPcHRpb25zKG9wdGlvbnMpO1xuICB9LCBbb2JzZXJ2ZXIsIG9wdGlvbnNdKTtcbiAgY29uc3QgcmVzdWx0ID0gdXNlU3luY0V4dGVybmFsU3RvcmUoUmVhY3QudXNlQ2FsbGJhY2sob25TdG9yZUNoYW5nZSA9PiBvYnNlcnZlci5zdWJzY3JpYmUobm90aWZ5TWFuYWdlci5iYXRjaENhbGxzKG9uU3RvcmVDaGFuZ2UpKSwgW29ic2VydmVyXSksICgpID0+IG9ic2VydmVyLmdldEN1cnJlbnRSZXN1bHQoKSwgKCkgPT4gb2JzZXJ2ZXIuZ2V0Q3VycmVudFJlc3VsdCgpKTtcbiAgY29uc3QgbXV0YXRlID0gUmVhY3QudXNlQ2FsbGJhY2soKHZhcmlhYmxlcywgbXV0YXRlT3B0aW9ucykgPT4ge1xuICAgIG9ic2VydmVyLm11dGF0ZSh2YXJpYWJsZXMsIG11dGF0ZU9wdGlvbnMpLmNhdGNoKG5vb3ApO1xuICB9LCBbb2JzZXJ2ZXJdKTtcblxuICBpZiAocmVzdWx0LmVycm9yICYmIHNob3VsZFRocm93RXJyb3Iob2JzZXJ2ZXIub3B0aW9ucy51c2VFcnJvckJvdW5kYXJ5LCBbcmVzdWx0LmVycm9yXSkpIHtcbiAgICB0aHJvdyByZXN1bHQuZXJyb3I7XG4gIH1cblxuICByZXR1cm4geyAuLi5yZXN1bHQsXG4gICAgbXV0YXRlLFxuICAgIG11dGF0ZUFzeW5jOiByZXN1bHQubXV0YXRlXG4gIH07XG59IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZW1wdHktZnVuY3Rpb25cblxuZnVuY3Rpb24gbm9vcCgpIHt9XG5cbmV4cG9ydCB7IHVzZU11dGF0aW9uIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD11c2VNdXRhdGlvbi5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@casperdash/usewallet/node_modules/@tanstack/react-query/build/lib/useMutation.mjs\n"));

/***/ }),

/***/ "./node_modules/@casperdash/usewallet/node_modules/@tanstack/react-query/build/lib/useSyncExternalStore.mjs":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/@casperdash/usewallet/node_modules/@tanstack/react-query/build/lib/useSyncExternalStore.mjs ***!
  \******************************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useSyncExternalStore: function() { return /* binding */ useSyncExternalStore; }\n/* harmony export */ });\n/* harmony import */ var use_sync_external_store_shim_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! use-sync-external-store/shim/index.js */ \"./node_modules/use-sync-external-store/shim/index.js\");\n'use client';\n\n\nconst useSyncExternalStore = use_sync_external_store_shim_index_js__WEBPACK_IMPORTED_MODULE_0__.useSyncExternalStore;\n\n\n//# sourceMappingURL=useSyncExternalStore.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNhc3BlcmRhc2gvdXNld2FsbGV0L25vZGVfbW9kdWxlcy9AdGFuc3RhY2svcmVhY3QtcXVlcnkvYnVpbGQvbGliL3VzZVN5bmNFeHRlcm5hbFN0b3JlLm1qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ3VHOztBQUV2Ryw2QkFBNkIsdUZBQXNCOztBQUVuQjtBQUNoQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNhc3BlcmRhc2gvdXNld2FsbGV0L25vZGVfbW9kdWxlcy9AdGFuc3RhY2svcmVhY3QtcXVlcnkvYnVpbGQvbGliL3VzZVN5bmNFeHRlcm5hbFN0b3JlLm1qcz85YjFiIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2UgY2xpZW50JztcbmltcG9ydCB7IHVzZVN5bmNFeHRlcm5hbFN0b3JlIGFzIHVzZVN5bmNFeHRlcm5hbFN0b3JlJDEgfSBmcm9tICd1c2Utc3luYy1leHRlcm5hbC1zdG9yZS9zaGltL2luZGV4LmpzJztcblxuY29uc3QgdXNlU3luY0V4dGVybmFsU3RvcmUgPSB1c2VTeW5jRXh0ZXJuYWxTdG9yZSQxO1xuXG5leHBvcnQgeyB1c2VTeW5jRXh0ZXJuYWxTdG9yZSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXNlU3luY0V4dGVybmFsU3RvcmUubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@casperdash/usewallet/node_modules/@tanstack/react-query/build/lib/useSyncExternalStore.mjs\n"));

/***/ }),

/***/ "./node_modules/@casperdash/usewallet/node_modules/@tanstack/react-query/build/lib/utils.mjs":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@casperdash/usewallet/node_modules/@tanstack/react-query/build/lib/utils.mjs ***!
  \***************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   shouldThrowError: function() { return /* binding */ shouldThrowError; }\n/* harmony export */ });\nfunction shouldThrowError(_useErrorBoundary, params) {\n  // Allow useErrorBoundary function to override throwing behavior on a per-error basis\n  if (typeof _useErrorBoundary === 'function') {\n    return _useErrorBoundary(...params);\n  }\n\n  return !!_useErrorBoundary;\n}\n\n\n//# sourceMappingURL=utils.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNhc3BlcmRhc2gvdXNld2FsbGV0L25vZGVfbW9kdWxlcy9AdGFuc3RhY2svcmVhY3QtcXVlcnkvYnVpbGQvbGliL3V0aWxzLm1qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUU0QjtBQUM1QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNhc3BlcmRhc2gvdXNld2FsbGV0L25vZGVfbW9kdWxlcy9AdGFuc3RhY2svcmVhY3QtcXVlcnkvYnVpbGQvbGliL3V0aWxzLm1qcz9lNTQxIl0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIHNob3VsZFRocm93RXJyb3IoX3VzZUVycm9yQm91bmRhcnksIHBhcmFtcykge1xuICAvLyBBbGxvdyB1c2VFcnJvckJvdW5kYXJ5IGZ1bmN0aW9uIHRvIG92ZXJyaWRlIHRocm93aW5nIGJlaGF2aW9yIG9uIGEgcGVyLWVycm9yIGJhc2lzXG4gIGlmICh0eXBlb2YgX3VzZUVycm9yQm91bmRhcnkgPT09ICdmdW5jdGlvbicpIHtcbiAgICByZXR1cm4gX3VzZUVycm9yQm91bmRhcnkoLi4ucGFyYW1zKTtcbiAgfVxuXG4gIHJldHVybiAhIV91c2VFcnJvckJvdW5kYXJ5O1xufVxuXG5leHBvcnQgeyBzaG91bGRUaHJvd0Vycm9yIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD11dGlscy5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@casperdash/usewallet/node_modules/@tanstack/react-query/build/lib/utils.mjs\n"));

/***/ }),

/***/ "./node_modules/@tanstack/query-core/build/lib/focusManager.mjs":
/*!**********************************************************************!*\
  !*** ./node_modules/@tanstack/query-core/build/lib/focusManager.mjs ***!
  \**********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FocusManager: function() { return /* binding */ FocusManager; },\n/* harmony export */   focusManager: function() { return /* binding */ focusManager; }\n/* harmony export */ });\n/* harmony import */ var _subscribable_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./subscribable.mjs */ \"./node_modules/@tanstack/query-core/build/lib/subscribable.mjs\");\n/* harmony import */ var _utils_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.mjs */ \"./node_modules/@tanstack/query-core/build/lib/utils.mjs\");\n\n\n\nclass FocusManager extends _subscribable_mjs__WEBPACK_IMPORTED_MODULE_0__.Subscribable {\n  constructor() {\n    super();\n\n    this.setup = onFocus => {\n      // addEventListener does not exist in React Native, but window does\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      if (!_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.isServer && window.addEventListener) {\n        const listener = () => onFocus(); // Listen to visibillitychange and focus\n\n\n        window.addEventListener('visibilitychange', listener, false);\n        window.addEventListener('focus', listener, false);\n        return () => {\n          // Be sure to unsubscribe if a new handler is set\n          window.removeEventListener('visibilitychange', listener);\n          window.removeEventListener('focus', listener);\n        };\n      }\n\n      return;\n    };\n  }\n\n  onSubscribe() {\n    if (!this.cleanup) {\n      this.setEventListener(this.setup);\n    }\n  }\n\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      var _this$cleanup;\n\n      (_this$cleanup = this.cleanup) == null ? void 0 : _this$cleanup.call(this);\n      this.cleanup = undefined;\n    }\n  }\n\n  setEventListener(setup) {\n    var _this$cleanup2;\n\n    this.setup = setup;\n    (_this$cleanup2 = this.cleanup) == null ? void 0 : _this$cleanup2.call(this);\n    this.cleanup = setup(focused => {\n      if (typeof focused === 'boolean') {\n        this.setFocused(focused);\n      } else {\n        this.onFocus();\n      }\n    });\n  }\n\n  setFocused(focused) {\n    const changed = this.focused !== focused;\n\n    if (changed) {\n      this.focused = focused;\n      this.onFocus();\n    }\n  }\n\n  onFocus() {\n    this.listeners.forEach(({\n      listener\n    }) => {\n      listener();\n    });\n  }\n\n  isFocused() {\n    if (typeof this.focused === 'boolean') {\n      return this.focused;\n    } // document global can be unavailable in react native\n\n\n    if (typeof document === 'undefined') {\n      return true;\n    }\n\n    return [undefined, 'visible', 'prerender'].includes(document.visibilityState);\n  }\n\n}\nconst focusManager = new FocusManager();\n\n\n//# sourceMappingURL=focusManager.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3F1ZXJ5LWNvcmUvYnVpbGQvbGliL2ZvY3VzTWFuYWdlci5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFrRDtBQUNYOztBQUV2QywyQkFBMkIsMkRBQVk7QUFDdkM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGdEQUFRO0FBQ25CLDBDQUEwQzs7O0FBRzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0EsS0FBSztBQUNMOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxLQUFLO0FBQ0w7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsTUFBTTs7O0FBR047QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFc0M7QUFDdEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9xdWVyeS1jb3JlL2J1aWxkL2xpYi9mb2N1c01hbmFnZXIubWpzPzE5ZmUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU3Vic2NyaWJhYmxlIH0gZnJvbSAnLi9zdWJzY3JpYmFibGUubWpzJztcbmltcG9ydCB7IGlzU2VydmVyIH0gZnJvbSAnLi91dGlscy5tanMnO1xuXG5jbGFzcyBGb2N1c01hbmFnZXIgZXh0ZW5kcyBTdWJzY3JpYmFibGUge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigpO1xuXG4gICAgdGhpcy5zZXR1cCA9IG9uRm9jdXMgPT4ge1xuICAgICAgLy8gYWRkRXZlbnRMaXN0ZW5lciBkb2VzIG5vdCBleGlzdCBpbiBSZWFjdCBOYXRpdmUsIGJ1dCB3aW5kb3cgZG9lc1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bm5lY2Vzc2FyeS1jb25kaXRpb25cbiAgICAgIGlmICghaXNTZXJ2ZXIgJiYgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIpIHtcbiAgICAgICAgY29uc3QgbGlzdGVuZXIgPSAoKSA9PiBvbkZvY3VzKCk7IC8vIExpc3RlbiB0byB2aXNpYmlsbGl0eWNoYW5nZSBhbmQgZm9jdXNcblxuXG4gICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCd2aXNpYmlsaXR5Y2hhbmdlJywgbGlzdGVuZXIsIGZhbHNlKTtcbiAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2ZvY3VzJywgbGlzdGVuZXIsIGZhbHNlKTtcbiAgICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgICAvLyBCZSBzdXJlIHRvIHVuc3Vic2NyaWJlIGlmIGEgbmV3IGhhbmRsZXIgaXMgc2V0XG4gICAgICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Zpc2liaWxpdHljaGFuZ2UnLCBsaXN0ZW5lcik7XG4gICAgICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2ZvY3VzJywgbGlzdGVuZXIpO1xuICAgICAgICB9O1xuICAgICAgfVxuXG4gICAgICByZXR1cm47XG4gICAgfTtcbiAgfVxuXG4gIG9uU3Vic2NyaWJlKCkge1xuICAgIGlmICghdGhpcy5jbGVhbnVwKSB7XG4gICAgICB0aGlzLnNldEV2ZW50TGlzdGVuZXIodGhpcy5zZXR1cCk7XG4gICAgfVxuICB9XG5cbiAgb25VbnN1YnNjcmliZSgpIHtcbiAgICBpZiAoIXRoaXMuaGFzTGlzdGVuZXJzKCkpIHtcbiAgICAgIHZhciBfdGhpcyRjbGVhbnVwO1xuXG4gICAgICAoX3RoaXMkY2xlYW51cCA9IHRoaXMuY2xlYW51cCkgPT0gbnVsbCA/IHZvaWQgMCA6IF90aGlzJGNsZWFudXAuY2FsbCh0aGlzKTtcbiAgICAgIHRoaXMuY2xlYW51cCA9IHVuZGVmaW5lZDtcbiAgICB9XG4gIH1cblxuICBzZXRFdmVudExpc3RlbmVyKHNldHVwKSB7XG4gICAgdmFyIF90aGlzJGNsZWFudXAyO1xuXG4gICAgdGhpcy5zZXR1cCA9IHNldHVwO1xuICAgIChfdGhpcyRjbGVhbnVwMiA9IHRoaXMuY2xlYW51cCkgPT0gbnVsbCA/IHZvaWQgMCA6IF90aGlzJGNsZWFudXAyLmNhbGwodGhpcyk7XG4gICAgdGhpcy5jbGVhbnVwID0gc2V0dXAoZm9jdXNlZCA9PiB7XG4gICAgICBpZiAodHlwZW9mIGZvY3VzZWQgPT09ICdib29sZWFuJykge1xuICAgICAgICB0aGlzLnNldEZvY3VzZWQoZm9jdXNlZCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLm9uRm9jdXMoKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIHNldEZvY3VzZWQoZm9jdXNlZCkge1xuICAgIGNvbnN0IGNoYW5nZWQgPSB0aGlzLmZvY3VzZWQgIT09IGZvY3VzZWQ7XG5cbiAgICBpZiAoY2hhbmdlZCkge1xuICAgICAgdGhpcy5mb2N1c2VkID0gZm9jdXNlZDtcbiAgICAgIHRoaXMub25Gb2N1cygpO1xuICAgIH1cbiAgfVxuXG4gIG9uRm9jdXMoKSB7XG4gICAgdGhpcy5saXN0ZW5lcnMuZm9yRWFjaCgoe1xuICAgICAgbGlzdGVuZXJcbiAgICB9KSA9PiB7XG4gICAgICBsaXN0ZW5lcigpO1xuICAgIH0pO1xuICB9XG5cbiAgaXNGb2N1c2VkKCkge1xuICAgIGlmICh0eXBlb2YgdGhpcy5mb2N1c2VkID09PSAnYm9vbGVhbicpIHtcbiAgICAgIHJldHVybiB0aGlzLmZvY3VzZWQ7XG4gICAgfSAvLyBkb2N1bWVudCBnbG9iYWwgY2FuIGJlIHVuYXZhaWxhYmxlIGluIHJlYWN0IG5hdGl2ZVxuXG5cbiAgICBpZiAodHlwZW9mIGRvY3VtZW50ID09PSAndW5kZWZpbmVkJykge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuXG4gICAgcmV0dXJuIFt1bmRlZmluZWQsICd2aXNpYmxlJywgJ3ByZXJlbmRlciddLmluY2x1ZGVzKGRvY3VtZW50LnZpc2liaWxpdHlTdGF0ZSk7XG4gIH1cblxufVxuY29uc3QgZm9jdXNNYW5hZ2VyID0gbmV3IEZvY3VzTWFuYWdlcigpO1xuXG5leHBvcnQgeyBGb2N1c01hbmFnZXIsIGZvY3VzTWFuYWdlciB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Zm9jdXNNYW5hZ2VyLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@tanstack/query-core/build/lib/focusManager.mjs\n"));

/***/ }),

/***/ "./node_modules/@tanstack/query-core/build/lib/infiniteQueryBehavior.mjs":
/*!*******************************************************************************!*\
  !*** ./node_modules/@tanstack/query-core/build/lib/infiniteQueryBehavior.mjs ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getNextPageParam: function() { return /* binding */ getNextPageParam; },\n/* harmony export */   getPreviousPageParam: function() { return /* binding */ getPreviousPageParam; },\n/* harmony export */   hasNextPage: function() { return /* binding */ hasNextPage; },\n/* harmony export */   hasPreviousPage: function() { return /* binding */ hasPreviousPage; },\n/* harmony export */   infiniteQueryBehavior: function() { return /* binding */ infiniteQueryBehavior; }\n/* harmony export */ });\nfunction infiniteQueryBehavior() {\n  return {\n    onFetch: context => {\n      context.fetchFn = () => {\n        var _context$fetchOptions, _context$fetchOptions2, _context$fetchOptions3, _context$fetchOptions4, _context$state$data, _context$state$data2;\n\n        const refetchPage = (_context$fetchOptions = context.fetchOptions) == null ? void 0 : (_context$fetchOptions2 = _context$fetchOptions.meta) == null ? void 0 : _context$fetchOptions2.refetchPage;\n        const fetchMore = (_context$fetchOptions3 = context.fetchOptions) == null ? void 0 : (_context$fetchOptions4 = _context$fetchOptions3.meta) == null ? void 0 : _context$fetchOptions4.fetchMore;\n        const pageParam = fetchMore == null ? void 0 : fetchMore.pageParam;\n        const isFetchingNextPage = (fetchMore == null ? void 0 : fetchMore.direction) === 'forward';\n        const isFetchingPreviousPage = (fetchMore == null ? void 0 : fetchMore.direction) === 'backward';\n        const oldPages = ((_context$state$data = context.state.data) == null ? void 0 : _context$state$data.pages) || [];\n        const oldPageParams = ((_context$state$data2 = context.state.data) == null ? void 0 : _context$state$data2.pageParams) || [];\n        let newPageParams = oldPageParams;\n        let cancelled = false;\n\n        const addSignalProperty = object => {\n          Object.defineProperty(object, 'signal', {\n            enumerable: true,\n            get: () => {\n              var _context$signal;\n\n              if ((_context$signal = context.signal) != null && _context$signal.aborted) {\n                cancelled = true;\n              } else {\n                var _context$signal2;\n\n                (_context$signal2 = context.signal) == null ? void 0 : _context$signal2.addEventListener('abort', () => {\n                  cancelled = true;\n                });\n              }\n\n              return context.signal;\n            }\n          });\n        }; // Get query function\n\n\n        const queryFn = context.options.queryFn || (() => Promise.reject(\"Missing queryFn for queryKey '\" + context.options.queryHash + \"'\"));\n\n        const buildNewPages = (pages, param, page, previous) => {\n          newPageParams = previous ? [param, ...newPageParams] : [...newPageParams, param];\n          return previous ? [page, ...pages] : [...pages, page];\n        }; // Create function to fetch a page\n\n\n        const fetchPage = (pages, manual, param, previous) => {\n          if (cancelled) {\n            return Promise.reject('Cancelled');\n          }\n\n          if (typeof param === 'undefined' && !manual && pages.length) {\n            return Promise.resolve(pages);\n          }\n\n          const queryFnContext = {\n            queryKey: context.queryKey,\n            pageParam: param,\n            meta: context.options.meta\n          };\n          addSignalProperty(queryFnContext);\n          const queryFnResult = queryFn(queryFnContext);\n          const promise = Promise.resolve(queryFnResult).then(page => buildNewPages(pages, param, page, previous));\n          return promise;\n        };\n\n        let promise; // Fetch first page?\n\n        if (!oldPages.length) {\n          promise = fetchPage([]);\n        } // Fetch next page?\n        else if (isFetchingNextPage) {\n          const manual = typeof pageParam !== 'undefined';\n          const param = manual ? pageParam : getNextPageParam(context.options, oldPages);\n          promise = fetchPage(oldPages, manual, param);\n        } // Fetch previous page?\n        else if (isFetchingPreviousPage) {\n          const manual = typeof pageParam !== 'undefined';\n          const param = manual ? pageParam : getPreviousPageParam(context.options, oldPages);\n          promise = fetchPage(oldPages, manual, param, true);\n        } // Refetch pages\n        else {\n          newPageParams = [];\n          const manual = typeof context.options.getNextPageParam === 'undefined';\n          const shouldFetchFirstPage = refetchPage && oldPages[0] ? refetchPage(oldPages[0], 0, oldPages) : true; // Fetch first page\n\n          promise = shouldFetchFirstPage ? fetchPage([], manual, oldPageParams[0]) : Promise.resolve(buildNewPages([], oldPageParams[0], oldPages[0])); // Fetch remaining pages\n\n          for (let i = 1; i < oldPages.length; i++) {\n            promise = promise.then(pages => {\n              const shouldFetchNextPage = refetchPage && oldPages[i] ? refetchPage(oldPages[i], i, oldPages) : true;\n\n              if (shouldFetchNextPage) {\n                const param = manual ? oldPageParams[i] : getNextPageParam(context.options, pages);\n                return fetchPage(pages, manual, param);\n              }\n\n              return Promise.resolve(buildNewPages(pages, oldPageParams[i], oldPages[i]));\n            });\n          }\n        }\n\n        const finalPromise = promise.then(pages => ({\n          pages,\n          pageParams: newPageParams\n        }));\n        return finalPromise;\n      };\n    }\n  };\n}\nfunction getNextPageParam(options, pages) {\n  return options.getNextPageParam == null ? void 0 : options.getNextPageParam(pages[pages.length - 1], pages);\n}\nfunction getPreviousPageParam(options, pages) {\n  return options.getPreviousPageParam == null ? void 0 : options.getPreviousPageParam(pages[0], pages);\n}\n/**\n * Checks if there is a next page.\n * Returns `undefined` if it cannot be determined.\n */\n\nfunction hasNextPage(options, pages) {\n  if (options.getNextPageParam && Array.isArray(pages)) {\n    const nextPageParam = getNextPageParam(options, pages);\n    return typeof nextPageParam !== 'undefined' && nextPageParam !== null && nextPageParam !== false;\n  }\n\n  return;\n}\n/**\n * Checks if there is a previous page.\n * Returns `undefined` if it cannot be determined.\n */\n\nfunction hasPreviousPage(options, pages) {\n  if (options.getPreviousPageParam && Array.isArray(pages)) {\n    const previousPageParam = getPreviousPageParam(options, pages);\n    return typeof previousPageParam !== 'undefined' && previousPageParam !== null && previousPageParam !== false;\n  }\n\n  return;\n}\n\n\n//# sourceMappingURL=infiniteQueryBehavior.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@tanstack/query-core/build/lib/infiniteQueryBehavior.mjs\n"));

/***/ }),

/***/ "./node_modules/@tanstack/query-core/build/lib/infiniteQueryObserver.mjs":
/*!*******************************************************************************!*\
  !*** ./node_modules/@tanstack/query-core/build/lib/infiniteQueryObserver.mjs ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InfiniteQueryObserver: function() { return /* binding */ InfiniteQueryObserver; }\n/* harmony export */ });\n/* harmony import */ var _queryObserver_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./queryObserver.mjs */ \"./node_modules/@tanstack/query-core/build/lib/queryObserver.mjs\");\n/* harmony import */ var _infiniteQueryBehavior_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./infiniteQueryBehavior.mjs */ \"./node_modules/@tanstack/query-core/build/lib/infiniteQueryBehavior.mjs\");\n\n\n\nclass InfiniteQueryObserver extends _queryObserver_mjs__WEBPACK_IMPORTED_MODULE_0__.QueryObserver {\n  // Type override\n  // Type override\n  // Type override\n  // eslint-disable-next-line @typescript-eslint/no-useless-constructor\n  constructor(client, options) {\n    super(client, options);\n  }\n\n  bindMethods() {\n    super.bindMethods();\n    this.fetchNextPage = this.fetchNextPage.bind(this);\n    this.fetchPreviousPage = this.fetchPreviousPage.bind(this);\n  }\n\n  setOptions(options, notifyOptions) {\n    super.setOptions({ ...options,\n      behavior: (0,_infiniteQueryBehavior_mjs__WEBPACK_IMPORTED_MODULE_1__.infiniteQueryBehavior)()\n    }, notifyOptions);\n  }\n\n  getOptimisticResult(options) {\n    options.behavior = (0,_infiniteQueryBehavior_mjs__WEBPACK_IMPORTED_MODULE_1__.infiniteQueryBehavior)();\n    return super.getOptimisticResult(options);\n  }\n\n  fetchNextPage({\n    pageParam,\n    ...options\n  } = {}) {\n    return this.fetch({ ...options,\n      meta: {\n        fetchMore: {\n          direction: 'forward',\n          pageParam\n        }\n      }\n    });\n  }\n\n  fetchPreviousPage({\n    pageParam,\n    ...options\n  } = {}) {\n    return this.fetch({ ...options,\n      meta: {\n        fetchMore: {\n          direction: 'backward',\n          pageParam\n        }\n      }\n    });\n  }\n\n  createResult(query, options) {\n    var _state$fetchMeta, _state$fetchMeta$fetc, _state$fetchMeta2, _state$fetchMeta2$fet, _state$data, _state$data2;\n\n    const {\n      state\n    } = query;\n    const result = super.createResult(query, options);\n    const {\n      isFetching,\n      isRefetching\n    } = result;\n    const isFetchingNextPage = isFetching && ((_state$fetchMeta = state.fetchMeta) == null ? void 0 : (_state$fetchMeta$fetc = _state$fetchMeta.fetchMore) == null ? void 0 : _state$fetchMeta$fetc.direction) === 'forward';\n    const isFetchingPreviousPage = isFetching && ((_state$fetchMeta2 = state.fetchMeta) == null ? void 0 : (_state$fetchMeta2$fet = _state$fetchMeta2.fetchMore) == null ? void 0 : _state$fetchMeta2$fet.direction) === 'backward';\n    return { ...result,\n      fetchNextPage: this.fetchNextPage,\n      fetchPreviousPage: this.fetchPreviousPage,\n      hasNextPage: (0,_infiniteQueryBehavior_mjs__WEBPACK_IMPORTED_MODULE_1__.hasNextPage)(options, (_state$data = state.data) == null ? void 0 : _state$data.pages),\n      hasPreviousPage: (0,_infiniteQueryBehavior_mjs__WEBPACK_IMPORTED_MODULE_1__.hasPreviousPage)(options, (_state$data2 = state.data) == null ? void 0 : _state$data2.pages),\n      isFetchingNextPage,\n      isFetchingPreviousPage,\n      isRefetching: isRefetching && !isFetchingNextPage && !isFetchingPreviousPage\n    };\n  }\n\n}\n\n\n//# sourceMappingURL=infiniteQueryObserver.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3F1ZXJ5LWNvcmUvYnVpbGQvbGliL2luZmluaXRlUXVlcnlPYnNlcnZlci5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQW9EO0FBQzhDOztBQUVsRyxvQ0FBb0MsNkRBQWE7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLHVCQUF1QjtBQUN2QixnQkFBZ0IsaUZBQXFCO0FBQ3JDLEtBQUs7QUFDTDs7QUFFQTtBQUNBLHVCQUF1QixpRkFBcUI7QUFDNUM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxJQUFJLElBQUk7QUFDUix3QkFBd0I7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMOztBQUVBO0FBQ0E7QUFDQTtBQUNBLElBQUksSUFBSTtBQUNSLHdCQUF3QjtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBLG1CQUFtQix1RUFBVztBQUM5Qix1QkFBdUIsMkVBQWU7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFaUM7QUFDakMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9xdWVyeS1jb3JlL2J1aWxkL2xpYi9pbmZpbml0ZVF1ZXJ5T2JzZXJ2ZXIubWpzPzQzYTQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUXVlcnlPYnNlcnZlciB9IGZyb20gJy4vcXVlcnlPYnNlcnZlci5tanMnO1xuaW1wb3J0IHsgaW5maW5pdGVRdWVyeUJlaGF2aW9yLCBoYXNOZXh0UGFnZSwgaGFzUHJldmlvdXNQYWdlIH0gZnJvbSAnLi9pbmZpbml0ZVF1ZXJ5QmVoYXZpb3IubWpzJztcblxuY2xhc3MgSW5maW5pdGVRdWVyeU9ic2VydmVyIGV4dGVuZHMgUXVlcnlPYnNlcnZlciB7XG4gIC8vIFR5cGUgb3ZlcnJpZGVcbiAgLy8gVHlwZSBvdmVycmlkZVxuICAvLyBUeXBlIG92ZXJyaWRlXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdXNlbGVzcy1jb25zdHJ1Y3RvclxuICBjb25zdHJ1Y3RvcihjbGllbnQsIG9wdGlvbnMpIHtcbiAgICBzdXBlcihjbGllbnQsIG9wdGlvbnMpO1xuICB9XG5cbiAgYmluZE1ldGhvZHMoKSB7XG4gICAgc3VwZXIuYmluZE1ldGhvZHMoKTtcbiAgICB0aGlzLmZldGNoTmV4dFBhZ2UgPSB0aGlzLmZldGNoTmV4dFBhZ2UuYmluZCh0aGlzKTtcbiAgICB0aGlzLmZldGNoUHJldmlvdXNQYWdlID0gdGhpcy5mZXRjaFByZXZpb3VzUGFnZS5iaW5kKHRoaXMpO1xuICB9XG5cbiAgc2V0T3B0aW9ucyhvcHRpb25zLCBub3RpZnlPcHRpb25zKSB7XG4gICAgc3VwZXIuc2V0T3B0aW9ucyh7IC4uLm9wdGlvbnMsXG4gICAgICBiZWhhdmlvcjogaW5maW5pdGVRdWVyeUJlaGF2aW9yKClcbiAgICB9LCBub3RpZnlPcHRpb25zKTtcbiAgfVxuXG4gIGdldE9wdGltaXN0aWNSZXN1bHQob3B0aW9ucykge1xuICAgIG9wdGlvbnMuYmVoYXZpb3IgPSBpbmZpbml0ZVF1ZXJ5QmVoYXZpb3IoKTtcbiAgICByZXR1cm4gc3VwZXIuZ2V0T3B0aW1pc3RpY1Jlc3VsdChvcHRpb25zKTtcbiAgfVxuXG4gIGZldGNoTmV4dFBhZ2Uoe1xuICAgIHBhZ2VQYXJhbSxcbiAgICAuLi5vcHRpb25zXG4gIH0gPSB7fSkge1xuICAgIHJldHVybiB0aGlzLmZldGNoKHsgLi4ub3B0aW9ucyxcbiAgICAgIG1ldGE6IHtcbiAgICAgICAgZmV0Y2hNb3JlOiB7XG4gICAgICAgICAgZGlyZWN0aW9uOiAnZm9yd2FyZCcsXG4gICAgICAgICAgcGFnZVBhcmFtXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIGZldGNoUHJldmlvdXNQYWdlKHtcbiAgICBwYWdlUGFyYW0sXG4gICAgLi4ub3B0aW9uc1xuICB9ID0ge30pIHtcbiAgICByZXR1cm4gdGhpcy5mZXRjaCh7IC4uLm9wdGlvbnMsXG4gICAgICBtZXRhOiB7XG4gICAgICAgIGZldGNoTW9yZToge1xuICAgICAgICAgIGRpcmVjdGlvbjogJ2JhY2t3YXJkJyxcbiAgICAgICAgICBwYWdlUGFyYW1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgY3JlYXRlUmVzdWx0KHF1ZXJ5LCBvcHRpb25zKSB7XG4gICAgdmFyIF9zdGF0ZSRmZXRjaE1ldGEsIF9zdGF0ZSRmZXRjaE1ldGEkZmV0YywgX3N0YXRlJGZldGNoTWV0YTIsIF9zdGF0ZSRmZXRjaE1ldGEyJGZldCwgX3N0YXRlJGRhdGEsIF9zdGF0ZSRkYXRhMjtcblxuICAgIGNvbnN0IHtcbiAgICAgIHN0YXRlXG4gICAgfSA9IHF1ZXJ5O1xuICAgIGNvbnN0IHJlc3VsdCA9IHN1cGVyLmNyZWF0ZVJlc3VsdChxdWVyeSwgb3B0aW9ucyk7XG4gICAgY29uc3Qge1xuICAgICAgaXNGZXRjaGluZyxcbiAgICAgIGlzUmVmZXRjaGluZ1xuICAgIH0gPSByZXN1bHQ7XG4gICAgY29uc3QgaXNGZXRjaGluZ05leHRQYWdlID0gaXNGZXRjaGluZyAmJiAoKF9zdGF0ZSRmZXRjaE1ldGEgPSBzdGF0ZS5mZXRjaE1ldGEpID09IG51bGwgPyB2b2lkIDAgOiAoX3N0YXRlJGZldGNoTWV0YSRmZXRjID0gX3N0YXRlJGZldGNoTWV0YS5mZXRjaE1vcmUpID09IG51bGwgPyB2b2lkIDAgOiBfc3RhdGUkZmV0Y2hNZXRhJGZldGMuZGlyZWN0aW9uKSA9PT0gJ2ZvcndhcmQnO1xuICAgIGNvbnN0IGlzRmV0Y2hpbmdQcmV2aW91c1BhZ2UgPSBpc0ZldGNoaW5nICYmICgoX3N0YXRlJGZldGNoTWV0YTIgPSBzdGF0ZS5mZXRjaE1ldGEpID09IG51bGwgPyB2b2lkIDAgOiAoX3N0YXRlJGZldGNoTWV0YTIkZmV0ID0gX3N0YXRlJGZldGNoTWV0YTIuZmV0Y2hNb3JlKSA9PSBudWxsID8gdm9pZCAwIDogX3N0YXRlJGZldGNoTWV0YTIkZmV0LmRpcmVjdGlvbikgPT09ICdiYWNrd2FyZCc7XG4gICAgcmV0dXJuIHsgLi4ucmVzdWx0LFxuICAgICAgZmV0Y2hOZXh0UGFnZTogdGhpcy5mZXRjaE5leHRQYWdlLFxuICAgICAgZmV0Y2hQcmV2aW91c1BhZ2U6IHRoaXMuZmV0Y2hQcmV2aW91c1BhZ2UsXG4gICAgICBoYXNOZXh0UGFnZTogaGFzTmV4dFBhZ2Uob3B0aW9ucywgKF9zdGF0ZSRkYXRhID0gc3RhdGUuZGF0YSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9zdGF0ZSRkYXRhLnBhZ2VzKSxcbiAgICAgIGhhc1ByZXZpb3VzUGFnZTogaGFzUHJldmlvdXNQYWdlKG9wdGlvbnMsIChfc3RhdGUkZGF0YTIgPSBzdGF0ZS5kYXRhKSA9PSBudWxsID8gdm9pZCAwIDogX3N0YXRlJGRhdGEyLnBhZ2VzKSxcbiAgICAgIGlzRmV0Y2hpbmdOZXh0UGFnZSxcbiAgICAgIGlzRmV0Y2hpbmdQcmV2aW91c1BhZ2UsXG4gICAgICBpc1JlZmV0Y2hpbmc6IGlzUmVmZXRjaGluZyAmJiAhaXNGZXRjaGluZ05leHRQYWdlICYmICFpc0ZldGNoaW5nUHJldmlvdXNQYWdlXG4gICAgfTtcbiAgfVxuXG59XG5cbmV4cG9ydCB7IEluZmluaXRlUXVlcnlPYnNlcnZlciB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5maW5pdGVRdWVyeU9ic2VydmVyLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@tanstack/query-core/build/lib/infiniteQueryObserver.mjs\n"));

/***/ }),

/***/ "./node_modules/@tanstack/query-core/build/lib/logger.mjs":
/*!****************************************************************!*\
  !*** ./node_modules/@tanstack/query-core/build/lib/logger.mjs ***!
  \****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   defaultLogger: function() { return /* binding */ defaultLogger; }\n/* harmony export */ });\nconst defaultLogger = console;\n\n\n//# sourceMappingURL=logger.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3F1ZXJ5LWNvcmUvYnVpbGQvbGliL2xvZ2dlci5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBOztBQUV5QjtBQUN6QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3F1ZXJ5LWNvcmUvYnVpbGQvbGliL2xvZ2dlci5tanM/OGM1MCJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBkZWZhdWx0TG9nZ2VyID0gY29uc29sZTtcblxuZXhwb3J0IHsgZGVmYXVsdExvZ2dlciB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bG9nZ2VyLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@tanstack/query-core/build/lib/logger.mjs\n"));

/***/ }),

/***/ "./node_modules/@tanstack/query-core/build/lib/mutation.mjs":
/*!******************************************************************!*\
  !*** ./node_modules/@tanstack/query-core/build/lib/mutation.mjs ***!
  \******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Mutation: function() { return /* binding */ Mutation; },\n/* harmony export */   getDefaultState: function() { return /* binding */ getDefaultState; }\n/* harmony export */ });\n/* harmony import */ var _logger_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./logger.mjs */ \"./node_modules/@tanstack/query-core/build/lib/logger.mjs\");\n/* harmony import */ var _notifyManager_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./notifyManager.mjs */ \"./node_modules/@tanstack/query-core/build/lib/notifyManager.mjs\");\n/* harmony import */ var _removable_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./removable.mjs */ \"./node_modules/@tanstack/query-core/build/lib/removable.mjs\");\n/* harmony import */ var _retryer_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./retryer.mjs */ \"./node_modules/@tanstack/query-core/build/lib/retryer.mjs\");\n\n\n\n\n\n// CLASS\nclass Mutation extends _removable_mjs__WEBPACK_IMPORTED_MODULE_0__.Removable {\n  constructor(config) {\n    super();\n    this.defaultOptions = config.defaultOptions;\n    this.mutationId = config.mutationId;\n    this.mutationCache = config.mutationCache;\n    this.logger = config.logger || _logger_mjs__WEBPACK_IMPORTED_MODULE_1__.defaultLogger;\n    this.observers = [];\n    this.state = config.state || getDefaultState();\n    this.setOptions(config.options);\n    this.scheduleGc();\n  }\n\n  setOptions(options) {\n    this.options = { ...this.defaultOptions,\n      ...options\n    };\n    this.updateCacheTime(this.options.cacheTime);\n  }\n\n  get meta() {\n    return this.options.meta;\n  }\n\n  setState(state) {\n    this.dispatch({\n      type: 'setState',\n      state\n    });\n  }\n\n  addObserver(observer) {\n    if (!this.observers.includes(observer)) {\n      this.observers.push(observer); // Stop the mutation from being garbage collected\n\n      this.clearGcTimeout();\n      this.mutationCache.notify({\n        type: 'observerAdded',\n        mutation: this,\n        observer\n      });\n    }\n  }\n\n  removeObserver(observer) {\n    this.observers = this.observers.filter(x => x !== observer);\n    this.scheduleGc();\n    this.mutationCache.notify({\n      type: 'observerRemoved',\n      mutation: this,\n      observer\n    });\n  }\n\n  optionalRemove() {\n    if (!this.observers.length) {\n      if (this.state.status === 'loading') {\n        this.scheduleGc();\n      } else {\n        this.mutationCache.remove(this);\n      }\n    }\n  }\n\n  continue() {\n    var _this$retryer$continu, _this$retryer;\n\n    return (_this$retryer$continu = (_this$retryer = this.retryer) == null ? void 0 : _this$retryer.continue()) != null ? _this$retryer$continu : this.execute();\n  }\n\n  async execute() {\n    const executeMutation = () => {\n      var _this$options$retry;\n\n      this.retryer = (0,_retryer_mjs__WEBPACK_IMPORTED_MODULE_2__.createRetryer)({\n        fn: () => {\n          if (!this.options.mutationFn) {\n            return Promise.reject('No mutationFn found');\n          }\n\n          return this.options.mutationFn(this.state.variables);\n        },\n        onFail: (failureCount, error) => {\n          this.dispatch({\n            type: 'failed',\n            failureCount,\n            error\n          });\n        },\n        onPause: () => {\n          this.dispatch({\n            type: 'pause'\n          });\n        },\n        onContinue: () => {\n          this.dispatch({\n            type: 'continue'\n          });\n        },\n        retry: (_this$options$retry = this.options.retry) != null ? _this$options$retry : 0,\n        retryDelay: this.options.retryDelay,\n        networkMode: this.options.networkMode\n      });\n      return this.retryer.promise;\n    };\n\n    const restored = this.state.status === 'loading';\n\n    try {\n      var _this$mutationCache$c3, _this$mutationCache$c4, _this$options$onSucce, _this$options2, _this$mutationCache$c5, _this$mutationCache$c6, _this$options$onSettl, _this$options3;\n\n      if (!restored) {\n        var _this$mutationCache$c, _this$mutationCache$c2, _this$options$onMutat, _this$options;\n\n        this.dispatch({\n          type: 'loading',\n          variables: this.options.variables\n        }); // Notify cache callback\n\n        await ((_this$mutationCache$c = (_this$mutationCache$c2 = this.mutationCache.config).onMutate) == null ? void 0 : _this$mutationCache$c.call(_this$mutationCache$c2, this.state.variables, this));\n        const context = await ((_this$options$onMutat = (_this$options = this.options).onMutate) == null ? void 0 : _this$options$onMutat.call(_this$options, this.state.variables));\n\n        if (context !== this.state.context) {\n          this.dispatch({\n            type: 'loading',\n            context,\n            variables: this.state.variables\n          });\n        }\n      }\n\n      const data = await executeMutation(); // Notify cache callback\n\n      await ((_this$mutationCache$c3 = (_this$mutationCache$c4 = this.mutationCache.config).onSuccess) == null ? void 0 : _this$mutationCache$c3.call(_this$mutationCache$c4, data, this.state.variables, this.state.context, this));\n      await ((_this$options$onSucce = (_this$options2 = this.options).onSuccess) == null ? void 0 : _this$options$onSucce.call(_this$options2, data, this.state.variables, this.state.context)); // Notify cache callback\n\n      await ((_this$mutationCache$c5 = (_this$mutationCache$c6 = this.mutationCache.config).onSettled) == null ? void 0 : _this$mutationCache$c5.call(_this$mutationCache$c6, data, null, this.state.variables, this.state.context, this));\n      await ((_this$options$onSettl = (_this$options3 = this.options).onSettled) == null ? void 0 : _this$options$onSettl.call(_this$options3, data, null, this.state.variables, this.state.context));\n      this.dispatch({\n        type: 'success',\n        data\n      });\n      return data;\n    } catch (error) {\n      try {\n        var _this$mutationCache$c7, _this$mutationCache$c8, _this$options$onError, _this$options4, _this$mutationCache$c9, _this$mutationCache$c10, _this$options$onSettl2, _this$options5;\n\n        // Notify cache callback\n        await ((_this$mutationCache$c7 = (_this$mutationCache$c8 = this.mutationCache.config).onError) == null ? void 0 : _this$mutationCache$c7.call(_this$mutationCache$c8, error, this.state.variables, this.state.context, this));\n\n        if (true) {\n          this.logger.error(error);\n        }\n\n        await ((_this$options$onError = (_this$options4 = this.options).onError) == null ? void 0 : _this$options$onError.call(_this$options4, error, this.state.variables, this.state.context)); // Notify cache callback\n\n        await ((_this$mutationCache$c9 = (_this$mutationCache$c10 = this.mutationCache.config).onSettled) == null ? void 0 : _this$mutationCache$c9.call(_this$mutationCache$c10, undefined, error, this.state.variables, this.state.context, this));\n        await ((_this$options$onSettl2 = (_this$options5 = this.options).onSettled) == null ? void 0 : _this$options$onSettl2.call(_this$options5, undefined, error, this.state.variables, this.state.context));\n        throw error;\n      } finally {\n        this.dispatch({\n          type: 'error',\n          error: error\n        });\n      }\n    }\n  }\n\n  dispatch(action) {\n    const reducer = state => {\n      switch (action.type) {\n        case 'failed':\n          return { ...state,\n            failureCount: action.failureCount,\n            failureReason: action.error\n          };\n\n        case 'pause':\n          return { ...state,\n            isPaused: true\n          };\n\n        case 'continue':\n          return { ...state,\n            isPaused: false\n          };\n\n        case 'loading':\n          return { ...state,\n            context: action.context,\n            data: undefined,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            isPaused: !(0,_retryer_mjs__WEBPACK_IMPORTED_MODULE_2__.canFetch)(this.options.networkMode),\n            status: 'loading',\n            variables: action.variables\n          };\n\n        case 'success':\n          return { ...state,\n            data: action.data,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            status: 'success',\n            isPaused: false\n          };\n\n        case 'error':\n          return { ...state,\n            data: undefined,\n            error: action.error,\n            failureCount: state.failureCount + 1,\n            failureReason: action.error,\n            isPaused: false,\n            status: 'error'\n          };\n\n        case 'setState':\n          return { ...state,\n            ...action.state\n          };\n      }\n    };\n\n    this.state = reducer(this.state);\n    _notifyManager_mjs__WEBPACK_IMPORTED_MODULE_3__.notifyManager.batch(() => {\n      this.observers.forEach(observer => {\n        observer.onMutationUpdate(action);\n      });\n      this.mutationCache.notify({\n        mutation: this,\n        type: 'updated',\n        action\n      });\n    });\n  }\n\n}\nfunction getDefaultState() {\n  return {\n    context: undefined,\n    data: undefined,\n    error: null,\n    failureCount: 0,\n    failureReason: null,\n    isPaused: false,\n    status: 'idle',\n    variables: undefined\n  };\n}\n\n\n//# sourceMappingURL=mutation.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@tanstack/query-core/build/lib/mutation.mjs\n"));

/***/ }),

/***/ "./node_modules/@tanstack/query-core/build/lib/mutationCache.mjs":
/*!***********************************************************************!*\
  !*** ./node_modules/@tanstack/query-core/build/lib/mutationCache.mjs ***!
  \***********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MutationCache: function() { return /* binding */ MutationCache; }\n/* harmony export */ });\n/* harmony import */ var _notifyManager_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./notifyManager.mjs */ \"./node_modules/@tanstack/query-core/build/lib/notifyManager.mjs\");\n/* harmony import */ var _mutation_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mutation.mjs */ \"./node_modules/@tanstack/query-core/build/lib/mutation.mjs\");\n/* harmony import */ var _utils_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils.mjs */ \"./node_modules/@tanstack/query-core/build/lib/utils.mjs\");\n/* harmony import */ var _subscribable_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./subscribable.mjs */ \"./node_modules/@tanstack/query-core/build/lib/subscribable.mjs\");\n\n\n\n\n\n// CLASS\nclass MutationCache extends _subscribable_mjs__WEBPACK_IMPORTED_MODULE_0__.Subscribable {\n  constructor(config) {\n    super();\n    this.config = config || {};\n    this.mutations = [];\n    this.mutationId = 0;\n  }\n\n  build(client, options, state) {\n    const mutation = new _mutation_mjs__WEBPACK_IMPORTED_MODULE_1__.Mutation({\n      mutationCache: this,\n      logger: client.getLogger(),\n      mutationId: ++this.mutationId,\n      options: client.defaultMutationOptions(options),\n      state,\n      defaultOptions: options.mutationKey ? client.getMutationDefaults(options.mutationKey) : undefined\n    });\n    this.add(mutation);\n    return mutation;\n  }\n\n  add(mutation) {\n    this.mutations.push(mutation);\n    this.notify({\n      type: 'added',\n      mutation\n    });\n  }\n\n  remove(mutation) {\n    this.mutations = this.mutations.filter(x => x !== mutation);\n    this.notify({\n      type: 'removed',\n      mutation\n    });\n  }\n\n  clear() {\n    _notifyManager_mjs__WEBPACK_IMPORTED_MODULE_2__.notifyManager.batch(() => {\n      this.mutations.forEach(mutation => {\n        this.remove(mutation);\n      });\n    });\n  }\n\n  getAll() {\n    return this.mutations;\n  }\n\n  find(filters) {\n    if (typeof filters.exact === 'undefined') {\n      filters.exact = true;\n    }\n\n    return this.mutations.find(mutation => (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_3__.matchMutation)(filters, mutation));\n  }\n\n  findAll(filters) {\n    return this.mutations.filter(mutation => (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_3__.matchMutation)(filters, mutation));\n  }\n\n  notify(event) {\n    _notifyManager_mjs__WEBPACK_IMPORTED_MODULE_2__.notifyManager.batch(() => {\n      this.listeners.forEach(({\n        listener\n      }) => {\n        listener(event);\n      });\n    });\n  }\n\n  resumePausedMutations() {\n    var _this$resuming;\n\n    this.resuming = ((_this$resuming = this.resuming) != null ? _this$resuming : Promise.resolve()).then(() => {\n      const pausedMutations = this.mutations.filter(x => x.state.isPaused);\n      return _notifyManager_mjs__WEBPACK_IMPORTED_MODULE_2__.notifyManager.batch(() => pausedMutations.reduce((promise, mutation) => promise.then(() => mutation.continue().catch(_utils_mjs__WEBPACK_IMPORTED_MODULE_3__.noop)), Promise.resolve()));\n    }).then(() => {\n      this.resuming = undefined;\n    });\n    return this.resuming;\n  }\n\n}\n\n\n//# sourceMappingURL=mutationCache.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3F1ZXJ5LWNvcmUvYnVpbGQvbGliL211dGF0aW9uQ2FjaGUubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQW9EO0FBQ1Y7QUFDUTtBQUNBOztBQUVsRDtBQUNBLDRCQUE0QiwyREFBWTtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSx5QkFBeUIsbURBQVE7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRUE7QUFDQSxJQUFJLDZEQUFhO0FBQ2pCO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSwyQ0FBMkMseURBQWE7QUFDeEQ7O0FBRUE7QUFDQSw2Q0FBNkMseURBQWE7QUFDMUQ7O0FBRUE7QUFDQSxJQUFJLDZEQUFhO0FBQ2pCO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGFBQWEsNkRBQWEsd0dBQXdHLDRDQUFJO0FBQ3RJLEtBQUs7QUFDTDtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBOztBQUV5QjtBQUN6QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3F1ZXJ5LWNvcmUvYnVpbGQvbGliL211dGF0aW9uQ2FjaGUubWpzPzYxMWIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgbm90aWZ5TWFuYWdlciB9IGZyb20gJy4vbm90aWZ5TWFuYWdlci5tanMnO1xuaW1wb3J0IHsgTXV0YXRpb24gfSBmcm9tICcuL211dGF0aW9uLm1qcyc7XG5pbXBvcnQgeyBtYXRjaE11dGF0aW9uLCBub29wIH0gZnJvbSAnLi91dGlscy5tanMnO1xuaW1wb3J0IHsgU3Vic2NyaWJhYmxlIH0gZnJvbSAnLi9zdWJzY3JpYmFibGUubWpzJztcblxuLy8gQ0xBU1NcbmNsYXNzIE11dGF0aW9uQ2FjaGUgZXh0ZW5kcyBTdWJzY3JpYmFibGUge1xuICBjb25zdHJ1Y3Rvcihjb25maWcpIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMuY29uZmlnID0gY29uZmlnIHx8IHt9O1xuICAgIHRoaXMubXV0YXRpb25zID0gW107XG4gICAgdGhpcy5tdXRhdGlvbklkID0gMDtcbiAgfVxuXG4gIGJ1aWxkKGNsaWVudCwgb3B0aW9ucywgc3RhdGUpIHtcbiAgICBjb25zdCBtdXRhdGlvbiA9IG5ldyBNdXRhdGlvbih7XG4gICAgICBtdXRhdGlvbkNhY2hlOiB0aGlzLFxuICAgICAgbG9nZ2VyOiBjbGllbnQuZ2V0TG9nZ2VyKCksXG4gICAgICBtdXRhdGlvbklkOiArK3RoaXMubXV0YXRpb25JZCxcbiAgICAgIG9wdGlvbnM6IGNsaWVudC5kZWZhdWx0TXV0YXRpb25PcHRpb25zKG9wdGlvbnMpLFxuICAgICAgc3RhdGUsXG4gICAgICBkZWZhdWx0T3B0aW9uczogb3B0aW9ucy5tdXRhdGlvbktleSA/IGNsaWVudC5nZXRNdXRhdGlvbkRlZmF1bHRzKG9wdGlvbnMubXV0YXRpb25LZXkpIDogdW5kZWZpbmVkXG4gICAgfSk7XG4gICAgdGhpcy5hZGQobXV0YXRpb24pO1xuICAgIHJldHVybiBtdXRhdGlvbjtcbiAgfVxuXG4gIGFkZChtdXRhdGlvbikge1xuICAgIHRoaXMubXV0YXRpb25zLnB1c2gobXV0YXRpb24pO1xuICAgIHRoaXMubm90aWZ5KHtcbiAgICAgIHR5cGU6ICdhZGRlZCcsXG4gICAgICBtdXRhdGlvblxuICAgIH0pO1xuICB9XG5cbiAgcmVtb3ZlKG11dGF0aW9uKSB7XG4gICAgdGhpcy5tdXRhdGlvbnMgPSB0aGlzLm11dGF0aW9ucy5maWx0ZXIoeCA9PiB4ICE9PSBtdXRhdGlvbik7XG4gICAgdGhpcy5ub3RpZnkoe1xuICAgICAgdHlwZTogJ3JlbW92ZWQnLFxuICAgICAgbXV0YXRpb25cbiAgICB9KTtcbiAgfVxuXG4gIGNsZWFyKCkge1xuICAgIG5vdGlmeU1hbmFnZXIuYmF0Y2goKCkgPT4ge1xuICAgICAgdGhpcy5tdXRhdGlvbnMuZm9yRWFjaChtdXRhdGlvbiA9PiB7XG4gICAgICAgIHRoaXMucmVtb3ZlKG11dGF0aW9uKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG5cbiAgZ2V0QWxsKCkge1xuICAgIHJldHVybiB0aGlzLm11dGF0aW9ucztcbiAgfVxuXG4gIGZpbmQoZmlsdGVycykge1xuICAgIGlmICh0eXBlb2YgZmlsdGVycy5leGFjdCA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIGZpbHRlcnMuZXhhY3QgPSB0cnVlO1xuICAgIH1cblxuICAgIHJldHVybiB0aGlzLm11dGF0aW9ucy5maW5kKG11dGF0aW9uID0+IG1hdGNoTXV0YXRpb24oZmlsdGVycywgbXV0YXRpb24pKTtcbiAgfVxuXG4gIGZpbmRBbGwoZmlsdGVycykge1xuICAgIHJldHVybiB0aGlzLm11dGF0aW9ucy5maWx0ZXIobXV0YXRpb24gPT4gbWF0Y2hNdXRhdGlvbihmaWx0ZXJzLCBtdXRhdGlvbikpO1xuICB9XG5cbiAgbm90aWZ5KGV2ZW50KSB7XG4gICAgbm90aWZ5TWFuYWdlci5iYXRjaCgoKSA9PiB7XG4gICAgICB0aGlzLmxpc3RlbmVycy5mb3JFYWNoKCh7XG4gICAgICAgIGxpc3RlbmVyXG4gICAgICB9KSA9PiB7XG4gICAgICAgIGxpc3RlbmVyKGV2ZW50KTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG5cbiAgcmVzdW1lUGF1c2VkTXV0YXRpb25zKCkge1xuICAgIHZhciBfdGhpcyRyZXN1bWluZztcblxuICAgIHRoaXMucmVzdW1pbmcgPSAoKF90aGlzJHJlc3VtaW5nID0gdGhpcy5yZXN1bWluZykgIT0gbnVsbCA/IF90aGlzJHJlc3VtaW5nIDogUHJvbWlzZS5yZXNvbHZlKCkpLnRoZW4oKCkgPT4ge1xuICAgICAgY29uc3QgcGF1c2VkTXV0YXRpb25zID0gdGhpcy5tdXRhdGlvbnMuZmlsdGVyKHggPT4geC5zdGF0ZS5pc1BhdXNlZCk7XG4gICAgICByZXR1cm4gbm90aWZ5TWFuYWdlci5iYXRjaCgoKSA9PiBwYXVzZWRNdXRhdGlvbnMucmVkdWNlKChwcm9taXNlLCBtdXRhdGlvbikgPT4gcHJvbWlzZS50aGVuKCgpID0+IG11dGF0aW9uLmNvbnRpbnVlKCkuY2F0Y2gobm9vcCkpLCBQcm9taXNlLnJlc29sdmUoKSkpO1xuICAgIH0pLnRoZW4oKCkgPT4ge1xuICAgICAgdGhpcy5yZXN1bWluZyA9IHVuZGVmaW5lZDtcbiAgICB9KTtcbiAgICByZXR1cm4gdGhpcy5yZXN1bWluZztcbiAgfVxuXG59XG5cbmV4cG9ydCB7IE11dGF0aW9uQ2FjaGUgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW11dGF0aW9uQ2FjaGUubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@tanstack/query-core/build/lib/mutationCache.mjs\n"));

/***/ }),

/***/ "./node_modules/@tanstack/query-core/build/lib/mutationObserver.mjs":
/*!**************************************************************************!*\
  !*** ./node_modules/@tanstack/query-core/build/lib/mutationObserver.mjs ***!
  \**************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MutationObserver: function() { return /* binding */ MutationObserver; }\n/* harmony export */ });\n/* harmony import */ var _mutation_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./mutation.mjs */ \"./node_modules/@tanstack/query-core/build/lib/mutation.mjs\");\n/* harmony import */ var _notifyManager_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./notifyManager.mjs */ \"./node_modules/@tanstack/query-core/build/lib/notifyManager.mjs\");\n/* harmony import */ var _subscribable_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./subscribable.mjs */ \"./node_modules/@tanstack/query-core/build/lib/subscribable.mjs\");\n/* harmony import */ var _utils_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.mjs */ \"./node_modules/@tanstack/query-core/build/lib/utils.mjs\");\n\n\n\n\n\n// CLASS\nclass MutationObserver extends _subscribable_mjs__WEBPACK_IMPORTED_MODULE_0__.Subscribable {\n  constructor(client, options) {\n    super();\n    this.client = client;\n    this.setOptions(options);\n    this.bindMethods();\n    this.updateResult();\n  }\n\n  bindMethods() {\n    this.mutate = this.mutate.bind(this);\n    this.reset = this.reset.bind(this);\n  }\n\n  setOptions(options) {\n    var _this$currentMutation;\n\n    const prevOptions = this.options;\n    this.options = this.client.defaultMutationOptions(options);\n\n    if (!(0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.shallowEqualObjects)(prevOptions, this.options)) {\n      this.client.getMutationCache().notify({\n        type: 'observerOptionsUpdated',\n        mutation: this.currentMutation,\n        observer: this\n      });\n    }\n\n    (_this$currentMutation = this.currentMutation) == null ? void 0 : _this$currentMutation.setOptions(this.options);\n  }\n\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      var _this$currentMutation2;\n\n      (_this$currentMutation2 = this.currentMutation) == null ? void 0 : _this$currentMutation2.removeObserver(this);\n    }\n  }\n\n  onMutationUpdate(action) {\n    this.updateResult(); // Determine which callbacks to trigger\n\n    const notifyOptions = {\n      listeners: true\n    };\n\n    if (action.type === 'success') {\n      notifyOptions.onSuccess = true;\n    } else if (action.type === 'error') {\n      notifyOptions.onError = true;\n    }\n\n    this.notify(notifyOptions);\n  }\n\n  getCurrentResult() {\n    return this.currentResult;\n  }\n\n  reset() {\n    this.currentMutation = undefined;\n    this.updateResult();\n    this.notify({\n      listeners: true\n    });\n  }\n\n  mutate(variables, options) {\n    this.mutateOptions = options;\n\n    if (this.currentMutation) {\n      this.currentMutation.removeObserver(this);\n    }\n\n    this.currentMutation = this.client.getMutationCache().build(this.client, { ...this.options,\n      variables: typeof variables !== 'undefined' ? variables : this.options.variables\n    });\n    this.currentMutation.addObserver(this);\n    return this.currentMutation.execute();\n  }\n\n  updateResult() {\n    const state = this.currentMutation ? this.currentMutation.state : (0,_mutation_mjs__WEBPACK_IMPORTED_MODULE_2__.getDefaultState)();\n    const result = { ...state,\n      isLoading: state.status === 'loading',\n      isSuccess: state.status === 'success',\n      isError: state.status === 'error',\n      isIdle: state.status === 'idle',\n      mutate: this.mutate,\n      reset: this.reset\n    };\n    this.currentResult = result;\n  }\n\n  notify(options) {\n    _notifyManager_mjs__WEBPACK_IMPORTED_MODULE_3__.notifyManager.batch(() => {\n      // First trigger the mutate callbacks\n      if (this.mutateOptions && this.hasListeners()) {\n        if (options.onSuccess) {\n          var _this$mutateOptions$o, _this$mutateOptions, _this$mutateOptions$o2, _this$mutateOptions2;\n\n          (_this$mutateOptions$o = (_this$mutateOptions = this.mutateOptions).onSuccess) == null ? void 0 : _this$mutateOptions$o.call(_this$mutateOptions, this.currentResult.data, this.currentResult.variables, this.currentResult.context);\n          (_this$mutateOptions$o2 = (_this$mutateOptions2 = this.mutateOptions).onSettled) == null ? void 0 : _this$mutateOptions$o2.call(_this$mutateOptions2, this.currentResult.data, null, this.currentResult.variables, this.currentResult.context);\n        } else if (options.onError) {\n          var _this$mutateOptions$o3, _this$mutateOptions3, _this$mutateOptions$o4, _this$mutateOptions4;\n\n          (_this$mutateOptions$o3 = (_this$mutateOptions3 = this.mutateOptions).onError) == null ? void 0 : _this$mutateOptions$o3.call(_this$mutateOptions3, this.currentResult.error, this.currentResult.variables, this.currentResult.context);\n          (_this$mutateOptions$o4 = (_this$mutateOptions4 = this.mutateOptions).onSettled) == null ? void 0 : _this$mutateOptions$o4.call(_this$mutateOptions4, undefined, this.currentResult.error, this.currentResult.variables, this.currentResult.context);\n        }\n      } // Then trigger the listeners\n\n\n      if (options.listeners) {\n        this.listeners.forEach(({\n          listener\n        }) => {\n          listener(this.currentResult);\n        });\n      }\n    });\n  }\n\n}\n\n\n//# sourceMappingURL=mutationObserver.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3F1ZXJ5LWNvcmUvYnVpbGQvbGliL211dGF0aW9uT2JzZXJ2ZXIubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQWlEO0FBQ0c7QUFDRjtBQUNBOztBQUVsRDtBQUNBLCtCQUErQiwyREFBWTtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUEsU0FBUywrREFBbUI7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EseUJBQXlCOztBQUV6QjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsK0VBQStFO0FBQy9FO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLHNFQUFzRSw4REFBZTtBQUNyRixxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsSUFBSSw2REFBYTtBQUNqQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsVUFBVTtBQUNWOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7OztBQUdSO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLFNBQVM7QUFDVDtBQUNBLEtBQUs7QUFDTDs7QUFFQTs7QUFFNEI7QUFDNUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9xdWVyeS1jb3JlL2J1aWxkL2xpYi9tdXRhdGlvbk9ic2VydmVyLm1qcz8yYmE0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldERlZmF1bHRTdGF0ZSB9IGZyb20gJy4vbXV0YXRpb24ubWpzJztcbmltcG9ydCB7IG5vdGlmeU1hbmFnZXIgfSBmcm9tICcuL25vdGlmeU1hbmFnZXIubWpzJztcbmltcG9ydCB7IFN1YnNjcmliYWJsZSB9IGZyb20gJy4vc3Vic2NyaWJhYmxlLm1qcyc7XG5pbXBvcnQgeyBzaGFsbG93RXF1YWxPYmplY3RzIH0gZnJvbSAnLi91dGlscy5tanMnO1xuXG4vLyBDTEFTU1xuY2xhc3MgTXV0YXRpb25PYnNlcnZlciBleHRlbmRzIFN1YnNjcmliYWJsZSB7XG4gIGNvbnN0cnVjdG9yKGNsaWVudCwgb3B0aW9ucykge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5jbGllbnQgPSBjbGllbnQ7XG4gICAgdGhpcy5zZXRPcHRpb25zKG9wdGlvbnMpO1xuICAgIHRoaXMuYmluZE1ldGhvZHMoKTtcbiAgICB0aGlzLnVwZGF0ZVJlc3VsdCgpO1xuICB9XG5cbiAgYmluZE1ldGhvZHMoKSB7XG4gICAgdGhpcy5tdXRhdGUgPSB0aGlzLm11dGF0ZS5iaW5kKHRoaXMpO1xuICAgIHRoaXMucmVzZXQgPSB0aGlzLnJlc2V0LmJpbmQodGhpcyk7XG4gIH1cblxuICBzZXRPcHRpb25zKG9wdGlvbnMpIHtcbiAgICB2YXIgX3RoaXMkY3VycmVudE11dGF0aW9uO1xuXG4gICAgY29uc3QgcHJldk9wdGlvbnMgPSB0aGlzLm9wdGlvbnM7XG4gICAgdGhpcy5vcHRpb25zID0gdGhpcy5jbGllbnQuZGVmYXVsdE11dGF0aW9uT3B0aW9ucyhvcHRpb25zKTtcblxuICAgIGlmICghc2hhbGxvd0VxdWFsT2JqZWN0cyhwcmV2T3B0aW9ucywgdGhpcy5vcHRpb25zKSkge1xuICAgICAgdGhpcy5jbGllbnQuZ2V0TXV0YXRpb25DYWNoZSgpLm5vdGlmeSh7XG4gICAgICAgIHR5cGU6ICdvYnNlcnZlck9wdGlvbnNVcGRhdGVkJyxcbiAgICAgICAgbXV0YXRpb246IHRoaXMuY3VycmVudE11dGF0aW9uLFxuICAgICAgICBvYnNlcnZlcjogdGhpc1xuICAgICAgfSk7XG4gICAgfVxuXG4gICAgKF90aGlzJGN1cnJlbnRNdXRhdGlvbiA9IHRoaXMuY3VycmVudE11dGF0aW9uKSA9PSBudWxsID8gdm9pZCAwIDogX3RoaXMkY3VycmVudE11dGF0aW9uLnNldE9wdGlvbnModGhpcy5vcHRpb25zKTtcbiAgfVxuXG4gIG9uVW5zdWJzY3JpYmUoKSB7XG4gICAgaWYgKCF0aGlzLmhhc0xpc3RlbmVycygpKSB7XG4gICAgICB2YXIgX3RoaXMkY3VycmVudE11dGF0aW9uMjtcblxuICAgICAgKF90aGlzJGN1cnJlbnRNdXRhdGlvbjIgPSB0aGlzLmN1cnJlbnRNdXRhdGlvbikgPT0gbnVsbCA/IHZvaWQgMCA6IF90aGlzJGN1cnJlbnRNdXRhdGlvbjIucmVtb3ZlT2JzZXJ2ZXIodGhpcyk7XG4gICAgfVxuICB9XG5cbiAgb25NdXRhdGlvblVwZGF0ZShhY3Rpb24pIHtcbiAgICB0aGlzLnVwZGF0ZVJlc3VsdCgpOyAvLyBEZXRlcm1pbmUgd2hpY2ggY2FsbGJhY2tzIHRvIHRyaWdnZXJcblxuICAgIGNvbnN0IG5vdGlmeU9wdGlvbnMgPSB7XG4gICAgICBsaXN0ZW5lcnM6IHRydWVcbiAgICB9O1xuXG4gICAgaWYgKGFjdGlvbi50eXBlID09PSAnc3VjY2VzcycpIHtcbiAgICAgIG5vdGlmeU9wdGlvbnMub25TdWNjZXNzID0gdHJ1ZTtcbiAgICB9IGVsc2UgaWYgKGFjdGlvbi50eXBlID09PSAnZXJyb3InKSB7XG4gICAgICBub3RpZnlPcHRpb25zLm9uRXJyb3IgPSB0cnVlO1xuICAgIH1cblxuICAgIHRoaXMubm90aWZ5KG5vdGlmeU9wdGlvbnMpO1xuICB9XG5cbiAgZ2V0Q3VycmVudFJlc3VsdCgpIHtcbiAgICByZXR1cm4gdGhpcy5jdXJyZW50UmVzdWx0O1xuICB9XG5cbiAgcmVzZXQoKSB7XG4gICAgdGhpcy5jdXJyZW50TXV0YXRpb24gPSB1bmRlZmluZWQ7XG4gICAgdGhpcy51cGRhdGVSZXN1bHQoKTtcbiAgICB0aGlzLm5vdGlmeSh7XG4gICAgICBsaXN0ZW5lcnM6IHRydWVcbiAgICB9KTtcbiAgfVxuXG4gIG11dGF0ZSh2YXJpYWJsZXMsIG9wdGlvbnMpIHtcbiAgICB0aGlzLm11dGF0ZU9wdGlvbnMgPSBvcHRpb25zO1xuXG4gICAgaWYgKHRoaXMuY3VycmVudE11dGF0aW9uKSB7XG4gICAgICB0aGlzLmN1cnJlbnRNdXRhdGlvbi5yZW1vdmVPYnNlcnZlcih0aGlzKTtcbiAgICB9XG5cbiAgICB0aGlzLmN1cnJlbnRNdXRhdGlvbiA9IHRoaXMuY2xpZW50LmdldE11dGF0aW9uQ2FjaGUoKS5idWlsZCh0aGlzLmNsaWVudCwgeyAuLi50aGlzLm9wdGlvbnMsXG4gICAgICB2YXJpYWJsZXM6IHR5cGVvZiB2YXJpYWJsZXMgIT09ICd1bmRlZmluZWQnID8gdmFyaWFibGVzIDogdGhpcy5vcHRpb25zLnZhcmlhYmxlc1xuICAgIH0pO1xuICAgIHRoaXMuY3VycmVudE11dGF0aW9uLmFkZE9ic2VydmVyKHRoaXMpO1xuICAgIHJldHVybiB0aGlzLmN1cnJlbnRNdXRhdGlvbi5leGVjdXRlKCk7XG4gIH1cblxuICB1cGRhdGVSZXN1bHQoKSB7XG4gICAgY29uc3Qgc3RhdGUgPSB0aGlzLmN1cnJlbnRNdXRhdGlvbiA/IHRoaXMuY3VycmVudE11dGF0aW9uLnN0YXRlIDogZ2V0RGVmYXVsdFN0YXRlKCk7XG4gICAgY29uc3QgcmVzdWx0ID0geyAuLi5zdGF0ZSxcbiAgICAgIGlzTG9hZGluZzogc3RhdGUuc3RhdHVzID09PSAnbG9hZGluZycsXG4gICAgICBpc1N1Y2Nlc3M6IHN0YXRlLnN0YXR1cyA9PT0gJ3N1Y2Nlc3MnLFxuICAgICAgaXNFcnJvcjogc3RhdGUuc3RhdHVzID09PSAnZXJyb3InLFxuICAgICAgaXNJZGxlOiBzdGF0ZS5zdGF0dXMgPT09ICdpZGxlJyxcbiAgICAgIG11dGF0ZTogdGhpcy5tdXRhdGUsXG4gICAgICByZXNldDogdGhpcy5yZXNldFxuICAgIH07XG4gICAgdGhpcy5jdXJyZW50UmVzdWx0ID0gcmVzdWx0O1xuICB9XG5cbiAgbm90aWZ5KG9wdGlvbnMpIHtcbiAgICBub3RpZnlNYW5hZ2VyLmJhdGNoKCgpID0+IHtcbiAgICAgIC8vIEZpcnN0IHRyaWdnZXIgdGhlIG11dGF0ZSBjYWxsYmFja3NcbiAgICAgIGlmICh0aGlzLm11dGF0ZU9wdGlvbnMgJiYgdGhpcy5oYXNMaXN0ZW5lcnMoKSkge1xuICAgICAgICBpZiAob3B0aW9ucy5vblN1Y2Nlc3MpIHtcbiAgICAgICAgICB2YXIgX3RoaXMkbXV0YXRlT3B0aW9ucyRvLCBfdGhpcyRtdXRhdGVPcHRpb25zLCBfdGhpcyRtdXRhdGVPcHRpb25zJG8yLCBfdGhpcyRtdXRhdGVPcHRpb25zMjtcblxuICAgICAgICAgIChfdGhpcyRtdXRhdGVPcHRpb25zJG8gPSAoX3RoaXMkbXV0YXRlT3B0aW9ucyA9IHRoaXMubXV0YXRlT3B0aW9ucykub25TdWNjZXNzKSA9PSBudWxsID8gdm9pZCAwIDogX3RoaXMkbXV0YXRlT3B0aW9ucyRvLmNhbGwoX3RoaXMkbXV0YXRlT3B0aW9ucywgdGhpcy5jdXJyZW50UmVzdWx0LmRhdGEsIHRoaXMuY3VycmVudFJlc3VsdC52YXJpYWJsZXMsIHRoaXMuY3VycmVudFJlc3VsdC5jb250ZXh0KTtcbiAgICAgICAgICAoX3RoaXMkbXV0YXRlT3B0aW9ucyRvMiA9IChfdGhpcyRtdXRhdGVPcHRpb25zMiA9IHRoaXMubXV0YXRlT3B0aW9ucykub25TZXR0bGVkKSA9PSBudWxsID8gdm9pZCAwIDogX3RoaXMkbXV0YXRlT3B0aW9ucyRvMi5jYWxsKF90aGlzJG11dGF0ZU9wdGlvbnMyLCB0aGlzLmN1cnJlbnRSZXN1bHQuZGF0YSwgbnVsbCwgdGhpcy5jdXJyZW50UmVzdWx0LnZhcmlhYmxlcywgdGhpcy5jdXJyZW50UmVzdWx0LmNvbnRleHQpO1xuICAgICAgICB9IGVsc2UgaWYgKG9wdGlvbnMub25FcnJvcikge1xuICAgICAgICAgIHZhciBfdGhpcyRtdXRhdGVPcHRpb25zJG8zLCBfdGhpcyRtdXRhdGVPcHRpb25zMywgX3RoaXMkbXV0YXRlT3B0aW9ucyRvNCwgX3RoaXMkbXV0YXRlT3B0aW9uczQ7XG5cbiAgICAgICAgICAoX3RoaXMkbXV0YXRlT3B0aW9ucyRvMyA9IChfdGhpcyRtdXRhdGVPcHRpb25zMyA9IHRoaXMubXV0YXRlT3B0aW9ucykub25FcnJvcikgPT0gbnVsbCA/IHZvaWQgMCA6IF90aGlzJG11dGF0ZU9wdGlvbnMkbzMuY2FsbChfdGhpcyRtdXRhdGVPcHRpb25zMywgdGhpcy5jdXJyZW50UmVzdWx0LmVycm9yLCB0aGlzLmN1cnJlbnRSZXN1bHQudmFyaWFibGVzLCB0aGlzLmN1cnJlbnRSZXN1bHQuY29udGV4dCk7XG4gICAgICAgICAgKF90aGlzJG11dGF0ZU9wdGlvbnMkbzQgPSAoX3RoaXMkbXV0YXRlT3B0aW9uczQgPSB0aGlzLm11dGF0ZU9wdGlvbnMpLm9uU2V0dGxlZCkgPT0gbnVsbCA/IHZvaWQgMCA6IF90aGlzJG11dGF0ZU9wdGlvbnMkbzQuY2FsbChfdGhpcyRtdXRhdGVPcHRpb25zNCwgdW5kZWZpbmVkLCB0aGlzLmN1cnJlbnRSZXN1bHQuZXJyb3IsIHRoaXMuY3VycmVudFJlc3VsdC52YXJpYWJsZXMsIHRoaXMuY3VycmVudFJlc3VsdC5jb250ZXh0KTtcbiAgICAgICAgfVxuICAgICAgfSAvLyBUaGVuIHRyaWdnZXIgdGhlIGxpc3RlbmVyc1xuXG5cbiAgICAgIGlmIChvcHRpb25zLmxpc3RlbmVycykge1xuICAgICAgICB0aGlzLmxpc3RlbmVycy5mb3JFYWNoKCh7XG4gICAgICAgICAgbGlzdGVuZXJcbiAgICAgICAgfSkgPT4ge1xuICAgICAgICAgIGxpc3RlbmVyKHRoaXMuY3VycmVudFJlc3VsdCk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbn1cblxuZXhwb3J0IHsgTXV0YXRpb25PYnNlcnZlciB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bXV0YXRpb25PYnNlcnZlci5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@tanstack/query-core/build/lib/mutationObserver.mjs\n"));

/***/ }),

/***/ "./node_modules/@tanstack/query-core/build/lib/notifyManager.mjs":
/*!***********************************************************************!*\
  !*** ./node_modules/@tanstack/query-core/build/lib/notifyManager.mjs ***!
  \***********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createNotifyManager: function() { return /* binding */ createNotifyManager; },\n/* harmony export */   notifyManager: function() { return /* binding */ notifyManager; }\n/* harmony export */ });\n/* harmony import */ var _utils_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.mjs */ \"./node_modules/@tanstack/query-core/build/lib/utils.mjs\");\n\n\nfunction createNotifyManager() {\n  let queue = [];\n  let transactions = 0;\n\n  let notifyFn = callback => {\n    callback();\n  };\n\n  let batchNotifyFn = callback => {\n    callback();\n  };\n\n  const batch = callback => {\n    let result;\n    transactions++;\n\n    try {\n      result = callback();\n    } finally {\n      transactions--;\n\n      if (!transactions) {\n        flush();\n      }\n    }\n\n    return result;\n  };\n\n  const schedule = callback => {\n    if (transactions) {\n      queue.push(callback);\n    } else {\n      (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_0__.scheduleMicrotask)(() => {\n        notifyFn(callback);\n      });\n    }\n  };\n  /**\n   * All calls to the wrapped function will be batched.\n   */\n\n\n  const batchCalls = callback => {\n    return (...args) => {\n      schedule(() => {\n        callback(...args);\n      });\n    };\n  };\n\n  const flush = () => {\n    const originalQueue = queue;\n    queue = [];\n\n    if (originalQueue.length) {\n      (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_0__.scheduleMicrotask)(() => {\n        batchNotifyFn(() => {\n          originalQueue.forEach(callback => {\n            notifyFn(callback);\n          });\n        });\n      });\n    }\n  };\n  /**\n   * Use this method to set a custom notify function.\n   * This can be used to for example wrap notifications with `React.act` while running tests.\n   */\n\n\n  const setNotifyFunction = fn => {\n    notifyFn = fn;\n  };\n  /**\n   * Use this method to set a custom function to batch notifications together into a single tick.\n   * By default React Query will use the batch function provided by ReactDOM or React Native.\n   */\n\n\n  const setBatchNotifyFunction = fn => {\n    batchNotifyFn = fn;\n  };\n\n  return {\n    batch,\n    batchCalls,\n    schedule,\n    setNotifyFunction,\n    setBatchNotifyFunction\n  };\n} // SINGLETON\n\nconst notifyManager = createNotifyManager();\n\n\n//# sourceMappingURL=notifyManager.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3F1ZXJ5LWNvcmUvYnVpbGQvbGliL25vdGlmeU1hbmFnZXIubWpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFnRDs7QUFFaEQ7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxNQUFNO0FBQ047O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ04sTUFBTSw2REFBaUI7QUFDdkI7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxNQUFNLDZEQUFpQjtBQUN2QjtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1gsU0FBUztBQUNULE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFOztBQUVGOztBQUU4QztBQUM5QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3F1ZXJ5LWNvcmUvYnVpbGQvbGliL25vdGlmeU1hbmFnZXIubWpzPzgwNTAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc2NoZWR1bGVNaWNyb3Rhc2sgfSBmcm9tICcuL3V0aWxzLm1qcyc7XG5cbmZ1bmN0aW9uIGNyZWF0ZU5vdGlmeU1hbmFnZXIoKSB7XG4gIGxldCBxdWV1ZSA9IFtdO1xuICBsZXQgdHJhbnNhY3Rpb25zID0gMDtcblxuICBsZXQgbm90aWZ5Rm4gPSBjYWxsYmFjayA9PiB7XG4gICAgY2FsbGJhY2soKTtcbiAgfTtcblxuICBsZXQgYmF0Y2hOb3RpZnlGbiA9IGNhbGxiYWNrID0+IHtcbiAgICBjYWxsYmFjaygpO1xuICB9O1xuXG4gIGNvbnN0IGJhdGNoID0gY2FsbGJhY2sgPT4ge1xuICAgIGxldCByZXN1bHQ7XG4gICAgdHJhbnNhY3Rpb25zKys7XG5cbiAgICB0cnkge1xuICAgICAgcmVzdWx0ID0gY2FsbGJhY2soKTtcbiAgICB9IGZpbmFsbHkge1xuICAgICAgdHJhbnNhY3Rpb25zLS07XG5cbiAgICAgIGlmICghdHJhbnNhY3Rpb25zKSB7XG4gICAgICAgIGZsdXNoKCk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfTtcblxuICBjb25zdCBzY2hlZHVsZSA9IGNhbGxiYWNrID0+IHtcbiAgICBpZiAodHJhbnNhY3Rpb25zKSB7XG4gICAgICBxdWV1ZS5wdXNoKGNhbGxiYWNrKTtcbiAgICB9IGVsc2Uge1xuICAgICAgc2NoZWR1bGVNaWNyb3Rhc2soKCkgPT4ge1xuICAgICAgICBub3RpZnlGbihjYWxsYmFjayk7XG4gICAgICB9KTtcbiAgICB9XG4gIH07XG4gIC8qKlxuICAgKiBBbGwgY2FsbHMgdG8gdGhlIHdyYXBwZWQgZnVuY3Rpb24gd2lsbCBiZSBiYXRjaGVkLlxuICAgKi9cblxuXG4gIGNvbnN0IGJhdGNoQ2FsbHMgPSBjYWxsYmFjayA9PiB7XG4gICAgcmV0dXJuICguLi5hcmdzKSA9PiB7XG4gICAgICBzY2hlZHVsZSgoKSA9PiB7XG4gICAgICAgIGNhbGxiYWNrKC4uLmFyZ3MpO1xuICAgICAgfSk7XG4gICAgfTtcbiAgfTtcblxuICBjb25zdCBmbHVzaCA9ICgpID0+IHtcbiAgICBjb25zdCBvcmlnaW5hbFF1ZXVlID0gcXVldWU7XG4gICAgcXVldWUgPSBbXTtcblxuICAgIGlmIChvcmlnaW5hbFF1ZXVlLmxlbmd0aCkge1xuICAgICAgc2NoZWR1bGVNaWNyb3Rhc2soKCkgPT4ge1xuICAgICAgICBiYXRjaE5vdGlmeUZuKCgpID0+IHtcbiAgICAgICAgICBvcmlnaW5hbFF1ZXVlLmZvckVhY2goY2FsbGJhY2sgPT4ge1xuICAgICAgICAgICAgbm90aWZ5Rm4oY2FsbGJhY2spO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfTtcbiAgLyoqXG4gICAqIFVzZSB0aGlzIG1ldGhvZCB0byBzZXQgYSBjdXN0b20gbm90aWZ5IGZ1bmN0aW9uLlxuICAgKiBUaGlzIGNhbiBiZSB1c2VkIHRvIGZvciBleGFtcGxlIHdyYXAgbm90aWZpY2F0aW9ucyB3aXRoIGBSZWFjdC5hY3RgIHdoaWxlIHJ1bm5pbmcgdGVzdHMuXG4gICAqL1xuXG5cbiAgY29uc3Qgc2V0Tm90aWZ5RnVuY3Rpb24gPSBmbiA9PiB7XG4gICAgbm90aWZ5Rm4gPSBmbjtcbiAgfTtcbiAgLyoqXG4gICAqIFVzZSB0aGlzIG1ldGhvZCB0byBzZXQgYSBjdXN0b20gZnVuY3Rpb24gdG8gYmF0Y2ggbm90aWZpY2F0aW9ucyB0b2dldGhlciBpbnRvIGEgc2luZ2xlIHRpY2suXG4gICAqIEJ5IGRlZmF1bHQgUmVhY3QgUXVlcnkgd2lsbCB1c2UgdGhlIGJhdGNoIGZ1bmN0aW9uIHByb3ZpZGVkIGJ5IFJlYWN0RE9NIG9yIFJlYWN0IE5hdGl2ZS5cbiAgICovXG5cblxuICBjb25zdCBzZXRCYXRjaE5vdGlmeUZ1bmN0aW9uID0gZm4gPT4ge1xuICAgIGJhdGNoTm90aWZ5Rm4gPSBmbjtcbiAgfTtcblxuICByZXR1cm4ge1xuICAgIGJhdGNoLFxuICAgIGJhdGNoQ2FsbHMsXG4gICAgc2NoZWR1bGUsXG4gICAgc2V0Tm90aWZ5RnVuY3Rpb24sXG4gICAgc2V0QmF0Y2hOb3RpZnlGdW5jdGlvblxuICB9O1xufSAvLyBTSU5HTEVUT05cblxuY29uc3Qgbm90aWZ5TWFuYWdlciA9IGNyZWF0ZU5vdGlmeU1hbmFnZXIoKTtcblxuZXhwb3J0IHsgY3JlYXRlTm90aWZ5TWFuYWdlciwgbm90aWZ5TWFuYWdlciB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bm90aWZ5TWFuYWdlci5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@tanstack/query-core/build/lib/notifyManager.mjs\n"));

/***/ }),

/***/ "./node_modules/@tanstack/query-core/build/lib/onlineManager.mjs":
/*!***********************************************************************!*\
  !*** ./node_modules/@tanstack/query-core/build/lib/onlineManager.mjs ***!
  \***********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OnlineManager: function() { return /* binding */ OnlineManager; },\n/* harmony export */   onlineManager: function() { return /* binding */ onlineManager; }\n/* harmony export */ });\n/* harmony import */ var _subscribable_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./subscribable.mjs */ \"./node_modules/@tanstack/query-core/build/lib/subscribable.mjs\");\n/* harmony import */ var _utils_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.mjs */ \"./node_modules/@tanstack/query-core/build/lib/utils.mjs\");\n\n\n\nconst onlineEvents = ['online', 'offline'];\nclass OnlineManager extends _subscribable_mjs__WEBPACK_IMPORTED_MODULE_0__.Subscribable {\n  constructor() {\n    super();\n\n    this.setup = onOnline => {\n      // addEventListener does not exist in React Native, but window does\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      if (!_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.isServer && window.addEventListener) {\n        const listener = () => onOnline(); // Listen to online\n\n\n        onlineEvents.forEach(event => {\n          window.addEventListener(event, listener, false);\n        });\n        return () => {\n          // Be sure to unsubscribe if a new handler is set\n          onlineEvents.forEach(event => {\n            window.removeEventListener(event, listener);\n          });\n        };\n      }\n\n      return;\n    };\n  }\n\n  onSubscribe() {\n    if (!this.cleanup) {\n      this.setEventListener(this.setup);\n    }\n  }\n\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      var _this$cleanup;\n\n      (_this$cleanup = this.cleanup) == null ? void 0 : _this$cleanup.call(this);\n      this.cleanup = undefined;\n    }\n  }\n\n  setEventListener(setup) {\n    var _this$cleanup2;\n\n    this.setup = setup;\n    (_this$cleanup2 = this.cleanup) == null ? void 0 : _this$cleanup2.call(this);\n    this.cleanup = setup(online => {\n      if (typeof online === 'boolean') {\n        this.setOnline(online);\n      } else {\n        this.onOnline();\n      }\n    });\n  }\n\n  setOnline(online) {\n    const changed = this.online !== online;\n\n    if (changed) {\n      this.online = online;\n      this.onOnline();\n    }\n  }\n\n  onOnline() {\n    this.listeners.forEach(({\n      listener\n    }) => {\n      listener();\n    });\n  }\n\n  isOnline() {\n    if (typeof this.online === 'boolean') {\n      return this.online;\n    }\n\n    if (typeof navigator === 'undefined' || typeof navigator.onLine === 'undefined') {\n      return true;\n    }\n\n    return navigator.onLine;\n  }\n\n}\nconst onlineManager = new OnlineManager();\n\n\n//# sourceMappingURL=onlineManager.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3F1ZXJ5LWNvcmUvYnVpbGQvbGliL29ubGluZU1hbmFnZXIubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBa0Q7QUFDWDs7QUFFdkM7QUFDQSw0QkFBNEIsMkRBQVk7QUFDeEM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGdEQUFRO0FBQ25CLDJDQUEyQzs7O0FBRzNDO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUV3QztBQUN4QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3F1ZXJ5LWNvcmUvYnVpbGQvbGliL29ubGluZU1hbmFnZXIubWpzPzBmOTciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU3Vic2NyaWJhYmxlIH0gZnJvbSAnLi9zdWJzY3JpYmFibGUubWpzJztcbmltcG9ydCB7IGlzU2VydmVyIH0gZnJvbSAnLi91dGlscy5tanMnO1xuXG5jb25zdCBvbmxpbmVFdmVudHMgPSBbJ29ubGluZScsICdvZmZsaW5lJ107XG5jbGFzcyBPbmxpbmVNYW5hZ2VyIGV4dGVuZHMgU3Vic2NyaWJhYmxlIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoKTtcblxuICAgIHRoaXMuc2V0dXAgPSBvbk9ubGluZSA9PiB7XG4gICAgICAvLyBhZGRFdmVudExpc3RlbmVyIGRvZXMgbm90IGV4aXN0IGluIFJlYWN0IE5hdGl2ZSwgYnV0IHdpbmRvdyBkb2VzXG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVubmVjZXNzYXJ5LWNvbmRpdGlvblxuICAgICAgaWYgKCFpc1NlcnZlciAmJiB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcikge1xuICAgICAgICBjb25zdCBsaXN0ZW5lciA9ICgpID0+IG9uT25saW5lKCk7IC8vIExpc3RlbiB0byBvbmxpbmVcblxuXG4gICAgICAgIG9ubGluZUV2ZW50cy5mb3JFYWNoKGV2ZW50ID0+IHtcbiAgICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihldmVudCwgbGlzdGVuZXIsIGZhbHNlKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgICAgLy8gQmUgc3VyZSB0byB1bnN1YnNjcmliZSBpZiBhIG5ldyBoYW5kbGVyIGlzIHNldFxuICAgICAgICAgIG9ubGluZUV2ZW50cy5mb3JFYWNoKGV2ZW50ID0+IHtcbiAgICAgICAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKGV2ZW50LCBsaXN0ZW5lcik7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH07XG4gICAgICB9XG5cbiAgICAgIHJldHVybjtcbiAgICB9O1xuICB9XG5cbiAgb25TdWJzY3JpYmUoKSB7XG4gICAgaWYgKCF0aGlzLmNsZWFudXApIHtcbiAgICAgIHRoaXMuc2V0RXZlbnRMaXN0ZW5lcih0aGlzLnNldHVwKTtcbiAgICB9XG4gIH1cblxuICBvblVuc3Vic2NyaWJlKCkge1xuICAgIGlmICghdGhpcy5oYXNMaXN0ZW5lcnMoKSkge1xuICAgICAgdmFyIF90aGlzJGNsZWFudXA7XG5cbiAgICAgIChfdGhpcyRjbGVhbnVwID0gdGhpcy5jbGVhbnVwKSA9PSBudWxsID8gdm9pZCAwIDogX3RoaXMkY2xlYW51cC5jYWxsKHRoaXMpO1xuICAgICAgdGhpcy5jbGVhbnVwID0gdW5kZWZpbmVkO1xuICAgIH1cbiAgfVxuXG4gIHNldEV2ZW50TGlzdGVuZXIoc2V0dXApIHtcbiAgICB2YXIgX3RoaXMkY2xlYW51cDI7XG5cbiAgICB0aGlzLnNldHVwID0gc2V0dXA7XG4gICAgKF90aGlzJGNsZWFudXAyID0gdGhpcy5jbGVhbnVwKSA9PSBudWxsID8gdm9pZCAwIDogX3RoaXMkY2xlYW51cDIuY2FsbCh0aGlzKTtcbiAgICB0aGlzLmNsZWFudXAgPSBzZXR1cChvbmxpbmUgPT4ge1xuICAgICAgaWYgKHR5cGVvZiBvbmxpbmUgPT09ICdib29sZWFuJykge1xuICAgICAgICB0aGlzLnNldE9ubGluZShvbmxpbmUpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5vbk9ubGluZSgpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgc2V0T25saW5lKG9ubGluZSkge1xuICAgIGNvbnN0IGNoYW5nZWQgPSB0aGlzLm9ubGluZSAhPT0gb25saW5lO1xuXG4gICAgaWYgKGNoYW5nZWQpIHtcbiAgICAgIHRoaXMub25saW5lID0gb25saW5lO1xuICAgICAgdGhpcy5vbk9ubGluZSgpO1xuICAgIH1cbiAgfVxuXG4gIG9uT25saW5lKCkge1xuICAgIHRoaXMubGlzdGVuZXJzLmZvckVhY2goKHtcbiAgICAgIGxpc3RlbmVyXG4gICAgfSkgPT4ge1xuICAgICAgbGlzdGVuZXIoKTtcbiAgICB9KTtcbiAgfVxuXG4gIGlzT25saW5lKCkge1xuICAgIGlmICh0eXBlb2YgdGhpcy5vbmxpbmUgPT09ICdib29sZWFuJykge1xuICAgICAgcmV0dXJuIHRoaXMub25saW5lO1xuICAgIH1cblxuICAgIGlmICh0eXBlb2YgbmF2aWdhdG9yID09PSAndW5kZWZpbmVkJyB8fCB0eXBlb2YgbmF2aWdhdG9yLm9uTGluZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cblxuICAgIHJldHVybiBuYXZpZ2F0b3Iub25MaW5lO1xuICB9XG5cbn1cbmNvbnN0IG9ubGluZU1hbmFnZXIgPSBuZXcgT25saW5lTWFuYWdlcigpO1xuXG5leHBvcnQgeyBPbmxpbmVNYW5hZ2VyLCBvbmxpbmVNYW5hZ2VyIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1vbmxpbmVNYW5hZ2VyLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@tanstack/query-core/build/lib/onlineManager.mjs\n"));

/***/ }),

/***/ "./node_modules/@tanstack/query-core/build/lib/query.mjs":
/*!***************************************************************!*\
  !*** ./node_modules/@tanstack/query-core/build/lib/query.mjs ***!
  \***************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Query: function() { return /* binding */ Query; }\n/* harmony export */ });\n/* harmony import */ var _utils_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils.mjs */ \"./node_modules/@tanstack/query-core/build/lib/utils.mjs\");\n/* harmony import */ var _logger_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./logger.mjs */ \"./node_modules/@tanstack/query-core/build/lib/logger.mjs\");\n/* harmony import */ var _notifyManager_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./notifyManager.mjs */ \"./node_modules/@tanstack/query-core/build/lib/notifyManager.mjs\");\n/* harmony import */ var _retryer_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./retryer.mjs */ \"./node_modules/@tanstack/query-core/build/lib/retryer.mjs\");\n/* harmony import */ var _removable_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./removable.mjs */ \"./node_modules/@tanstack/query-core/build/lib/removable.mjs\");\n\n\n\n\n\n\n// CLASS\nclass Query extends _removable_mjs__WEBPACK_IMPORTED_MODULE_0__.Removable {\n  constructor(config) {\n    super();\n    this.abortSignalConsumed = false;\n    this.defaultOptions = config.defaultOptions;\n    this.setOptions(config.options);\n    this.observers = [];\n    this.cache = config.cache;\n    this.logger = config.logger || _logger_mjs__WEBPACK_IMPORTED_MODULE_1__.defaultLogger;\n    this.queryKey = config.queryKey;\n    this.queryHash = config.queryHash;\n    this.initialState = config.state || getDefaultState(this.options);\n    this.state = this.initialState;\n    this.scheduleGc();\n  }\n\n  get meta() {\n    return this.options.meta;\n  }\n\n  setOptions(options) {\n    this.options = { ...this.defaultOptions,\n      ...options\n    };\n    this.updateCacheTime(this.options.cacheTime);\n  }\n\n  optionalRemove() {\n    if (!this.observers.length && this.state.fetchStatus === 'idle') {\n      this.cache.remove(this);\n    }\n  }\n\n  setData(newData, options) {\n    const data = (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.replaceData)(this.state.data, newData, this.options); // Set data and mark it as cached\n\n    this.dispatch({\n      data,\n      type: 'success',\n      dataUpdatedAt: options == null ? void 0 : options.updatedAt,\n      manual: options == null ? void 0 : options.manual\n    });\n    return data;\n  }\n\n  setState(state, setStateOptions) {\n    this.dispatch({\n      type: 'setState',\n      state,\n      setStateOptions\n    });\n  }\n\n  cancel(options) {\n    var _this$retryer;\n\n    const promise = this.promise;\n    (_this$retryer = this.retryer) == null ? void 0 : _this$retryer.cancel(options);\n    return promise ? promise.then(_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.noop).catch(_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.noop) : Promise.resolve();\n  }\n\n  destroy() {\n    super.destroy();\n    this.cancel({\n      silent: true\n    });\n  }\n\n  reset() {\n    this.destroy();\n    this.setState(this.initialState);\n  }\n\n  isActive() {\n    return this.observers.some(observer => observer.options.enabled !== false);\n  }\n\n  isDisabled() {\n    return this.getObserversCount() > 0 && !this.isActive();\n  }\n\n  isStale() {\n    return this.state.isInvalidated || !this.state.dataUpdatedAt || this.observers.some(observer => observer.getCurrentResult().isStale);\n  }\n\n  isStaleByTime(staleTime = 0) {\n    return this.state.isInvalidated || !this.state.dataUpdatedAt || !(0,_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.timeUntilStale)(this.state.dataUpdatedAt, staleTime);\n  }\n\n  onFocus() {\n    var _this$retryer2;\n\n    const observer = this.observers.find(x => x.shouldFetchOnWindowFocus());\n\n    if (observer) {\n      observer.refetch({\n        cancelRefetch: false\n      });\n    } // Continue fetch if currently paused\n\n\n    (_this$retryer2 = this.retryer) == null ? void 0 : _this$retryer2.continue();\n  }\n\n  onOnline() {\n    var _this$retryer3;\n\n    const observer = this.observers.find(x => x.shouldFetchOnReconnect());\n\n    if (observer) {\n      observer.refetch({\n        cancelRefetch: false\n      });\n    } // Continue fetch if currently paused\n\n\n    (_this$retryer3 = this.retryer) == null ? void 0 : _this$retryer3.continue();\n  }\n\n  addObserver(observer) {\n    if (!this.observers.includes(observer)) {\n      this.observers.push(observer); // Stop the query from being garbage collected\n\n      this.clearGcTimeout();\n      this.cache.notify({\n        type: 'observerAdded',\n        query: this,\n        observer\n      });\n    }\n  }\n\n  removeObserver(observer) {\n    if (this.observers.includes(observer)) {\n      this.observers = this.observers.filter(x => x !== observer);\n\n      if (!this.observers.length) {\n        // If the transport layer does not support cancellation\n        // we'll let the query continue so the result can be cached\n        if (this.retryer) {\n          if (this.abortSignalConsumed) {\n            this.retryer.cancel({\n              revert: true\n            });\n          } else {\n            this.retryer.cancelRetry();\n          }\n        }\n\n        this.scheduleGc();\n      }\n\n      this.cache.notify({\n        type: 'observerRemoved',\n        query: this,\n        observer\n      });\n    }\n  }\n\n  getObserversCount() {\n    return this.observers.length;\n  }\n\n  invalidate() {\n    if (!this.state.isInvalidated) {\n      this.dispatch({\n        type: 'invalidate'\n      });\n    }\n  }\n\n  fetch(options, fetchOptions) {\n    var _this$options$behavio, _context$fetchOptions;\n\n    if (this.state.fetchStatus !== 'idle') {\n      if (this.state.dataUpdatedAt && fetchOptions != null && fetchOptions.cancelRefetch) {\n        // Silently cancel current fetch if the user wants to cancel refetches\n        this.cancel({\n          silent: true\n        });\n      } else if (this.promise) {\n        var _this$retryer4;\n\n        // make sure that retries that were potentially cancelled due to unmounts can continue\n        (_this$retryer4 = this.retryer) == null ? void 0 : _this$retryer4.continueRetry(); // Return current promise if we are already fetching\n\n        return this.promise;\n      }\n    } // Update config if passed, otherwise the config from the last execution is used\n\n\n    if (options) {\n      this.setOptions(options);\n    } // Use the options from the first observer with a query function if no function is found.\n    // This can happen when the query is hydrated or created with setQueryData.\n\n\n    if (!this.options.queryFn) {\n      const observer = this.observers.find(x => x.options.queryFn);\n\n      if (observer) {\n        this.setOptions(observer.options);\n      }\n    }\n\n    if (true) {\n      if (!Array.isArray(this.options.queryKey)) {\n        this.logger.error(\"As of v4, queryKey needs to be an Array. If you are using a string like 'repoData', please change it to an Array, e.g. ['repoData']\");\n      }\n    }\n\n    const abortController = (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.getAbortController)(); // Create query function context\n\n    const queryFnContext = {\n      queryKey: this.queryKey,\n      pageParam: undefined,\n      meta: this.meta\n    }; // Adds an enumerable signal property to the object that\n    // which sets abortSignalConsumed to true when the signal\n    // is read.\n\n    const addSignalProperty = object => {\n      Object.defineProperty(object, 'signal', {\n        enumerable: true,\n        get: () => {\n          if (abortController) {\n            this.abortSignalConsumed = true;\n            return abortController.signal;\n          }\n\n          return undefined;\n        }\n      });\n    };\n\n    addSignalProperty(queryFnContext); // Create fetch function\n\n    const fetchFn = () => {\n      if (!this.options.queryFn) {\n        return Promise.reject(\"Missing queryFn for queryKey '\" + this.options.queryHash + \"'\");\n      }\n\n      this.abortSignalConsumed = false;\n      return this.options.queryFn(queryFnContext);\n    }; // Trigger behavior hook\n\n\n    const context = {\n      fetchOptions,\n      options: this.options,\n      queryKey: this.queryKey,\n      state: this.state,\n      fetchFn\n    };\n    addSignalProperty(context);\n    (_this$options$behavio = this.options.behavior) == null ? void 0 : _this$options$behavio.onFetch(context); // Store state in case the current fetch needs to be reverted\n\n    this.revertState = this.state; // Set to fetching state if not already in it\n\n    if (this.state.fetchStatus === 'idle' || this.state.fetchMeta !== ((_context$fetchOptions = context.fetchOptions) == null ? void 0 : _context$fetchOptions.meta)) {\n      var _context$fetchOptions2;\n\n      this.dispatch({\n        type: 'fetch',\n        meta: (_context$fetchOptions2 = context.fetchOptions) == null ? void 0 : _context$fetchOptions2.meta\n      });\n    }\n\n    const onError = error => {\n      // Optimistically update state if needed\n      if (!((0,_retryer_mjs__WEBPACK_IMPORTED_MODULE_3__.isCancelledError)(error) && error.silent)) {\n        this.dispatch({\n          type: 'error',\n          error: error\n        });\n      }\n\n      if (!(0,_retryer_mjs__WEBPACK_IMPORTED_MODULE_3__.isCancelledError)(error)) {\n        var _this$cache$config$on, _this$cache$config, _this$cache$config$on2, _this$cache$config2;\n\n        // Notify cache callback\n        (_this$cache$config$on = (_this$cache$config = this.cache.config).onError) == null ? void 0 : _this$cache$config$on.call(_this$cache$config, error, this);\n        (_this$cache$config$on2 = (_this$cache$config2 = this.cache.config).onSettled) == null ? void 0 : _this$cache$config$on2.call(_this$cache$config2, this.state.data, error, this);\n\n        if (true) {\n          this.logger.error(error);\n        }\n      }\n\n      if (!this.isFetchingOptimistic) {\n        // Schedule query gc after fetching\n        this.scheduleGc();\n      }\n\n      this.isFetchingOptimistic = false;\n    }; // Try to fetch the data\n\n\n    this.retryer = (0,_retryer_mjs__WEBPACK_IMPORTED_MODULE_3__.createRetryer)({\n      fn: context.fetchFn,\n      abort: abortController == null ? void 0 : abortController.abort.bind(abortController),\n      onSuccess: data => {\n        var _this$cache$config$on3, _this$cache$config3, _this$cache$config$on4, _this$cache$config4;\n\n        if (typeof data === 'undefined') {\n          if (true) {\n            this.logger.error(\"Query data cannot be undefined. Please make sure to return a value other than undefined from your query function. Affected query key: \" + this.queryHash);\n          }\n\n          onError(new Error(this.queryHash + \" data is undefined\"));\n          return;\n        }\n\n        this.setData(data); // Notify cache callback\n\n        (_this$cache$config$on3 = (_this$cache$config3 = this.cache.config).onSuccess) == null ? void 0 : _this$cache$config$on3.call(_this$cache$config3, data, this);\n        (_this$cache$config$on4 = (_this$cache$config4 = this.cache.config).onSettled) == null ? void 0 : _this$cache$config$on4.call(_this$cache$config4, data, this.state.error, this);\n\n        if (!this.isFetchingOptimistic) {\n          // Schedule query gc after fetching\n          this.scheduleGc();\n        }\n\n        this.isFetchingOptimistic = false;\n      },\n      onError,\n      onFail: (failureCount, error) => {\n        this.dispatch({\n          type: 'failed',\n          failureCount,\n          error\n        });\n      },\n      onPause: () => {\n        this.dispatch({\n          type: 'pause'\n        });\n      },\n      onContinue: () => {\n        this.dispatch({\n          type: 'continue'\n        });\n      },\n      retry: context.options.retry,\n      retryDelay: context.options.retryDelay,\n      networkMode: context.options.networkMode\n    });\n    this.promise = this.retryer.promise;\n    return this.promise;\n  }\n\n  dispatch(action) {\n    const reducer = state => {\n      var _action$meta, _action$dataUpdatedAt;\n\n      switch (action.type) {\n        case 'failed':\n          return { ...state,\n            fetchFailureCount: action.failureCount,\n            fetchFailureReason: action.error\n          };\n\n        case 'pause':\n          return { ...state,\n            fetchStatus: 'paused'\n          };\n\n        case 'continue':\n          return { ...state,\n            fetchStatus: 'fetching'\n          };\n\n        case 'fetch':\n          return { ...state,\n            fetchFailureCount: 0,\n            fetchFailureReason: null,\n            fetchMeta: (_action$meta = action.meta) != null ? _action$meta : null,\n            fetchStatus: (0,_retryer_mjs__WEBPACK_IMPORTED_MODULE_3__.canFetch)(this.options.networkMode) ? 'fetching' : 'paused',\n            ...(!state.dataUpdatedAt && {\n              error: null,\n              status: 'loading'\n            })\n          };\n\n        case 'success':\n          return { ...state,\n            data: action.data,\n            dataUpdateCount: state.dataUpdateCount + 1,\n            dataUpdatedAt: (_action$dataUpdatedAt = action.dataUpdatedAt) != null ? _action$dataUpdatedAt : Date.now(),\n            error: null,\n            isInvalidated: false,\n            status: 'success',\n            ...(!action.manual && {\n              fetchStatus: 'idle',\n              fetchFailureCount: 0,\n              fetchFailureReason: null\n            })\n          };\n\n        case 'error':\n          const error = action.error;\n\n          if ((0,_retryer_mjs__WEBPACK_IMPORTED_MODULE_3__.isCancelledError)(error) && error.revert && this.revertState) {\n            return { ...this.revertState,\n              fetchStatus: 'idle'\n            };\n          }\n\n          return { ...state,\n            error: error,\n            errorUpdateCount: state.errorUpdateCount + 1,\n            errorUpdatedAt: Date.now(),\n            fetchFailureCount: state.fetchFailureCount + 1,\n            fetchFailureReason: error,\n            fetchStatus: 'idle',\n            status: 'error'\n          };\n\n        case 'invalidate':\n          return { ...state,\n            isInvalidated: true\n          };\n\n        case 'setState':\n          return { ...state,\n            ...action.state\n          };\n      }\n    };\n\n    this.state = reducer(this.state);\n    _notifyManager_mjs__WEBPACK_IMPORTED_MODULE_4__.notifyManager.batch(() => {\n      this.observers.forEach(observer => {\n        observer.onQueryUpdate(action);\n      });\n      this.cache.notify({\n        query: this,\n        type: 'updated',\n        action\n      });\n    });\n  }\n\n}\n\nfunction getDefaultState(options) {\n  const data = typeof options.initialData === 'function' ? options.initialData() : options.initialData;\n  const hasData = typeof data !== 'undefined';\n  const initialDataUpdatedAt = hasData ? typeof options.initialDataUpdatedAt === 'function' ? options.initialDataUpdatedAt() : options.initialDataUpdatedAt : 0;\n  return {\n    data,\n    dataUpdateCount: 0,\n    dataUpdatedAt: hasData ? initialDataUpdatedAt != null ? initialDataUpdatedAt : Date.now() : 0,\n    error: null,\n    errorUpdateCount: 0,\n    errorUpdatedAt: 0,\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchMeta: null,\n    isInvalidated: false,\n    status: hasData ? 'success' : 'loading',\n    fetchStatus: 'idle'\n  };\n}\n\n\n//# sourceMappingURL=query.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@tanstack/query-core/build/lib/query.mjs\n"));

/***/ }),

/***/ "./node_modules/@tanstack/query-core/build/lib/queryCache.mjs":
/*!********************************************************************!*\
  !*** ./node_modules/@tanstack/query-core/build/lib/queryCache.mjs ***!
  \********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   QueryCache: function() { return /* binding */ QueryCache; }\n/* harmony export */ });\n/* harmony import */ var _utils_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.mjs */ \"./node_modules/@tanstack/query-core/build/lib/utils.mjs\");\n/* harmony import */ var _query_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./query.mjs */ \"./node_modules/@tanstack/query-core/build/lib/query.mjs\");\n/* harmony import */ var _notifyManager_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./notifyManager.mjs */ \"./node_modules/@tanstack/query-core/build/lib/notifyManager.mjs\");\n/* harmony import */ var _subscribable_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./subscribable.mjs */ \"./node_modules/@tanstack/query-core/build/lib/subscribable.mjs\");\n\n\n\n\n\n// CLASS\nclass QueryCache extends _subscribable_mjs__WEBPACK_IMPORTED_MODULE_0__.Subscribable {\n  constructor(config) {\n    super();\n    this.config = config || {};\n    this.queries = [];\n    this.queriesMap = {};\n  }\n\n  build(client, options, state) {\n    var _options$queryHash;\n\n    const queryKey = options.queryKey;\n    const queryHash = (_options$queryHash = options.queryHash) != null ? _options$queryHash : (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.hashQueryKeyByOptions)(queryKey, options);\n    let query = this.get(queryHash);\n\n    if (!query) {\n      query = new _query_mjs__WEBPACK_IMPORTED_MODULE_2__.Query({\n        cache: this,\n        logger: client.getLogger(),\n        queryKey,\n        queryHash,\n        options: client.defaultQueryOptions(options),\n        state,\n        defaultOptions: client.getQueryDefaults(queryKey)\n      });\n      this.add(query);\n    }\n\n    return query;\n  }\n\n  add(query) {\n    if (!this.queriesMap[query.queryHash]) {\n      this.queriesMap[query.queryHash] = query;\n      this.queries.push(query);\n      this.notify({\n        type: 'added',\n        query\n      });\n    }\n  }\n\n  remove(query) {\n    const queryInMap = this.queriesMap[query.queryHash];\n\n    if (queryInMap) {\n      query.destroy();\n      this.queries = this.queries.filter(x => x !== query);\n\n      if (queryInMap === query) {\n        delete this.queriesMap[query.queryHash];\n      }\n\n      this.notify({\n        type: 'removed',\n        query\n      });\n    }\n  }\n\n  clear() {\n    _notifyManager_mjs__WEBPACK_IMPORTED_MODULE_3__.notifyManager.batch(() => {\n      this.queries.forEach(query => {\n        this.remove(query);\n      });\n    });\n  }\n\n  get(queryHash) {\n    return this.queriesMap[queryHash];\n  }\n\n  getAll() {\n    return this.queries;\n  }\n\n  find(arg1, arg2) {\n    const [filters] = (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.parseFilterArgs)(arg1, arg2);\n\n    if (typeof filters.exact === 'undefined') {\n      filters.exact = true;\n    }\n\n    return this.queries.find(query => (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.matchQuery)(filters, query));\n  }\n\n  findAll(arg1, arg2) {\n    const [filters] = (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.parseFilterArgs)(arg1, arg2);\n    return Object.keys(filters).length > 0 ? this.queries.filter(query => (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.matchQuery)(filters, query)) : this.queries;\n  }\n\n  notify(event) {\n    _notifyManager_mjs__WEBPACK_IMPORTED_MODULE_3__.notifyManager.batch(() => {\n      this.listeners.forEach(({\n        listener\n      }) => {\n        listener(event);\n      });\n    });\n  }\n\n  onFocus() {\n    _notifyManager_mjs__WEBPACK_IMPORTED_MODULE_3__.notifyManager.batch(() => {\n      this.queries.forEach(query => {\n        query.onFocus();\n      });\n    });\n  }\n\n  onOnline() {\n    _notifyManager_mjs__WEBPACK_IMPORTED_MODULE_3__.notifyManager.batch(() => {\n      this.queries.forEach(query => {\n        query.onOnline();\n      });\n    });\n  }\n\n}\n\n\n//# sourceMappingURL=queryCache.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3F1ZXJ5LWNvcmUvYnVpbGQvbGliL3F1ZXJ5Q2FjaGUubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQWlGO0FBQzdDO0FBQ2dCO0FBQ0Y7O0FBRWxEO0FBQ0EseUJBQXlCLDJEQUFZO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0EsOEZBQThGLGlFQUFxQjtBQUNuSDs7QUFFQTtBQUNBLGtCQUFrQiw2Q0FBSztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQSxJQUFJLDZEQUFhO0FBQ2pCO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxzQkFBc0IsMkRBQWU7O0FBRXJDO0FBQ0E7QUFDQTs7QUFFQSxzQ0FBc0Msc0RBQVU7QUFDaEQ7O0FBRUE7QUFDQSxzQkFBc0IsMkRBQWU7QUFDckMsMEVBQTBFLHNEQUFVO0FBQ3BGOztBQUVBO0FBQ0EsSUFBSSw2REFBYTtBQUNqQjtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDs7QUFFQTtBQUNBLElBQUksNkRBQWE7QUFDakI7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7O0FBRUE7QUFDQSxJQUFJLDZEQUFhO0FBQ2pCO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMOztBQUVBOztBQUVzQjtBQUN0QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3F1ZXJ5LWNvcmUvYnVpbGQvbGliL3F1ZXJ5Q2FjaGUubWpzP2RiMjAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaGFzaFF1ZXJ5S2V5QnlPcHRpb25zLCBwYXJzZUZpbHRlckFyZ3MsIG1hdGNoUXVlcnkgfSBmcm9tICcuL3V0aWxzLm1qcyc7XG5pbXBvcnQgeyBRdWVyeSB9IGZyb20gJy4vcXVlcnkubWpzJztcbmltcG9ydCB7IG5vdGlmeU1hbmFnZXIgfSBmcm9tICcuL25vdGlmeU1hbmFnZXIubWpzJztcbmltcG9ydCB7IFN1YnNjcmliYWJsZSB9IGZyb20gJy4vc3Vic2NyaWJhYmxlLm1qcyc7XG5cbi8vIENMQVNTXG5jbGFzcyBRdWVyeUNhY2hlIGV4dGVuZHMgU3Vic2NyaWJhYmxlIHtcbiAgY29uc3RydWN0b3IoY29uZmlnKSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLmNvbmZpZyA9IGNvbmZpZyB8fCB7fTtcbiAgICB0aGlzLnF1ZXJpZXMgPSBbXTtcbiAgICB0aGlzLnF1ZXJpZXNNYXAgPSB7fTtcbiAgfVxuXG4gIGJ1aWxkKGNsaWVudCwgb3B0aW9ucywgc3RhdGUpIHtcbiAgICB2YXIgX29wdGlvbnMkcXVlcnlIYXNoO1xuXG4gICAgY29uc3QgcXVlcnlLZXkgPSBvcHRpb25zLnF1ZXJ5S2V5O1xuICAgIGNvbnN0IHF1ZXJ5SGFzaCA9IChfb3B0aW9ucyRxdWVyeUhhc2ggPSBvcHRpb25zLnF1ZXJ5SGFzaCkgIT0gbnVsbCA/IF9vcHRpb25zJHF1ZXJ5SGFzaCA6IGhhc2hRdWVyeUtleUJ5T3B0aW9ucyhxdWVyeUtleSwgb3B0aW9ucyk7XG4gICAgbGV0IHF1ZXJ5ID0gdGhpcy5nZXQocXVlcnlIYXNoKTtcblxuICAgIGlmICghcXVlcnkpIHtcbiAgICAgIHF1ZXJ5ID0gbmV3IFF1ZXJ5KHtcbiAgICAgICAgY2FjaGU6IHRoaXMsXG4gICAgICAgIGxvZ2dlcjogY2xpZW50LmdldExvZ2dlcigpLFxuICAgICAgICBxdWVyeUtleSxcbiAgICAgICAgcXVlcnlIYXNoLFxuICAgICAgICBvcHRpb25zOiBjbGllbnQuZGVmYXVsdFF1ZXJ5T3B0aW9ucyhvcHRpb25zKSxcbiAgICAgICAgc3RhdGUsXG4gICAgICAgIGRlZmF1bHRPcHRpb25zOiBjbGllbnQuZ2V0UXVlcnlEZWZhdWx0cyhxdWVyeUtleSlcbiAgICAgIH0pO1xuICAgICAgdGhpcy5hZGQocXVlcnkpO1xuICAgIH1cblxuICAgIHJldHVybiBxdWVyeTtcbiAgfVxuXG4gIGFkZChxdWVyeSkge1xuICAgIGlmICghdGhpcy5xdWVyaWVzTWFwW3F1ZXJ5LnF1ZXJ5SGFzaF0pIHtcbiAgICAgIHRoaXMucXVlcmllc01hcFtxdWVyeS5xdWVyeUhhc2hdID0gcXVlcnk7XG4gICAgICB0aGlzLnF1ZXJpZXMucHVzaChxdWVyeSk7XG4gICAgICB0aGlzLm5vdGlmeSh7XG4gICAgICAgIHR5cGU6ICdhZGRlZCcsXG4gICAgICAgIHF1ZXJ5XG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICByZW1vdmUocXVlcnkpIHtcbiAgICBjb25zdCBxdWVyeUluTWFwID0gdGhpcy5xdWVyaWVzTWFwW3F1ZXJ5LnF1ZXJ5SGFzaF07XG5cbiAgICBpZiAocXVlcnlJbk1hcCkge1xuICAgICAgcXVlcnkuZGVzdHJveSgpO1xuICAgICAgdGhpcy5xdWVyaWVzID0gdGhpcy5xdWVyaWVzLmZpbHRlcih4ID0+IHggIT09IHF1ZXJ5KTtcblxuICAgICAgaWYgKHF1ZXJ5SW5NYXAgPT09IHF1ZXJ5KSB7XG4gICAgICAgIGRlbGV0ZSB0aGlzLnF1ZXJpZXNNYXBbcXVlcnkucXVlcnlIYXNoXTtcbiAgICAgIH1cblxuICAgICAgdGhpcy5ub3RpZnkoe1xuICAgICAgICB0eXBlOiAncmVtb3ZlZCcsXG4gICAgICAgIHF1ZXJ5XG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICBjbGVhcigpIHtcbiAgICBub3RpZnlNYW5hZ2VyLmJhdGNoKCgpID0+IHtcbiAgICAgIHRoaXMucXVlcmllcy5mb3JFYWNoKHF1ZXJ5ID0+IHtcbiAgICAgICAgdGhpcy5yZW1vdmUocXVlcnkpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICBnZXQocXVlcnlIYXNoKSB7XG4gICAgcmV0dXJuIHRoaXMucXVlcmllc01hcFtxdWVyeUhhc2hdO1xuICB9XG5cbiAgZ2V0QWxsKCkge1xuICAgIHJldHVybiB0aGlzLnF1ZXJpZXM7XG4gIH1cblxuICBmaW5kKGFyZzEsIGFyZzIpIHtcbiAgICBjb25zdCBbZmlsdGVyc10gPSBwYXJzZUZpbHRlckFyZ3MoYXJnMSwgYXJnMik7XG5cbiAgICBpZiAodHlwZW9mIGZpbHRlcnMuZXhhY3QgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICBmaWx0ZXJzLmV4YWN0ID0gdHJ1ZTtcbiAgICB9XG5cbiAgICByZXR1cm4gdGhpcy5xdWVyaWVzLmZpbmQocXVlcnkgPT4gbWF0Y2hRdWVyeShmaWx0ZXJzLCBxdWVyeSkpO1xuICB9XG5cbiAgZmluZEFsbChhcmcxLCBhcmcyKSB7XG4gICAgY29uc3QgW2ZpbHRlcnNdID0gcGFyc2VGaWx0ZXJBcmdzKGFyZzEsIGFyZzIpO1xuICAgIHJldHVybiBPYmplY3Qua2V5cyhmaWx0ZXJzKS5sZW5ndGggPiAwID8gdGhpcy5xdWVyaWVzLmZpbHRlcihxdWVyeSA9PiBtYXRjaFF1ZXJ5KGZpbHRlcnMsIHF1ZXJ5KSkgOiB0aGlzLnF1ZXJpZXM7XG4gIH1cblxuICBub3RpZnkoZXZlbnQpIHtcbiAgICBub3RpZnlNYW5hZ2VyLmJhdGNoKCgpID0+IHtcbiAgICAgIHRoaXMubGlzdGVuZXJzLmZvckVhY2goKHtcbiAgICAgICAgbGlzdGVuZXJcbiAgICAgIH0pID0+IHtcbiAgICAgICAgbGlzdGVuZXIoZXZlbnQpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICBvbkZvY3VzKCkge1xuICAgIG5vdGlmeU1hbmFnZXIuYmF0Y2goKCkgPT4ge1xuICAgICAgdGhpcy5xdWVyaWVzLmZvckVhY2gocXVlcnkgPT4ge1xuICAgICAgICBxdWVyeS5vbkZvY3VzKCk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuXG4gIG9uT25saW5lKCkge1xuICAgIG5vdGlmeU1hbmFnZXIuYmF0Y2goKCkgPT4ge1xuICAgICAgdGhpcy5xdWVyaWVzLmZvckVhY2gocXVlcnkgPT4ge1xuICAgICAgICBxdWVyeS5vbk9ubGluZSgpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxufVxuXG5leHBvcnQgeyBRdWVyeUNhY2hlIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1xdWVyeUNhY2hlLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@tanstack/query-core/build/lib/queryCache.mjs\n"));

/***/ }),

/***/ "./node_modules/@tanstack/query-core/build/lib/queryClient.mjs":
/*!*********************************************************************!*\
  !*** ./node_modules/@tanstack/query-core/build/lib/queryClient.mjs ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   QueryClient: function() { return /* binding */ QueryClient; }\n/* harmony export */ });\n/* harmony import */ var _utils_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils.mjs */ \"./node_modules/@tanstack/query-core/build/lib/utils.mjs\");\n/* harmony import */ var _queryCache_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./queryCache.mjs */ \"./node_modules/@tanstack/query-core/build/lib/queryCache.mjs\");\n/* harmony import */ var _mutationCache_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mutationCache.mjs */ \"./node_modules/@tanstack/query-core/build/lib/mutationCache.mjs\");\n/* harmony import */ var _focusManager_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./focusManager.mjs */ \"./node_modules/@tanstack/query-core/build/lib/focusManager.mjs\");\n/* harmony import */ var _onlineManager_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./onlineManager.mjs */ \"./node_modules/@tanstack/query-core/build/lib/onlineManager.mjs\");\n/* harmony import */ var _notifyManager_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./notifyManager.mjs */ \"./node_modules/@tanstack/query-core/build/lib/notifyManager.mjs\");\n/* harmony import */ var _infiniteQueryBehavior_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./infiniteQueryBehavior.mjs */ \"./node_modules/@tanstack/query-core/build/lib/infiniteQueryBehavior.mjs\");\n/* harmony import */ var _logger_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./logger.mjs */ \"./node_modules/@tanstack/query-core/build/lib/logger.mjs\");\n\n\n\n\n\n\n\n\n\n// CLASS\nclass QueryClient {\n  constructor(config = {}) {\n    this.queryCache = config.queryCache || new _queryCache_mjs__WEBPACK_IMPORTED_MODULE_0__.QueryCache();\n    this.mutationCache = config.mutationCache || new _mutationCache_mjs__WEBPACK_IMPORTED_MODULE_1__.MutationCache();\n    this.logger = config.logger || _logger_mjs__WEBPACK_IMPORTED_MODULE_2__.defaultLogger;\n    this.defaultOptions = config.defaultOptions || {};\n    this.queryDefaults = [];\n    this.mutationDefaults = [];\n    this.mountCount = 0;\n\n    if ( true && config.logger) {\n      this.logger.error(\"Passing a custom logger has been deprecated and will be removed in the next major version.\");\n    }\n  }\n\n  mount() {\n    this.mountCount++;\n    if (this.mountCount !== 1) return;\n    this.unsubscribeFocus = _focusManager_mjs__WEBPACK_IMPORTED_MODULE_3__.focusManager.subscribe(() => {\n      if (_focusManager_mjs__WEBPACK_IMPORTED_MODULE_3__.focusManager.isFocused()) {\n        this.resumePausedMutations();\n        this.queryCache.onFocus();\n      }\n    });\n    this.unsubscribeOnline = _onlineManager_mjs__WEBPACK_IMPORTED_MODULE_4__.onlineManager.subscribe(() => {\n      if (_onlineManager_mjs__WEBPACK_IMPORTED_MODULE_4__.onlineManager.isOnline()) {\n        this.resumePausedMutations();\n        this.queryCache.onOnline();\n      }\n    });\n  }\n\n  unmount() {\n    var _this$unsubscribeFocu, _this$unsubscribeOnli;\n\n    this.mountCount--;\n    if (this.mountCount !== 0) return;\n    (_this$unsubscribeFocu = this.unsubscribeFocus) == null ? void 0 : _this$unsubscribeFocu.call(this);\n    this.unsubscribeFocus = undefined;\n    (_this$unsubscribeOnli = this.unsubscribeOnline) == null ? void 0 : _this$unsubscribeOnli.call(this);\n    this.unsubscribeOnline = undefined;\n  }\n\n  isFetching(arg1, arg2) {\n    const [filters] = (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_5__.parseFilterArgs)(arg1, arg2);\n    filters.fetchStatus = 'fetching';\n    return this.queryCache.findAll(filters).length;\n  }\n\n  isMutating(filters) {\n    return this.mutationCache.findAll({ ...filters,\n      fetching: true\n    }).length;\n  }\n\n  getQueryData(queryKey, filters) {\n    var _this$queryCache$find;\n\n    return (_this$queryCache$find = this.queryCache.find(queryKey, filters)) == null ? void 0 : _this$queryCache$find.state.data;\n  }\n\n  ensureQueryData(arg1, arg2, arg3) {\n    const parsedOptions = (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_5__.parseQueryArgs)(arg1, arg2, arg3);\n    const cachedData = this.getQueryData(parsedOptions.queryKey);\n    return cachedData ? Promise.resolve(cachedData) : this.fetchQuery(parsedOptions);\n  }\n\n  getQueriesData(queryKeyOrFilters) {\n    return this.getQueryCache().findAll(queryKeyOrFilters).map(({\n      queryKey,\n      state\n    }) => {\n      const data = state.data;\n      return [queryKey, data];\n    });\n  }\n\n  setQueryData(queryKey, updater, options) {\n    const query = this.queryCache.find(queryKey);\n    const prevData = query == null ? void 0 : query.state.data;\n    const data = (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_5__.functionalUpdate)(updater, prevData);\n\n    if (typeof data === 'undefined') {\n      return undefined;\n    }\n\n    const parsedOptions = (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_5__.parseQueryArgs)(queryKey);\n    const defaultedOptions = this.defaultQueryOptions(parsedOptions);\n    return this.queryCache.build(this, defaultedOptions).setData(data, { ...options,\n      manual: true\n    });\n  }\n\n  setQueriesData(queryKeyOrFilters, updater, options) {\n    return _notifyManager_mjs__WEBPACK_IMPORTED_MODULE_6__.notifyManager.batch(() => this.getQueryCache().findAll(queryKeyOrFilters).map(({\n      queryKey\n    }) => [queryKey, this.setQueryData(queryKey, updater, options)]));\n  }\n\n  getQueryState(queryKey, filters) {\n    var _this$queryCache$find2;\n\n    return (_this$queryCache$find2 = this.queryCache.find(queryKey, filters)) == null ? void 0 : _this$queryCache$find2.state;\n  }\n\n  removeQueries(arg1, arg2) {\n    const [filters] = (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_5__.parseFilterArgs)(arg1, arg2);\n    const queryCache = this.queryCache;\n    _notifyManager_mjs__WEBPACK_IMPORTED_MODULE_6__.notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach(query => {\n        queryCache.remove(query);\n      });\n    });\n  }\n\n  resetQueries(arg1, arg2, arg3) {\n    const [filters, options] = (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_5__.parseFilterArgs)(arg1, arg2, arg3);\n    const queryCache = this.queryCache;\n    const refetchFilters = {\n      type: 'active',\n      ...filters\n    };\n    return _notifyManager_mjs__WEBPACK_IMPORTED_MODULE_6__.notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach(query => {\n        query.reset();\n      });\n      return this.refetchQueries(refetchFilters, options);\n    });\n  }\n\n  cancelQueries(arg1, arg2, arg3) {\n    const [filters, cancelOptions = {}] = (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_5__.parseFilterArgs)(arg1, arg2, arg3);\n\n    if (typeof cancelOptions.revert === 'undefined') {\n      cancelOptions.revert = true;\n    }\n\n    const promises = _notifyManager_mjs__WEBPACK_IMPORTED_MODULE_6__.notifyManager.batch(() => this.queryCache.findAll(filters).map(query => query.cancel(cancelOptions)));\n    return Promise.all(promises).then(_utils_mjs__WEBPACK_IMPORTED_MODULE_5__.noop).catch(_utils_mjs__WEBPACK_IMPORTED_MODULE_5__.noop);\n  }\n\n  invalidateQueries(arg1, arg2, arg3) {\n    const [filters, options] = (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_5__.parseFilterArgs)(arg1, arg2, arg3);\n    return _notifyManager_mjs__WEBPACK_IMPORTED_MODULE_6__.notifyManager.batch(() => {\n      var _ref, _filters$refetchType;\n\n      this.queryCache.findAll(filters).forEach(query => {\n        query.invalidate();\n      });\n\n      if (filters.refetchType === 'none') {\n        return Promise.resolve();\n      }\n\n      const refetchFilters = { ...filters,\n        type: (_ref = (_filters$refetchType = filters.refetchType) != null ? _filters$refetchType : filters.type) != null ? _ref : 'active'\n      };\n      return this.refetchQueries(refetchFilters, options);\n    });\n  }\n\n  refetchQueries(arg1, arg2, arg3) {\n    const [filters, options] = (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_5__.parseFilterArgs)(arg1, arg2, arg3);\n    const promises = _notifyManager_mjs__WEBPACK_IMPORTED_MODULE_6__.notifyManager.batch(() => this.queryCache.findAll(filters).filter(query => !query.isDisabled()).map(query => {\n      var _options$cancelRefetc;\n\n      return query.fetch(undefined, { ...options,\n        cancelRefetch: (_options$cancelRefetc = options == null ? void 0 : options.cancelRefetch) != null ? _options$cancelRefetc : true,\n        meta: {\n          refetchPage: filters.refetchPage\n        }\n      });\n    }));\n    let promise = Promise.all(promises).then(_utils_mjs__WEBPACK_IMPORTED_MODULE_5__.noop);\n\n    if (!(options != null && options.throwOnError)) {\n      promise = promise.catch(_utils_mjs__WEBPACK_IMPORTED_MODULE_5__.noop);\n    }\n\n    return promise;\n  }\n\n  fetchQuery(arg1, arg2, arg3) {\n    const parsedOptions = (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_5__.parseQueryArgs)(arg1, arg2, arg3);\n    const defaultedOptions = this.defaultQueryOptions(parsedOptions); // https://github.com/tannerlinsley/react-query/issues/652\n\n    if (typeof defaultedOptions.retry === 'undefined') {\n      defaultedOptions.retry = false;\n    }\n\n    const query = this.queryCache.build(this, defaultedOptions);\n    return query.isStaleByTime(defaultedOptions.staleTime) ? query.fetch(defaultedOptions) : Promise.resolve(query.state.data);\n  }\n\n  prefetchQuery(arg1, arg2, arg3) {\n    return this.fetchQuery(arg1, arg2, arg3).then(_utils_mjs__WEBPACK_IMPORTED_MODULE_5__.noop).catch(_utils_mjs__WEBPACK_IMPORTED_MODULE_5__.noop);\n  }\n\n  fetchInfiniteQuery(arg1, arg2, arg3) {\n    const parsedOptions = (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_5__.parseQueryArgs)(arg1, arg2, arg3);\n    parsedOptions.behavior = (0,_infiniteQueryBehavior_mjs__WEBPACK_IMPORTED_MODULE_7__.infiniteQueryBehavior)();\n    return this.fetchQuery(parsedOptions);\n  }\n\n  prefetchInfiniteQuery(arg1, arg2, arg3) {\n    return this.fetchInfiniteQuery(arg1, arg2, arg3).then(_utils_mjs__WEBPACK_IMPORTED_MODULE_5__.noop).catch(_utils_mjs__WEBPACK_IMPORTED_MODULE_5__.noop);\n  }\n\n  resumePausedMutations() {\n    return this.mutationCache.resumePausedMutations();\n  }\n\n  getQueryCache() {\n    return this.queryCache;\n  }\n\n  getMutationCache() {\n    return this.mutationCache;\n  }\n\n  getLogger() {\n    return this.logger;\n  }\n\n  getDefaultOptions() {\n    return this.defaultOptions;\n  }\n\n  setDefaultOptions(options) {\n    this.defaultOptions = options;\n  }\n\n  setQueryDefaults(queryKey, options) {\n    const result = this.queryDefaults.find(x => (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_5__.hashQueryKey)(queryKey) === (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_5__.hashQueryKey)(x.queryKey));\n\n    if (result) {\n      result.defaultOptions = options;\n    } else {\n      this.queryDefaults.push({\n        queryKey,\n        defaultOptions: options\n      });\n    }\n  }\n\n  getQueryDefaults(queryKey) {\n    if (!queryKey) {\n      return undefined;\n    } // Get the first matching defaults\n\n\n    const firstMatchingDefaults = this.queryDefaults.find(x => (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_5__.partialMatchKey)(queryKey, x.queryKey)); // Additional checks and error in dev mode\n\n    if (true) {\n      // Retrieve all matching defaults for the given key\n      const matchingDefaults = this.queryDefaults.filter(x => (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_5__.partialMatchKey)(queryKey, x.queryKey)); // It is ok not having defaults, but it is error prone to have more than 1 default for a given key\n\n      if (matchingDefaults.length > 1) {\n        this.logger.error(\"[QueryClient] Several query defaults match with key '\" + JSON.stringify(queryKey) + \"'. The first matching query defaults are used. Please check how query defaults are registered. Order does matter here. cf. https://react-query.tanstack.com/reference/QueryClient#queryclientsetquerydefaults.\");\n      }\n    }\n\n    return firstMatchingDefaults == null ? void 0 : firstMatchingDefaults.defaultOptions;\n  }\n\n  setMutationDefaults(mutationKey, options) {\n    const result = this.mutationDefaults.find(x => (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_5__.hashQueryKey)(mutationKey) === (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_5__.hashQueryKey)(x.mutationKey));\n\n    if (result) {\n      result.defaultOptions = options;\n    } else {\n      this.mutationDefaults.push({\n        mutationKey,\n        defaultOptions: options\n      });\n    }\n  }\n\n  getMutationDefaults(mutationKey) {\n    if (!mutationKey) {\n      return undefined;\n    } // Get the first matching defaults\n\n\n    const firstMatchingDefaults = this.mutationDefaults.find(x => (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_5__.partialMatchKey)(mutationKey, x.mutationKey)); // Additional checks and error in dev mode\n\n    if (true) {\n      // Retrieve all matching defaults for the given key\n      const matchingDefaults = this.mutationDefaults.filter(x => (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_5__.partialMatchKey)(mutationKey, x.mutationKey)); // It is ok not having defaults, but it is error prone to have more than 1 default for a given key\n\n      if (matchingDefaults.length > 1) {\n        this.logger.error(\"[QueryClient] Several mutation defaults match with key '\" + JSON.stringify(mutationKey) + \"'. The first matching mutation defaults are used. Please check how mutation defaults are registered. Order does matter here. cf. https://react-query.tanstack.com/reference/QueryClient#queryclientsetmutationdefaults.\");\n      }\n    }\n\n    return firstMatchingDefaults == null ? void 0 : firstMatchingDefaults.defaultOptions;\n  }\n\n  defaultQueryOptions(options) {\n    if (options != null && options._defaulted) {\n      return options;\n    }\n\n    const defaultedOptions = { ...this.defaultOptions.queries,\n      ...this.getQueryDefaults(options == null ? void 0 : options.queryKey),\n      ...options,\n      _defaulted: true\n    };\n\n    if (!defaultedOptions.queryHash && defaultedOptions.queryKey) {\n      defaultedOptions.queryHash = (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_5__.hashQueryKeyByOptions)(defaultedOptions.queryKey, defaultedOptions);\n    } // dependent default values\n\n\n    if (typeof defaultedOptions.refetchOnReconnect === 'undefined') {\n      defaultedOptions.refetchOnReconnect = defaultedOptions.networkMode !== 'always';\n    }\n\n    if (typeof defaultedOptions.useErrorBoundary === 'undefined') {\n      defaultedOptions.useErrorBoundary = !!defaultedOptions.suspense;\n    }\n\n    return defaultedOptions;\n  }\n\n  defaultMutationOptions(options) {\n    if (options != null && options._defaulted) {\n      return options;\n    }\n\n    return { ...this.defaultOptions.mutations,\n      ...this.getMutationDefaults(options == null ? void 0 : options.mutationKey),\n      ...options,\n      _defaulted: true\n    };\n  }\n\n  clear() {\n    this.queryCache.clear();\n    this.mutationCache.clear();\n  }\n\n}\n\n\n//# sourceMappingURL=queryClient.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@tanstack/query-core/build/lib/queryClient.mjs\n"));

/***/ }),

/***/ "./node_modules/@tanstack/query-core/build/lib/queryObserver.mjs":
/*!***********************************************************************!*\
  !*** ./node_modules/@tanstack/query-core/build/lib/queryObserver.mjs ***!
  \***********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   QueryObserver: function() { return /* binding */ QueryObserver; }\n/* harmony export */ });\n/* harmony import */ var _utils_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.mjs */ \"./node_modules/@tanstack/query-core/build/lib/utils.mjs\");\n/* harmony import */ var _notifyManager_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./notifyManager.mjs */ \"./node_modules/@tanstack/query-core/build/lib/notifyManager.mjs\");\n/* harmony import */ var _focusManager_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./focusManager.mjs */ \"./node_modules/@tanstack/query-core/build/lib/focusManager.mjs\");\n/* harmony import */ var _subscribable_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./subscribable.mjs */ \"./node_modules/@tanstack/query-core/build/lib/subscribable.mjs\");\n/* harmony import */ var _retryer_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./retryer.mjs */ \"./node_modules/@tanstack/query-core/build/lib/retryer.mjs\");\n\n\n\n\n\n\nclass QueryObserver extends _subscribable_mjs__WEBPACK_IMPORTED_MODULE_0__.Subscribable {\n  constructor(client, options) {\n    super();\n    this.client = client;\n    this.options = options;\n    this.trackedProps = new Set();\n    this.selectError = null;\n    this.bindMethods();\n    this.setOptions(options);\n  }\n\n  bindMethods() {\n    this.remove = this.remove.bind(this);\n    this.refetch = this.refetch.bind(this);\n  }\n\n  onSubscribe() {\n    if (this.listeners.size === 1) {\n      this.currentQuery.addObserver(this);\n\n      if (shouldFetchOnMount(this.currentQuery, this.options)) {\n        this.executeFetch();\n      }\n\n      this.updateTimers();\n    }\n  }\n\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.destroy();\n    }\n  }\n\n  shouldFetchOnReconnect() {\n    return shouldFetchOn(this.currentQuery, this.options, this.options.refetchOnReconnect);\n  }\n\n  shouldFetchOnWindowFocus() {\n    return shouldFetchOn(this.currentQuery, this.options, this.options.refetchOnWindowFocus);\n  }\n\n  destroy() {\n    this.listeners = new Set();\n    this.clearStaleTimeout();\n    this.clearRefetchInterval();\n    this.currentQuery.removeObserver(this);\n  }\n\n  setOptions(options, notifyOptions) {\n    const prevOptions = this.options;\n    const prevQuery = this.currentQuery;\n    this.options = this.client.defaultQueryOptions(options);\n\n    if ( true && typeof (options == null ? void 0 : options.isDataEqual) !== 'undefined') {\n      this.client.getLogger().error(\"The isDataEqual option has been deprecated and will be removed in the next major version. You can achieve the same functionality by passing a function as the structuralSharing option\");\n    }\n\n    if (!(0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.shallowEqualObjects)(prevOptions, this.options)) {\n      this.client.getQueryCache().notify({\n        type: 'observerOptionsUpdated',\n        query: this.currentQuery,\n        observer: this\n      });\n    }\n\n    if (typeof this.options.enabled !== 'undefined' && typeof this.options.enabled !== 'boolean') {\n      throw new Error('Expected enabled to be a boolean');\n    } // Keep previous query key if the user does not supply one\n\n\n    if (!this.options.queryKey) {\n      this.options.queryKey = prevOptions.queryKey;\n    }\n\n    this.updateQuery();\n    const mounted = this.hasListeners(); // Fetch if there are subscribers\n\n    if (mounted && shouldFetchOptionally(this.currentQuery, prevQuery, this.options, prevOptions)) {\n      this.executeFetch();\n    } // Update result\n\n\n    this.updateResult(notifyOptions); // Update stale interval if needed\n\n    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || this.options.staleTime !== prevOptions.staleTime)) {\n      this.updateStaleTimeout();\n    }\n\n    const nextRefetchInterval = this.computeRefetchInterval(); // Update refetch interval if needed\n\n    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || nextRefetchInterval !== this.currentRefetchInterval)) {\n      this.updateRefetchInterval(nextRefetchInterval);\n    }\n  }\n\n  getOptimisticResult(options) {\n    const query = this.client.getQueryCache().build(this.client, options);\n    const result = this.createResult(query, options);\n\n    if (shouldAssignObserverCurrentProperties(this, result, options)) {\n      // this assigns the optimistic result to the current Observer\n      // because if the query function changes, useQuery will be performing\n      // an effect where it would fetch again.\n      // When the fetch finishes, we perform a deep data cloning in order\n      // to reuse objects references. This deep data clone is performed against\n      // the `observer.currentResult.data` property\n      // When QueryKey changes, we refresh the query and get new `optimistic`\n      // result, while we leave the `observer.currentResult`, so when new data\n      // arrives, it finds the old `observer.currentResult` which is related\n      // to the old QueryKey. Which means that currentResult and selectData are\n      // out of sync already.\n      // To solve this, we move the cursor of the currentResult everytime\n      // an observer reads an optimistic value.\n      // When keeping the previous data, the result doesn't change until new\n      // data arrives.\n      this.currentResult = result;\n      this.currentResultOptions = this.options;\n      this.currentResultState = this.currentQuery.state;\n    }\n\n    return result;\n  }\n\n  getCurrentResult() {\n    return this.currentResult;\n  }\n\n  trackResult(result) {\n    const trackedResult = {};\n    Object.keys(result).forEach(key => {\n      Object.defineProperty(trackedResult, key, {\n        configurable: false,\n        enumerable: true,\n        get: () => {\n          this.trackedProps.add(key);\n          return result[key];\n        }\n      });\n    });\n    return trackedResult;\n  }\n\n  getCurrentQuery() {\n    return this.currentQuery;\n  }\n\n  remove() {\n    this.client.getQueryCache().remove(this.currentQuery);\n  }\n\n  refetch({\n    refetchPage,\n    ...options\n  } = {}) {\n    return this.fetch({ ...options,\n      meta: {\n        refetchPage\n      }\n    });\n  }\n\n  fetchOptimistic(options) {\n    const defaultedOptions = this.client.defaultQueryOptions(options);\n    const query = this.client.getQueryCache().build(this.client, defaultedOptions);\n    query.isFetchingOptimistic = true;\n    return query.fetch().then(() => this.createResult(query, defaultedOptions));\n  }\n\n  fetch(fetchOptions) {\n    var _fetchOptions$cancelR;\n\n    return this.executeFetch({ ...fetchOptions,\n      cancelRefetch: (_fetchOptions$cancelR = fetchOptions.cancelRefetch) != null ? _fetchOptions$cancelR : true\n    }).then(() => {\n      this.updateResult();\n      return this.currentResult;\n    });\n  }\n\n  executeFetch(fetchOptions) {\n    // Make sure we reference the latest query as the current one might have been removed\n    this.updateQuery(); // Fetch\n\n    let promise = this.currentQuery.fetch(this.options, fetchOptions);\n\n    if (!(fetchOptions != null && fetchOptions.throwOnError)) {\n      promise = promise.catch(_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.noop);\n    }\n\n    return promise;\n  }\n\n  updateStaleTimeout() {\n    this.clearStaleTimeout();\n\n    if (_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.isServer || this.currentResult.isStale || !(0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.isValidTimeout)(this.options.staleTime)) {\n      return;\n    }\n\n    const time = (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.timeUntilStale)(this.currentResult.dataUpdatedAt, this.options.staleTime); // The timeout is sometimes triggered 1 ms before the stale time expiration.\n    // To mitigate this issue we always add 1 ms to the timeout.\n\n    const timeout = time + 1;\n    this.staleTimeoutId = setTimeout(() => {\n      if (!this.currentResult.isStale) {\n        this.updateResult();\n      }\n    }, timeout);\n  }\n\n  computeRefetchInterval() {\n    var _this$options$refetch;\n\n    return typeof this.options.refetchInterval === 'function' ? this.options.refetchInterval(this.currentResult.data, this.currentQuery) : (_this$options$refetch = this.options.refetchInterval) != null ? _this$options$refetch : false;\n  }\n\n  updateRefetchInterval(nextInterval) {\n    this.clearRefetchInterval();\n    this.currentRefetchInterval = nextInterval;\n\n    if (_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.isServer || this.options.enabled === false || !(0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.isValidTimeout)(this.currentRefetchInterval) || this.currentRefetchInterval === 0) {\n      return;\n    }\n\n    this.refetchIntervalId = setInterval(() => {\n      if (this.options.refetchIntervalInBackground || _focusManager_mjs__WEBPACK_IMPORTED_MODULE_2__.focusManager.isFocused()) {\n        this.executeFetch();\n      }\n    }, this.currentRefetchInterval);\n  }\n\n  updateTimers() {\n    this.updateStaleTimeout();\n    this.updateRefetchInterval(this.computeRefetchInterval());\n  }\n\n  clearStaleTimeout() {\n    if (this.staleTimeoutId) {\n      clearTimeout(this.staleTimeoutId);\n      this.staleTimeoutId = undefined;\n    }\n  }\n\n  clearRefetchInterval() {\n    if (this.refetchIntervalId) {\n      clearInterval(this.refetchIntervalId);\n      this.refetchIntervalId = undefined;\n    }\n  }\n\n  createResult(query, options) {\n    const prevQuery = this.currentQuery;\n    const prevOptions = this.options;\n    const prevResult = this.currentResult;\n    const prevResultState = this.currentResultState;\n    const prevResultOptions = this.currentResultOptions;\n    const queryChange = query !== prevQuery;\n    const queryInitialState = queryChange ? query.state : this.currentQueryInitialState;\n    const prevQueryResult = queryChange ? this.currentResult : this.previousQueryResult;\n    const {\n      state\n    } = query;\n    let {\n      dataUpdatedAt,\n      error,\n      errorUpdatedAt,\n      fetchStatus,\n      status\n    } = state;\n    let isPreviousData = false;\n    let isPlaceholderData = false;\n    let data; // Optimistically set result in fetching state if needed\n\n    if (options._optimisticResults) {\n      const mounted = this.hasListeners();\n      const fetchOnMount = !mounted && shouldFetchOnMount(query, options);\n      const fetchOptionally = mounted && shouldFetchOptionally(query, prevQuery, options, prevOptions);\n\n      if (fetchOnMount || fetchOptionally) {\n        fetchStatus = (0,_retryer_mjs__WEBPACK_IMPORTED_MODULE_3__.canFetch)(query.options.networkMode) ? 'fetching' : 'paused';\n\n        if (!dataUpdatedAt) {\n          status = 'loading';\n        }\n      }\n\n      if (options._optimisticResults === 'isRestoring') {\n        fetchStatus = 'idle';\n      }\n    } // Keep previous data if needed\n\n\n    if (options.keepPreviousData && !state.dataUpdatedAt && prevQueryResult != null && prevQueryResult.isSuccess && status !== 'error') {\n      data = prevQueryResult.data;\n      dataUpdatedAt = prevQueryResult.dataUpdatedAt;\n      status = prevQueryResult.status;\n      isPreviousData = true;\n    } // Select data if needed\n    else if (options.select && typeof state.data !== 'undefined') {\n      // Memoize select result\n      if (prevResult && state.data === (prevResultState == null ? void 0 : prevResultState.data) && options.select === this.selectFn) {\n        data = this.selectResult;\n      } else {\n        try {\n          this.selectFn = options.select;\n          data = options.select(state.data);\n          data = (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.replaceData)(prevResult == null ? void 0 : prevResult.data, data, options);\n          this.selectResult = data;\n          this.selectError = null;\n        } catch (selectError) {\n          if (true) {\n            this.client.getLogger().error(selectError);\n          }\n\n          this.selectError = selectError;\n        }\n      }\n    } // Use query data\n    else {\n      data = state.data;\n    } // Show placeholder data if needed\n\n\n    if (typeof options.placeholderData !== 'undefined' && typeof data === 'undefined' && status === 'loading') {\n      let placeholderData; // Memoize placeholder data\n\n      if (prevResult != null && prevResult.isPlaceholderData && options.placeholderData === (prevResultOptions == null ? void 0 : prevResultOptions.placeholderData)) {\n        placeholderData = prevResult.data;\n      } else {\n        placeholderData = typeof options.placeholderData === 'function' ? options.placeholderData() : options.placeholderData;\n\n        if (options.select && typeof placeholderData !== 'undefined') {\n          try {\n            placeholderData = options.select(placeholderData);\n            this.selectError = null;\n          } catch (selectError) {\n            if (true) {\n              this.client.getLogger().error(selectError);\n            }\n\n            this.selectError = selectError;\n          }\n        }\n      }\n\n      if (typeof placeholderData !== 'undefined') {\n        status = 'success';\n        data = (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.replaceData)(prevResult == null ? void 0 : prevResult.data, placeholderData, options);\n        isPlaceholderData = true;\n      }\n    }\n\n    if (this.selectError) {\n      error = this.selectError;\n      data = this.selectResult;\n      errorUpdatedAt = Date.now();\n      status = 'error';\n    }\n\n    const isFetching = fetchStatus === 'fetching';\n    const isLoading = status === 'loading';\n    const isError = status === 'error';\n    const result = {\n      status,\n      fetchStatus,\n      isLoading,\n      isSuccess: status === 'success',\n      isError,\n      isInitialLoading: isLoading && isFetching,\n      data,\n      dataUpdatedAt,\n      error,\n      errorUpdatedAt,\n      failureCount: state.fetchFailureCount,\n      failureReason: state.fetchFailureReason,\n      errorUpdateCount: state.errorUpdateCount,\n      isFetched: state.dataUpdateCount > 0 || state.errorUpdateCount > 0,\n      isFetchedAfterMount: state.dataUpdateCount > queryInitialState.dataUpdateCount || state.errorUpdateCount > queryInitialState.errorUpdateCount,\n      isFetching,\n      isRefetching: isFetching && !isLoading,\n      isLoadingError: isError && state.dataUpdatedAt === 0,\n      isPaused: fetchStatus === 'paused',\n      isPlaceholderData,\n      isPreviousData,\n      isRefetchError: isError && state.dataUpdatedAt !== 0,\n      isStale: isStale(query, options),\n      refetch: this.refetch,\n      remove: this.remove\n    };\n    return result;\n  }\n\n  updateResult(notifyOptions) {\n    const prevResult = this.currentResult;\n    const nextResult = this.createResult(this.currentQuery, this.options);\n    this.currentResultState = this.currentQuery.state;\n    this.currentResultOptions = this.options; // Only notify and update result if something has changed\n\n    if ((0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.shallowEqualObjects)(nextResult, prevResult)) {\n      return;\n    }\n\n    this.currentResult = nextResult; // Determine which callbacks to trigger\n\n    const defaultNotifyOptions = {\n      cache: true\n    };\n\n    const shouldNotifyListeners = () => {\n      if (!prevResult) {\n        return true;\n      }\n\n      const {\n        notifyOnChangeProps\n      } = this.options;\n      const notifyOnChangePropsValue = typeof notifyOnChangeProps === 'function' ? notifyOnChangeProps() : notifyOnChangeProps;\n\n      if (notifyOnChangePropsValue === 'all' || !notifyOnChangePropsValue && !this.trackedProps.size) {\n        return true;\n      }\n\n      const includedProps = new Set(notifyOnChangePropsValue != null ? notifyOnChangePropsValue : this.trackedProps);\n\n      if (this.options.useErrorBoundary) {\n        includedProps.add('error');\n      }\n\n      return Object.keys(this.currentResult).some(key => {\n        const typedKey = key;\n        const changed = this.currentResult[typedKey] !== prevResult[typedKey];\n        return changed && includedProps.has(typedKey);\n      });\n    };\n\n    if ((notifyOptions == null ? void 0 : notifyOptions.listeners) !== false && shouldNotifyListeners()) {\n      defaultNotifyOptions.listeners = true;\n    }\n\n    this.notify({ ...defaultNotifyOptions,\n      ...notifyOptions\n    });\n  }\n\n  updateQuery() {\n    const query = this.client.getQueryCache().build(this.client, this.options);\n\n    if (query === this.currentQuery) {\n      return;\n    }\n\n    const prevQuery = this.currentQuery;\n    this.currentQuery = query;\n    this.currentQueryInitialState = query.state;\n    this.previousQueryResult = this.currentResult;\n\n    if (this.hasListeners()) {\n      prevQuery == null ? void 0 : prevQuery.removeObserver(this);\n      query.addObserver(this);\n    }\n  }\n\n  onQueryUpdate(action) {\n    const notifyOptions = {};\n\n    if (action.type === 'success') {\n      notifyOptions.onSuccess = !action.manual;\n    } else if (action.type === 'error' && !(0,_retryer_mjs__WEBPACK_IMPORTED_MODULE_3__.isCancelledError)(action.error)) {\n      notifyOptions.onError = true;\n    }\n\n    this.updateResult(notifyOptions);\n\n    if (this.hasListeners()) {\n      this.updateTimers();\n    }\n  }\n\n  notify(notifyOptions) {\n    _notifyManager_mjs__WEBPACK_IMPORTED_MODULE_4__.notifyManager.batch(() => {\n      // First trigger the configuration callbacks\n      if (notifyOptions.onSuccess) {\n        var _this$options$onSucce, _this$options, _this$options$onSettl, _this$options2;\n\n        (_this$options$onSucce = (_this$options = this.options).onSuccess) == null ? void 0 : _this$options$onSucce.call(_this$options, this.currentResult.data);\n        (_this$options$onSettl = (_this$options2 = this.options).onSettled) == null ? void 0 : _this$options$onSettl.call(_this$options2, this.currentResult.data, null);\n      } else if (notifyOptions.onError) {\n        var _this$options$onError, _this$options3, _this$options$onSettl2, _this$options4;\n\n        (_this$options$onError = (_this$options3 = this.options).onError) == null ? void 0 : _this$options$onError.call(_this$options3, this.currentResult.error);\n        (_this$options$onSettl2 = (_this$options4 = this.options).onSettled) == null ? void 0 : _this$options$onSettl2.call(_this$options4, undefined, this.currentResult.error);\n      } // Then trigger the listeners\n\n\n      if (notifyOptions.listeners) {\n        this.listeners.forEach(({\n          listener\n        }) => {\n          listener(this.currentResult);\n        });\n      } // Then the cache listeners\n\n\n      if (notifyOptions.cache) {\n        this.client.getQueryCache().notify({\n          query: this.currentQuery,\n          type: 'observerResultsUpdated'\n        });\n      }\n    });\n  }\n\n}\n\nfunction shouldLoadOnMount(query, options) {\n  return options.enabled !== false && !query.state.dataUpdatedAt && !(query.state.status === 'error' && options.retryOnMount === false);\n}\n\nfunction shouldFetchOnMount(query, options) {\n  return shouldLoadOnMount(query, options) || query.state.dataUpdatedAt > 0 && shouldFetchOn(query, options, options.refetchOnMount);\n}\n\nfunction shouldFetchOn(query, options, field) {\n  if (options.enabled !== false) {\n    const value = typeof field === 'function' ? field(query) : field;\n    return value === 'always' || value !== false && isStale(query, options);\n  }\n\n  return false;\n}\n\nfunction shouldFetchOptionally(query, prevQuery, options, prevOptions) {\n  return options.enabled !== false && (query !== prevQuery || prevOptions.enabled === false) && (!options.suspense || query.state.status !== 'error') && isStale(query, options);\n}\n\nfunction isStale(query, options) {\n  return query.isStaleByTime(options.staleTime);\n} // this function would decide if we will update the observer's 'current'\n// properties after an optimistic reading via getOptimisticResult\n\n\nfunction shouldAssignObserverCurrentProperties(observer, optimisticResult, options) {\n  // it is important to keep this condition like this for three reasons:\n  // 1. It will get removed in the v5\n  // 2. it reads: don't update the properties if we want to keep the previous\n  // data.\n  // 3. The opposite condition (!options.keepPreviousData) would fallthrough\n  // and will result in a bad decision\n  if (options.keepPreviousData) {\n    return false;\n  } // this means we want to put some placeholder data when pending and queryKey\n  // changed.\n\n\n  if (options.placeholderData !== undefined) {\n    // re-assign properties only if current data is placeholder data\n    // which means that data did not arrive yet, so, if there is some cached data\n    // we need to \"prepare\" to receive it\n    return optimisticResult.isPlaceholderData;\n  } // if the newly created result isn't what the observer is holding as current,\n  // then we'll need to update the properties as well\n\n\n  if (!(0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.shallowEqualObjects)(observer.getCurrentResult(), optimisticResult)) {\n    return true;\n  } // basically, just keep previous properties if nothing changed\n\n\n  return false;\n}\n\n\n//# sourceMappingURL=queryObserver.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@tanstack/query-core/build/lib/queryObserver.mjs\n"));

/***/ }),

/***/ "./node_modules/@tanstack/query-core/build/lib/removable.mjs":
/*!*******************************************************************!*\
  !*** ./node_modules/@tanstack/query-core/build/lib/removable.mjs ***!
  \*******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Removable: function() { return /* binding */ Removable; }\n/* harmony export */ });\n/* harmony import */ var _utils_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.mjs */ \"./node_modules/@tanstack/query-core/build/lib/utils.mjs\");\n\n\nclass Removable {\n  destroy() {\n    this.clearGcTimeout();\n  }\n\n  scheduleGc() {\n    this.clearGcTimeout();\n\n    if ((0,_utils_mjs__WEBPACK_IMPORTED_MODULE_0__.isValidTimeout)(this.cacheTime)) {\n      this.gcTimeout = setTimeout(() => {\n        this.optionalRemove();\n      }, this.cacheTime);\n    }\n  }\n\n  updateCacheTime(newCacheTime) {\n    // Default to 5 minutes (Infinity for server-side) if no cache time is set\n    this.cacheTime = Math.max(this.cacheTime || 0, newCacheTime != null ? newCacheTime : _utils_mjs__WEBPACK_IMPORTED_MODULE_0__.isServer ? Infinity : 5 * 60 * 1000);\n  }\n\n  clearGcTimeout() {\n    if (this.gcTimeout) {\n      clearTimeout(this.gcTimeout);\n      this.gcTimeout = undefined;\n    }\n  }\n\n}\n\n\n//# sourceMappingURL=removable.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3F1ZXJ5LWNvcmUvYnVpbGQvbGliL3JlbW92YWJsZS5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBdUQ7O0FBRXZEO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUEsUUFBUSwwREFBYztBQUN0QjtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLHlGQUF5RixnREFBUTtBQUNqRzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRXFCO0FBQ3JCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AdGFuc3RhY2svcXVlcnktY29yZS9idWlsZC9saWIvcmVtb3ZhYmxlLm1qcz9kNWIwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlzVmFsaWRUaW1lb3V0LCBpc1NlcnZlciB9IGZyb20gJy4vdXRpbHMubWpzJztcblxuY2xhc3MgUmVtb3ZhYmxlIHtcbiAgZGVzdHJveSgpIHtcbiAgICB0aGlzLmNsZWFyR2NUaW1lb3V0KCk7XG4gIH1cblxuICBzY2hlZHVsZUdjKCkge1xuICAgIHRoaXMuY2xlYXJHY1RpbWVvdXQoKTtcblxuICAgIGlmIChpc1ZhbGlkVGltZW91dCh0aGlzLmNhY2hlVGltZSkpIHtcbiAgICAgIHRoaXMuZ2NUaW1lb3V0ID0gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIHRoaXMub3B0aW9uYWxSZW1vdmUoKTtcbiAgICAgIH0sIHRoaXMuY2FjaGVUaW1lKTtcbiAgICB9XG4gIH1cblxuICB1cGRhdGVDYWNoZVRpbWUobmV3Q2FjaGVUaW1lKSB7XG4gICAgLy8gRGVmYXVsdCB0byA1IG1pbnV0ZXMgKEluZmluaXR5IGZvciBzZXJ2ZXItc2lkZSkgaWYgbm8gY2FjaGUgdGltZSBpcyBzZXRcbiAgICB0aGlzLmNhY2hlVGltZSA9IE1hdGgubWF4KHRoaXMuY2FjaGVUaW1lIHx8IDAsIG5ld0NhY2hlVGltZSAhPSBudWxsID8gbmV3Q2FjaGVUaW1lIDogaXNTZXJ2ZXIgPyBJbmZpbml0eSA6IDUgKiA2MCAqIDEwMDApO1xuICB9XG5cbiAgY2xlYXJHY1RpbWVvdXQoKSB7XG4gICAgaWYgKHRoaXMuZ2NUaW1lb3V0KSB7XG4gICAgICBjbGVhclRpbWVvdXQodGhpcy5nY1RpbWVvdXQpO1xuICAgICAgdGhpcy5nY1RpbWVvdXQgPSB1bmRlZmluZWQ7XG4gICAgfVxuICB9XG5cbn1cblxuZXhwb3J0IHsgUmVtb3ZhYmxlIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZW1vdmFibGUubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@tanstack/query-core/build/lib/removable.mjs\n"));

/***/ }),

/***/ "./node_modules/@tanstack/query-core/build/lib/retryer.mjs":
/*!*****************************************************************!*\
  !*** ./node_modules/@tanstack/query-core/build/lib/retryer.mjs ***!
  \*****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CancelledError: function() { return /* binding */ CancelledError; },\n/* harmony export */   canFetch: function() { return /* binding */ canFetch; },\n/* harmony export */   createRetryer: function() { return /* binding */ createRetryer; },\n/* harmony export */   isCancelledError: function() { return /* binding */ isCancelledError; }\n/* harmony export */ });\n/* harmony import */ var _focusManager_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./focusManager.mjs */ \"./node_modules/@tanstack/query-core/build/lib/focusManager.mjs\");\n/* harmony import */ var _onlineManager_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./onlineManager.mjs */ \"./node_modules/@tanstack/query-core/build/lib/onlineManager.mjs\");\n/* harmony import */ var _utils_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils.mjs */ \"./node_modules/@tanstack/query-core/build/lib/utils.mjs\");\n\n\n\n\nfunction defaultRetryDelay(failureCount) {\n  return Math.min(1000 * 2 ** failureCount, 30000);\n}\n\nfunction canFetch(networkMode) {\n  return (networkMode != null ? networkMode : 'online') === 'online' ? _onlineManager_mjs__WEBPACK_IMPORTED_MODULE_0__.onlineManager.isOnline() : true;\n}\nclass CancelledError {\n  constructor(options) {\n    this.revert = options == null ? void 0 : options.revert;\n    this.silent = options == null ? void 0 : options.silent;\n  }\n\n}\nfunction isCancelledError(value) {\n  return value instanceof CancelledError;\n}\nfunction createRetryer(config) {\n  let isRetryCancelled = false;\n  let failureCount = 0;\n  let isResolved = false;\n  let continueFn;\n  let promiseResolve;\n  let promiseReject;\n  const promise = new Promise((outerResolve, outerReject) => {\n    promiseResolve = outerResolve;\n    promiseReject = outerReject;\n  });\n\n  const cancel = cancelOptions => {\n    if (!isResolved) {\n      reject(new CancelledError(cancelOptions));\n      config.abort == null ? void 0 : config.abort();\n    }\n  };\n\n  const cancelRetry = () => {\n    isRetryCancelled = true;\n  };\n\n  const continueRetry = () => {\n    isRetryCancelled = false;\n  };\n\n  const shouldPause = () => !_focusManager_mjs__WEBPACK_IMPORTED_MODULE_1__.focusManager.isFocused() || config.networkMode !== 'always' && !_onlineManager_mjs__WEBPACK_IMPORTED_MODULE_0__.onlineManager.isOnline();\n\n  const resolve = value => {\n    if (!isResolved) {\n      isResolved = true;\n      config.onSuccess == null ? void 0 : config.onSuccess(value);\n      continueFn == null ? void 0 : continueFn();\n      promiseResolve(value);\n    }\n  };\n\n  const reject = value => {\n    if (!isResolved) {\n      isResolved = true;\n      config.onError == null ? void 0 : config.onError(value);\n      continueFn == null ? void 0 : continueFn();\n      promiseReject(value);\n    }\n  };\n\n  const pause = () => {\n    return new Promise(continueResolve => {\n      continueFn = value => {\n        const canContinue = isResolved || !shouldPause();\n\n        if (canContinue) {\n          continueResolve(value);\n        }\n\n        return canContinue;\n      };\n\n      config.onPause == null ? void 0 : config.onPause();\n    }).then(() => {\n      continueFn = undefined;\n\n      if (!isResolved) {\n        config.onContinue == null ? void 0 : config.onContinue();\n      }\n    });\n  }; // Create loop function\n\n\n  const run = () => {\n    // Do nothing if already resolved\n    if (isResolved) {\n      return;\n    }\n\n    let promiseOrValue; // Execute query\n\n    try {\n      promiseOrValue = config.fn();\n    } catch (error) {\n      promiseOrValue = Promise.reject(error);\n    }\n\n    Promise.resolve(promiseOrValue).then(resolve).catch(error => {\n      var _config$retry, _config$retryDelay;\n\n      // Stop if the fetch is already resolved\n      if (isResolved) {\n        return;\n      } // Do we need to retry the request?\n\n\n      const retry = (_config$retry = config.retry) != null ? _config$retry : 3;\n      const retryDelay = (_config$retryDelay = config.retryDelay) != null ? _config$retryDelay : defaultRetryDelay;\n      const delay = typeof retryDelay === 'function' ? retryDelay(failureCount, error) : retryDelay;\n      const shouldRetry = retry === true || typeof retry === 'number' && failureCount < retry || typeof retry === 'function' && retry(failureCount, error);\n\n      if (isRetryCancelled || !shouldRetry) {\n        // We are done if the query does not need to be retried\n        reject(error);\n        return;\n      }\n\n      failureCount++; // Notify on fail\n\n      config.onFail == null ? void 0 : config.onFail(failureCount, error); // Delay\n\n      (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.sleep)(delay) // Pause if the document is not visible or when the device is offline\n      .then(() => {\n        if (shouldPause()) {\n          return pause();\n        }\n\n        return;\n      }).then(() => {\n        if (isRetryCancelled) {\n          reject(error);\n        } else {\n          run();\n        }\n      });\n    });\n  }; // Start loop\n\n\n  if (canFetch(config.networkMode)) {\n    run();\n  } else {\n    pause().then(run);\n  }\n\n  return {\n    promise,\n    cancel,\n    continue: () => {\n      const didContinue = continueFn == null ? void 0 : continueFn();\n      return didContinue ? promise : Promise.resolve();\n    },\n    cancelRetry,\n    continueRetry\n  };\n}\n\n\n//# sourceMappingURL=retryer.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3F1ZXJ5LWNvcmUvYnVpbGQvbGliL3JldHJ5ZXIubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBa0Q7QUFDRTtBQUNoQjs7QUFFcEM7QUFDQTtBQUNBOztBQUVBO0FBQ0EsdUVBQXVFLDZEQUFhO0FBQ3BGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSw2QkFBNkIsMkRBQVksb0RBQW9ELDZEQUFhOztBQUUxRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSxLQUFLO0FBQ0w7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEtBQUs7OztBQUdMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsd0JBQXdCOztBQUV4QjtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxRQUFROzs7QUFHUjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLHNCQUFzQjs7QUFFdEIsMkVBQTJFOztBQUUzRSxNQUFNLGlEQUFLO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTCxLQUFLOzs7QUFHTDtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBOztBQUVxRTtBQUNyRSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3F1ZXJ5LWNvcmUvYnVpbGQvbGliL3JldHJ5ZXIubWpzPzg5YWEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZm9jdXNNYW5hZ2VyIH0gZnJvbSAnLi9mb2N1c01hbmFnZXIubWpzJztcbmltcG9ydCB7IG9ubGluZU1hbmFnZXIgfSBmcm9tICcuL29ubGluZU1hbmFnZXIubWpzJztcbmltcG9ydCB7IHNsZWVwIH0gZnJvbSAnLi91dGlscy5tanMnO1xuXG5mdW5jdGlvbiBkZWZhdWx0UmV0cnlEZWxheShmYWlsdXJlQ291bnQpIHtcbiAgcmV0dXJuIE1hdGgubWluKDEwMDAgKiAyICoqIGZhaWx1cmVDb3VudCwgMzAwMDApO1xufVxuXG5mdW5jdGlvbiBjYW5GZXRjaChuZXR3b3JrTW9kZSkge1xuICByZXR1cm4gKG5ldHdvcmtNb2RlICE9IG51bGwgPyBuZXR3b3JrTW9kZSA6ICdvbmxpbmUnKSA9PT0gJ29ubGluZScgPyBvbmxpbmVNYW5hZ2VyLmlzT25saW5lKCkgOiB0cnVlO1xufVxuY2xhc3MgQ2FuY2VsbGVkRXJyb3Ige1xuICBjb25zdHJ1Y3RvcihvcHRpb25zKSB7XG4gICAgdGhpcy5yZXZlcnQgPSBvcHRpb25zID09IG51bGwgPyB2b2lkIDAgOiBvcHRpb25zLnJldmVydDtcbiAgICB0aGlzLnNpbGVudCA9IG9wdGlvbnMgPT0gbnVsbCA/IHZvaWQgMCA6IG9wdGlvbnMuc2lsZW50O1xuICB9XG5cbn1cbmZ1bmN0aW9uIGlzQ2FuY2VsbGVkRXJyb3IodmFsdWUpIHtcbiAgcmV0dXJuIHZhbHVlIGluc3RhbmNlb2YgQ2FuY2VsbGVkRXJyb3I7XG59XG5mdW5jdGlvbiBjcmVhdGVSZXRyeWVyKGNvbmZpZykge1xuICBsZXQgaXNSZXRyeUNhbmNlbGxlZCA9IGZhbHNlO1xuICBsZXQgZmFpbHVyZUNvdW50ID0gMDtcbiAgbGV0IGlzUmVzb2x2ZWQgPSBmYWxzZTtcbiAgbGV0IGNvbnRpbnVlRm47XG4gIGxldCBwcm9taXNlUmVzb2x2ZTtcbiAgbGV0IHByb21pc2VSZWplY3Q7XG4gIGNvbnN0IHByb21pc2UgPSBuZXcgUHJvbWlzZSgob3V0ZXJSZXNvbHZlLCBvdXRlclJlamVjdCkgPT4ge1xuICAgIHByb21pc2VSZXNvbHZlID0gb3V0ZXJSZXNvbHZlO1xuICAgIHByb21pc2VSZWplY3QgPSBvdXRlclJlamVjdDtcbiAgfSk7XG5cbiAgY29uc3QgY2FuY2VsID0gY2FuY2VsT3B0aW9ucyA9PiB7XG4gICAgaWYgKCFpc1Jlc29sdmVkKSB7XG4gICAgICByZWplY3QobmV3IENhbmNlbGxlZEVycm9yKGNhbmNlbE9wdGlvbnMpKTtcbiAgICAgIGNvbmZpZy5hYm9ydCA9PSBudWxsID8gdm9pZCAwIDogY29uZmlnLmFib3J0KCk7XG4gICAgfVxuICB9O1xuXG4gIGNvbnN0IGNhbmNlbFJldHJ5ID0gKCkgPT4ge1xuICAgIGlzUmV0cnlDYW5jZWxsZWQgPSB0cnVlO1xuICB9O1xuXG4gIGNvbnN0IGNvbnRpbnVlUmV0cnkgPSAoKSA9PiB7XG4gICAgaXNSZXRyeUNhbmNlbGxlZCA9IGZhbHNlO1xuICB9O1xuXG4gIGNvbnN0IHNob3VsZFBhdXNlID0gKCkgPT4gIWZvY3VzTWFuYWdlci5pc0ZvY3VzZWQoKSB8fCBjb25maWcubmV0d29ya01vZGUgIT09ICdhbHdheXMnICYmICFvbmxpbmVNYW5hZ2VyLmlzT25saW5lKCk7XG5cbiAgY29uc3QgcmVzb2x2ZSA9IHZhbHVlID0+IHtcbiAgICBpZiAoIWlzUmVzb2x2ZWQpIHtcbiAgICAgIGlzUmVzb2x2ZWQgPSB0cnVlO1xuICAgICAgY29uZmlnLm9uU3VjY2VzcyA9PSBudWxsID8gdm9pZCAwIDogY29uZmlnLm9uU3VjY2Vzcyh2YWx1ZSk7XG4gICAgICBjb250aW51ZUZuID09IG51bGwgPyB2b2lkIDAgOiBjb250aW51ZUZuKCk7XG4gICAgICBwcm9taXNlUmVzb2x2ZSh2YWx1ZSk7XG4gICAgfVxuICB9O1xuXG4gIGNvbnN0IHJlamVjdCA9IHZhbHVlID0+IHtcbiAgICBpZiAoIWlzUmVzb2x2ZWQpIHtcbiAgICAgIGlzUmVzb2x2ZWQgPSB0cnVlO1xuICAgICAgY29uZmlnLm9uRXJyb3IgPT0gbnVsbCA/IHZvaWQgMCA6IGNvbmZpZy5vbkVycm9yKHZhbHVlKTtcbiAgICAgIGNvbnRpbnVlRm4gPT0gbnVsbCA/IHZvaWQgMCA6IGNvbnRpbnVlRm4oKTtcbiAgICAgIHByb21pc2VSZWplY3QodmFsdWUpO1xuICAgIH1cbiAgfTtcblxuICBjb25zdCBwYXVzZSA9ICgpID0+IHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoY29udGludWVSZXNvbHZlID0+IHtcbiAgICAgIGNvbnRpbnVlRm4gPSB2YWx1ZSA9PiB7XG4gICAgICAgIGNvbnN0IGNhbkNvbnRpbnVlID0gaXNSZXNvbHZlZCB8fCAhc2hvdWxkUGF1c2UoKTtcblxuICAgICAgICBpZiAoY2FuQ29udGludWUpIHtcbiAgICAgICAgICBjb250aW51ZVJlc29sdmUodmFsdWUpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGNhbkNvbnRpbnVlO1xuICAgICAgfTtcblxuICAgICAgY29uZmlnLm9uUGF1c2UgPT0gbnVsbCA/IHZvaWQgMCA6IGNvbmZpZy5vblBhdXNlKCk7XG4gICAgfSkudGhlbigoKSA9PiB7XG4gICAgICBjb250aW51ZUZuID0gdW5kZWZpbmVkO1xuXG4gICAgICBpZiAoIWlzUmVzb2x2ZWQpIHtcbiAgICAgICAgY29uZmlnLm9uQ29udGludWUgPT0gbnVsbCA/IHZvaWQgMCA6IGNvbmZpZy5vbkNvbnRpbnVlKCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH07IC8vIENyZWF0ZSBsb29wIGZ1bmN0aW9uXG5cblxuICBjb25zdCBydW4gPSAoKSA9PiB7XG4gICAgLy8gRG8gbm90aGluZyBpZiBhbHJlYWR5IHJlc29sdmVkXG4gICAgaWYgKGlzUmVzb2x2ZWQpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBsZXQgcHJvbWlzZU9yVmFsdWU7IC8vIEV4ZWN1dGUgcXVlcnlcblxuICAgIHRyeSB7XG4gICAgICBwcm9taXNlT3JWYWx1ZSA9IGNvbmZpZy5mbigpO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBwcm9taXNlT3JWYWx1ZSA9IFByb21pc2UucmVqZWN0KGVycm9yKTtcbiAgICB9XG5cbiAgICBQcm9taXNlLnJlc29sdmUocHJvbWlzZU9yVmFsdWUpLnRoZW4ocmVzb2x2ZSkuY2F0Y2goZXJyb3IgPT4ge1xuICAgICAgdmFyIF9jb25maWckcmV0cnksIF9jb25maWckcmV0cnlEZWxheTtcblxuICAgICAgLy8gU3RvcCBpZiB0aGUgZmV0Y2ggaXMgYWxyZWFkeSByZXNvbHZlZFxuICAgICAgaWYgKGlzUmVzb2x2ZWQpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfSAvLyBEbyB3ZSBuZWVkIHRvIHJldHJ5IHRoZSByZXF1ZXN0P1xuXG5cbiAgICAgIGNvbnN0IHJldHJ5ID0gKF9jb25maWckcmV0cnkgPSBjb25maWcucmV0cnkpICE9IG51bGwgPyBfY29uZmlnJHJldHJ5IDogMztcbiAgICAgIGNvbnN0IHJldHJ5RGVsYXkgPSAoX2NvbmZpZyRyZXRyeURlbGF5ID0gY29uZmlnLnJldHJ5RGVsYXkpICE9IG51bGwgPyBfY29uZmlnJHJldHJ5RGVsYXkgOiBkZWZhdWx0UmV0cnlEZWxheTtcbiAgICAgIGNvbnN0IGRlbGF5ID0gdHlwZW9mIHJldHJ5RGVsYXkgPT09ICdmdW5jdGlvbicgPyByZXRyeURlbGF5KGZhaWx1cmVDb3VudCwgZXJyb3IpIDogcmV0cnlEZWxheTtcbiAgICAgIGNvbnN0IHNob3VsZFJldHJ5ID0gcmV0cnkgPT09IHRydWUgfHwgdHlwZW9mIHJldHJ5ID09PSAnbnVtYmVyJyAmJiBmYWlsdXJlQ291bnQgPCByZXRyeSB8fCB0eXBlb2YgcmV0cnkgPT09ICdmdW5jdGlvbicgJiYgcmV0cnkoZmFpbHVyZUNvdW50LCBlcnJvcik7XG5cbiAgICAgIGlmIChpc1JldHJ5Q2FuY2VsbGVkIHx8ICFzaG91bGRSZXRyeSkge1xuICAgICAgICAvLyBXZSBhcmUgZG9uZSBpZiB0aGUgcXVlcnkgZG9lcyBub3QgbmVlZCB0byBiZSByZXRyaWVkXG4gICAgICAgIHJlamVjdChlcnJvcik7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgZmFpbHVyZUNvdW50Kys7IC8vIE5vdGlmeSBvbiBmYWlsXG5cbiAgICAgIGNvbmZpZy5vbkZhaWwgPT0gbnVsbCA/IHZvaWQgMCA6IGNvbmZpZy5vbkZhaWwoZmFpbHVyZUNvdW50LCBlcnJvcik7IC8vIERlbGF5XG5cbiAgICAgIHNsZWVwKGRlbGF5KSAvLyBQYXVzZSBpZiB0aGUgZG9jdW1lbnQgaXMgbm90IHZpc2libGUgb3Igd2hlbiB0aGUgZGV2aWNlIGlzIG9mZmxpbmVcbiAgICAgIC50aGVuKCgpID0+IHtcbiAgICAgICAgaWYgKHNob3VsZFBhdXNlKCkpIHtcbiAgICAgICAgICByZXR1cm4gcGF1c2UoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybjtcbiAgICAgIH0pLnRoZW4oKCkgPT4ge1xuICAgICAgICBpZiAoaXNSZXRyeUNhbmNlbGxlZCkge1xuICAgICAgICAgIHJlamVjdChlcnJvcik7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcnVuKCk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH0pO1xuICB9OyAvLyBTdGFydCBsb29wXG5cblxuICBpZiAoY2FuRmV0Y2goY29uZmlnLm5ldHdvcmtNb2RlKSkge1xuICAgIHJ1bigpO1xuICB9IGVsc2Uge1xuICAgIHBhdXNlKCkudGhlbihydW4pO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBwcm9taXNlLFxuICAgIGNhbmNlbCxcbiAgICBjb250aW51ZTogKCkgPT4ge1xuICAgICAgY29uc3QgZGlkQ29udGludWUgPSBjb250aW51ZUZuID09IG51bGwgPyB2b2lkIDAgOiBjb250aW51ZUZuKCk7XG4gICAgICByZXR1cm4gZGlkQ29udGludWUgPyBwcm9taXNlIDogUHJvbWlzZS5yZXNvbHZlKCk7XG4gICAgfSxcbiAgICBjYW5jZWxSZXRyeSxcbiAgICBjb250aW51ZVJldHJ5XG4gIH07XG59XG5cbmV4cG9ydCB7IENhbmNlbGxlZEVycm9yLCBjYW5GZXRjaCwgY3JlYXRlUmV0cnllciwgaXNDYW5jZWxsZWRFcnJvciB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmV0cnllci5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@tanstack/query-core/build/lib/retryer.mjs\n"));

/***/ }),

/***/ "./node_modules/@tanstack/query-core/build/lib/subscribable.mjs":
/*!**********************************************************************!*\
  !*** ./node_modules/@tanstack/query-core/build/lib/subscribable.mjs ***!
  \**********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Subscribable: function() { return /* binding */ Subscribable; }\n/* harmony export */ });\nclass Subscribable {\n  constructor() {\n    this.listeners = new Set();\n    this.subscribe = this.subscribe.bind(this);\n  }\n\n  subscribe(listener) {\n    const identity = {\n      listener\n    };\n    this.listeners.add(identity);\n    this.onSubscribe();\n    return () => {\n      this.listeners.delete(identity);\n      this.onUnsubscribe();\n    };\n  }\n\n  hasListeners() {\n    return this.listeners.size > 0;\n  }\n\n  onSubscribe() {// Do nothing\n  }\n\n  onUnsubscribe() {// Do nothing\n  }\n\n}\n\n\n//# sourceMappingURL=subscribable.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3F1ZXJ5LWNvcmUvYnVpbGQvbGliL3N1YnNjcmliYWJsZS5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsaUJBQWlCO0FBQ2pCOztBQUVBLG1CQUFtQjtBQUNuQjs7QUFFQTs7QUFFd0I7QUFDeEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9xdWVyeS1jb3JlL2J1aWxkL2xpYi9zdWJzY3JpYmFibGUubWpzPzE1MjgiXSwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgU3Vic2NyaWJhYmxlIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy5saXN0ZW5lcnMgPSBuZXcgU2V0KCk7XG4gICAgdGhpcy5zdWJzY3JpYmUgPSB0aGlzLnN1YnNjcmliZS5iaW5kKHRoaXMpO1xuICB9XG5cbiAgc3Vic2NyaWJlKGxpc3RlbmVyKSB7XG4gICAgY29uc3QgaWRlbnRpdHkgPSB7XG4gICAgICBsaXN0ZW5lclxuICAgIH07XG4gICAgdGhpcy5saXN0ZW5lcnMuYWRkKGlkZW50aXR5KTtcbiAgICB0aGlzLm9uU3Vic2NyaWJlKCk7XG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIHRoaXMubGlzdGVuZXJzLmRlbGV0ZShpZGVudGl0eSk7XG4gICAgICB0aGlzLm9uVW5zdWJzY3JpYmUoKTtcbiAgICB9O1xuICB9XG5cbiAgaGFzTGlzdGVuZXJzKCkge1xuICAgIHJldHVybiB0aGlzLmxpc3RlbmVycy5zaXplID4gMDtcbiAgfVxuXG4gIG9uU3Vic2NyaWJlKCkgey8vIERvIG5vdGhpbmdcbiAgfVxuXG4gIG9uVW5zdWJzY3JpYmUoKSB7Ly8gRG8gbm90aGluZ1xuICB9XG5cbn1cblxuZXhwb3J0IHsgU3Vic2NyaWJhYmxlIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zdWJzY3JpYmFibGUubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@tanstack/query-core/build/lib/subscribable.mjs\n"));

/***/ }),

/***/ "./node_modules/@tanstack/query-core/build/lib/utils.mjs":
/*!***************************************************************!*\
  !*** ./node_modules/@tanstack/query-core/build/lib/utils.mjs ***!
  \***************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   difference: function() { return /* binding */ difference; },\n/* harmony export */   functionalUpdate: function() { return /* binding */ functionalUpdate; },\n/* harmony export */   getAbortController: function() { return /* binding */ getAbortController; },\n/* harmony export */   hashQueryKey: function() { return /* binding */ hashQueryKey; },\n/* harmony export */   hashQueryKeyByOptions: function() { return /* binding */ hashQueryKeyByOptions; },\n/* harmony export */   isError: function() { return /* binding */ isError; },\n/* harmony export */   isPlainArray: function() { return /* binding */ isPlainArray; },\n/* harmony export */   isPlainObject: function() { return /* binding */ isPlainObject; },\n/* harmony export */   isQueryKey: function() { return /* binding */ isQueryKey; },\n/* harmony export */   isServer: function() { return /* binding */ isServer; },\n/* harmony export */   isValidTimeout: function() { return /* binding */ isValidTimeout; },\n/* harmony export */   matchMutation: function() { return /* binding */ matchMutation; },\n/* harmony export */   matchQuery: function() { return /* binding */ matchQuery; },\n/* harmony export */   noop: function() { return /* binding */ noop; },\n/* harmony export */   parseFilterArgs: function() { return /* binding */ parseFilterArgs; },\n/* harmony export */   parseMutationArgs: function() { return /* binding */ parseMutationArgs; },\n/* harmony export */   parseMutationFilterArgs: function() { return /* binding */ parseMutationFilterArgs; },\n/* harmony export */   parseQueryArgs: function() { return /* binding */ parseQueryArgs; },\n/* harmony export */   partialDeepEqual: function() { return /* binding */ partialDeepEqual; },\n/* harmony export */   partialMatchKey: function() { return /* binding */ partialMatchKey; },\n/* harmony export */   replaceAt: function() { return /* binding */ replaceAt; },\n/* harmony export */   replaceData: function() { return /* binding */ replaceData; },\n/* harmony export */   replaceEqualDeep: function() { return /* binding */ replaceEqualDeep; },\n/* harmony export */   scheduleMicrotask: function() { return /* binding */ scheduleMicrotask; },\n/* harmony export */   shallowEqualObjects: function() { return /* binding */ shallowEqualObjects; },\n/* harmony export */   sleep: function() { return /* binding */ sleep; },\n/* harmony export */   timeUntilStale: function() { return /* binding */ timeUntilStale; }\n/* harmony export */ });\n// TYPES\n// UTILS\nconst isServer = typeof window === 'undefined' || 'Deno' in window;\nfunction noop() {\n  return undefined;\n}\nfunction functionalUpdate(updater, input) {\n  return typeof updater === 'function' ? updater(input) : updater;\n}\nfunction isValidTimeout(value) {\n  return typeof value === 'number' && value >= 0 && value !== Infinity;\n}\nfunction difference(array1, array2) {\n  return array1.filter(x => !array2.includes(x));\n}\nfunction replaceAt(array, index, value) {\n  const copy = array.slice(0);\n  copy[index] = value;\n  return copy;\n}\nfunction timeUntilStale(updatedAt, staleTime) {\n  return Math.max(updatedAt + (staleTime || 0) - Date.now(), 0);\n}\nfunction parseQueryArgs(arg1, arg2, arg3) {\n  if (!isQueryKey(arg1)) {\n    return arg1;\n  }\n\n  if (typeof arg2 === 'function') {\n    return { ...arg3,\n      queryKey: arg1,\n      queryFn: arg2\n    };\n  }\n\n  return { ...arg2,\n    queryKey: arg1\n  };\n}\nfunction parseMutationArgs(arg1, arg2, arg3) {\n  if (isQueryKey(arg1)) {\n    if (typeof arg2 === 'function') {\n      return { ...arg3,\n        mutationKey: arg1,\n        mutationFn: arg2\n      };\n    }\n\n    return { ...arg2,\n      mutationKey: arg1\n    };\n  }\n\n  if (typeof arg1 === 'function') {\n    return { ...arg2,\n      mutationFn: arg1\n    };\n  }\n\n  return { ...arg1\n  };\n}\nfunction parseFilterArgs(arg1, arg2, arg3) {\n  return isQueryKey(arg1) ? [{ ...arg2,\n    queryKey: arg1\n  }, arg3] : [arg1 || {}, arg2];\n}\nfunction parseMutationFilterArgs(arg1, arg2, arg3) {\n  return isQueryKey(arg1) ? [{ ...arg2,\n    mutationKey: arg1\n  }, arg3] : [arg1 || {}, arg2];\n}\nfunction matchQuery(filters, query) {\n  const {\n    type = 'all',\n    exact,\n    fetchStatus,\n    predicate,\n    queryKey,\n    stale\n  } = filters;\n\n  if (isQueryKey(queryKey)) {\n    if (exact) {\n      if (query.queryHash !== hashQueryKeyByOptions(queryKey, query.options)) {\n        return false;\n      }\n    } else if (!partialMatchKey(query.queryKey, queryKey)) {\n      return false;\n    }\n  }\n\n  if (type !== 'all') {\n    const isActive = query.isActive();\n\n    if (type === 'active' && !isActive) {\n      return false;\n    }\n\n    if (type === 'inactive' && isActive) {\n      return false;\n    }\n  }\n\n  if (typeof stale === 'boolean' && query.isStale() !== stale) {\n    return false;\n  }\n\n  if (typeof fetchStatus !== 'undefined' && fetchStatus !== query.state.fetchStatus) {\n    return false;\n  }\n\n  if (predicate && !predicate(query)) {\n    return false;\n  }\n\n  return true;\n}\nfunction matchMutation(filters, mutation) {\n  const {\n    exact,\n    fetching,\n    predicate,\n    mutationKey\n  } = filters;\n\n  if (isQueryKey(mutationKey)) {\n    if (!mutation.options.mutationKey) {\n      return false;\n    }\n\n    if (exact) {\n      if (hashQueryKey(mutation.options.mutationKey) !== hashQueryKey(mutationKey)) {\n        return false;\n      }\n    } else if (!partialMatchKey(mutation.options.mutationKey, mutationKey)) {\n      return false;\n    }\n  }\n\n  if (typeof fetching === 'boolean' && mutation.state.status === 'loading' !== fetching) {\n    return false;\n  }\n\n  if (predicate && !predicate(mutation)) {\n    return false;\n  }\n\n  return true;\n}\nfunction hashQueryKeyByOptions(queryKey, options) {\n  const hashFn = (options == null ? void 0 : options.queryKeyHashFn) || hashQueryKey;\n  return hashFn(queryKey);\n}\n/**\n * Default query keys hash function.\n * Hashes the value into a stable hash.\n */\n\nfunction hashQueryKey(queryKey) {\n  return JSON.stringify(queryKey, (_, val) => isPlainObject(val) ? Object.keys(val).sort().reduce((result, key) => {\n    result[key] = val[key];\n    return result;\n  }, {}) : val);\n}\n/**\n * Checks if key `b` partially matches with key `a`.\n */\n\nfunction partialMatchKey(a, b) {\n  return partialDeepEqual(a, b);\n}\n/**\n * Checks if `b` partially matches with `a`.\n */\n\nfunction partialDeepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (typeof a !== typeof b) {\n    return false;\n  }\n\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    return !Object.keys(b).some(key => !partialDeepEqual(a[key], b[key]));\n  }\n\n  return false;\n}\n/**\n * This function returns `a` if `b` is deeply equal.\n * If not, it will replace any deeply equal children of `b` with those of `a`.\n * This can be used for structural sharing between JSON values for example.\n */\n\nfunction replaceEqualDeep(a, b) {\n  if (a === b) {\n    return a;\n  }\n\n  const array = isPlainArray(a) && isPlainArray(b);\n\n  if (array || isPlainObject(a) && isPlainObject(b)) {\n    const aSize = array ? a.length : Object.keys(a).length;\n    const bItems = array ? b : Object.keys(b);\n    const bSize = bItems.length;\n    const copy = array ? [] : {};\n    let equalItems = 0;\n\n    for (let i = 0; i < bSize; i++) {\n      const key = array ? i : bItems[i];\n      copy[key] = replaceEqualDeep(a[key], b[key]);\n\n      if (copy[key] === a[key]) {\n        equalItems++;\n      }\n    }\n\n    return aSize === bSize && equalItems === aSize ? a : copy;\n  }\n\n  return b;\n}\n/**\n * Shallow compare objects. Only works with objects that always have the same properties.\n */\n\nfunction shallowEqualObjects(a, b) {\n  if (a && !b || b && !a) {\n    return false;\n  }\n\n  for (const key in a) {\n    if (a[key] !== b[key]) {\n      return false;\n    }\n  }\n\n  return true;\n}\nfunction isPlainArray(value) {\n  return Array.isArray(value) && value.length === Object.keys(value).length;\n} // Copied from: https://github.com/jonschlinkert/is-plain-object\n\nfunction isPlainObject(o) {\n  if (!hasObjectPrototype(o)) {\n    return false;\n  } // If has modified constructor\n\n\n  const ctor = o.constructor;\n\n  if (typeof ctor === 'undefined') {\n    return true;\n  } // If has modified prototype\n\n\n  const prot = ctor.prototype;\n\n  if (!hasObjectPrototype(prot)) {\n    return false;\n  } // If constructor does not have an Object-specific method\n\n\n  if (!prot.hasOwnProperty('isPrototypeOf')) {\n    return false;\n  } // Most likely a plain Object\n\n\n  return true;\n}\n\nfunction hasObjectPrototype(o) {\n  return Object.prototype.toString.call(o) === '[object Object]';\n}\n\nfunction isQueryKey(value) {\n  return Array.isArray(value);\n}\nfunction isError(value) {\n  return value instanceof Error;\n}\nfunction sleep(timeout) {\n  return new Promise(resolve => {\n    setTimeout(resolve, timeout);\n  });\n}\n/**\n * Schedules a microtask.\n * This can be useful to schedule state updates after rendering.\n */\n\nfunction scheduleMicrotask(callback) {\n  sleep(0).then(callback);\n}\nfunction getAbortController() {\n  if (typeof AbortController === 'function') {\n    return new AbortController();\n  }\n\n  return;\n}\nfunction replaceData(prevData, data, options) {\n  // Use prev data if an isDataEqual function is defined and returns `true`\n  if (options.isDataEqual != null && options.isDataEqual(prevData, data)) {\n    return prevData;\n  } else if (typeof options.structuralSharing === 'function') {\n    return options.structuralSharing(prevData, data);\n  } else if (options.structuralSharing !== false) {\n    // Structurally share data between prev and new data if needed\n    return replaceEqualDeep(prevData, data);\n  }\n\n  return data;\n}\n\n\n//# sourceMappingURL=utils.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@tanstack/query-core/build/lib/utils.mjs\n"));

/***/ }),

/***/ "./node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   QueryClientContext: function() { return /* binding */ QueryClientContext; },\n/* harmony export */   QueryClientProvider: function() { return /* binding */ QueryClientProvider; },\n/* harmony export */   useQueryClient: function() { return /* binding */ useQueryClient; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\"use client\";\n\n// src/QueryClientProvider.tsx\n\nvar QueryClientContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(\n  void 0\n);\nvar useQueryClient = (queryClient) => {\n  const client = react__WEBPACK_IMPORTED_MODULE_0__.useContext(QueryClientContext);\n  if (queryClient) {\n    return queryClient;\n  }\n  if (!client) {\n    throw new Error(\"No QueryClient set, use QueryClientProvider to set one\");\n  }\n  return client;\n};\nvar QueryClientProvider = ({\n  client,\n  children\n}) => {\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    client.mount();\n    return () => {\n      client.unmount();\n    };\n  }, [client]);\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(QueryClientContext.Provider, { value: client }, children);\n};\n\n//# sourceMappingURL=QueryClientProvider.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3JlYWN0LXF1ZXJ5L2J1aWxkL21vZGVybi9RdWVyeUNsaWVudFByb3ZpZGVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFFQTtBQUMrQjtBQUMvQix5QkFBeUIsZ0RBQW1CO0FBQzVDO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQiw2Q0FBZ0I7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCxFQUFFLDRDQUFlO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNILHlCQUF5QixnREFBbUIsZ0NBQWdDLGVBQWU7QUFDM0Y7QUFLRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AdGFuc3RhY2svcmVhY3QtcXVlcnkvYnVpbGQvbW9kZXJuL1F1ZXJ5Q2xpZW50UHJvdmlkZXIuanM/N2I1YyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBjbGllbnRcIjtcblxuLy8gc3JjL1F1ZXJ5Q2xpZW50UHJvdmlkZXIudHN4XG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbnZhciBRdWVyeUNsaWVudENvbnRleHQgPSBSZWFjdC5jcmVhdGVDb250ZXh0KFxuICB2b2lkIDBcbik7XG52YXIgdXNlUXVlcnlDbGllbnQgPSAocXVlcnlDbGllbnQpID0+IHtcbiAgY29uc3QgY2xpZW50ID0gUmVhY3QudXNlQ29udGV4dChRdWVyeUNsaWVudENvbnRleHQpO1xuICBpZiAocXVlcnlDbGllbnQpIHtcbiAgICByZXR1cm4gcXVlcnlDbGllbnQ7XG4gIH1cbiAgaWYgKCFjbGllbnQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJObyBRdWVyeUNsaWVudCBzZXQsIHVzZSBRdWVyeUNsaWVudFByb3ZpZGVyIHRvIHNldCBvbmVcIik7XG4gIH1cbiAgcmV0dXJuIGNsaWVudDtcbn07XG52YXIgUXVlcnlDbGllbnRQcm92aWRlciA9ICh7XG4gIGNsaWVudCxcbiAgY2hpbGRyZW5cbn0pID0+IHtcbiAgUmVhY3QudXNlRWZmZWN0KCgpID0+IHtcbiAgICBjbGllbnQubW91bnQoKTtcbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgY2xpZW50LnVubW91bnQoKTtcbiAgICB9O1xuICB9LCBbY2xpZW50XSk7XG4gIHJldHVybiAvKiBAX19QVVJFX18gKi8gUmVhY3QuY3JlYXRlRWxlbWVudChRdWVyeUNsaWVudENvbnRleHQuUHJvdmlkZXIsIHsgdmFsdWU6IGNsaWVudCB9LCBjaGlsZHJlbik7XG59O1xuZXhwb3J0IHtcbiAgUXVlcnlDbGllbnRDb250ZXh0LFxuICBRdWVyeUNsaWVudFByb3ZpZGVyLFxuICB1c2VRdWVyeUNsaWVudFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVF1ZXJ5Q2xpZW50UHJvdmlkZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js\n"));

/***/ }),

/***/ "./node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/focusManager.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/focusManager.js ***!
  \***********************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FocusManager: function() { return /* binding */ FocusManager; },\n/* harmony export */   focusManager: function() { return /* binding */ focusManager; }\n/* harmony export */ });\n/* harmony import */ var _subscribable_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./subscribable.js */ \"./node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/subscribable.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"./node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/utils.js\");\n// src/focusManager.ts\n\n\nvar FocusManager = class extends _subscribable_js__WEBPACK_IMPORTED_MODULE_0__.Subscribable {\n  #focused;\n  #cleanup;\n  #setup;\n  constructor() {\n    super();\n    this.#setup = (onFocus) => {\n      if (!_utils_js__WEBPACK_IMPORTED_MODULE_1__.isServer && window.addEventListener) {\n        const listener = () => onFocus();\n        window.addEventListener(\"visibilitychange\", listener, false);\n        return () => {\n          window.removeEventListener(\"visibilitychange\", listener);\n        };\n      }\n      return;\n    };\n  }\n  onSubscribe() {\n    if (!this.#cleanup) {\n      this.setEventListener(this.#setup);\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#cleanup?.();\n      this.#cleanup = void 0;\n    }\n  }\n  setEventListener(setup) {\n    this.#setup = setup;\n    this.#cleanup?.();\n    this.#cleanup = setup((focused) => {\n      if (typeof focused === \"boolean\") {\n        this.setFocused(focused);\n      } else {\n        this.onFocus();\n      }\n    });\n  }\n  setFocused(focused) {\n    const changed = this.#focused !== focused;\n    if (changed) {\n      this.#focused = focused;\n      this.onFocus();\n    }\n  }\n  onFocus() {\n    this.listeners.forEach((listener) => {\n      listener();\n    });\n  }\n  isFocused() {\n    if (typeof this.#focused === \"boolean\") {\n      return this.#focused;\n    }\n    return globalThis.document?.visibilityState !== \"hidden\";\n  }\n};\nvar focusManager = new FocusManager();\n\n//# sourceMappingURL=focusManager.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3JlYWN0LXF1ZXJ5L25vZGVfbW9kdWxlcy9AdGFuc3RhY2svcXVlcnktY29yZS9idWlsZC9tb2Rlcm4vZm9jdXNNYW5hZ2VyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNpRDtBQUNYO0FBQ3RDLGlDQUFpQywwREFBWTtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLCtDQUFRO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUlFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9yZWFjdC1xdWVyeS9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3F1ZXJ5LWNvcmUvYnVpbGQvbW9kZXJuL2ZvY3VzTWFuYWdlci5qcz9lYTAxIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9mb2N1c01hbmFnZXIudHNcbmltcG9ydCB7IFN1YnNjcmliYWJsZSB9IGZyb20gXCIuL3N1YnNjcmliYWJsZS5qc1wiO1xuaW1wb3J0IHsgaXNTZXJ2ZXIgfSBmcm9tIFwiLi91dGlscy5qc1wiO1xudmFyIEZvY3VzTWFuYWdlciA9IGNsYXNzIGV4dGVuZHMgU3Vic2NyaWJhYmxlIHtcbiAgI2ZvY3VzZWQ7XG4gICNjbGVhbnVwO1xuICAjc2V0dXA7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy4jc2V0dXAgPSAob25Gb2N1cykgPT4ge1xuICAgICAgaWYgKCFpc1NlcnZlciAmJiB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcikge1xuICAgICAgICBjb25zdCBsaXN0ZW5lciA9ICgpID0+IG9uRm9jdXMoKTtcbiAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJ2aXNpYmlsaXR5Y2hhbmdlXCIsIGxpc3RlbmVyLCBmYWxzZSk7XG4gICAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJ2aXNpYmlsaXR5Y2hhbmdlXCIsIGxpc3RlbmVyKTtcbiAgICAgICAgfTtcbiAgICAgIH1cbiAgICAgIHJldHVybjtcbiAgICB9O1xuICB9XG4gIG9uU3Vic2NyaWJlKCkge1xuICAgIGlmICghdGhpcy4jY2xlYW51cCkge1xuICAgICAgdGhpcy5zZXRFdmVudExpc3RlbmVyKHRoaXMuI3NldHVwKTtcbiAgICB9XG4gIH1cbiAgb25VbnN1YnNjcmliZSgpIHtcbiAgICBpZiAoIXRoaXMuaGFzTGlzdGVuZXJzKCkpIHtcbiAgICAgIHRoaXMuI2NsZWFudXA/LigpO1xuICAgICAgdGhpcy4jY2xlYW51cCA9IHZvaWQgMDtcbiAgICB9XG4gIH1cbiAgc2V0RXZlbnRMaXN0ZW5lcihzZXR1cCkge1xuICAgIHRoaXMuI3NldHVwID0gc2V0dXA7XG4gICAgdGhpcy4jY2xlYW51cD8uKCk7XG4gICAgdGhpcy4jY2xlYW51cCA9IHNldHVwKChmb2N1c2VkKSA9PiB7XG4gICAgICBpZiAodHlwZW9mIGZvY3VzZWQgPT09IFwiYm9vbGVhblwiKSB7XG4gICAgICAgIHRoaXMuc2V0Rm9jdXNlZChmb2N1c2VkKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMub25Gb2N1cygpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG4gIHNldEZvY3VzZWQoZm9jdXNlZCkge1xuICAgIGNvbnN0IGNoYW5nZWQgPSB0aGlzLiNmb2N1c2VkICE9PSBmb2N1c2VkO1xuICAgIGlmIChjaGFuZ2VkKSB7XG4gICAgICB0aGlzLiNmb2N1c2VkID0gZm9jdXNlZDtcbiAgICAgIHRoaXMub25Gb2N1cygpO1xuICAgIH1cbiAgfVxuICBvbkZvY3VzKCkge1xuICAgIHRoaXMubGlzdGVuZXJzLmZvckVhY2goKGxpc3RlbmVyKSA9PiB7XG4gICAgICBsaXN0ZW5lcigpO1xuICAgIH0pO1xuICB9XG4gIGlzRm9jdXNlZCgpIHtcbiAgICBpZiAodHlwZW9mIHRoaXMuI2ZvY3VzZWQgPT09IFwiYm9vbGVhblwiKSB7XG4gICAgICByZXR1cm4gdGhpcy4jZm9jdXNlZDtcbiAgICB9XG4gICAgcmV0dXJuIGdsb2JhbFRoaXMuZG9jdW1lbnQ/LnZpc2liaWxpdHlTdGF0ZSAhPT0gXCJoaWRkZW5cIjtcbiAgfVxufTtcbnZhciBmb2N1c01hbmFnZXIgPSBuZXcgRm9jdXNNYW5hZ2VyKCk7XG5leHBvcnQge1xuICBGb2N1c01hbmFnZXIsXG4gIGZvY3VzTWFuYWdlclxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWZvY3VzTWFuYWdlci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/focusManager.js\n"));

/***/ }),

/***/ "./node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/infiniteQueryBehavior.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/infiniteQueryBehavior.js ***!
  \********************************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hasNextPage: function() { return /* binding */ hasNextPage; },\n/* harmony export */   hasPreviousPage: function() { return /* binding */ hasPreviousPage; },\n/* harmony export */   infiniteQueryBehavior: function() { return /* binding */ infiniteQueryBehavior; }\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"./node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/utils.js\");\n// src/infiniteQueryBehavior.ts\n\nfunction infiniteQueryBehavior(pages) {\n  return {\n    onFetch: (context, query) => {\n      const fetchFn = async () => {\n        const options = context.options;\n        const direction = context.fetchOptions?.meta?.fetchMore?.direction;\n        const oldPages = context.state.data?.pages || [];\n        const oldPageParams = context.state.data?.pageParams || [];\n        const empty = { pages: [], pageParams: [] };\n        let cancelled = false;\n        const addSignalProperty = (object) => {\n          Object.defineProperty(object, \"signal\", {\n            enumerable: true,\n            get: () => {\n              if (context.signal.aborted) {\n                cancelled = true;\n              } else {\n                context.signal.addEventListener(\"abort\", () => {\n                  cancelled = true;\n                });\n              }\n              return context.signal;\n            }\n          });\n        };\n        const queryFn = context.options.queryFn || (() => Promise.reject(\n          new Error(`Missing queryFn: '${context.options.queryHash}'`)\n        ));\n        const fetchPage = async (data, param, previous) => {\n          if (cancelled) {\n            return Promise.reject();\n          }\n          if (param == null && data.pages.length) {\n            return Promise.resolve(data);\n          }\n          const queryFnContext = {\n            queryKey: context.queryKey,\n            pageParam: param,\n            direction: previous ? \"backward\" : \"forward\",\n            meta: context.options.meta\n          };\n          addSignalProperty(queryFnContext);\n          const page = await queryFn(\n            queryFnContext\n          );\n          const { maxPages } = context.options;\n          const addTo = previous ? _utils_js__WEBPACK_IMPORTED_MODULE_0__.addToStart : _utils_js__WEBPACK_IMPORTED_MODULE_0__.addToEnd;\n          return {\n            pages: addTo(data.pages, page, maxPages),\n            pageParams: addTo(data.pageParams, param, maxPages)\n          };\n        };\n        let result;\n        if (direction && oldPages.length) {\n          const previous = direction === \"backward\";\n          const pageParamFn = previous ? getPreviousPageParam : getNextPageParam;\n          const oldData = {\n            pages: oldPages,\n            pageParams: oldPageParams\n          };\n          const param = pageParamFn(options, oldData);\n          result = await fetchPage(oldData, param, previous);\n        } else {\n          result = await fetchPage(\n            empty,\n            oldPageParams[0] ?? options.initialPageParam\n          );\n          const remainingPages = pages ?? oldPages.length;\n          for (let i = 1; i < remainingPages; i++) {\n            const param = getNextPageParam(options, result);\n            result = await fetchPage(result, param);\n          }\n        }\n        return result;\n      };\n      if (context.options.persister) {\n        context.fetchFn = () => {\n          return context.options.persister?.(\n            fetchFn,\n            {\n              queryKey: context.queryKey,\n              meta: context.options.meta,\n              signal: context.signal\n            },\n            query\n          );\n        };\n      } else {\n        context.fetchFn = fetchFn;\n      }\n    }\n  };\n}\nfunction getNextPageParam(options, { pages, pageParams }) {\n  const lastIndex = pages.length - 1;\n  return options.getNextPageParam(\n    pages[lastIndex],\n    pages,\n    pageParams[lastIndex],\n    pageParams\n  );\n}\nfunction getPreviousPageParam(options, { pages, pageParams }) {\n  return options.getPreviousPageParam?.(\n    pages[0],\n    pages,\n    pageParams[0],\n    pageParams\n  );\n}\nfunction hasNextPage(options, data) {\n  if (!data)\n    return false;\n  return getNextPageParam(options, data) != null;\n}\nfunction hasPreviousPage(options, data) {\n  if (!data || !options.getPreviousPageParam)\n    return false;\n  return getPreviousPageParam(options, data) != null;\n}\n\n//# sourceMappingURL=infiniteQueryBehavior.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3JlYWN0LXF1ZXJ5L25vZGVfbW9kdWxlcy9AdGFuc3RhY2svcXVlcnktY29yZS9idWlsZC9tb2Rlcm4vaW5maW5pdGVRdWVyeUJlaGF2aW9yLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNrRDtBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQSx5Q0FBeUMsMEJBQTBCO0FBQ25FO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixXQUFXO0FBQzdCLG1DQUFtQyxpREFBVSxHQUFHLCtDQUFRO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLG9CQUFvQjtBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUNBQXFDLG1CQUFtQjtBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUNBQXlDLG1CQUFtQjtBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBS0U7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3JlYWN0LXF1ZXJ5L25vZGVfbW9kdWxlcy9AdGFuc3RhY2svcXVlcnktY29yZS9idWlsZC9tb2Rlcm4vaW5maW5pdGVRdWVyeUJlaGF2aW9yLmpzPzhkYWUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL2luZmluaXRlUXVlcnlCZWhhdmlvci50c1xuaW1wb3J0IHsgYWRkVG9FbmQsIGFkZFRvU3RhcnQgfSBmcm9tIFwiLi91dGlscy5qc1wiO1xuZnVuY3Rpb24gaW5maW5pdGVRdWVyeUJlaGF2aW9yKHBhZ2VzKSB7XG4gIHJldHVybiB7XG4gICAgb25GZXRjaDogKGNvbnRleHQsIHF1ZXJ5KSA9PiB7XG4gICAgICBjb25zdCBmZXRjaEZuID0gYXN5bmMgKCkgPT4ge1xuICAgICAgICBjb25zdCBvcHRpb25zID0gY29udGV4dC5vcHRpb25zO1xuICAgICAgICBjb25zdCBkaXJlY3Rpb24gPSBjb250ZXh0LmZldGNoT3B0aW9ucz8ubWV0YT8uZmV0Y2hNb3JlPy5kaXJlY3Rpb247XG4gICAgICAgIGNvbnN0IG9sZFBhZ2VzID0gY29udGV4dC5zdGF0ZS5kYXRhPy5wYWdlcyB8fCBbXTtcbiAgICAgICAgY29uc3Qgb2xkUGFnZVBhcmFtcyA9IGNvbnRleHQuc3RhdGUuZGF0YT8ucGFnZVBhcmFtcyB8fCBbXTtcbiAgICAgICAgY29uc3QgZW1wdHkgPSB7IHBhZ2VzOiBbXSwgcGFnZVBhcmFtczogW10gfTtcbiAgICAgICAgbGV0IGNhbmNlbGxlZCA9IGZhbHNlO1xuICAgICAgICBjb25zdCBhZGRTaWduYWxQcm9wZXJ0eSA9IChvYmplY3QpID0+IHtcbiAgICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqZWN0LCBcInNpZ25hbFwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgZ2V0OiAoKSA9PiB7XG4gICAgICAgICAgICAgIGlmIChjb250ZXh0LnNpZ25hbC5hYm9ydGVkKSB7XG4gICAgICAgICAgICAgICAgY2FuY2VsbGVkID0gdHJ1ZTtcbiAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBjb250ZXh0LnNpZ25hbC5hZGRFdmVudExpc3RlbmVyKFwiYWJvcnRcIiwgKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgY2FuY2VsbGVkID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICByZXR1cm4gY29udGV4dC5zaWduYWw7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSk7XG4gICAgICAgIH07XG4gICAgICAgIGNvbnN0IHF1ZXJ5Rm4gPSBjb250ZXh0Lm9wdGlvbnMucXVlcnlGbiB8fCAoKCkgPT4gUHJvbWlzZS5yZWplY3QoXG4gICAgICAgICAgbmV3IEVycm9yKGBNaXNzaW5nIHF1ZXJ5Rm46ICcke2NvbnRleHQub3B0aW9ucy5xdWVyeUhhc2h9J2ApXG4gICAgICAgICkpO1xuICAgICAgICBjb25zdCBmZXRjaFBhZ2UgPSBhc3luYyAoZGF0YSwgcGFyYW0sIHByZXZpb3VzKSA9PiB7XG4gICAgICAgICAgaWYgKGNhbmNlbGxlZCkge1xuICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KCk7XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmIChwYXJhbSA9PSBudWxsICYmIGRhdGEucGFnZXMubGVuZ3RoKSB7XG4gICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKGRhdGEpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBjb25zdCBxdWVyeUZuQ29udGV4dCA9IHtcbiAgICAgICAgICAgIHF1ZXJ5S2V5OiBjb250ZXh0LnF1ZXJ5S2V5LFxuICAgICAgICAgICAgcGFnZVBhcmFtOiBwYXJhbSxcbiAgICAgICAgICAgIGRpcmVjdGlvbjogcHJldmlvdXMgPyBcImJhY2t3YXJkXCIgOiBcImZvcndhcmRcIixcbiAgICAgICAgICAgIG1ldGE6IGNvbnRleHQub3B0aW9ucy5tZXRhXG4gICAgICAgICAgfTtcbiAgICAgICAgICBhZGRTaWduYWxQcm9wZXJ0eShxdWVyeUZuQ29udGV4dCk7XG4gICAgICAgICAgY29uc3QgcGFnZSA9IGF3YWl0IHF1ZXJ5Rm4oXG4gICAgICAgICAgICBxdWVyeUZuQ29udGV4dFxuICAgICAgICAgICk7XG4gICAgICAgICAgY29uc3QgeyBtYXhQYWdlcyB9ID0gY29udGV4dC5vcHRpb25zO1xuICAgICAgICAgIGNvbnN0IGFkZFRvID0gcHJldmlvdXMgPyBhZGRUb1N0YXJ0IDogYWRkVG9FbmQ7XG4gICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHBhZ2VzOiBhZGRUbyhkYXRhLnBhZ2VzLCBwYWdlLCBtYXhQYWdlcyksXG4gICAgICAgICAgICBwYWdlUGFyYW1zOiBhZGRUbyhkYXRhLnBhZ2VQYXJhbXMsIHBhcmFtLCBtYXhQYWdlcylcbiAgICAgICAgICB9O1xuICAgICAgICB9O1xuICAgICAgICBsZXQgcmVzdWx0O1xuICAgICAgICBpZiAoZGlyZWN0aW9uICYmIG9sZFBhZ2VzLmxlbmd0aCkge1xuICAgICAgICAgIGNvbnN0IHByZXZpb3VzID0gZGlyZWN0aW9uID09PSBcImJhY2t3YXJkXCI7XG4gICAgICAgICAgY29uc3QgcGFnZVBhcmFtRm4gPSBwcmV2aW91cyA/IGdldFByZXZpb3VzUGFnZVBhcmFtIDogZ2V0TmV4dFBhZ2VQYXJhbTtcbiAgICAgICAgICBjb25zdCBvbGREYXRhID0ge1xuICAgICAgICAgICAgcGFnZXM6IG9sZFBhZ2VzLFxuICAgICAgICAgICAgcGFnZVBhcmFtczogb2xkUGFnZVBhcmFtc1xuICAgICAgICAgIH07XG4gICAgICAgICAgY29uc3QgcGFyYW0gPSBwYWdlUGFyYW1GbihvcHRpb25zLCBvbGREYXRhKTtcbiAgICAgICAgICByZXN1bHQgPSBhd2FpdCBmZXRjaFBhZ2Uob2xkRGF0YSwgcGFyYW0sIHByZXZpb3VzKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXN1bHQgPSBhd2FpdCBmZXRjaFBhZ2UoXG4gICAgICAgICAgICBlbXB0eSxcbiAgICAgICAgICAgIG9sZFBhZ2VQYXJhbXNbMF0gPz8gb3B0aW9ucy5pbml0aWFsUGFnZVBhcmFtXG4gICAgICAgICAgKTtcbiAgICAgICAgICBjb25zdCByZW1haW5pbmdQYWdlcyA9IHBhZ2VzID8/IG9sZFBhZ2VzLmxlbmd0aDtcbiAgICAgICAgICBmb3IgKGxldCBpID0gMTsgaSA8IHJlbWFpbmluZ1BhZ2VzOyBpKyspIHtcbiAgICAgICAgICAgIGNvbnN0IHBhcmFtID0gZ2V0TmV4dFBhZ2VQYXJhbShvcHRpb25zLCByZXN1bHQpO1xuICAgICAgICAgICAgcmVzdWx0ID0gYXdhaXQgZmV0Y2hQYWdlKHJlc3VsdCwgcGFyYW0pO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgfTtcbiAgICAgIGlmIChjb250ZXh0Lm9wdGlvbnMucGVyc2lzdGVyKSB7XG4gICAgICAgIGNvbnRleHQuZmV0Y2hGbiA9ICgpID0+IHtcbiAgICAgICAgICByZXR1cm4gY29udGV4dC5vcHRpb25zLnBlcnNpc3Rlcj8uKFxuICAgICAgICAgICAgZmV0Y2hGbixcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgcXVlcnlLZXk6IGNvbnRleHQucXVlcnlLZXksXG4gICAgICAgICAgICAgIG1ldGE6IGNvbnRleHQub3B0aW9ucy5tZXRhLFxuICAgICAgICAgICAgICBzaWduYWw6IGNvbnRleHQuc2lnbmFsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgcXVlcnlcbiAgICAgICAgICApO1xuICAgICAgICB9O1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY29udGV4dC5mZXRjaEZuID0gZmV0Y2hGbjtcbiAgICAgIH1cbiAgICB9XG4gIH07XG59XG5mdW5jdGlvbiBnZXROZXh0UGFnZVBhcmFtKG9wdGlvbnMsIHsgcGFnZXMsIHBhZ2VQYXJhbXMgfSkge1xuICBjb25zdCBsYXN0SW5kZXggPSBwYWdlcy5sZW5ndGggLSAxO1xuICByZXR1cm4gb3B0aW9ucy5nZXROZXh0UGFnZVBhcmFtKFxuICAgIHBhZ2VzW2xhc3RJbmRleF0sXG4gICAgcGFnZXMsXG4gICAgcGFnZVBhcmFtc1tsYXN0SW5kZXhdLFxuICAgIHBhZ2VQYXJhbXNcbiAgKTtcbn1cbmZ1bmN0aW9uIGdldFByZXZpb3VzUGFnZVBhcmFtKG9wdGlvbnMsIHsgcGFnZXMsIHBhZ2VQYXJhbXMgfSkge1xuICByZXR1cm4gb3B0aW9ucy5nZXRQcmV2aW91c1BhZ2VQYXJhbT8uKFxuICAgIHBhZ2VzWzBdLFxuICAgIHBhZ2VzLFxuICAgIHBhZ2VQYXJhbXNbMF0sXG4gICAgcGFnZVBhcmFtc1xuICApO1xufVxuZnVuY3Rpb24gaGFzTmV4dFBhZ2Uob3B0aW9ucywgZGF0YSkge1xuICBpZiAoIWRhdGEpXG4gICAgcmV0dXJuIGZhbHNlO1xuICByZXR1cm4gZ2V0TmV4dFBhZ2VQYXJhbShvcHRpb25zLCBkYXRhKSAhPSBudWxsO1xufVxuZnVuY3Rpb24gaGFzUHJldmlvdXNQYWdlKG9wdGlvbnMsIGRhdGEpIHtcbiAgaWYgKCFkYXRhIHx8ICFvcHRpb25zLmdldFByZXZpb3VzUGFnZVBhcmFtKVxuICAgIHJldHVybiBmYWxzZTtcbiAgcmV0dXJuIGdldFByZXZpb3VzUGFnZVBhcmFtKG9wdGlvbnMsIGRhdGEpICE9IG51bGw7XG59XG5leHBvcnQge1xuICBoYXNOZXh0UGFnZSxcbiAgaGFzUHJldmlvdXNQYWdlLFxuICBpbmZpbml0ZVF1ZXJ5QmVoYXZpb3Jcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmZpbml0ZVF1ZXJ5QmVoYXZpb3IuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/infiniteQueryBehavior.js\n"));

/***/ }),

/***/ "./node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/mutation.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/mutation.js ***!
  \*******************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Mutation: function() { return /* binding */ Mutation; },\n/* harmony export */   getDefaultState: function() { return /* binding */ getDefaultState; }\n/* harmony export */ });\n/* harmony import */ var _notifyManager_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./notifyManager.js */ \"./node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/notifyManager.js\");\n/* harmony import */ var _removable_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./removable.js */ \"./node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/removable.js\");\n/* harmony import */ var _retryer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./retryer.js */ \"./node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/retryer.js\");\n// src/mutation.ts\n\n\n\nvar Mutation = class extends _removable_js__WEBPACK_IMPORTED_MODULE_0__.Removable {\n  constructor(config) {\n    super();\n    this.mutationId = config.mutationId;\n    this.#defaultOptions = config.defaultOptions;\n    this.#mutationCache = config.mutationCache;\n    this.#observers = [];\n    this.state = config.state || getDefaultState();\n    this.setOptions(config.options);\n    this.scheduleGc();\n  }\n  #observers;\n  #defaultOptions;\n  #mutationCache;\n  #retryer;\n  setOptions(options) {\n    this.options = { ...this.#defaultOptions, ...options };\n    this.updateGcTime(this.options.gcTime);\n  }\n  get meta() {\n    return this.options.meta;\n  }\n  addObserver(observer) {\n    if (!this.#observers.includes(observer)) {\n      this.#observers.push(observer);\n      this.clearGcTimeout();\n      this.#mutationCache.notify({\n        type: \"observerAdded\",\n        mutation: this,\n        observer\n      });\n    }\n  }\n  removeObserver(observer) {\n    this.#observers = this.#observers.filter((x) => x !== observer);\n    this.scheduleGc();\n    this.#mutationCache.notify({\n      type: \"observerRemoved\",\n      mutation: this,\n      observer\n    });\n  }\n  optionalRemove() {\n    if (!this.#observers.length) {\n      if (this.state.status === \"pending\") {\n        this.scheduleGc();\n      } else {\n        this.#mutationCache.remove(this);\n      }\n    }\n  }\n  continue() {\n    return this.#retryer?.continue() ?? // continuing a mutation assumes that variables are set, mutation must have been dehydrated before\n    this.execute(this.state.variables);\n  }\n  async execute(variables) {\n    const executeMutation = () => {\n      this.#retryer = (0,_retryer_js__WEBPACK_IMPORTED_MODULE_1__.createRetryer)({\n        fn: () => {\n          if (!this.options.mutationFn) {\n            return Promise.reject(new Error(\"No mutationFn found\"));\n          }\n          return this.options.mutationFn(variables);\n        },\n        onFail: (failureCount, error) => {\n          this.#dispatch({ type: \"failed\", failureCount, error });\n        },\n        onPause: () => {\n          this.#dispatch({ type: \"pause\" });\n        },\n        onContinue: () => {\n          this.#dispatch({ type: \"continue\" });\n        },\n        retry: this.options.retry ?? 0,\n        retryDelay: this.options.retryDelay,\n        networkMode: this.options.networkMode\n      });\n      return this.#retryer.promise;\n    };\n    const restored = this.state.status === \"pending\";\n    try {\n      if (!restored) {\n        this.#dispatch({ type: \"pending\", variables });\n        await this.#mutationCache.config.onMutate?.(\n          variables,\n          this\n        );\n        const context = await this.options.onMutate?.(variables);\n        if (context !== this.state.context) {\n          this.#dispatch({\n            type: \"pending\",\n            context,\n            variables\n          });\n        }\n      }\n      const data = await executeMutation();\n      await this.#mutationCache.config.onSuccess?.(\n        data,\n        variables,\n        this.state.context,\n        this\n      );\n      await this.options.onSuccess?.(data, variables, this.state.context);\n      await this.#mutationCache.config.onSettled?.(\n        data,\n        null,\n        this.state.variables,\n        this.state.context,\n        this\n      );\n      await this.options.onSettled?.(data, null, variables, this.state.context);\n      this.#dispatch({ type: \"success\", data });\n      return data;\n    } catch (error) {\n      try {\n        await this.#mutationCache.config.onError?.(\n          error,\n          variables,\n          this.state.context,\n          this\n        );\n        await this.options.onError?.(\n          error,\n          variables,\n          this.state.context\n        );\n        await this.#mutationCache.config.onSettled?.(\n          void 0,\n          error,\n          this.state.variables,\n          this.state.context,\n          this\n        );\n        await this.options.onSettled?.(\n          void 0,\n          error,\n          variables,\n          this.state.context\n        );\n        throw error;\n      } finally {\n        this.#dispatch({ type: \"error\", error });\n      }\n    }\n  }\n  #dispatch(action) {\n    const reducer = (state) => {\n      switch (action.type) {\n        case \"failed\":\n          return {\n            ...state,\n            failureCount: action.failureCount,\n            failureReason: action.error\n          };\n        case \"pause\":\n          return {\n            ...state,\n            isPaused: true\n          };\n        case \"continue\":\n          return {\n            ...state,\n            isPaused: false\n          };\n        case \"pending\":\n          return {\n            ...state,\n            context: action.context,\n            data: void 0,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            isPaused: !(0,_retryer_js__WEBPACK_IMPORTED_MODULE_1__.canFetch)(this.options.networkMode),\n            status: \"pending\",\n            variables: action.variables,\n            submittedAt: Date.now()\n          };\n        case \"success\":\n          return {\n            ...state,\n            data: action.data,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            status: \"success\",\n            isPaused: false\n          };\n        case \"error\":\n          return {\n            ...state,\n            data: void 0,\n            error: action.error,\n            failureCount: state.failureCount + 1,\n            failureReason: action.error,\n            isPaused: false,\n            status: \"error\"\n          };\n      }\n    };\n    this.state = reducer(this.state);\n    _notifyManager_js__WEBPACK_IMPORTED_MODULE_2__.notifyManager.batch(() => {\n      this.#observers.forEach((observer) => {\n        observer.onMutationUpdate(action);\n      });\n      this.#mutationCache.notify({\n        mutation: this,\n        type: \"updated\",\n        action\n      });\n    });\n  }\n};\nfunction getDefaultState() {\n  return {\n    context: void 0,\n    data: void 0,\n    error: null,\n    failureCount: 0,\n    failureReason: null,\n    isPaused: false,\n    status: \"idle\",\n    variables: void 0,\n    submittedAt: 0\n  };\n}\n\n//# sourceMappingURL=mutation.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/mutation.js\n"));

/***/ }),

/***/ "./node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/mutationCache.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/mutationCache.js ***!
  \************************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MutationCache: function() { return /* binding */ MutationCache; }\n/* harmony export */ });\n/* harmony import */ var _notifyManager_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./notifyManager.js */ \"./node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/notifyManager.js\");\n/* harmony import */ var _mutation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mutation.js */ \"./node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/mutation.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils.js */ \"./node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/utils.js\");\n/* harmony import */ var _subscribable_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./subscribable.js */ \"./node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/subscribable.js\");\n// src/mutationCache.ts\n\n\n\n\nvar MutationCache = class extends _subscribable_js__WEBPACK_IMPORTED_MODULE_0__.Subscribable {\n  constructor(config = {}) {\n    super();\n    this.config = config;\n    this.#mutations = [];\n    this.#mutationId = 0;\n  }\n  #mutations;\n  #mutationId;\n  #resuming;\n  build(client, options, state) {\n    const mutation = new _mutation_js__WEBPACK_IMPORTED_MODULE_1__.Mutation({\n      mutationCache: this,\n      mutationId: ++this.#mutationId,\n      options: client.defaultMutationOptions(options),\n      state\n    });\n    this.add(mutation);\n    return mutation;\n  }\n  add(mutation) {\n    this.#mutations.push(mutation);\n    this.notify({ type: \"added\", mutation });\n  }\n  remove(mutation) {\n    this.#mutations = this.#mutations.filter((x) => x !== mutation);\n    this.notify({ type: \"removed\", mutation });\n  }\n  clear() {\n    _notifyManager_js__WEBPACK_IMPORTED_MODULE_2__.notifyManager.batch(() => {\n      this.#mutations.forEach((mutation) => {\n        this.remove(mutation);\n      });\n    });\n  }\n  getAll() {\n    return this.#mutations;\n  }\n  find(filters) {\n    const defaultedFilters = { exact: true, ...filters };\n    return this.#mutations.find(\n      (mutation) => (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.matchMutation)(defaultedFilters, mutation)\n    );\n  }\n  findAll(filters = {}) {\n    return this.#mutations.filter(\n      (mutation) => (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.matchMutation)(filters, mutation)\n    );\n  }\n  notify(event) {\n    _notifyManager_js__WEBPACK_IMPORTED_MODULE_2__.notifyManager.batch(() => {\n      this.listeners.forEach((listener) => {\n        listener(event);\n      });\n    });\n  }\n  resumePausedMutations() {\n    this.#resuming = (this.#resuming ?? Promise.resolve()).then(() => {\n      const pausedMutations = this.#mutations.filter((x) => x.state.isPaused);\n      return _notifyManager_js__WEBPACK_IMPORTED_MODULE_2__.notifyManager.batch(\n        () => pausedMutations.reduce(\n          (promise, mutation) => promise.then(() => mutation.continue().catch(_utils_js__WEBPACK_IMPORTED_MODULE_3__.noop)),\n          Promise.resolve()\n        )\n      );\n    }).then(() => {\n      this.#resuming = void 0;\n    });\n    return this.#resuming;\n  }\n};\n\n//# sourceMappingURL=mutationCache.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3JlYWN0LXF1ZXJ5L25vZGVfbW9kdWxlcy9AdGFuc3RhY2svcXVlcnktY29yZS9idWlsZC9tb2Rlcm4vbXV0YXRpb25DYWNoZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ21EO0FBQ1Y7QUFDUTtBQUNBO0FBQ2pELGtDQUFrQywwREFBWTtBQUM5Qyx5QkFBeUI7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLGtEQUFRO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IseUJBQXlCO0FBQzNDO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQiwyQkFBMkI7QUFDN0M7QUFDQTtBQUNBLElBQUksNERBQWE7QUFDakI7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtCQUErQjtBQUMvQjtBQUNBLG9CQUFvQix3REFBYTtBQUNqQztBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0Esb0JBQW9CLHdEQUFhO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBLElBQUksNERBQWE7QUFDakI7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLDREQUFhO0FBQzFCO0FBQ0EsOEVBQThFLDJDQUFJO0FBQ2xGO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFHRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AdGFuc3RhY2svcmVhY3QtcXVlcnkvbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9xdWVyeS1jb3JlL2J1aWxkL21vZGVybi9tdXRhdGlvbkNhY2hlLmpzP2IwNWMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL211dGF0aW9uQ2FjaGUudHNcbmltcG9ydCB7IG5vdGlmeU1hbmFnZXIgfSBmcm9tIFwiLi9ub3RpZnlNYW5hZ2VyLmpzXCI7XG5pbXBvcnQgeyBNdXRhdGlvbiB9IGZyb20gXCIuL211dGF0aW9uLmpzXCI7XG5pbXBvcnQgeyBtYXRjaE11dGF0aW9uLCBub29wIH0gZnJvbSBcIi4vdXRpbHMuanNcIjtcbmltcG9ydCB7IFN1YnNjcmliYWJsZSB9IGZyb20gXCIuL3N1YnNjcmliYWJsZS5qc1wiO1xudmFyIE11dGF0aW9uQ2FjaGUgPSBjbGFzcyBleHRlbmRzIFN1YnNjcmliYWJsZSB7XG4gIGNvbnN0cnVjdG9yKGNvbmZpZyA9IHt9KSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLmNvbmZpZyA9IGNvbmZpZztcbiAgICB0aGlzLiNtdXRhdGlvbnMgPSBbXTtcbiAgICB0aGlzLiNtdXRhdGlvbklkID0gMDtcbiAgfVxuICAjbXV0YXRpb25zO1xuICAjbXV0YXRpb25JZDtcbiAgI3Jlc3VtaW5nO1xuICBidWlsZChjbGllbnQsIG9wdGlvbnMsIHN0YXRlKSB7XG4gICAgY29uc3QgbXV0YXRpb24gPSBuZXcgTXV0YXRpb24oe1xuICAgICAgbXV0YXRpb25DYWNoZTogdGhpcyxcbiAgICAgIG11dGF0aW9uSWQ6ICsrdGhpcy4jbXV0YXRpb25JZCxcbiAgICAgIG9wdGlvbnM6IGNsaWVudC5kZWZhdWx0TXV0YXRpb25PcHRpb25zKG9wdGlvbnMpLFxuICAgICAgc3RhdGVcbiAgICB9KTtcbiAgICB0aGlzLmFkZChtdXRhdGlvbik7XG4gICAgcmV0dXJuIG11dGF0aW9uO1xuICB9XG4gIGFkZChtdXRhdGlvbikge1xuICAgIHRoaXMuI211dGF0aW9ucy5wdXNoKG11dGF0aW9uKTtcbiAgICB0aGlzLm5vdGlmeSh7IHR5cGU6IFwiYWRkZWRcIiwgbXV0YXRpb24gfSk7XG4gIH1cbiAgcmVtb3ZlKG11dGF0aW9uKSB7XG4gICAgdGhpcy4jbXV0YXRpb25zID0gdGhpcy4jbXV0YXRpb25zLmZpbHRlcigoeCkgPT4geCAhPT0gbXV0YXRpb24pO1xuICAgIHRoaXMubm90aWZ5KHsgdHlwZTogXCJyZW1vdmVkXCIsIG11dGF0aW9uIH0pO1xuICB9XG4gIGNsZWFyKCkge1xuICAgIG5vdGlmeU1hbmFnZXIuYmF0Y2goKCkgPT4ge1xuICAgICAgdGhpcy4jbXV0YXRpb25zLmZvckVhY2goKG11dGF0aW9uKSA9PiB7XG4gICAgICAgIHRoaXMucmVtb3ZlKG11dGF0aW9uKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG4gIGdldEFsbCgpIHtcbiAgICByZXR1cm4gdGhpcy4jbXV0YXRpb25zO1xuICB9XG4gIGZpbmQoZmlsdGVycykge1xuICAgIGNvbnN0IGRlZmF1bHRlZEZpbHRlcnMgPSB7IGV4YWN0OiB0cnVlLCAuLi5maWx0ZXJzIH07XG4gICAgcmV0dXJuIHRoaXMuI211dGF0aW9ucy5maW5kKFxuICAgICAgKG11dGF0aW9uKSA9PiBtYXRjaE11dGF0aW9uKGRlZmF1bHRlZEZpbHRlcnMsIG11dGF0aW9uKVxuICAgICk7XG4gIH1cbiAgZmluZEFsbChmaWx0ZXJzID0ge30pIHtcbiAgICByZXR1cm4gdGhpcy4jbXV0YXRpb25zLmZpbHRlcihcbiAgICAgIChtdXRhdGlvbikgPT4gbWF0Y2hNdXRhdGlvbihmaWx0ZXJzLCBtdXRhdGlvbilcbiAgICApO1xuICB9XG4gIG5vdGlmeShldmVudCkge1xuICAgIG5vdGlmeU1hbmFnZXIuYmF0Y2goKCkgPT4ge1xuICAgICAgdGhpcy5saXN0ZW5lcnMuZm9yRWFjaCgobGlzdGVuZXIpID0+IHtcbiAgICAgICAgbGlzdGVuZXIoZXZlbnQpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cbiAgcmVzdW1lUGF1c2VkTXV0YXRpb25zKCkge1xuICAgIHRoaXMuI3Jlc3VtaW5nID0gKHRoaXMuI3Jlc3VtaW5nID8/IFByb21pc2UucmVzb2x2ZSgpKS50aGVuKCgpID0+IHtcbiAgICAgIGNvbnN0IHBhdXNlZE11dGF0aW9ucyA9IHRoaXMuI211dGF0aW9ucy5maWx0ZXIoKHgpID0+IHguc3RhdGUuaXNQYXVzZWQpO1xuICAgICAgcmV0dXJuIG5vdGlmeU1hbmFnZXIuYmF0Y2goXG4gICAgICAgICgpID0+IHBhdXNlZE11dGF0aW9ucy5yZWR1Y2UoXG4gICAgICAgICAgKHByb21pc2UsIG11dGF0aW9uKSA9PiBwcm9taXNlLnRoZW4oKCkgPT4gbXV0YXRpb24uY29udGludWUoKS5jYXRjaChub29wKSksXG4gICAgICAgICAgUHJvbWlzZS5yZXNvbHZlKClcbiAgICAgICAgKVxuICAgICAgKTtcbiAgICB9KS50aGVuKCgpID0+IHtcbiAgICAgIHRoaXMuI3Jlc3VtaW5nID0gdm9pZCAwO1xuICAgIH0pO1xuICAgIHJldHVybiB0aGlzLiNyZXN1bWluZztcbiAgfVxufTtcbmV4cG9ydCB7XG4gIE11dGF0aW9uQ2FjaGVcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1tdXRhdGlvbkNhY2hlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/mutationCache.js\n"));

/***/ }),

/***/ "./node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/notifyManager.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/notifyManager.js ***!
  \************************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createNotifyManager: function() { return /* binding */ createNotifyManager; },\n/* harmony export */   notifyManager: function() { return /* binding */ notifyManager; }\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"./node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/utils.js\");\n// src/notifyManager.ts\n\nfunction createNotifyManager() {\n  let queue = [];\n  let transactions = 0;\n  let notifyFn = (callback) => {\n    callback();\n  };\n  let batchNotifyFn = (callback) => {\n    callback();\n  };\n  const batch = (callback) => {\n    let result;\n    transactions++;\n    try {\n      result = callback();\n    } finally {\n      transactions--;\n      if (!transactions) {\n        flush();\n      }\n    }\n    return result;\n  };\n  const schedule = (callback) => {\n    if (transactions) {\n      queue.push(callback);\n    } else {\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.scheduleMicrotask)(() => {\n        notifyFn(callback);\n      });\n    }\n  };\n  const batchCalls = (callback) => {\n    return (...args) => {\n      schedule(() => {\n        callback(...args);\n      });\n    };\n  };\n  const flush = () => {\n    const originalQueue = queue;\n    queue = [];\n    if (originalQueue.length) {\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.scheduleMicrotask)(() => {\n        batchNotifyFn(() => {\n          originalQueue.forEach((callback) => {\n            notifyFn(callback);\n          });\n        });\n      });\n    }\n  };\n  const setNotifyFunction = (fn) => {\n    notifyFn = fn;\n  };\n  const setBatchNotifyFunction = (fn) => {\n    batchNotifyFn = fn;\n  };\n  return {\n    batch,\n    batchCalls,\n    schedule,\n    setNotifyFunction,\n    setBatchNotifyFunction\n  };\n}\nvar notifyManager = createNotifyManager();\n\n//# sourceMappingURL=notifyManager.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3JlYWN0LXF1ZXJ5L25vZGVfbW9kdWxlcy9AdGFuc3RhY2svcXVlcnktY29yZS9idWlsZC9tb2Rlcm4vbm90aWZ5TWFuYWdlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUMrQztBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOLE1BQU0sNERBQWlCO0FBQ3ZCO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNLDREQUFpQjtBQUN2QjtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1gsU0FBUztBQUNULE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSUU7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3JlYWN0LXF1ZXJ5L25vZGVfbW9kdWxlcy9AdGFuc3RhY2svcXVlcnktY29yZS9idWlsZC9tb2Rlcm4vbm90aWZ5TWFuYWdlci5qcz84MmEwIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9ub3RpZnlNYW5hZ2VyLnRzXG5pbXBvcnQgeyBzY2hlZHVsZU1pY3JvdGFzayB9IGZyb20gXCIuL3V0aWxzLmpzXCI7XG5mdW5jdGlvbiBjcmVhdGVOb3RpZnlNYW5hZ2VyKCkge1xuICBsZXQgcXVldWUgPSBbXTtcbiAgbGV0IHRyYW5zYWN0aW9ucyA9IDA7XG4gIGxldCBub3RpZnlGbiA9IChjYWxsYmFjaykgPT4ge1xuICAgIGNhbGxiYWNrKCk7XG4gIH07XG4gIGxldCBiYXRjaE5vdGlmeUZuID0gKGNhbGxiYWNrKSA9PiB7XG4gICAgY2FsbGJhY2soKTtcbiAgfTtcbiAgY29uc3QgYmF0Y2ggPSAoY2FsbGJhY2spID0+IHtcbiAgICBsZXQgcmVzdWx0O1xuICAgIHRyYW5zYWN0aW9ucysrO1xuICAgIHRyeSB7XG4gICAgICByZXN1bHQgPSBjYWxsYmFjaygpO1xuICAgIH0gZmluYWxseSB7XG4gICAgICB0cmFuc2FjdGlvbnMtLTtcbiAgICAgIGlmICghdHJhbnNhY3Rpb25zKSB7XG4gICAgICAgIGZsdXNoKCk7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG4gIH07XG4gIGNvbnN0IHNjaGVkdWxlID0gKGNhbGxiYWNrKSA9PiB7XG4gICAgaWYgKHRyYW5zYWN0aW9ucykge1xuICAgICAgcXVldWUucHVzaChjYWxsYmFjayk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHNjaGVkdWxlTWljcm90YXNrKCgpID0+IHtcbiAgICAgICAgbm90aWZ5Rm4oY2FsbGJhY2spO1xuICAgICAgfSk7XG4gICAgfVxuICB9O1xuICBjb25zdCBiYXRjaENhbGxzID0gKGNhbGxiYWNrKSA9PiB7XG4gICAgcmV0dXJuICguLi5hcmdzKSA9PiB7XG4gICAgICBzY2hlZHVsZSgoKSA9PiB7XG4gICAgICAgIGNhbGxiYWNrKC4uLmFyZ3MpO1xuICAgICAgfSk7XG4gICAgfTtcbiAgfTtcbiAgY29uc3QgZmx1c2ggPSAoKSA9PiB7XG4gICAgY29uc3Qgb3JpZ2luYWxRdWV1ZSA9IHF1ZXVlO1xuICAgIHF1ZXVlID0gW107XG4gICAgaWYgKG9yaWdpbmFsUXVldWUubGVuZ3RoKSB7XG4gICAgICBzY2hlZHVsZU1pY3JvdGFzaygoKSA9PiB7XG4gICAgICAgIGJhdGNoTm90aWZ5Rm4oKCkgPT4ge1xuICAgICAgICAgIG9yaWdpbmFsUXVldWUuZm9yRWFjaCgoY2FsbGJhY2spID0+IHtcbiAgICAgICAgICAgIG5vdGlmeUZuKGNhbGxiYWNrKTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICB9XG4gIH07XG4gIGNvbnN0IHNldE5vdGlmeUZ1bmN0aW9uID0gKGZuKSA9PiB7XG4gICAgbm90aWZ5Rm4gPSBmbjtcbiAgfTtcbiAgY29uc3Qgc2V0QmF0Y2hOb3RpZnlGdW5jdGlvbiA9IChmbikgPT4ge1xuICAgIGJhdGNoTm90aWZ5Rm4gPSBmbjtcbiAgfTtcbiAgcmV0dXJuIHtcbiAgICBiYXRjaCxcbiAgICBiYXRjaENhbGxzLFxuICAgIHNjaGVkdWxlLFxuICAgIHNldE5vdGlmeUZ1bmN0aW9uLFxuICAgIHNldEJhdGNoTm90aWZ5RnVuY3Rpb25cbiAgfTtcbn1cbnZhciBub3RpZnlNYW5hZ2VyID0gY3JlYXRlTm90aWZ5TWFuYWdlcigpO1xuZXhwb3J0IHtcbiAgY3JlYXRlTm90aWZ5TWFuYWdlcixcbiAgbm90aWZ5TWFuYWdlclxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW5vdGlmeU1hbmFnZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/notifyManager.js\n"));

/***/ }),

/***/ "./node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/onlineManager.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/onlineManager.js ***!
  \************************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OnlineManager: function() { return /* binding */ OnlineManager; },\n/* harmony export */   onlineManager: function() { return /* binding */ onlineManager; }\n/* harmony export */ });\n/* harmony import */ var _subscribable_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./subscribable.js */ \"./node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/subscribable.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"./node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/utils.js\");\n// src/onlineManager.ts\n\n\nvar OnlineManager = class extends _subscribable_js__WEBPACK_IMPORTED_MODULE_0__.Subscribable {\n  #online = true;\n  #cleanup;\n  #setup;\n  constructor() {\n    super();\n    this.#setup = (onOnline) => {\n      if (!_utils_js__WEBPACK_IMPORTED_MODULE_1__.isServer && window.addEventListener) {\n        const onlineListener = () => onOnline(true);\n        const offlineListener = () => onOnline(false);\n        window.addEventListener(\"online\", onlineListener, false);\n        window.addEventListener(\"offline\", offlineListener, false);\n        return () => {\n          window.removeEventListener(\"online\", onlineListener);\n          window.removeEventListener(\"offline\", offlineListener);\n        };\n      }\n      return;\n    };\n  }\n  onSubscribe() {\n    if (!this.#cleanup) {\n      this.setEventListener(this.#setup);\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#cleanup?.();\n      this.#cleanup = void 0;\n    }\n  }\n  setEventListener(setup) {\n    this.#setup = setup;\n    this.#cleanup?.();\n    this.#cleanup = setup(this.setOnline.bind(this));\n  }\n  setOnline(online) {\n    const changed = this.#online !== online;\n    if (changed) {\n      this.#online = online;\n      this.listeners.forEach((listener) => {\n        listener(online);\n      });\n    }\n  }\n  isOnline() {\n    return this.#online;\n  }\n};\nvar onlineManager = new OnlineManager();\n\n//# sourceMappingURL=onlineManager.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3JlYWN0LXF1ZXJ5L25vZGVfbW9kdWxlcy9AdGFuc3RhY2svcXVlcnktY29yZS9idWlsZC9tb2Rlcm4vb25saW5lTWFuYWdlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDaUQ7QUFDWDtBQUN0QyxrQ0FBa0MsMERBQVk7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVywrQ0FBUTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUlFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9yZWFjdC1xdWVyeS9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3F1ZXJ5LWNvcmUvYnVpbGQvbW9kZXJuL29ubGluZU1hbmFnZXIuanM/NmY5NSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvb25saW5lTWFuYWdlci50c1xuaW1wb3J0IHsgU3Vic2NyaWJhYmxlIH0gZnJvbSBcIi4vc3Vic2NyaWJhYmxlLmpzXCI7XG5pbXBvcnQgeyBpc1NlcnZlciB9IGZyb20gXCIuL3V0aWxzLmpzXCI7XG52YXIgT25saW5lTWFuYWdlciA9IGNsYXNzIGV4dGVuZHMgU3Vic2NyaWJhYmxlIHtcbiAgI29ubGluZSA9IHRydWU7XG4gICNjbGVhbnVwO1xuICAjc2V0dXA7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy4jc2V0dXAgPSAob25PbmxpbmUpID0+IHtcbiAgICAgIGlmICghaXNTZXJ2ZXIgJiYgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIpIHtcbiAgICAgICAgY29uc3Qgb25saW5lTGlzdGVuZXIgPSAoKSA9PiBvbk9ubGluZSh0cnVlKTtcbiAgICAgICAgY29uc3Qgb2ZmbGluZUxpc3RlbmVyID0gKCkgPT4gb25PbmxpbmUoZmFsc2UpO1xuICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcIm9ubGluZVwiLCBvbmxpbmVMaXN0ZW5lciwgZmFsc2UpO1xuICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcIm9mZmxpbmVcIiwgb2ZmbGluZUxpc3RlbmVyLCBmYWxzZSk7XG4gICAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJvbmxpbmVcIiwgb25saW5lTGlzdGVuZXIpO1xuICAgICAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKFwib2ZmbGluZVwiLCBvZmZsaW5lTGlzdGVuZXIpO1xuICAgICAgICB9O1xuICAgICAgfVxuICAgICAgcmV0dXJuO1xuICAgIH07XG4gIH1cbiAgb25TdWJzY3JpYmUoKSB7XG4gICAgaWYgKCF0aGlzLiNjbGVhbnVwKSB7XG4gICAgICB0aGlzLnNldEV2ZW50TGlzdGVuZXIodGhpcy4jc2V0dXApO1xuICAgIH1cbiAgfVxuICBvblVuc3Vic2NyaWJlKCkge1xuICAgIGlmICghdGhpcy5oYXNMaXN0ZW5lcnMoKSkge1xuICAgICAgdGhpcy4jY2xlYW51cD8uKCk7XG4gICAgICB0aGlzLiNjbGVhbnVwID0gdm9pZCAwO1xuICAgIH1cbiAgfVxuICBzZXRFdmVudExpc3RlbmVyKHNldHVwKSB7XG4gICAgdGhpcy4jc2V0dXAgPSBzZXR1cDtcbiAgICB0aGlzLiNjbGVhbnVwPy4oKTtcbiAgICB0aGlzLiNjbGVhbnVwID0gc2V0dXAodGhpcy5zZXRPbmxpbmUuYmluZCh0aGlzKSk7XG4gIH1cbiAgc2V0T25saW5lKG9ubGluZSkge1xuICAgIGNvbnN0IGNoYW5nZWQgPSB0aGlzLiNvbmxpbmUgIT09IG9ubGluZTtcbiAgICBpZiAoY2hhbmdlZCkge1xuICAgICAgdGhpcy4jb25saW5lID0gb25saW5lO1xuICAgICAgdGhpcy5saXN0ZW5lcnMuZm9yRWFjaCgobGlzdGVuZXIpID0+IHtcbiAgICAgICAgbGlzdGVuZXIob25saW5lKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuICBpc09ubGluZSgpIHtcbiAgICByZXR1cm4gdGhpcy4jb25saW5lO1xuICB9XG59O1xudmFyIG9ubGluZU1hbmFnZXIgPSBuZXcgT25saW5lTWFuYWdlcigpO1xuZXhwb3J0IHtcbiAgT25saW5lTWFuYWdlcixcbiAgb25saW5lTWFuYWdlclxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW9ubGluZU1hbmFnZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/onlineManager.js\n"));

/***/ }),

/***/ "./node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/query.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/query.js ***!
  \****************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Query: function() { return /* binding */ Query; }\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"./node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/utils.js\");\n/* harmony import */ var _notifyManager_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./notifyManager.js */ \"./node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/notifyManager.js\");\n/* harmony import */ var _retryer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./retryer.js */ \"./node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/retryer.js\");\n/* harmony import */ var _removable_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./removable.js */ \"./node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/removable.js\");\n// src/query.ts\n\n\n\n\nvar Query = class extends _removable_js__WEBPACK_IMPORTED_MODULE_0__.Removable {\n  constructor(config) {\n    super();\n    this.#abortSignalConsumed = false;\n    this.#defaultOptions = config.defaultOptions;\n    this.#setOptions(config.options);\n    this.#observers = [];\n    this.#cache = config.cache;\n    this.queryKey = config.queryKey;\n    this.queryHash = config.queryHash;\n    this.#initialState = config.state || getDefaultState(this.options);\n    this.state = this.#initialState;\n    this.scheduleGc();\n  }\n  #initialState;\n  #revertState;\n  #cache;\n  #promise;\n  #retryer;\n  #observers;\n  #defaultOptions;\n  #abortSignalConsumed;\n  get meta() {\n    return this.options.meta;\n  }\n  #setOptions(options) {\n    this.options = { ...this.#defaultOptions, ...options };\n    this.updateGcTime(this.options.gcTime);\n  }\n  optionalRemove() {\n    if (!this.#observers.length && this.state.fetchStatus === \"idle\") {\n      this.#cache.remove(this);\n    }\n  }\n  setData(newData, options) {\n    const data = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.replaceData)(this.state.data, newData, this.options);\n    this.#dispatch({\n      data,\n      type: \"success\",\n      dataUpdatedAt: options?.updatedAt,\n      manual: options?.manual\n    });\n    return data;\n  }\n  setState(state, setStateOptions) {\n    this.#dispatch({ type: \"setState\", state, setStateOptions });\n  }\n  cancel(options) {\n    const promise = this.#promise;\n    this.#retryer?.cancel(options);\n    return promise ? promise.then(_utils_js__WEBPACK_IMPORTED_MODULE_1__.noop).catch(_utils_js__WEBPACK_IMPORTED_MODULE_1__.noop) : Promise.resolve();\n  }\n  destroy() {\n    super.destroy();\n    this.cancel({ silent: true });\n  }\n  reset() {\n    this.destroy();\n    this.setState(this.#initialState);\n  }\n  isActive() {\n    return this.#observers.some(\n      (observer) => observer.options.enabled !== false\n    );\n  }\n  isDisabled() {\n    return this.getObserversCount() > 0 && !this.isActive();\n  }\n  isStale() {\n    return this.state.isInvalidated || !this.state.dataUpdatedAt || this.#observers.some((observer) => observer.getCurrentResult().isStale);\n  }\n  isStaleByTime(staleTime = 0) {\n    return this.state.isInvalidated || !this.state.dataUpdatedAt || !(0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.timeUntilStale)(this.state.dataUpdatedAt, staleTime);\n  }\n  onFocus() {\n    const observer = this.#observers.find((x) => x.shouldFetchOnWindowFocus());\n    observer?.refetch({ cancelRefetch: false });\n    this.#retryer?.continue();\n  }\n  onOnline() {\n    const observer = this.#observers.find((x) => x.shouldFetchOnReconnect());\n    observer?.refetch({ cancelRefetch: false });\n    this.#retryer?.continue();\n  }\n  addObserver(observer) {\n    if (!this.#observers.includes(observer)) {\n      this.#observers.push(observer);\n      this.clearGcTimeout();\n      this.#cache.notify({ type: \"observerAdded\", query: this, observer });\n    }\n  }\n  removeObserver(observer) {\n    if (this.#observers.includes(observer)) {\n      this.#observers = this.#observers.filter((x) => x !== observer);\n      if (!this.#observers.length) {\n        if (this.#retryer) {\n          if (this.#abortSignalConsumed) {\n            this.#retryer.cancel({ revert: true });\n          } else {\n            this.#retryer.cancelRetry();\n          }\n        }\n        this.scheduleGc();\n      }\n      this.#cache.notify({ type: \"observerRemoved\", query: this, observer });\n    }\n  }\n  getObserversCount() {\n    return this.#observers.length;\n  }\n  invalidate() {\n    if (!this.state.isInvalidated) {\n      this.#dispatch({ type: \"invalidate\" });\n    }\n  }\n  fetch(options, fetchOptions) {\n    if (this.state.fetchStatus !== \"idle\") {\n      if (this.state.dataUpdatedAt && fetchOptions?.cancelRefetch) {\n        this.cancel({ silent: true });\n      } else if (this.#promise) {\n        this.#retryer?.continueRetry();\n        return this.#promise;\n      }\n    }\n    if (options) {\n      this.#setOptions(options);\n    }\n    if (!this.options.queryFn) {\n      const observer = this.#observers.find((x) => x.options.queryFn);\n      if (observer) {\n        this.#setOptions(observer.options);\n      }\n    }\n    if (true) {\n      if (!Array.isArray(this.options.queryKey)) {\n        console.error(\n          `As of v4, queryKey needs to be an Array. If you are using a string like 'repoData', please change it to an Array, e.g. ['repoData']`\n        );\n      }\n    }\n    const abortController = new AbortController();\n    const queryFnContext = {\n      queryKey: this.queryKey,\n      meta: this.meta\n    };\n    const addSignalProperty = (object) => {\n      Object.defineProperty(object, \"signal\", {\n        enumerable: true,\n        get: () => {\n          this.#abortSignalConsumed = true;\n          return abortController.signal;\n        }\n      });\n    };\n    addSignalProperty(queryFnContext);\n    const fetchFn = () => {\n      if (!this.options.queryFn) {\n        return Promise.reject(\n          new Error(`Missing queryFn: '${this.options.queryHash}'`)\n        );\n      }\n      this.#abortSignalConsumed = false;\n      if (this.options.persister) {\n        return this.options.persister(\n          this.options.queryFn,\n          queryFnContext,\n          this\n        );\n      }\n      return this.options.queryFn(\n        queryFnContext\n      );\n    };\n    const context = {\n      fetchOptions,\n      options: this.options,\n      queryKey: this.queryKey,\n      state: this.state,\n      fetchFn\n    };\n    addSignalProperty(context);\n    this.options.behavior?.onFetch(\n      context,\n      this\n    );\n    this.#revertState = this.state;\n    if (this.state.fetchStatus === \"idle\" || this.state.fetchMeta !== context.fetchOptions?.meta) {\n      this.#dispatch({ type: \"fetch\", meta: context.fetchOptions?.meta });\n    }\n    const onError = (error) => {\n      if (!((0,_retryer_js__WEBPACK_IMPORTED_MODULE_2__.isCancelledError)(error) && error.silent)) {\n        this.#dispatch({\n          type: \"error\",\n          error\n        });\n      }\n      if (!(0,_retryer_js__WEBPACK_IMPORTED_MODULE_2__.isCancelledError)(error)) {\n        this.#cache.config.onError?.(\n          error,\n          this\n        );\n        this.#cache.config.onSettled?.(\n          this.state.data,\n          error,\n          this\n        );\n      }\n      if (!this.isFetchingOptimistic) {\n        this.scheduleGc();\n      }\n      this.isFetchingOptimistic = false;\n    };\n    this.#retryer = (0,_retryer_js__WEBPACK_IMPORTED_MODULE_2__.createRetryer)({\n      fn: context.fetchFn,\n      abort: abortController.abort.bind(abortController),\n      onSuccess: (data) => {\n        if (typeof data === \"undefined\") {\n          if (true) {\n            console.error(\n              `Query data cannot be undefined. Please make sure to return a value other than undefined from your query function. Affected query key: ${this.queryHash}`\n            );\n          }\n          onError(new Error(`${this.queryHash} data is undefined`));\n          return;\n        }\n        this.setData(data);\n        this.#cache.config.onSuccess?.(data, this);\n        this.#cache.config.onSettled?.(\n          data,\n          this.state.error,\n          this\n        );\n        if (!this.isFetchingOptimistic) {\n          this.scheduleGc();\n        }\n        this.isFetchingOptimistic = false;\n      },\n      onError,\n      onFail: (failureCount, error) => {\n        this.#dispatch({ type: \"failed\", failureCount, error });\n      },\n      onPause: () => {\n        this.#dispatch({ type: \"pause\" });\n      },\n      onContinue: () => {\n        this.#dispatch({ type: \"continue\" });\n      },\n      retry: context.options.retry,\n      retryDelay: context.options.retryDelay,\n      networkMode: context.options.networkMode\n    });\n    this.#promise = this.#retryer.promise;\n    return this.#promise;\n  }\n  #dispatch(action) {\n    const reducer = (state) => {\n      switch (action.type) {\n        case \"failed\":\n          return {\n            ...state,\n            fetchFailureCount: action.failureCount,\n            fetchFailureReason: action.error\n          };\n        case \"pause\":\n          return {\n            ...state,\n            fetchStatus: \"paused\"\n          };\n        case \"continue\":\n          return {\n            ...state,\n            fetchStatus: \"fetching\"\n          };\n        case \"fetch\":\n          return {\n            ...state,\n            fetchFailureCount: 0,\n            fetchFailureReason: null,\n            fetchMeta: action.meta ?? null,\n            fetchStatus: (0,_retryer_js__WEBPACK_IMPORTED_MODULE_2__.canFetch)(this.options.networkMode) ? \"fetching\" : \"paused\",\n            ...!state.dataUpdatedAt && {\n              error: null,\n              status: \"pending\"\n            }\n          };\n        case \"success\":\n          return {\n            ...state,\n            data: action.data,\n            dataUpdateCount: state.dataUpdateCount + 1,\n            dataUpdatedAt: action.dataUpdatedAt ?? Date.now(),\n            error: null,\n            isInvalidated: false,\n            status: \"success\",\n            ...!action.manual && {\n              fetchStatus: \"idle\",\n              fetchFailureCount: 0,\n              fetchFailureReason: null\n            }\n          };\n        case \"error\":\n          const error = action.error;\n          if ((0,_retryer_js__WEBPACK_IMPORTED_MODULE_2__.isCancelledError)(error) && error.revert && this.#revertState) {\n            return { ...this.#revertState, fetchStatus: \"idle\" };\n          }\n          return {\n            ...state,\n            error,\n            errorUpdateCount: state.errorUpdateCount + 1,\n            errorUpdatedAt: Date.now(),\n            fetchFailureCount: state.fetchFailureCount + 1,\n            fetchFailureReason: error,\n            fetchStatus: \"idle\",\n            status: \"error\"\n          };\n        case \"invalidate\":\n          return {\n            ...state,\n            isInvalidated: true\n          };\n        case \"setState\":\n          return {\n            ...state,\n            ...action.state\n          };\n      }\n    };\n    this.state = reducer(this.state);\n    _notifyManager_js__WEBPACK_IMPORTED_MODULE_3__.notifyManager.batch(() => {\n      this.#observers.forEach((observer) => {\n        observer.onQueryUpdate();\n      });\n      this.#cache.notify({ query: this, type: \"updated\", action });\n    });\n  }\n};\nfunction getDefaultState(options) {\n  const data = typeof options.initialData === \"function\" ? options.initialData() : options.initialData;\n  const hasData = typeof data !== \"undefined\";\n  const initialDataUpdatedAt = hasData ? typeof options.initialDataUpdatedAt === \"function\" ? options.initialDataUpdatedAt() : options.initialDataUpdatedAt : 0;\n  return {\n    data,\n    dataUpdateCount: 0,\n    dataUpdatedAt: hasData ? initialDataUpdatedAt ?? Date.now() : 0,\n    error: null,\n    errorUpdateCount: 0,\n    errorUpdatedAt: 0,\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchMeta: null,\n    isInvalidated: false,\n    status: hasData ? \"success\" : \"pending\",\n    fetchStatus: \"idle\"\n  };\n}\n\n//# sourceMappingURL=query.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3JlYWN0LXF1ZXJ5L25vZGVfbW9kdWxlcy9AdGFuc3RhY2svcXVlcnktY29yZS9idWlsZC9tb2Rlcm4vcXVlcnkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUMrRDtBQUNaO0FBQ3NCO0FBQzlCO0FBQzNDLDBCQUEwQixvREFBUztBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLHNEQUFXO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLDBDQUEwQztBQUMvRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQywyQ0FBSSxRQUFRLDJDQUFJO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixjQUFjO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxRUFBcUUseURBQWM7QUFDbkY7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLHNCQUFzQjtBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixzQkFBc0I7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLDhDQUE4QztBQUN6RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLGNBQWM7QUFDakQsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsZ0RBQWdEO0FBQzNFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLG9CQUFvQjtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLGNBQWM7QUFDcEMsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSxJQUFxQztBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlDQUF5Qyx1QkFBdUI7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsaURBQWlEO0FBQ3hFO0FBQ0E7QUFDQSxZQUFZLDZEQUFnQjtBQUM1QjtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxXQUFXLDZEQUFnQjtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsMERBQWE7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLElBQXFDO0FBQ25EO0FBQ0EsdUpBQXVKLGVBQWU7QUFDdEs7QUFDQTtBQUNBLCtCQUErQixnQkFBZ0I7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBLHlCQUF5QixxQ0FBcUM7QUFDOUQsT0FBTztBQUNQO0FBQ0EseUJBQXlCLGVBQWU7QUFDeEMsT0FBTztBQUNQO0FBQ0EseUJBQXlCLGtCQUFrQjtBQUMzQyxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLHFEQUFRO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyw2REFBZ0I7QUFDOUIscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUksNERBQWE7QUFDakI7QUFDQTtBQUNBLE9BQU87QUFDUCwyQkFBMkIsc0NBQXNDO0FBQ2pFLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AdGFuc3RhY2svcmVhY3QtcXVlcnkvbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9xdWVyeS1jb3JlL2J1aWxkL21vZGVybi9xdWVyeS5qcz84NWM3Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9xdWVyeS50c1xuaW1wb3J0IHsgbm9vcCwgcmVwbGFjZURhdGEsIHRpbWVVbnRpbFN0YWxlIH0gZnJvbSBcIi4vdXRpbHMuanNcIjtcbmltcG9ydCB7IG5vdGlmeU1hbmFnZXIgfSBmcm9tIFwiLi9ub3RpZnlNYW5hZ2VyLmpzXCI7XG5pbXBvcnQgeyBjYW5GZXRjaCwgY3JlYXRlUmV0cnllciwgaXNDYW5jZWxsZWRFcnJvciB9IGZyb20gXCIuL3JldHJ5ZXIuanNcIjtcbmltcG9ydCB7IFJlbW92YWJsZSB9IGZyb20gXCIuL3JlbW92YWJsZS5qc1wiO1xudmFyIFF1ZXJ5ID0gY2xhc3MgZXh0ZW5kcyBSZW1vdmFibGUge1xuICBjb25zdHJ1Y3Rvcihjb25maWcpIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMuI2Fib3J0U2lnbmFsQ29uc3VtZWQgPSBmYWxzZTtcbiAgICB0aGlzLiNkZWZhdWx0T3B0aW9ucyA9IGNvbmZpZy5kZWZhdWx0T3B0aW9ucztcbiAgICB0aGlzLiNzZXRPcHRpb25zKGNvbmZpZy5vcHRpb25zKTtcbiAgICB0aGlzLiNvYnNlcnZlcnMgPSBbXTtcbiAgICB0aGlzLiNjYWNoZSA9IGNvbmZpZy5jYWNoZTtcbiAgICB0aGlzLnF1ZXJ5S2V5ID0gY29uZmlnLnF1ZXJ5S2V5O1xuICAgIHRoaXMucXVlcnlIYXNoID0gY29uZmlnLnF1ZXJ5SGFzaDtcbiAgICB0aGlzLiNpbml0aWFsU3RhdGUgPSBjb25maWcuc3RhdGUgfHwgZ2V0RGVmYXVsdFN0YXRlKHRoaXMub3B0aW9ucyk7XG4gICAgdGhpcy5zdGF0ZSA9IHRoaXMuI2luaXRpYWxTdGF0ZTtcbiAgICB0aGlzLnNjaGVkdWxlR2MoKTtcbiAgfVxuICAjaW5pdGlhbFN0YXRlO1xuICAjcmV2ZXJ0U3RhdGU7XG4gICNjYWNoZTtcbiAgI3Byb21pc2U7XG4gICNyZXRyeWVyO1xuICAjb2JzZXJ2ZXJzO1xuICAjZGVmYXVsdE9wdGlvbnM7XG4gICNhYm9ydFNpZ25hbENvbnN1bWVkO1xuICBnZXQgbWV0YSgpIHtcbiAgICByZXR1cm4gdGhpcy5vcHRpb25zLm1ldGE7XG4gIH1cbiAgI3NldE9wdGlvbnMob3B0aW9ucykge1xuICAgIHRoaXMub3B0aW9ucyA9IHsgLi4udGhpcy4jZGVmYXVsdE9wdGlvbnMsIC4uLm9wdGlvbnMgfTtcbiAgICB0aGlzLnVwZGF0ZUdjVGltZSh0aGlzLm9wdGlvbnMuZ2NUaW1lKTtcbiAgfVxuICBvcHRpb25hbFJlbW92ZSgpIHtcbiAgICBpZiAoIXRoaXMuI29ic2VydmVycy5sZW5ndGggJiYgdGhpcy5zdGF0ZS5mZXRjaFN0YXR1cyA9PT0gXCJpZGxlXCIpIHtcbiAgICAgIHRoaXMuI2NhY2hlLnJlbW92ZSh0aGlzKTtcbiAgICB9XG4gIH1cbiAgc2V0RGF0YShuZXdEYXRhLCBvcHRpb25zKSB7XG4gICAgY29uc3QgZGF0YSA9IHJlcGxhY2VEYXRhKHRoaXMuc3RhdGUuZGF0YSwgbmV3RGF0YSwgdGhpcy5vcHRpb25zKTtcbiAgICB0aGlzLiNkaXNwYXRjaCh7XG4gICAgICBkYXRhLFxuICAgICAgdHlwZTogXCJzdWNjZXNzXCIsXG4gICAgICBkYXRhVXBkYXRlZEF0OiBvcHRpb25zPy51cGRhdGVkQXQsXG4gICAgICBtYW51YWw6IG9wdGlvbnM/Lm1hbnVhbFxuICAgIH0pO1xuICAgIHJldHVybiBkYXRhO1xuICB9XG4gIHNldFN0YXRlKHN0YXRlLCBzZXRTdGF0ZU9wdGlvbnMpIHtcbiAgICB0aGlzLiNkaXNwYXRjaCh7IHR5cGU6IFwic2V0U3RhdGVcIiwgc3RhdGUsIHNldFN0YXRlT3B0aW9ucyB9KTtcbiAgfVxuICBjYW5jZWwob3B0aW9ucykge1xuICAgIGNvbnN0IHByb21pc2UgPSB0aGlzLiNwcm9taXNlO1xuICAgIHRoaXMuI3JldHJ5ZXI/LmNhbmNlbChvcHRpb25zKTtcbiAgICByZXR1cm4gcHJvbWlzZSA/IHByb21pc2UudGhlbihub29wKS5jYXRjaChub29wKSA6IFByb21pc2UucmVzb2x2ZSgpO1xuICB9XG4gIGRlc3Ryb3koKSB7XG4gICAgc3VwZXIuZGVzdHJveSgpO1xuICAgIHRoaXMuY2FuY2VsKHsgc2lsZW50OiB0cnVlIH0pO1xuICB9XG4gIHJlc2V0KCkge1xuICAgIHRoaXMuZGVzdHJveSgpO1xuICAgIHRoaXMuc2V0U3RhdGUodGhpcy4jaW5pdGlhbFN0YXRlKTtcbiAgfVxuICBpc0FjdGl2ZSgpIHtcbiAgICByZXR1cm4gdGhpcy4jb2JzZXJ2ZXJzLnNvbWUoXG4gICAgICAob2JzZXJ2ZXIpID0+IG9ic2VydmVyLm9wdGlvbnMuZW5hYmxlZCAhPT0gZmFsc2VcbiAgICApO1xuICB9XG4gIGlzRGlzYWJsZWQoKSB7XG4gICAgcmV0dXJuIHRoaXMuZ2V0T2JzZXJ2ZXJzQ291bnQoKSA+IDAgJiYgIXRoaXMuaXNBY3RpdmUoKTtcbiAgfVxuICBpc1N0YWxlKCkge1xuICAgIHJldHVybiB0aGlzLnN0YXRlLmlzSW52YWxpZGF0ZWQgfHwgIXRoaXMuc3RhdGUuZGF0YVVwZGF0ZWRBdCB8fCB0aGlzLiNvYnNlcnZlcnMuc29tZSgob2JzZXJ2ZXIpID0+IG9ic2VydmVyLmdldEN1cnJlbnRSZXN1bHQoKS5pc1N0YWxlKTtcbiAgfVxuICBpc1N0YWxlQnlUaW1lKHN0YWxlVGltZSA9IDApIHtcbiAgICByZXR1cm4gdGhpcy5zdGF0ZS5pc0ludmFsaWRhdGVkIHx8ICF0aGlzLnN0YXRlLmRhdGFVcGRhdGVkQXQgfHwgIXRpbWVVbnRpbFN0YWxlKHRoaXMuc3RhdGUuZGF0YVVwZGF0ZWRBdCwgc3RhbGVUaW1lKTtcbiAgfVxuICBvbkZvY3VzKCkge1xuICAgIGNvbnN0IG9ic2VydmVyID0gdGhpcy4jb2JzZXJ2ZXJzLmZpbmQoKHgpID0+IHguc2hvdWxkRmV0Y2hPbldpbmRvd0ZvY3VzKCkpO1xuICAgIG9ic2VydmVyPy5yZWZldGNoKHsgY2FuY2VsUmVmZXRjaDogZmFsc2UgfSk7XG4gICAgdGhpcy4jcmV0cnllcj8uY29udGludWUoKTtcbiAgfVxuICBvbk9ubGluZSgpIHtcbiAgICBjb25zdCBvYnNlcnZlciA9IHRoaXMuI29ic2VydmVycy5maW5kKCh4KSA9PiB4LnNob3VsZEZldGNoT25SZWNvbm5lY3QoKSk7XG4gICAgb2JzZXJ2ZXI/LnJlZmV0Y2goeyBjYW5jZWxSZWZldGNoOiBmYWxzZSB9KTtcbiAgICB0aGlzLiNyZXRyeWVyPy5jb250aW51ZSgpO1xuICB9XG4gIGFkZE9ic2VydmVyKG9ic2VydmVyKSB7XG4gICAgaWYgKCF0aGlzLiNvYnNlcnZlcnMuaW5jbHVkZXMob2JzZXJ2ZXIpKSB7XG4gICAgICB0aGlzLiNvYnNlcnZlcnMucHVzaChvYnNlcnZlcik7XG4gICAgICB0aGlzLmNsZWFyR2NUaW1lb3V0KCk7XG4gICAgICB0aGlzLiNjYWNoZS5ub3RpZnkoeyB0eXBlOiBcIm9ic2VydmVyQWRkZWRcIiwgcXVlcnk6IHRoaXMsIG9ic2VydmVyIH0pO1xuICAgIH1cbiAgfVxuICByZW1vdmVPYnNlcnZlcihvYnNlcnZlcikge1xuICAgIGlmICh0aGlzLiNvYnNlcnZlcnMuaW5jbHVkZXMob2JzZXJ2ZXIpKSB7XG4gICAgICB0aGlzLiNvYnNlcnZlcnMgPSB0aGlzLiNvYnNlcnZlcnMuZmlsdGVyKCh4KSA9PiB4ICE9PSBvYnNlcnZlcik7XG4gICAgICBpZiAoIXRoaXMuI29ic2VydmVycy5sZW5ndGgpIHtcbiAgICAgICAgaWYgKHRoaXMuI3JldHJ5ZXIpIHtcbiAgICAgICAgICBpZiAodGhpcy4jYWJvcnRTaWduYWxDb25zdW1lZCkge1xuICAgICAgICAgICAgdGhpcy4jcmV0cnllci5jYW5jZWwoeyByZXZlcnQ6IHRydWUgfSk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuI3JldHJ5ZXIuY2FuY2VsUmV0cnkoKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5zY2hlZHVsZUdjKCk7XG4gICAgICB9XG4gICAgICB0aGlzLiNjYWNoZS5ub3RpZnkoeyB0eXBlOiBcIm9ic2VydmVyUmVtb3ZlZFwiLCBxdWVyeTogdGhpcywgb2JzZXJ2ZXIgfSk7XG4gICAgfVxuICB9XG4gIGdldE9ic2VydmVyc0NvdW50KCkge1xuICAgIHJldHVybiB0aGlzLiNvYnNlcnZlcnMubGVuZ3RoO1xuICB9XG4gIGludmFsaWRhdGUoKSB7XG4gICAgaWYgKCF0aGlzLnN0YXRlLmlzSW52YWxpZGF0ZWQpIHtcbiAgICAgIHRoaXMuI2Rpc3BhdGNoKHsgdHlwZTogXCJpbnZhbGlkYXRlXCIgfSk7XG4gICAgfVxuICB9XG4gIGZldGNoKG9wdGlvbnMsIGZldGNoT3B0aW9ucykge1xuICAgIGlmICh0aGlzLnN0YXRlLmZldGNoU3RhdHVzICE9PSBcImlkbGVcIikge1xuICAgICAgaWYgKHRoaXMuc3RhdGUuZGF0YVVwZGF0ZWRBdCAmJiBmZXRjaE9wdGlvbnM/LmNhbmNlbFJlZmV0Y2gpIHtcbiAgICAgICAgdGhpcy5jYW5jZWwoeyBzaWxlbnQ6IHRydWUgfSk7XG4gICAgICB9IGVsc2UgaWYgKHRoaXMuI3Byb21pc2UpIHtcbiAgICAgICAgdGhpcy4jcmV0cnllcj8uY29udGludWVSZXRyeSgpO1xuICAgICAgICByZXR1cm4gdGhpcy4jcHJvbWlzZTtcbiAgICAgIH1cbiAgICB9XG4gICAgaWYgKG9wdGlvbnMpIHtcbiAgICAgIHRoaXMuI3NldE9wdGlvbnMob3B0aW9ucyk7XG4gICAgfVxuICAgIGlmICghdGhpcy5vcHRpb25zLnF1ZXJ5Rm4pIHtcbiAgICAgIGNvbnN0IG9ic2VydmVyID0gdGhpcy4jb2JzZXJ2ZXJzLmZpbmQoKHgpID0+IHgub3B0aW9ucy5xdWVyeUZuKTtcbiAgICAgIGlmIChvYnNlcnZlcikge1xuICAgICAgICB0aGlzLiNzZXRPcHRpb25zKG9ic2VydmVyLm9wdGlvbnMpO1xuICAgICAgfVxuICAgIH1cbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgICBpZiAoIUFycmF5LmlzQXJyYXkodGhpcy5vcHRpb25zLnF1ZXJ5S2V5KSkge1xuICAgICAgICBjb25zb2xlLmVycm9yKFxuICAgICAgICAgIGBBcyBvZiB2NCwgcXVlcnlLZXkgbmVlZHMgdG8gYmUgYW4gQXJyYXkuIElmIHlvdSBhcmUgdXNpbmcgYSBzdHJpbmcgbGlrZSAncmVwb0RhdGEnLCBwbGVhc2UgY2hhbmdlIGl0IHRvIGFuIEFycmF5LCBlLmcuIFsncmVwb0RhdGEnXWBcbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICB9XG4gICAgY29uc3QgYWJvcnRDb250cm9sbGVyID0gbmV3IEFib3J0Q29udHJvbGxlcigpO1xuICAgIGNvbnN0IHF1ZXJ5Rm5Db250ZXh0ID0ge1xuICAgICAgcXVlcnlLZXk6IHRoaXMucXVlcnlLZXksXG4gICAgICBtZXRhOiB0aGlzLm1ldGFcbiAgICB9O1xuICAgIGNvbnN0IGFkZFNpZ25hbFByb3BlcnR5ID0gKG9iamVjdCkgPT4ge1xuICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iamVjdCwgXCJzaWduYWxcIiwge1xuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICBnZXQ6ICgpID0+IHtcbiAgICAgICAgICB0aGlzLiNhYm9ydFNpZ25hbENvbnN1bWVkID0gdHJ1ZTtcbiAgICAgICAgICByZXR1cm4gYWJvcnRDb250cm9sbGVyLnNpZ25hbDtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfTtcbiAgICBhZGRTaWduYWxQcm9wZXJ0eShxdWVyeUZuQ29udGV4dCk7XG4gICAgY29uc3QgZmV0Y2hGbiA9ICgpID0+IHtcbiAgICAgIGlmICghdGhpcy5vcHRpb25zLnF1ZXJ5Rm4pIHtcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KFxuICAgICAgICAgIG5ldyBFcnJvcihgTWlzc2luZyBxdWVyeUZuOiAnJHt0aGlzLm9wdGlvbnMucXVlcnlIYXNofSdgKVxuICAgICAgICApO1xuICAgICAgfVxuICAgICAgdGhpcy4jYWJvcnRTaWduYWxDb25zdW1lZCA9IGZhbHNlO1xuICAgICAgaWYgKHRoaXMub3B0aW9ucy5wZXJzaXN0ZXIpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMub3B0aW9ucy5wZXJzaXN0ZXIoXG4gICAgICAgICAgdGhpcy5vcHRpb25zLnF1ZXJ5Rm4sXG4gICAgICAgICAgcXVlcnlGbkNvbnRleHQsXG4gICAgICAgICAgdGhpc1xuICAgICAgICApO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHRoaXMub3B0aW9ucy5xdWVyeUZuKFxuICAgICAgICBxdWVyeUZuQ29udGV4dFxuICAgICAgKTtcbiAgICB9O1xuICAgIGNvbnN0IGNvbnRleHQgPSB7XG4gICAgICBmZXRjaE9wdGlvbnMsXG4gICAgICBvcHRpb25zOiB0aGlzLm9wdGlvbnMsXG4gICAgICBxdWVyeUtleTogdGhpcy5xdWVyeUtleSxcbiAgICAgIHN0YXRlOiB0aGlzLnN0YXRlLFxuICAgICAgZmV0Y2hGblxuICAgIH07XG4gICAgYWRkU2lnbmFsUHJvcGVydHkoY29udGV4dCk7XG4gICAgdGhpcy5vcHRpb25zLmJlaGF2aW9yPy5vbkZldGNoKFxuICAgICAgY29udGV4dCxcbiAgICAgIHRoaXNcbiAgICApO1xuICAgIHRoaXMuI3JldmVydFN0YXRlID0gdGhpcy5zdGF0ZTtcbiAgICBpZiAodGhpcy5zdGF0ZS5mZXRjaFN0YXR1cyA9PT0gXCJpZGxlXCIgfHwgdGhpcy5zdGF0ZS5mZXRjaE1ldGEgIT09IGNvbnRleHQuZmV0Y2hPcHRpb25zPy5tZXRhKSB7XG4gICAgICB0aGlzLiNkaXNwYXRjaCh7IHR5cGU6IFwiZmV0Y2hcIiwgbWV0YTogY29udGV4dC5mZXRjaE9wdGlvbnM/Lm1ldGEgfSk7XG4gICAgfVxuICAgIGNvbnN0IG9uRXJyb3IgPSAoZXJyb3IpID0+IHtcbiAgICAgIGlmICghKGlzQ2FuY2VsbGVkRXJyb3IoZXJyb3IpICYmIGVycm9yLnNpbGVudCkpIHtcbiAgICAgICAgdGhpcy4jZGlzcGF0Y2goe1xuICAgICAgICAgIHR5cGU6IFwiZXJyb3JcIixcbiAgICAgICAgICBlcnJvclxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICAgIGlmICghaXNDYW5jZWxsZWRFcnJvcihlcnJvcikpIHtcbiAgICAgICAgdGhpcy4jY2FjaGUuY29uZmlnLm9uRXJyb3I/LihcbiAgICAgICAgICBlcnJvcixcbiAgICAgICAgICB0aGlzXG4gICAgICAgICk7XG4gICAgICAgIHRoaXMuI2NhY2hlLmNvbmZpZy5vblNldHRsZWQ/LihcbiAgICAgICAgICB0aGlzLnN0YXRlLmRhdGEsXG4gICAgICAgICAgZXJyb3IsXG4gICAgICAgICAgdGhpc1xuICAgICAgICApO1xuICAgICAgfVxuICAgICAgaWYgKCF0aGlzLmlzRmV0Y2hpbmdPcHRpbWlzdGljKSB7XG4gICAgICAgIHRoaXMuc2NoZWR1bGVHYygpO1xuICAgICAgfVxuICAgICAgdGhpcy5pc0ZldGNoaW5nT3B0aW1pc3RpYyA9IGZhbHNlO1xuICAgIH07XG4gICAgdGhpcy4jcmV0cnllciA9IGNyZWF0ZVJldHJ5ZXIoe1xuICAgICAgZm46IGNvbnRleHQuZmV0Y2hGbixcbiAgICAgIGFib3J0OiBhYm9ydENvbnRyb2xsZXIuYWJvcnQuYmluZChhYm9ydENvbnRyb2xsZXIpLFxuICAgICAgb25TdWNjZXNzOiAoZGF0YSkgPT4ge1xuICAgICAgICBpZiAodHlwZW9mIGRhdGEgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKFxuICAgICAgICAgICAgICBgUXVlcnkgZGF0YSBjYW5ub3QgYmUgdW5kZWZpbmVkLiBQbGVhc2UgbWFrZSBzdXJlIHRvIHJldHVybiBhIHZhbHVlIG90aGVyIHRoYW4gdW5kZWZpbmVkIGZyb20geW91ciBxdWVyeSBmdW5jdGlvbi4gQWZmZWN0ZWQgcXVlcnkga2V5OiAke3RoaXMucXVlcnlIYXNofWBcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgfVxuICAgICAgICAgIG9uRXJyb3IobmV3IEVycm9yKGAke3RoaXMucXVlcnlIYXNofSBkYXRhIGlzIHVuZGVmaW5lZGApKTtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5zZXREYXRhKGRhdGEpO1xuICAgICAgICB0aGlzLiNjYWNoZS5jb25maWcub25TdWNjZXNzPy4oZGF0YSwgdGhpcyk7XG4gICAgICAgIHRoaXMuI2NhY2hlLmNvbmZpZy5vblNldHRsZWQ/LihcbiAgICAgICAgICBkYXRhLFxuICAgICAgICAgIHRoaXMuc3RhdGUuZXJyb3IsXG4gICAgICAgICAgdGhpc1xuICAgICAgICApO1xuICAgICAgICBpZiAoIXRoaXMuaXNGZXRjaGluZ09wdGltaXN0aWMpIHtcbiAgICAgICAgICB0aGlzLnNjaGVkdWxlR2MoKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmlzRmV0Y2hpbmdPcHRpbWlzdGljID0gZmFsc2U7XG4gICAgICB9LFxuICAgICAgb25FcnJvcixcbiAgICAgIG9uRmFpbDogKGZhaWx1cmVDb3VudCwgZXJyb3IpID0+IHtcbiAgICAgICAgdGhpcy4jZGlzcGF0Y2goeyB0eXBlOiBcImZhaWxlZFwiLCBmYWlsdXJlQ291bnQsIGVycm9yIH0pO1xuICAgICAgfSxcbiAgICAgIG9uUGF1c2U6ICgpID0+IHtcbiAgICAgICAgdGhpcy4jZGlzcGF0Y2goeyB0eXBlOiBcInBhdXNlXCIgfSk7XG4gICAgICB9LFxuICAgICAgb25Db250aW51ZTogKCkgPT4ge1xuICAgICAgICB0aGlzLiNkaXNwYXRjaCh7IHR5cGU6IFwiY29udGludWVcIiB9KTtcbiAgICAgIH0sXG4gICAgICByZXRyeTogY29udGV4dC5vcHRpb25zLnJldHJ5LFxuICAgICAgcmV0cnlEZWxheTogY29udGV4dC5vcHRpb25zLnJldHJ5RGVsYXksXG4gICAgICBuZXR3b3JrTW9kZTogY29udGV4dC5vcHRpb25zLm5ldHdvcmtNb2RlXG4gICAgfSk7XG4gICAgdGhpcy4jcHJvbWlzZSA9IHRoaXMuI3JldHJ5ZXIucHJvbWlzZTtcbiAgICByZXR1cm4gdGhpcy4jcHJvbWlzZTtcbiAgfVxuICAjZGlzcGF0Y2goYWN0aW9uKSB7XG4gICAgY29uc3QgcmVkdWNlciA9IChzdGF0ZSkgPT4ge1xuICAgICAgc3dpdGNoIChhY3Rpb24udHlwZSkge1xuICAgICAgICBjYXNlIFwiZmFpbGVkXCI6XG4gICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIC4uLnN0YXRlLFxuICAgICAgICAgICAgZmV0Y2hGYWlsdXJlQ291bnQ6IGFjdGlvbi5mYWlsdXJlQ291bnQsXG4gICAgICAgICAgICBmZXRjaEZhaWx1cmVSZWFzb246IGFjdGlvbi5lcnJvclxuICAgICAgICAgIH07XG4gICAgICAgIGNhc2UgXCJwYXVzZVwiOlxuICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAuLi5zdGF0ZSxcbiAgICAgICAgICAgIGZldGNoU3RhdHVzOiBcInBhdXNlZFwiXG4gICAgICAgICAgfTtcbiAgICAgICAgY2FzZSBcImNvbnRpbnVlXCI6XG4gICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIC4uLnN0YXRlLFxuICAgICAgICAgICAgZmV0Y2hTdGF0dXM6IFwiZmV0Y2hpbmdcIlxuICAgICAgICAgIH07XG4gICAgICAgIGNhc2UgXCJmZXRjaFwiOlxuICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAuLi5zdGF0ZSxcbiAgICAgICAgICAgIGZldGNoRmFpbHVyZUNvdW50OiAwLFxuICAgICAgICAgICAgZmV0Y2hGYWlsdXJlUmVhc29uOiBudWxsLFxuICAgICAgICAgICAgZmV0Y2hNZXRhOiBhY3Rpb24ubWV0YSA/PyBudWxsLFxuICAgICAgICAgICAgZmV0Y2hTdGF0dXM6IGNhbkZldGNoKHRoaXMub3B0aW9ucy5uZXR3b3JrTW9kZSkgPyBcImZldGNoaW5nXCIgOiBcInBhdXNlZFwiLFxuICAgICAgICAgICAgLi4uIXN0YXRlLmRhdGFVcGRhdGVkQXQgJiYge1xuICAgICAgICAgICAgICBlcnJvcjogbnVsbCxcbiAgICAgICAgICAgICAgc3RhdHVzOiBcInBlbmRpbmdcIlxuICAgICAgICAgICAgfVxuICAgICAgICAgIH07XG4gICAgICAgIGNhc2UgXCJzdWNjZXNzXCI6XG4gICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIC4uLnN0YXRlLFxuICAgICAgICAgICAgZGF0YTogYWN0aW9uLmRhdGEsXG4gICAgICAgICAgICBkYXRhVXBkYXRlQ291bnQ6IHN0YXRlLmRhdGFVcGRhdGVDb3VudCArIDEsXG4gICAgICAgICAgICBkYXRhVXBkYXRlZEF0OiBhY3Rpb24uZGF0YVVwZGF0ZWRBdCA/PyBEYXRlLm5vdygpLFxuICAgICAgICAgICAgZXJyb3I6IG51bGwsXG4gICAgICAgICAgICBpc0ludmFsaWRhdGVkOiBmYWxzZSxcbiAgICAgICAgICAgIHN0YXR1czogXCJzdWNjZXNzXCIsXG4gICAgICAgICAgICAuLi4hYWN0aW9uLm1hbnVhbCAmJiB7XG4gICAgICAgICAgICAgIGZldGNoU3RhdHVzOiBcImlkbGVcIixcbiAgICAgICAgICAgICAgZmV0Y2hGYWlsdXJlQ291bnQ6IDAsXG4gICAgICAgICAgICAgIGZldGNoRmFpbHVyZVJlYXNvbjogbnVsbFxuICAgICAgICAgICAgfVxuICAgICAgICAgIH07XG4gICAgICAgIGNhc2UgXCJlcnJvclwiOlxuICAgICAgICAgIGNvbnN0IGVycm9yID0gYWN0aW9uLmVycm9yO1xuICAgICAgICAgIGlmIChpc0NhbmNlbGxlZEVycm9yKGVycm9yKSAmJiBlcnJvci5yZXZlcnQgJiYgdGhpcy4jcmV2ZXJ0U3RhdGUpIHtcbiAgICAgICAgICAgIHJldHVybiB7IC4uLnRoaXMuI3JldmVydFN0YXRlLCBmZXRjaFN0YXR1czogXCJpZGxlXCIgfTtcbiAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIC4uLnN0YXRlLFxuICAgICAgICAgICAgZXJyb3IsXG4gICAgICAgICAgICBlcnJvclVwZGF0ZUNvdW50OiBzdGF0ZS5lcnJvclVwZGF0ZUNvdW50ICsgMSxcbiAgICAgICAgICAgIGVycm9yVXBkYXRlZEF0OiBEYXRlLm5vdygpLFxuICAgICAgICAgICAgZmV0Y2hGYWlsdXJlQ291bnQ6IHN0YXRlLmZldGNoRmFpbHVyZUNvdW50ICsgMSxcbiAgICAgICAgICAgIGZldGNoRmFpbHVyZVJlYXNvbjogZXJyb3IsXG4gICAgICAgICAgICBmZXRjaFN0YXR1czogXCJpZGxlXCIsXG4gICAgICAgICAgICBzdGF0dXM6IFwiZXJyb3JcIlxuICAgICAgICAgIH07XG4gICAgICAgIGNhc2UgXCJpbnZhbGlkYXRlXCI6XG4gICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIC4uLnN0YXRlLFxuICAgICAgICAgICAgaXNJbnZhbGlkYXRlZDogdHJ1ZVxuICAgICAgICAgIH07XG4gICAgICAgIGNhc2UgXCJzZXRTdGF0ZVwiOlxuICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAuLi5zdGF0ZSxcbiAgICAgICAgICAgIC4uLmFjdGlvbi5zdGF0ZVxuICAgICAgICAgIH07XG4gICAgICB9XG4gICAgfTtcbiAgICB0aGlzLnN0YXRlID0gcmVkdWNlcih0aGlzLnN0YXRlKTtcbiAgICBub3RpZnlNYW5hZ2VyLmJhdGNoKCgpID0+IHtcbiAgICAgIHRoaXMuI29ic2VydmVycy5mb3JFYWNoKChvYnNlcnZlcikgPT4ge1xuICAgICAgICBvYnNlcnZlci5vblF1ZXJ5VXBkYXRlKCk7XG4gICAgICB9KTtcbiAgICAgIHRoaXMuI2NhY2hlLm5vdGlmeSh7IHF1ZXJ5OiB0aGlzLCB0eXBlOiBcInVwZGF0ZWRcIiwgYWN0aW9uIH0pO1xuICAgIH0pO1xuICB9XG59O1xuZnVuY3Rpb24gZ2V0RGVmYXVsdFN0YXRlKG9wdGlvbnMpIHtcbiAgY29uc3QgZGF0YSA9IHR5cGVvZiBvcHRpb25zLmluaXRpYWxEYXRhID09PSBcImZ1bmN0aW9uXCIgPyBvcHRpb25zLmluaXRpYWxEYXRhKCkgOiBvcHRpb25zLmluaXRpYWxEYXRhO1xuICBjb25zdCBoYXNEYXRhID0gdHlwZW9mIGRhdGEgIT09IFwidW5kZWZpbmVkXCI7XG4gIGNvbnN0IGluaXRpYWxEYXRhVXBkYXRlZEF0ID0gaGFzRGF0YSA/IHR5cGVvZiBvcHRpb25zLmluaXRpYWxEYXRhVXBkYXRlZEF0ID09PSBcImZ1bmN0aW9uXCIgPyBvcHRpb25zLmluaXRpYWxEYXRhVXBkYXRlZEF0KCkgOiBvcHRpb25zLmluaXRpYWxEYXRhVXBkYXRlZEF0IDogMDtcbiAgcmV0dXJuIHtcbiAgICBkYXRhLFxuICAgIGRhdGFVcGRhdGVDb3VudDogMCxcbiAgICBkYXRhVXBkYXRlZEF0OiBoYXNEYXRhID8gaW5pdGlhbERhdGFVcGRhdGVkQXQgPz8gRGF0ZS5ub3coKSA6IDAsXG4gICAgZXJyb3I6IG51bGwsXG4gICAgZXJyb3JVcGRhdGVDb3VudDogMCxcbiAgICBlcnJvclVwZGF0ZWRBdDogMCxcbiAgICBmZXRjaEZhaWx1cmVDb3VudDogMCxcbiAgICBmZXRjaEZhaWx1cmVSZWFzb246IG51bGwsXG4gICAgZmV0Y2hNZXRhOiBudWxsLFxuICAgIGlzSW52YWxpZGF0ZWQ6IGZhbHNlLFxuICAgIHN0YXR1czogaGFzRGF0YSA/IFwic3VjY2Vzc1wiIDogXCJwZW5kaW5nXCIsXG4gICAgZmV0Y2hTdGF0dXM6IFwiaWRsZVwiXG4gIH07XG59XG5leHBvcnQge1xuICBRdWVyeVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXF1ZXJ5LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/query.js\n"));

/***/ }),

/***/ "./node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/queryCache.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/queryCache.js ***!
  \*********************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   QueryCache: function() { return /* binding */ QueryCache; }\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"./node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/utils.js\");\n/* harmony import */ var _query_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./query.js */ \"./node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/query.js\");\n/* harmony import */ var _notifyManager_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./notifyManager.js */ \"./node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/notifyManager.js\");\n/* harmony import */ var _subscribable_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./subscribable.js */ \"./node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/subscribable.js\");\n// src/queryCache.ts\n\n\n\n\nvar QueryCache = class extends _subscribable_js__WEBPACK_IMPORTED_MODULE_0__.Subscribable {\n  constructor(config = {}) {\n    super();\n    this.config = config;\n    this.#queries = /* @__PURE__ */ new Map();\n  }\n  #queries;\n  build(client, options, state) {\n    const queryKey = options.queryKey;\n    const queryHash = options.queryHash ?? (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.hashQueryKeyByOptions)(queryKey, options);\n    let query = this.get(queryHash);\n    if (!query) {\n      query = new _query_js__WEBPACK_IMPORTED_MODULE_2__.Query({\n        cache: this,\n        queryKey,\n        queryHash,\n        options: client.defaultQueryOptions(options),\n        state,\n        defaultOptions: client.getQueryDefaults(queryKey)\n      });\n      this.add(query);\n    }\n    return query;\n  }\n  add(query) {\n    if (!this.#queries.has(query.queryHash)) {\n      this.#queries.set(query.queryHash, query);\n      this.notify({\n        type: \"added\",\n        query\n      });\n    }\n  }\n  remove(query) {\n    const queryInMap = this.#queries.get(query.queryHash);\n    if (queryInMap) {\n      query.destroy();\n      if (queryInMap === query) {\n        this.#queries.delete(query.queryHash);\n      }\n      this.notify({ type: \"removed\", query });\n    }\n  }\n  clear() {\n    _notifyManager_js__WEBPACK_IMPORTED_MODULE_3__.notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        this.remove(query);\n      });\n    });\n  }\n  get(queryHash) {\n    return this.#queries.get(queryHash);\n  }\n  getAll() {\n    return [...this.#queries.values()];\n  }\n  find(filters) {\n    const defaultedFilters = { exact: true, ...filters };\n    return this.getAll().find(\n      (query) => (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.matchQuery)(defaultedFilters, query)\n    );\n  }\n  findAll(filters = {}) {\n    const queries = this.getAll();\n    return Object.keys(filters).length > 0 ? queries.filter((query) => (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.matchQuery)(filters, query)) : queries;\n  }\n  notify(event) {\n    _notifyManager_js__WEBPACK_IMPORTED_MODULE_3__.notifyManager.batch(() => {\n      this.listeners.forEach((listener) => {\n        listener(event);\n      });\n    });\n  }\n  onFocus() {\n    _notifyManager_js__WEBPACK_IMPORTED_MODULE_3__.notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        query.onFocus();\n      });\n    });\n  }\n  onOnline() {\n    _notifyManager_js__WEBPACK_IMPORTED_MODULE_3__.notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        query.onOnline();\n      });\n    });\n  }\n};\n\n//# sourceMappingURL=queryCache.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3JlYWN0LXF1ZXJ5L25vZGVfbW9kdWxlcy9AdGFuc3RhY2svcXVlcnktY29yZS9idWlsZC9tb2Rlcm4vcXVlcnlDYWNoZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQytEO0FBQzVCO0FBQ2dCO0FBQ0Y7QUFDakQsK0JBQStCLDBEQUFZO0FBQzNDLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQyxnRUFBcUI7QUFDaEU7QUFDQTtBQUNBLGtCQUFrQiw0Q0FBSztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLHdCQUF3QjtBQUM1QztBQUNBO0FBQ0E7QUFDQSxJQUFJLDREQUFhO0FBQ2pCO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0I7QUFDL0I7QUFDQSxpQkFBaUIscURBQVU7QUFDM0I7QUFDQTtBQUNBLHNCQUFzQjtBQUN0QjtBQUNBLHVFQUF1RSxxREFBVTtBQUNqRjtBQUNBO0FBQ0EsSUFBSSw0REFBYTtBQUNqQjtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBO0FBQ0EsSUFBSSw0REFBYTtBQUNqQjtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBO0FBQ0EsSUFBSSw0REFBYTtBQUNqQjtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBO0FBR0U7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3JlYWN0LXF1ZXJ5L25vZGVfbW9kdWxlcy9AdGFuc3RhY2svcXVlcnktY29yZS9idWlsZC9tb2Rlcm4vcXVlcnlDYWNoZS5qcz85MTkxIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9xdWVyeUNhY2hlLnRzXG5pbXBvcnQgeyBoYXNoUXVlcnlLZXlCeU9wdGlvbnMsIG1hdGNoUXVlcnkgfSBmcm9tIFwiLi91dGlscy5qc1wiO1xuaW1wb3J0IHsgUXVlcnkgfSBmcm9tIFwiLi9xdWVyeS5qc1wiO1xuaW1wb3J0IHsgbm90aWZ5TWFuYWdlciB9IGZyb20gXCIuL25vdGlmeU1hbmFnZXIuanNcIjtcbmltcG9ydCB7IFN1YnNjcmliYWJsZSB9IGZyb20gXCIuL3N1YnNjcmliYWJsZS5qc1wiO1xudmFyIFF1ZXJ5Q2FjaGUgPSBjbGFzcyBleHRlbmRzIFN1YnNjcmliYWJsZSB7XG4gIGNvbnN0cnVjdG9yKGNvbmZpZyA9IHt9KSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLmNvbmZpZyA9IGNvbmZpZztcbiAgICB0aGlzLiNxdWVyaWVzID0gLyogQF9fUFVSRV9fICovIG5ldyBNYXAoKTtcbiAgfVxuICAjcXVlcmllcztcbiAgYnVpbGQoY2xpZW50LCBvcHRpb25zLCBzdGF0ZSkge1xuICAgIGNvbnN0IHF1ZXJ5S2V5ID0gb3B0aW9ucy5xdWVyeUtleTtcbiAgICBjb25zdCBxdWVyeUhhc2ggPSBvcHRpb25zLnF1ZXJ5SGFzaCA/PyBoYXNoUXVlcnlLZXlCeU9wdGlvbnMocXVlcnlLZXksIG9wdGlvbnMpO1xuICAgIGxldCBxdWVyeSA9IHRoaXMuZ2V0KHF1ZXJ5SGFzaCk7XG4gICAgaWYgKCFxdWVyeSkge1xuICAgICAgcXVlcnkgPSBuZXcgUXVlcnkoe1xuICAgICAgICBjYWNoZTogdGhpcyxcbiAgICAgICAgcXVlcnlLZXksXG4gICAgICAgIHF1ZXJ5SGFzaCxcbiAgICAgICAgb3B0aW9uczogY2xpZW50LmRlZmF1bHRRdWVyeU9wdGlvbnMob3B0aW9ucyksXG4gICAgICAgIHN0YXRlLFxuICAgICAgICBkZWZhdWx0T3B0aW9uczogY2xpZW50LmdldFF1ZXJ5RGVmYXVsdHMocXVlcnlLZXkpXG4gICAgICB9KTtcbiAgICAgIHRoaXMuYWRkKHF1ZXJ5KTtcbiAgICB9XG4gICAgcmV0dXJuIHF1ZXJ5O1xuICB9XG4gIGFkZChxdWVyeSkge1xuICAgIGlmICghdGhpcy4jcXVlcmllcy5oYXMocXVlcnkucXVlcnlIYXNoKSkge1xuICAgICAgdGhpcy4jcXVlcmllcy5zZXQocXVlcnkucXVlcnlIYXNoLCBxdWVyeSk7XG4gICAgICB0aGlzLm5vdGlmeSh7XG4gICAgICAgIHR5cGU6IFwiYWRkZWRcIixcbiAgICAgICAgcXVlcnlcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuICByZW1vdmUocXVlcnkpIHtcbiAgICBjb25zdCBxdWVyeUluTWFwID0gdGhpcy4jcXVlcmllcy5nZXQocXVlcnkucXVlcnlIYXNoKTtcbiAgICBpZiAocXVlcnlJbk1hcCkge1xuICAgICAgcXVlcnkuZGVzdHJveSgpO1xuICAgICAgaWYgKHF1ZXJ5SW5NYXAgPT09IHF1ZXJ5KSB7XG4gICAgICAgIHRoaXMuI3F1ZXJpZXMuZGVsZXRlKHF1ZXJ5LnF1ZXJ5SGFzaCk7XG4gICAgICB9XG4gICAgICB0aGlzLm5vdGlmeSh7IHR5cGU6IFwicmVtb3ZlZFwiLCBxdWVyeSB9KTtcbiAgICB9XG4gIH1cbiAgY2xlYXIoKSB7XG4gICAgbm90aWZ5TWFuYWdlci5iYXRjaCgoKSA9PiB7XG4gICAgICB0aGlzLmdldEFsbCgpLmZvckVhY2goKHF1ZXJ5KSA9PiB7XG4gICAgICAgIHRoaXMucmVtb3ZlKHF1ZXJ5KTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG4gIGdldChxdWVyeUhhc2gpIHtcbiAgICByZXR1cm4gdGhpcy4jcXVlcmllcy5nZXQocXVlcnlIYXNoKTtcbiAgfVxuICBnZXRBbGwoKSB7XG4gICAgcmV0dXJuIFsuLi50aGlzLiNxdWVyaWVzLnZhbHVlcygpXTtcbiAgfVxuICBmaW5kKGZpbHRlcnMpIHtcbiAgICBjb25zdCBkZWZhdWx0ZWRGaWx0ZXJzID0geyBleGFjdDogdHJ1ZSwgLi4uZmlsdGVycyB9O1xuICAgIHJldHVybiB0aGlzLmdldEFsbCgpLmZpbmQoXG4gICAgICAocXVlcnkpID0+IG1hdGNoUXVlcnkoZGVmYXVsdGVkRmlsdGVycywgcXVlcnkpXG4gICAgKTtcbiAgfVxuICBmaW5kQWxsKGZpbHRlcnMgPSB7fSkge1xuICAgIGNvbnN0IHF1ZXJpZXMgPSB0aGlzLmdldEFsbCgpO1xuICAgIHJldHVybiBPYmplY3Qua2V5cyhmaWx0ZXJzKS5sZW5ndGggPiAwID8gcXVlcmllcy5maWx0ZXIoKHF1ZXJ5KSA9PiBtYXRjaFF1ZXJ5KGZpbHRlcnMsIHF1ZXJ5KSkgOiBxdWVyaWVzO1xuICB9XG4gIG5vdGlmeShldmVudCkge1xuICAgIG5vdGlmeU1hbmFnZXIuYmF0Y2goKCkgPT4ge1xuICAgICAgdGhpcy5saXN0ZW5lcnMuZm9yRWFjaCgobGlzdGVuZXIpID0+IHtcbiAgICAgICAgbGlzdGVuZXIoZXZlbnQpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cbiAgb25Gb2N1cygpIHtcbiAgICBub3RpZnlNYW5hZ2VyLmJhdGNoKCgpID0+IHtcbiAgICAgIHRoaXMuZ2V0QWxsKCkuZm9yRWFjaCgocXVlcnkpID0+IHtcbiAgICAgICAgcXVlcnkub25Gb2N1cygpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cbiAgb25PbmxpbmUoKSB7XG4gICAgbm90aWZ5TWFuYWdlci5iYXRjaCgoKSA9PiB7XG4gICAgICB0aGlzLmdldEFsbCgpLmZvckVhY2goKHF1ZXJ5KSA9PiB7XG4gICAgICAgIHF1ZXJ5Lm9uT25saW5lKCk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxufTtcbmV4cG9ydCB7XG4gIFF1ZXJ5Q2FjaGVcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1xdWVyeUNhY2hlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/queryCache.js\n"));

/***/ }),

/***/ "./node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/queryClient.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/queryClient.js ***!
  \**********************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   QueryClient: function() { return /* binding */ QueryClient; }\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils.js */ \"./node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/utils.js\");\n/* harmony import */ var _queryCache_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./queryCache.js */ \"./node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/queryCache.js\");\n/* harmony import */ var _mutationCache_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mutationCache.js */ \"./node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/mutationCache.js\");\n/* harmony import */ var _focusManager_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./focusManager.js */ \"./node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/focusManager.js\");\n/* harmony import */ var _onlineManager_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./onlineManager.js */ \"./node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/onlineManager.js\");\n/* harmony import */ var _notifyManager_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./notifyManager.js */ \"./node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/notifyManager.js\");\n/* harmony import */ var _infiniteQueryBehavior_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./infiniteQueryBehavior.js */ \"./node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/infiniteQueryBehavior.js\");\n// src/queryClient.ts\n\n\n\n\n\n\n\nvar QueryClient = class {\n  #queryCache;\n  #mutationCache;\n  #defaultOptions;\n  #queryDefaults;\n  #mutationDefaults;\n  #mountCount;\n  #unsubscribeFocus;\n  #unsubscribeOnline;\n  constructor(config = {}) {\n    this.#queryCache = config.queryCache || new _queryCache_js__WEBPACK_IMPORTED_MODULE_0__.QueryCache();\n    this.#mutationCache = config.mutationCache || new _mutationCache_js__WEBPACK_IMPORTED_MODULE_1__.MutationCache();\n    this.#defaultOptions = config.defaultOptions || {};\n    this.#queryDefaults = /* @__PURE__ */ new Map();\n    this.#mutationDefaults = /* @__PURE__ */ new Map();\n    this.#mountCount = 0;\n  }\n  mount() {\n    this.#mountCount++;\n    if (this.#mountCount !== 1)\n      return;\n    this.#unsubscribeFocus = _focusManager_js__WEBPACK_IMPORTED_MODULE_2__.focusManager.subscribe(() => {\n      if (_focusManager_js__WEBPACK_IMPORTED_MODULE_2__.focusManager.isFocused()) {\n        this.resumePausedMutations();\n        this.#queryCache.onFocus();\n      }\n    });\n    this.#unsubscribeOnline = _onlineManager_js__WEBPACK_IMPORTED_MODULE_3__.onlineManager.subscribe(() => {\n      if (_onlineManager_js__WEBPACK_IMPORTED_MODULE_3__.onlineManager.isOnline()) {\n        this.resumePausedMutations();\n        this.#queryCache.onOnline();\n      }\n    });\n  }\n  unmount() {\n    this.#mountCount--;\n    if (this.#mountCount !== 0)\n      return;\n    this.#unsubscribeFocus?.();\n    this.#unsubscribeFocus = void 0;\n    this.#unsubscribeOnline?.();\n    this.#unsubscribeOnline = void 0;\n  }\n  isFetching(filters) {\n    return this.#queryCache.findAll({ ...filters, fetchStatus: \"fetching\" }).length;\n  }\n  isMutating(filters) {\n    return this.#mutationCache.findAll({ ...filters, status: \"pending\" }).length;\n  }\n  getQueryData(queryKey) {\n    return this.#queryCache.find({ queryKey })?.state.data;\n  }\n  ensureQueryData(options) {\n    const cachedData = this.getQueryData(options.queryKey);\n    return cachedData !== void 0 ? Promise.resolve(cachedData) : this.fetchQuery(options);\n  }\n  getQueriesData(filters) {\n    return this.getQueryCache().findAll(filters).map(({ queryKey, state }) => {\n      const data = state.data;\n      return [queryKey, data];\n    });\n  }\n  setQueryData(queryKey, updater, options) {\n    const query = this.#queryCache.find({ queryKey });\n    const prevData = query?.state.data;\n    const data = (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.functionalUpdate)(updater, prevData);\n    if (typeof data === \"undefined\") {\n      return void 0;\n    }\n    const defaultedOptions = this.defaultQueryOptions({ queryKey });\n    return this.#queryCache.build(this, defaultedOptions).setData(data, { ...options, manual: true });\n  }\n  setQueriesData(filters, updater, options) {\n    return _notifyManager_js__WEBPACK_IMPORTED_MODULE_5__.notifyManager.batch(\n      () => this.getQueryCache().findAll(filters).map(({ queryKey }) => [\n        queryKey,\n        this.setQueryData(queryKey, updater, options)\n      ])\n    );\n  }\n  getQueryState(queryKey) {\n    return this.#queryCache.find({ queryKey })?.state;\n  }\n  removeQueries(filters) {\n    const queryCache = this.#queryCache;\n    _notifyManager_js__WEBPACK_IMPORTED_MODULE_5__.notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach((query) => {\n        queryCache.remove(query);\n      });\n    });\n  }\n  resetQueries(filters, options) {\n    const queryCache = this.#queryCache;\n    const refetchFilters = {\n      type: \"active\",\n      ...filters\n    };\n    return _notifyManager_js__WEBPACK_IMPORTED_MODULE_5__.notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach((query) => {\n        query.reset();\n      });\n      return this.refetchQueries(refetchFilters, options);\n    });\n  }\n  cancelQueries(filters = {}, cancelOptions = {}) {\n    const defaultedCancelOptions = { revert: true, ...cancelOptions };\n    const promises = _notifyManager_js__WEBPACK_IMPORTED_MODULE_5__.notifyManager.batch(\n      () => this.#queryCache.findAll(filters).map((query) => query.cancel(defaultedCancelOptions))\n    );\n    return Promise.all(promises).then(_utils_js__WEBPACK_IMPORTED_MODULE_4__.noop).catch(_utils_js__WEBPACK_IMPORTED_MODULE_4__.noop);\n  }\n  invalidateQueries(filters = {}, options = {}) {\n    return _notifyManager_js__WEBPACK_IMPORTED_MODULE_5__.notifyManager.batch(() => {\n      this.#queryCache.findAll(filters).forEach((query) => {\n        query.invalidate();\n      });\n      if (filters.refetchType === \"none\") {\n        return Promise.resolve();\n      }\n      const refetchFilters = {\n        ...filters,\n        type: filters.refetchType ?? filters.type ?? \"active\"\n      };\n      return this.refetchQueries(refetchFilters, options);\n    });\n  }\n  refetchQueries(filters = {}, options) {\n    const fetchOptions = {\n      ...options,\n      cancelRefetch: options?.cancelRefetch ?? true\n    };\n    const promises = _notifyManager_js__WEBPACK_IMPORTED_MODULE_5__.notifyManager.batch(\n      () => this.#queryCache.findAll(filters).filter((query) => !query.isDisabled()).map((query) => {\n        let promise = query.fetch(void 0, fetchOptions);\n        if (!fetchOptions.throwOnError) {\n          promise = promise.catch(_utils_js__WEBPACK_IMPORTED_MODULE_4__.noop);\n        }\n        return query.state.fetchStatus === \"paused\" ? Promise.resolve() : promise;\n      })\n    );\n    return Promise.all(promises).then(_utils_js__WEBPACK_IMPORTED_MODULE_4__.noop);\n  }\n  fetchQuery(options) {\n    const defaultedOptions = this.defaultQueryOptions(options);\n    if (typeof defaultedOptions.retry === \"undefined\") {\n      defaultedOptions.retry = false;\n    }\n    const query = this.#queryCache.build(this, defaultedOptions);\n    return query.isStaleByTime(defaultedOptions.staleTime) ? query.fetch(defaultedOptions) : Promise.resolve(query.state.data);\n  }\n  prefetchQuery(options) {\n    return this.fetchQuery(options).then(_utils_js__WEBPACK_IMPORTED_MODULE_4__.noop).catch(_utils_js__WEBPACK_IMPORTED_MODULE_4__.noop);\n  }\n  fetchInfiniteQuery(options) {\n    options.behavior = (0,_infiniteQueryBehavior_js__WEBPACK_IMPORTED_MODULE_6__.infiniteQueryBehavior)(options.pages);\n    return this.fetchQuery(options);\n  }\n  prefetchInfiniteQuery(options) {\n    return this.fetchInfiniteQuery(options).then(_utils_js__WEBPACK_IMPORTED_MODULE_4__.noop).catch(_utils_js__WEBPACK_IMPORTED_MODULE_4__.noop);\n  }\n  resumePausedMutations() {\n    return this.#mutationCache.resumePausedMutations();\n  }\n  getQueryCache() {\n    return this.#queryCache;\n  }\n  getMutationCache() {\n    return this.#mutationCache;\n  }\n  getDefaultOptions() {\n    return this.#defaultOptions;\n  }\n  setDefaultOptions(options) {\n    this.#defaultOptions = options;\n  }\n  setQueryDefaults(queryKey, options) {\n    this.#queryDefaults.set((0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.hashKey)(queryKey), {\n      queryKey,\n      defaultOptions: options\n    });\n  }\n  getQueryDefaults(queryKey) {\n    const defaults = [...this.#queryDefaults.values()];\n    let result = {};\n    defaults.forEach((queryDefault) => {\n      if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.partialMatchKey)(queryKey, queryDefault.queryKey)) {\n        result = { ...result, ...queryDefault.defaultOptions };\n      }\n    });\n    return result;\n  }\n  setMutationDefaults(mutationKey, options) {\n    this.#mutationDefaults.set((0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.hashKey)(mutationKey), {\n      mutationKey,\n      defaultOptions: options\n    });\n  }\n  getMutationDefaults(mutationKey) {\n    const defaults = [...this.#mutationDefaults.values()];\n    let result = {};\n    defaults.forEach((queryDefault) => {\n      if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.partialMatchKey)(mutationKey, queryDefault.mutationKey)) {\n        result = { ...result, ...queryDefault.defaultOptions };\n      }\n    });\n    return result;\n  }\n  defaultQueryOptions(options) {\n    if (options?._defaulted) {\n      return options;\n    }\n    const defaultedOptions = {\n      ...this.#defaultOptions.queries,\n      ...options?.queryKey && this.getQueryDefaults(options.queryKey),\n      ...options,\n      _defaulted: true\n    };\n    if (!defaultedOptions.queryHash) {\n      defaultedOptions.queryHash = (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.hashQueryKeyByOptions)(\n        defaultedOptions.queryKey,\n        defaultedOptions\n      );\n    }\n    if (typeof defaultedOptions.refetchOnReconnect === \"undefined\") {\n      defaultedOptions.refetchOnReconnect = defaultedOptions.networkMode !== \"always\";\n    }\n    if (typeof defaultedOptions.throwOnError === \"undefined\") {\n      defaultedOptions.throwOnError = !!defaultedOptions.suspense;\n    }\n    if (typeof defaultedOptions.networkMode === \"undefined\" && defaultedOptions.persister) {\n      defaultedOptions.networkMode = \"offlineFirst\";\n    }\n    return defaultedOptions;\n  }\n  defaultMutationOptions(options) {\n    if (options?._defaulted) {\n      return options;\n    }\n    return {\n      ...this.#defaultOptions.mutations,\n      ...options?.mutationKey && this.getMutationDefaults(options.mutationKey),\n      ...options,\n      _defaulted: true\n    };\n  }\n  clear() {\n    this.#queryCache.clear();\n    this.#mutationCache.clear();\n  }\n};\n\n//# sourceMappingURL=queryClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3JlYWN0LXF1ZXJ5L25vZGVfbW9kdWxlcy9AdGFuc3RhY2svcXVlcnktY29yZS9idWlsZC9tb2Rlcm4vcXVlcnlDbGllbnQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQTtBQU9vQjtBQUN5QjtBQUNNO0FBQ0Y7QUFDRTtBQUNBO0FBQ2dCO0FBQ25FO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QixnREFBZ0Qsc0RBQVU7QUFDMUQsc0RBQXNELDREQUFhO0FBQ25FO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QiwwREFBWTtBQUN6QyxVQUFVLDBEQUFZO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCw4QkFBOEIsNERBQWE7QUFDM0MsVUFBVSw0REFBYTtBQUN2QjtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQyxxQ0FBcUM7QUFDM0U7QUFDQTtBQUNBLHlDQUF5QywrQkFBK0I7QUFDeEU7QUFDQTtBQUNBLG1DQUFtQyxVQUFVO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdEQUF3RCxpQkFBaUI7QUFDekU7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsMENBQTBDLFVBQVU7QUFDcEQ7QUFDQSxpQkFBaUIsMkRBQWdCO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBLHdEQUF3RCxVQUFVO0FBQ2xFLDBFQUEwRSwwQkFBMEI7QUFDcEc7QUFDQTtBQUNBLFdBQVcsNERBQWE7QUFDeEIseURBQXlELFVBQVU7QUFDbkU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLFVBQVU7QUFDN0M7QUFDQTtBQUNBO0FBQ0EsSUFBSSw0REFBYTtBQUNqQjtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsNERBQWE7QUFDeEI7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBLEtBQUs7QUFDTDtBQUNBLDRCQUE0QixvQkFBb0I7QUFDaEQscUNBQXFDO0FBQ3JDLHFCQUFxQiw0REFBYTtBQUNsQztBQUNBO0FBQ0Esc0NBQXNDLDJDQUFJLFFBQVEsMkNBQUk7QUFDdEQ7QUFDQSxnQ0FBZ0MsY0FBYztBQUM5QyxXQUFXLDREQUFhO0FBQ3hCO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQiw0REFBYTtBQUNsQztBQUNBO0FBQ0E7QUFDQSxrQ0FBa0MsMkNBQUk7QUFDdEM7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBLHNDQUFzQywyQ0FBSTtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlDQUF5QywyQ0FBSSxRQUFRLDJDQUFJO0FBQ3pEO0FBQ0E7QUFDQSx1QkFBdUIsZ0ZBQXFCO0FBQzVDO0FBQ0E7QUFDQTtBQUNBLGlEQUFpRCwyQ0FBSSxRQUFRLDJDQUFJO0FBQ2pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsa0RBQU87QUFDbkM7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVSwwREFBZTtBQUN6QixtQkFBbUI7QUFDbkI7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLGtEQUFPO0FBQ3RDO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVUsMERBQWU7QUFDekIsbUJBQW1CO0FBQ25CO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLGdFQUFxQjtBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9yZWFjdC1xdWVyeS9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3F1ZXJ5LWNvcmUvYnVpbGQvbW9kZXJuL3F1ZXJ5Q2xpZW50LmpzPzdiZDEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL3F1ZXJ5Q2xpZW50LnRzXG5pbXBvcnQge1xuICBmdW5jdGlvbmFsVXBkYXRlLFxuICBoYXNoS2V5LFxuICBoYXNoUXVlcnlLZXlCeU9wdGlvbnMsXG4gIG5vb3AsXG4gIHBhcnRpYWxNYXRjaEtleVxufSBmcm9tIFwiLi91dGlscy5qc1wiO1xuaW1wb3J0IHsgUXVlcnlDYWNoZSB9IGZyb20gXCIuL3F1ZXJ5Q2FjaGUuanNcIjtcbmltcG9ydCB7IE11dGF0aW9uQ2FjaGUgfSBmcm9tIFwiLi9tdXRhdGlvbkNhY2hlLmpzXCI7XG5pbXBvcnQgeyBmb2N1c01hbmFnZXIgfSBmcm9tIFwiLi9mb2N1c01hbmFnZXIuanNcIjtcbmltcG9ydCB7IG9ubGluZU1hbmFnZXIgfSBmcm9tIFwiLi9vbmxpbmVNYW5hZ2VyLmpzXCI7XG5pbXBvcnQgeyBub3RpZnlNYW5hZ2VyIH0gZnJvbSBcIi4vbm90aWZ5TWFuYWdlci5qc1wiO1xuaW1wb3J0IHsgaW5maW5pdGVRdWVyeUJlaGF2aW9yIH0gZnJvbSBcIi4vaW5maW5pdGVRdWVyeUJlaGF2aW9yLmpzXCI7XG52YXIgUXVlcnlDbGllbnQgPSBjbGFzcyB7XG4gICNxdWVyeUNhY2hlO1xuICAjbXV0YXRpb25DYWNoZTtcbiAgI2RlZmF1bHRPcHRpb25zO1xuICAjcXVlcnlEZWZhdWx0cztcbiAgI211dGF0aW9uRGVmYXVsdHM7XG4gICNtb3VudENvdW50O1xuICAjdW5zdWJzY3JpYmVGb2N1cztcbiAgI3Vuc3Vic2NyaWJlT25saW5lO1xuICBjb25zdHJ1Y3Rvcihjb25maWcgPSB7fSkge1xuICAgIHRoaXMuI3F1ZXJ5Q2FjaGUgPSBjb25maWcucXVlcnlDYWNoZSB8fCBuZXcgUXVlcnlDYWNoZSgpO1xuICAgIHRoaXMuI211dGF0aW9uQ2FjaGUgPSBjb25maWcubXV0YXRpb25DYWNoZSB8fCBuZXcgTXV0YXRpb25DYWNoZSgpO1xuICAgIHRoaXMuI2RlZmF1bHRPcHRpb25zID0gY29uZmlnLmRlZmF1bHRPcHRpb25zIHx8IHt9O1xuICAgIHRoaXMuI3F1ZXJ5RGVmYXVsdHMgPSAvKiBAX19QVVJFX18gKi8gbmV3IE1hcCgpO1xuICAgIHRoaXMuI211dGF0aW9uRGVmYXVsdHMgPSAvKiBAX19QVVJFX18gKi8gbmV3IE1hcCgpO1xuICAgIHRoaXMuI21vdW50Q291bnQgPSAwO1xuICB9XG4gIG1vdW50KCkge1xuICAgIHRoaXMuI21vdW50Q291bnQrKztcbiAgICBpZiAodGhpcy4jbW91bnRDb3VudCAhPT0gMSlcbiAgICAgIHJldHVybjtcbiAgICB0aGlzLiN1bnN1YnNjcmliZUZvY3VzID0gZm9jdXNNYW5hZ2VyLnN1YnNjcmliZSgoKSA9PiB7XG4gICAgICBpZiAoZm9jdXNNYW5hZ2VyLmlzRm9jdXNlZCgpKSB7XG4gICAgICAgIHRoaXMucmVzdW1lUGF1c2VkTXV0YXRpb25zKCk7XG4gICAgICAgIHRoaXMuI3F1ZXJ5Q2FjaGUub25Gb2N1cygpO1xuICAgICAgfVxuICAgIH0pO1xuICAgIHRoaXMuI3Vuc3Vic2NyaWJlT25saW5lID0gb25saW5lTWFuYWdlci5zdWJzY3JpYmUoKCkgPT4ge1xuICAgICAgaWYgKG9ubGluZU1hbmFnZXIuaXNPbmxpbmUoKSkge1xuICAgICAgICB0aGlzLnJlc3VtZVBhdXNlZE11dGF0aW9ucygpO1xuICAgICAgICB0aGlzLiNxdWVyeUNhY2hlLm9uT25saW5lKCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cbiAgdW5tb3VudCgpIHtcbiAgICB0aGlzLiNtb3VudENvdW50LS07XG4gICAgaWYgKHRoaXMuI21vdW50Q291bnQgIT09IDApXG4gICAgICByZXR1cm47XG4gICAgdGhpcy4jdW5zdWJzY3JpYmVGb2N1cz8uKCk7XG4gICAgdGhpcy4jdW5zdWJzY3JpYmVGb2N1cyA9IHZvaWQgMDtcbiAgICB0aGlzLiN1bnN1YnNjcmliZU9ubGluZT8uKCk7XG4gICAgdGhpcy4jdW5zdWJzY3JpYmVPbmxpbmUgPSB2b2lkIDA7XG4gIH1cbiAgaXNGZXRjaGluZyhmaWx0ZXJzKSB7XG4gICAgcmV0dXJuIHRoaXMuI3F1ZXJ5Q2FjaGUuZmluZEFsbCh7IC4uLmZpbHRlcnMsIGZldGNoU3RhdHVzOiBcImZldGNoaW5nXCIgfSkubGVuZ3RoO1xuICB9XG4gIGlzTXV0YXRpbmcoZmlsdGVycykge1xuICAgIHJldHVybiB0aGlzLiNtdXRhdGlvbkNhY2hlLmZpbmRBbGwoeyAuLi5maWx0ZXJzLCBzdGF0dXM6IFwicGVuZGluZ1wiIH0pLmxlbmd0aDtcbiAgfVxuICBnZXRRdWVyeURhdGEocXVlcnlLZXkpIHtcbiAgICByZXR1cm4gdGhpcy4jcXVlcnlDYWNoZS5maW5kKHsgcXVlcnlLZXkgfSk/LnN0YXRlLmRhdGE7XG4gIH1cbiAgZW5zdXJlUXVlcnlEYXRhKG9wdGlvbnMpIHtcbiAgICBjb25zdCBjYWNoZWREYXRhID0gdGhpcy5nZXRRdWVyeURhdGEob3B0aW9ucy5xdWVyeUtleSk7XG4gICAgcmV0dXJuIGNhY2hlZERhdGEgIT09IHZvaWQgMCA/IFByb21pc2UucmVzb2x2ZShjYWNoZWREYXRhKSA6IHRoaXMuZmV0Y2hRdWVyeShvcHRpb25zKTtcbiAgfVxuICBnZXRRdWVyaWVzRGF0YShmaWx0ZXJzKSB7XG4gICAgcmV0dXJuIHRoaXMuZ2V0UXVlcnlDYWNoZSgpLmZpbmRBbGwoZmlsdGVycykubWFwKCh7IHF1ZXJ5S2V5LCBzdGF0ZSB9KSA9PiB7XG4gICAgICBjb25zdCBkYXRhID0gc3RhdGUuZGF0YTtcbiAgICAgIHJldHVybiBbcXVlcnlLZXksIGRhdGFdO1xuICAgIH0pO1xuICB9XG4gIHNldFF1ZXJ5RGF0YShxdWVyeUtleSwgdXBkYXRlciwgb3B0aW9ucykge1xuICAgIGNvbnN0IHF1ZXJ5ID0gdGhpcy4jcXVlcnlDYWNoZS5maW5kKHsgcXVlcnlLZXkgfSk7XG4gICAgY29uc3QgcHJldkRhdGEgPSBxdWVyeT8uc3RhdGUuZGF0YTtcbiAgICBjb25zdCBkYXRhID0gZnVuY3Rpb25hbFVwZGF0ZSh1cGRhdGVyLCBwcmV2RGF0YSk7XG4gICAgaWYgKHR5cGVvZiBkYXRhID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICByZXR1cm4gdm9pZCAwO1xuICAgIH1cbiAgICBjb25zdCBkZWZhdWx0ZWRPcHRpb25zID0gdGhpcy5kZWZhdWx0UXVlcnlPcHRpb25zKHsgcXVlcnlLZXkgfSk7XG4gICAgcmV0dXJuIHRoaXMuI3F1ZXJ5Q2FjaGUuYnVpbGQodGhpcywgZGVmYXVsdGVkT3B0aW9ucykuc2V0RGF0YShkYXRhLCB7IC4uLm9wdGlvbnMsIG1hbnVhbDogdHJ1ZSB9KTtcbiAgfVxuICBzZXRRdWVyaWVzRGF0YShmaWx0ZXJzLCB1cGRhdGVyLCBvcHRpb25zKSB7XG4gICAgcmV0dXJuIG5vdGlmeU1hbmFnZXIuYmF0Y2goXG4gICAgICAoKSA9PiB0aGlzLmdldFF1ZXJ5Q2FjaGUoKS5maW5kQWxsKGZpbHRlcnMpLm1hcCgoeyBxdWVyeUtleSB9KSA9PiBbXG4gICAgICAgIHF1ZXJ5S2V5LFxuICAgICAgICB0aGlzLnNldFF1ZXJ5RGF0YShxdWVyeUtleSwgdXBkYXRlciwgb3B0aW9ucylcbiAgICAgIF0pXG4gICAgKTtcbiAgfVxuICBnZXRRdWVyeVN0YXRlKHF1ZXJ5S2V5KSB7XG4gICAgcmV0dXJuIHRoaXMuI3F1ZXJ5Q2FjaGUuZmluZCh7IHF1ZXJ5S2V5IH0pPy5zdGF0ZTtcbiAgfVxuICByZW1vdmVRdWVyaWVzKGZpbHRlcnMpIHtcbiAgICBjb25zdCBxdWVyeUNhY2hlID0gdGhpcy4jcXVlcnlDYWNoZTtcbiAgICBub3RpZnlNYW5hZ2VyLmJhdGNoKCgpID0+IHtcbiAgICAgIHF1ZXJ5Q2FjaGUuZmluZEFsbChmaWx0ZXJzKS5mb3JFYWNoKChxdWVyeSkgPT4ge1xuICAgICAgICBxdWVyeUNhY2hlLnJlbW92ZShxdWVyeSk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuICByZXNldFF1ZXJpZXMoZmlsdGVycywgb3B0aW9ucykge1xuICAgIGNvbnN0IHF1ZXJ5Q2FjaGUgPSB0aGlzLiNxdWVyeUNhY2hlO1xuICAgIGNvbnN0IHJlZmV0Y2hGaWx0ZXJzID0ge1xuICAgICAgdHlwZTogXCJhY3RpdmVcIixcbiAgICAgIC4uLmZpbHRlcnNcbiAgICB9O1xuICAgIHJldHVybiBub3RpZnlNYW5hZ2VyLmJhdGNoKCgpID0+IHtcbiAgICAgIHF1ZXJ5Q2FjaGUuZmluZEFsbChmaWx0ZXJzKS5mb3JFYWNoKChxdWVyeSkgPT4ge1xuICAgICAgICBxdWVyeS5yZXNldCgpO1xuICAgICAgfSk7XG4gICAgICByZXR1cm4gdGhpcy5yZWZldGNoUXVlcmllcyhyZWZldGNoRmlsdGVycywgb3B0aW9ucyk7XG4gICAgfSk7XG4gIH1cbiAgY2FuY2VsUXVlcmllcyhmaWx0ZXJzID0ge30sIGNhbmNlbE9wdGlvbnMgPSB7fSkge1xuICAgIGNvbnN0IGRlZmF1bHRlZENhbmNlbE9wdGlvbnMgPSB7IHJldmVydDogdHJ1ZSwgLi4uY2FuY2VsT3B0aW9ucyB9O1xuICAgIGNvbnN0IHByb21pc2VzID0gbm90aWZ5TWFuYWdlci5iYXRjaChcbiAgICAgICgpID0+IHRoaXMuI3F1ZXJ5Q2FjaGUuZmluZEFsbChmaWx0ZXJzKS5tYXAoKHF1ZXJ5KSA9PiBxdWVyeS5jYW5jZWwoZGVmYXVsdGVkQ2FuY2VsT3B0aW9ucykpXG4gICAgKTtcbiAgICByZXR1cm4gUHJvbWlzZS5hbGwocHJvbWlzZXMpLnRoZW4obm9vcCkuY2F0Y2gobm9vcCk7XG4gIH1cbiAgaW52YWxpZGF0ZVF1ZXJpZXMoZmlsdGVycyA9IHt9LCBvcHRpb25zID0ge30pIHtcbiAgICByZXR1cm4gbm90aWZ5TWFuYWdlci5iYXRjaCgoKSA9PiB7XG4gICAgICB0aGlzLiNxdWVyeUNhY2hlLmZpbmRBbGwoZmlsdGVycykuZm9yRWFjaCgocXVlcnkpID0+IHtcbiAgICAgICAgcXVlcnkuaW52YWxpZGF0ZSgpO1xuICAgICAgfSk7XG4gICAgICBpZiAoZmlsdGVycy5yZWZldGNoVHlwZSA9PT0gXCJub25lXCIpIHtcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSgpO1xuICAgICAgfVxuICAgICAgY29uc3QgcmVmZXRjaEZpbHRlcnMgPSB7XG4gICAgICAgIC4uLmZpbHRlcnMsXG4gICAgICAgIHR5cGU6IGZpbHRlcnMucmVmZXRjaFR5cGUgPz8gZmlsdGVycy50eXBlID8/IFwiYWN0aXZlXCJcbiAgICAgIH07XG4gICAgICByZXR1cm4gdGhpcy5yZWZldGNoUXVlcmllcyhyZWZldGNoRmlsdGVycywgb3B0aW9ucyk7XG4gICAgfSk7XG4gIH1cbiAgcmVmZXRjaFF1ZXJpZXMoZmlsdGVycyA9IHt9LCBvcHRpb25zKSB7XG4gICAgY29uc3QgZmV0Y2hPcHRpb25zID0ge1xuICAgICAgLi4ub3B0aW9ucyxcbiAgICAgIGNhbmNlbFJlZmV0Y2g6IG9wdGlvbnM/LmNhbmNlbFJlZmV0Y2ggPz8gdHJ1ZVxuICAgIH07XG4gICAgY29uc3QgcHJvbWlzZXMgPSBub3RpZnlNYW5hZ2VyLmJhdGNoKFxuICAgICAgKCkgPT4gdGhpcy4jcXVlcnlDYWNoZS5maW5kQWxsKGZpbHRlcnMpLmZpbHRlcigocXVlcnkpID0+ICFxdWVyeS5pc0Rpc2FibGVkKCkpLm1hcCgocXVlcnkpID0+IHtcbiAgICAgICAgbGV0IHByb21pc2UgPSBxdWVyeS5mZXRjaCh2b2lkIDAsIGZldGNoT3B0aW9ucyk7XG4gICAgICAgIGlmICghZmV0Y2hPcHRpb25zLnRocm93T25FcnJvcikge1xuICAgICAgICAgIHByb21pc2UgPSBwcm9taXNlLmNhdGNoKG5vb3ApO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBxdWVyeS5zdGF0ZS5mZXRjaFN0YXR1cyA9PT0gXCJwYXVzZWRcIiA/IFByb21pc2UucmVzb2x2ZSgpIDogcHJvbWlzZTtcbiAgICAgIH0pXG4gICAgKTtcbiAgICByZXR1cm4gUHJvbWlzZS5hbGwocHJvbWlzZXMpLnRoZW4obm9vcCk7XG4gIH1cbiAgZmV0Y2hRdWVyeShvcHRpb25zKSB7XG4gICAgY29uc3QgZGVmYXVsdGVkT3B0aW9ucyA9IHRoaXMuZGVmYXVsdFF1ZXJ5T3B0aW9ucyhvcHRpb25zKTtcbiAgICBpZiAodHlwZW9mIGRlZmF1bHRlZE9wdGlvbnMucmV0cnkgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIGRlZmF1bHRlZE9wdGlvbnMucmV0cnkgPSBmYWxzZTtcbiAgICB9XG4gICAgY29uc3QgcXVlcnkgPSB0aGlzLiNxdWVyeUNhY2hlLmJ1aWxkKHRoaXMsIGRlZmF1bHRlZE9wdGlvbnMpO1xuICAgIHJldHVybiBxdWVyeS5pc1N0YWxlQnlUaW1lKGRlZmF1bHRlZE9wdGlvbnMuc3RhbGVUaW1lKSA/IHF1ZXJ5LmZldGNoKGRlZmF1bHRlZE9wdGlvbnMpIDogUHJvbWlzZS5yZXNvbHZlKHF1ZXJ5LnN0YXRlLmRhdGEpO1xuICB9XG4gIHByZWZldGNoUXVlcnkob3B0aW9ucykge1xuICAgIHJldHVybiB0aGlzLmZldGNoUXVlcnkob3B0aW9ucykudGhlbihub29wKS5jYXRjaChub29wKTtcbiAgfVxuICBmZXRjaEluZmluaXRlUXVlcnkob3B0aW9ucykge1xuICAgIG9wdGlvbnMuYmVoYXZpb3IgPSBpbmZpbml0ZVF1ZXJ5QmVoYXZpb3Iob3B0aW9ucy5wYWdlcyk7XG4gICAgcmV0dXJuIHRoaXMuZmV0Y2hRdWVyeShvcHRpb25zKTtcbiAgfVxuICBwcmVmZXRjaEluZmluaXRlUXVlcnkob3B0aW9ucykge1xuICAgIHJldHVybiB0aGlzLmZldGNoSW5maW5pdGVRdWVyeShvcHRpb25zKS50aGVuKG5vb3ApLmNhdGNoKG5vb3ApO1xuICB9XG4gIHJlc3VtZVBhdXNlZE11dGF0aW9ucygpIHtcbiAgICByZXR1cm4gdGhpcy4jbXV0YXRpb25DYWNoZS5yZXN1bWVQYXVzZWRNdXRhdGlvbnMoKTtcbiAgfVxuICBnZXRRdWVyeUNhY2hlKCkge1xuICAgIHJldHVybiB0aGlzLiNxdWVyeUNhY2hlO1xuICB9XG4gIGdldE11dGF0aW9uQ2FjaGUoKSB7XG4gICAgcmV0dXJuIHRoaXMuI211dGF0aW9uQ2FjaGU7XG4gIH1cbiAgZ2V0RGVmYXVsdE9wdGlvbnMoKSB7XG4gICAgcmV0dXJuIHRoaXMuI2RlZmF1bHRPcHRpb25zO1xuICB9XG4gIHNldERlZmF1bHRPcHRpb25zKG9wdGlvbnMpIHtcbiAgICB0aGlzLiNkZWZhdWx0T3B0aW9ucyA9IG9wdGlvbnM7XG4gIH1cbiAgc2V0UXVlcnlEZWZhdWx0cyhxdWVyeUtleSwgb3B0aW9ucykge1xuICAgIHRoaXMuI3F1ZXJ5RGVmYXVsdHMuc2V0KGhhc2hLZXkocXVlcnlLZXkpLCB7XG4gICAgICBxdWVyeUtleSxcbiAgICAgIGRlZmF1bHRPcHRpb25zOiBvcHRpb25zXG4gICAgfSk7XG4gIH1cbiAgZ2V0UXVlcnlEZWZhdWx0cyhxdWVyeUtleSkge1xuICAgIGNvbnN0IGRlZmF1bHRzID0gWy4uLnRoaXMuI3F1ZXJ5RGVmYXVsdHMudmFsdWVzKCldO1xuICAgIGxldCByZXN1bHQgPSB7fTtcbiAgICBkZWZhdWx0cy5mb3JFYWNoKChxdWVyeURlZmF1bHQpID0+IHtcbiAgICAgIGlmIChwYXJ0aWFsTWF0Y2hLZXkocXVlcnlLZXksIHF1ZXJ5RGVmYXVsdC5xdWVyeUtleSkpIHtcbiAgICAgICAgcmVzdWx0ID0geyAuLi5yZXN1bHQsIC4uLnF1ZXJ5RGVmYXVsdC5kZWZhdWx0T3B0aW9ucyB9O1xuICAgICAgfVxuICAgIH0pO1xuICAgIHJldHVybiByZXN1bHQ7XG4gIH1cbiAgc2V0TXV0YXRpb25EZWZhdWx0cyhtdXRhdGlvbktleSwgb3B0aW9ucykge1xuICAgIHRoaXMuI211dGF0aW9uRGVmYXVsdHMuc2V0KGhhc2hLZXkobXV0YXRpb25LZXkpLCB7XG4gICAgICBtdXRhdGlvbktleSxcbiAgICAgIGRlZmF1bHRPcHRpb25zOiBvcHRpb25zXG4gICAgfSk7XG4gIH1cbiAgZ2V0TXV0YXRpb25EZWZhdWx0cyhtdXRhdGlvbktleSkge1xuICAgIGNvbnN0IGRlZmF1bHRzID0gWy4uLnRoaXMuI211dGF0aW9uRGVmYXVsdHMudmFsdWVzKCldO1xuICAgIGxldCByZXN1bHQgPSB7fTtcbiAgICBkZWZhdWx0cy5mb3JFYWNoKChxdWVyeURlZmF1bHQpID0+IHtcbiAgICAgIGlmIChwYXJ0aWFsTWF0Y2hLZXkobXV0YXRpb25LZXksIHF1ZXJ5RGVmYXVsdC5tdXRhdGlvbktleSkpIHtcbiAgICAgICAgcmVzdWx0ID0geyAuLi5yZXN1bHQsIC4uLnF1ZXJ5RGVmYXVsdC5kZWZhdWx0T3B0aW9ucyB9O1xuICAgICAgfVxuICAgIH0pO1xuICAgIHJldHVybiByZXN1bHQ7XG4gIH1cbiAgZGVmYXVsdFF1ZXJ5T3B0aW9ucyhvcHRpb25zKSB7XG4gICAgaWYgKG9wdGlvbnM/Ll9kZWZhdWx0ZWQpIHtcbiAgICAgIHJldHVybiBvcHRpb25zO1xuICAgIH1cbiAgICBjb25zdCBkZWZhdWx0ZWRPcHRpb25zID0ge1xuICAgICAgLi4udGhpcy4jZGVmYXVsdE9wdGlvbnMucXVlcmllcyxcbiAgICAgIC4uLm9wdGlvbnM/LnF1ZXJ5S2V5ICYmIHRoaXMuZ2V0UXVlcnlEZWZhdWx0cyhvcHRpb25zLnF1ZXJ5S2V5KSxcbiAgICAgIC4uLm9wdGlvbnMsXG4gICAgICBfZGVmYXVsdGVkOiB0cnVlXG4gICAgfTtcbiAgICBpZiAoIWRlZmF1bHRlZE9wdGlvbnMucXVlcnlIYXNoKSB7XG4gICAgICBkZWZhdWx0ZWRPcHRpb25zLnF1ZXJ5SGFzaCA9IGhhc2hRdWVyeUtleUJ5T3B0aW9ucyhcbiAgICAgICAgZGVmYXVsdGVkT3B0aW9ucy5xdWVyeUtleSxcbiAgICAgICAgZGVmYXVsdGVkT3B0aW9uc1xuICAgICAgKTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBkZWZhdWx0ZWRPcHRpb25zLnJlZmV0Y2hPblJlY29ubmVjdCA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgZGVmYXVsdGVkT3B0aW9ucy5yZWZldGNoT25SZWNvbm5lY3QgPSBkZWZhdWx0ZWRPcHRpb25zLm5ldHdvcmtNb2RlICE9PSBcImFsd2F5c1wiO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIGRlZmF1bHRlZE9wdGlvbnMudGhyb3dPbkVycm9yID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICBkZWZhdWx0ZWRPcHRpb25zLnRocm93T25FcnJvciA9ICEhZGVmYXVsdGVkT3B0aW9ucy5zdXNwZW5zZTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBkZWZhdWx0ZWRPcHRpb25zLm5ldHdvcmtNb2RlID09PSBcInVuZGVmaW5lZFwiICYmIGRlZmF1bHRlZE9wdGlvbnMucGVyc2lzdGVyKSB7XG4gICAgICBkZWZhdWx0ZWRPcHRpb25zLm5ldHdvcmtNb2RlID0gXCJvZmZsaW5lRmlyc3RcIjtcbiAgICB9XG4gICAgcmV0dXJuIGRlZmF1bHRlZE9wdGlvbnM7XG4gIH1cbiAgZGVmYXVsdE11dGF0aW9uT3B0aW9ucyhvcHRpb25zKSB7XG4gICAgaWYgKG9wdGlvbnM/Ll9kZWZhdWx0ZWQpIHtcbiAgICAgIHJldHVybiBvcHRpb25zO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgLi4udGhpcy4jZGVmYXVsdE9wdGlvbnMubXV0YXRpb25zLFxuICAgICAgLi4ub3B0aW9ucz8ubXV0YXRpb25LZXkgJiYgdGhpcy5nZXRNdXRhdGlvbkRlZmF1bHRzKG9wdGlvbnMubXV0YXRpb25LZXkpLFxuICAgICAgLi4ub3B0aW9ucyxcbiAgICAgIF9kZWZhdWx0ZWQ6IHRydWVcbiAgICB9O1xuICB9XG4gIGNsZWFyKCkge1xuICAgIHRoaXMuI3F1ZXJ5Q2FjaGUuY2xlYXIoKTtcbiAgICB0aGlzLiNtdXRhdGlvbkNhY2hlLmNsZWFyKCk7XG4gIH1cbn07XG5leHBvcnQge1xuICBRdWVyeUNsaWVudFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXF1ZXJ5Q2xpZW50LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/queryClient.js\n"));

/***/ }),

/***/ "./node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/removable.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/removable.js ***!
  \********************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Removable: function() { return /* binding */ Removable; }\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"./node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/utils.js\");\n// src/removable.ts\n\nvar Removable = class {\n  #gcTimeout;\n  destroy() {\n    this.clearGcTimeout();\n  }\n  scheduleGc() {\n    this.clearGcTimeout();\n    if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.isValidTimeout)(this.gcTime)) {\n      this.#gcTimeout = setTimeout(() => {\n        this.optionalRemove();\n      }, this.gcTime);\n    }\n  }\n  updateGcTime(newGcTime) {\n    this.gcTime = Math.max(\n      this.gcTime || 0,\n      newGcTime ?? (_utils_js__WEBPACK_IMPORTED_MODULE_0__.isServer ? Infinity : 5 * 60 * 1e3)\n    );\n  }\n  clearGcTimeout() {\n    if (this.#gcTimeout) {\n      clearTimeout(this.#gcTimeout);\n      this.#gcTimeout = void 0;\n    }\n  }\n};\n\n//# sourceMappingURL=removable.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3JlYWN0LXF1ZXJ5L25vZGVfbW9kdWxlcy9AdGFuc3RhY2svcXVlcnktY29yZS9idWlsZC9tb2Rlcm4vcmVtb3ZhYmxlLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDc0Q7QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLHlEQUFjO0FBQ3RCO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQiwrQ0FBUTtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AdGFuc3RhY2svcmVhY3QtcXVlcnkvbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9xdWVyeS1jb3JlL2J1aWxkL21vZGVybi9yZW1vdmFibGUuanM/ZThmMiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvcmVtb3ZhYmxlLnRzXG5pbXBvcnQgeyBpc1NlcnZlciwgaXNWYWxpZFRpbWVvdXQgfSBmcm9tIFwiLi91dGlscy5qc1wiO1xudmFyIFJlbW92YWJsZSA9IGNsYXNzIHtcbiAgI2djVGltZW91dDtcbiAgZGVzdHJveSgpIHtcbiAgICB0aGlzLmNsZWFyR2NUaW1lb3V0KCk7XG4gIH1cbiAgc2NoZWR1bGVHYygpIHtcbiAgICB0aGlzLmNsZWFyR2NUaW1lb3V0KCk7XG4gICAgaWYgKGlzVmFsaWRUaW1lb3V0KHRoaXMuZ2NUaW1lKSkge1xuICAgICAgdGhpcy4jZ2NUaW1lb3V0ID0gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIHRoaXMub3B0aW9uYWxSZW1vdmUoKTtcbiAgICAgIH0sIHRoaXMuZ2NUaW1lKTtcbiAgICB9XG4gIH1cbiAgdXBkYXRlR2NUaW1lKG5ld0djVGltZSkge1xuICAgIHRoaXMuZ2NUaW1lID0gTWF0aC5tYXgoXG4gICAgICB0aGlzLmdjVGltZSB8fCAwLFxuICAgICAgbmV3R2NUaW1lID8/IChpc1NlcnZlciA/IEluZmluaXR5IDogNSAqIDYwICogMWUzKVxuICAgICk7XG4gIH1cbiAgY2xlYXJHY1RpbWVvdXQoKSB7XG4gICAgaWYgKHRoaXMuI2djVGltZW91dCkge1xuICAgICAgY2xlYXJUaW1lb3V0KHRoaXMuI2djVGltZW91dCk7XG4gICAgICB0aGlzLiNnY1RpbWVvdXQgPSB2b2lkIDA7XG4gICAgfVxuICB9XG59O1xuZXhwb3J0IHtcbiAgUmVtb3ZhYmxlXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVtb3ZhYmxlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/removable.js\n"));

/***/ }),

/***/ "./node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/retryer.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/retryer.js ***!
  \******************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CancelledError: function() { return /* binding */ CancelledError; },\n/* harmony export */   canFetch: function() { return /* binding */ canFetch; },\n/* harmony export */   createRetryer: function() { return /* binding */ createRetryer; },\n/* harmony export */   isCancelledError: function() { return /* binding */ isCancelledError; }\n/* harmony export */ });\n/* harmony import */ var _focusManager_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./focusManager.js */ \"./node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/focusManager.js\");\n/* harmony import */ var _onlineManager_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./onlineManager.js */ \"./node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/onlineManager.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils.js */ \"./node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/utils.js\");\n// src/retryer.ts\n\n\n\nfunction defaultRetryDelay(failureCount) {\n  return Math.min(1e3 * 2 ** failureCount, 3e4);\n}\nfunction canFetch(networkMode) {\n  return (networkMode ?? \"online\") === \"online\" ? _onlineManager_js__WEBPACK_IMPORTED_MODULE_0__.onlineManager.isOnline() : true;\n}\nvar CancelledError = class {\n  constructor(options) {\n    this.revert = options?.revert;\n    this.silent = options?.silent;\n  }\n};\nfunction isCancelledError(value) {\n  return value instanceof CancelledError;\n}\nfunction createRetryer(config) {\n  let isRetryCancelled = false;\n  let failureCount = 0;\n  let isResolved = false;\n  let continueFn;\n  let promiseResolve;\n  let promiseReject;\n  const promise = new Promise((outerResolve, outerReject) => {\n    promiseResolve = outerResolve;\n    promiseReject = outerReject;\n  });\n  const cancel = (cancelOptions) => {\n    if (!isResolved) {\n      reject(new CancelledError(cancelOptions));\n      config.abort?.();\n    }\n  };\n  const cancelRetry = () => {\n    isRetryCancelled = true;\n  };\n  const continueRetry = () => {\n    isRetryCancelled = false;\n  };\n  const shouldPause = () => !_focusManager_js__WEBPACK_IMPORTED_MODULE_1__.focusManager.isFocused() || config.networkMode !== \"always\" && !_onlineManager_js__WEBPACK_IMPORTED_MODULE_0__.onlineManager.isOnline();\n  const resolve = (value) => {\n    if (!isResolved) {\n      isResolved = true;\n      config.onSuccess?.(value);\n      continueFn?.();\n      promiseResolve(value);\n    }\n  };\n  const reject = (value) => {\n    if (!isResolved) {\n      isResolved = true;\n      config.onError?.(value);\n      continueFn?.();\n      promiseReject(value);\n    }\n  };\n  const pause = () => {\n    return new Promise((continueResolve) => {\n      continueFn = (value) => {\n        const canContinue = isResolved || !shouldPause();\n        if (canContinue) {\n          continueResolve(value);\n        }\n        return canContinue;\n      };\n      config.onPause?.();\n    }).then(() => {\n      continueFn = void 0;\n      if (!isResolved) {\n        config.onContinue?.();\n      }\n    });\n  };\n  const run = () => {\n    if (isResolved) {\n      return;\n    }\n    let promiseOrValue;\n    try {\n      promiseOrValue = config.fn();\n    } catch (error) {\n      promiseOrValue = Promise.reject(error);\n    }\n    Promise.resolve(promiseOrValue).then(resolve).catch((error) => {\n      if (isResolved) {\n        return;\n      }\n      const retry = config.retry ?? (_utils_js__WEBPACK_IMPORTED_MODULE_2__.isServer ? 0 : 3);\n      const retryDelay = config.retryDelay ?? defaultRetryDelay;\n      const delay = typeof retryDelay === \"function\" ? retryDelay(failureCount, error) : retryDelay;\n      const shouldRetry = retry === true || typeof retry === \"number\" && failureCount < retry || typeof retry === \"function\" && retry(failureCount, error);\n      if (isRetryCancelled || !shouldRetry) {\n        reject(error);\n        return;\n      }\n      failureCount++;\n      config.onFail?.(failureCount, error);\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.sleep)(delay).then(() => {\n        if (shouldPause()) {\n          return pause();\n        }\n        return;\n      }).then(() => {\n        if (isRetryCancelled) {\n          reject(error);\n        } else {\n          run();\n        }\n      });\n    });\n  };\n  if (canFetch(config.networkMode)) {\n    run();\n  } else {\n    pause().then(run);\n  }\n  return {\n    promise,\n    cancel,\n    continue: () => {\n      const didContinue = continueFn?.();\n      return didContinue ? promise : Promise.resolve();\n    },\n    cancelRetry,\n    continueRetry\n  };\n}\n\n//# sourceMappingURL=retryer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3JlYWN0LXF1ZXJ5L25vZGVfbW9kdWxlcy9AdGFuc3RhY2svcXVlcnktY29yZS9idWlsZC9tb2Rlcm4vcmV0cnllci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUE7QUFDaUQ7QUFDRTtBQUNOO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0RBQWtELDREQUFhO0FBQy9EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLDBEQUFZLG9EQUFvRCw0REFBYTtBQUMxRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUNBQXFDLCtDQUFRO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU0sZ0RBQUs7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBTUU7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3JlYWN0LXF1ZXJ5L25vZGVfbW9kdWxlcy9AdGFuc3RhY2svcXVlcnktY29yZS9idWlsZC9tb2Rlcm4vcmV0cnllci5qcz9hMjU5Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9yZXRyeWVyLnRzXG5pbXBvcnQgeyBmb2N1c01hbmFnZXIgfSBmcm9tIFwiLi9mb2N1c01hbmFnZXIuanNcIjtcbmltcG9ydCB7IG9ubGluZU1hbmFnZXIgfSBmcm9tIFwiLi9vbmxpbmVNYW5hZ2VyLmpzXCI7XG5pbXBvcnQgeyBpc1NlcnZlciwgc2xlZXAgfSBmcm9tIFwiLi91dGlscy5qc1wiO1xuZnVuY3Rpb24gZGVmYXVsdFJldHJ5RGVsYXkoZmFpbHVyZUNvdW50KSB7XG4gIHJldHVybiBNYXRoLm1pbigxZTMgKiAyICoqIGZhaWx1cmVDb3VudCwgM2U0KTtcbn1cbmZ1bmN0aW9uIGNhbkZldGNoKG5ldHdvcmtNb2RlKSB7XG4gIHJldHVybiAobmV0d29ya01vZGUgPz8gXCJvbmxpbmVcIikgPT09IFwib25saW5lXCIgPyBvbmxpbmVNYW5hZ2VyLmlzT25saW5lKCkgOiB0cnVlO1xufVxudmFyIENhbmNlbGxlZEVycm9yID0gY2xhc3Mge1xuICBjb25zdHJ1Y3RvcihvcHRpb25zKSB7XG4gICAgdGhpcy5yZXZlcnQgPSBvcHRpb25zPy5yZXZlcnQ7XG4gICAgdGhpcy5zaWxlbnQgPSBvcHRpb25zPy5zaWxlbnQ7XG4gIH1cbn07XG5mdW5jdGlvbiBpc0NhbmNlbGxlZEVycm9yKHZhbHVlKSB7XG4gIHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIENhbmNlbGxlZEVycm9yO1xufVxuZnVuY3Rpb24gY3JlYXRlUmV0cnllcihjb25maWcpIHtcbiAgbGV0IGlzUmV0cnlDYW5jZWxsZWQgPSBmYWxzZTtcbiAgbGV0IGZhaWx1cmVDb3VudCA9IDA7XG4gIGxldCBpc1Jlc29sdmVkID0gZmFsc2U7XG4gIGxldCBjb250aW51ZUZuO1xuICBsZXQgcHJvbWlzZVJlc29sdmU7XG4gIGxldCBwcm9taXNlUmVqZWN0O1xuICBjb25zdCBwcm9taXNlID0gbmV3IFByb21pc2UoKG91dGVyUmVzb2x2ZSwgb3V0ZXJSZWplY3QpID0+IHtcbiAgICBwcm9taXNlUmVzb2x2ZSA9IG91dGVyUmVzb2x2ZTtcbiAgICBwcm9taXNlUmVqZWN0ID0gb3V0ZXJSZWplY3Q7XG4gIH0pO1xuICBjb25zdCBjYW5jZWwgPSAoY2FuY2VsT3B0aW9ucykgPT4ge1xuICAgIGlmICghaXNSZXNvbHZlZCkge1xuICAgICAgcmVqZWN0KG5ldyBDYW5jZWxsZWRFcnJvcihjYW5jZWxPcHRpb25zKSk7XG4gICAgICBjb25maWcuYWJvcnQ/LigpO1xuICAgIH1cbiAgfTtcbiAgY29uc3QgY2FuY2VsUmV0cnkgPSAoKSA9PiB7XG4gICAgaXNSZXRyeUNhbmNlbGxlZCA9IHRydWU7XG4gIH07XG4gIGNvbnN0IGNvbnRpbnVlUmV0cnkgPSAoKSA9PiB7XG4gICAgaXNSZXRyeUNhbmNlbGxlZCA9IGZhbHNlO1xuICB9O1xuICBjb25zdCBzaG91bGRQYXVzZSA9ICgpID0+ICFmb2N1c01hbmFnZXIuaXNGb2N1c2VkKCkgfHwgY29uZmlnLm5ldHdvcmtNb2RlICE9PSBcImFsd2F5c1wiICYmICFvbmxpbmVNYW5hZ2VyLmlzT25saW5lKCk7XG4gIGNvbnN0IHJlc29sdmUgPSAodmFsdWUpID0+IHtcbiAgICBpZiAoIWlzUmVzb2x2ZWQpIHtcbiAgICAgIGlzUmVzb2x2ZWQgPSB0cnVlO1xuICAgICAgY29uZmlnLm9uU3VjY2Vzcz8uKHZhbHVlKTtcbiAgICAgIGNvbnRpbnVlRm4/LigpO1xuICAgICAgcHJvbWlzZVJlc29sdmUodmFsdWUpO1xuICAgIH1cbiAgfTtcbiAgY29uc3QgcmVqZWN0ID0gKHZhbHVlKSA9PiB7XG4gICAgaWYgKCFpc1Jlc29sdmVkKSB7XG4gICAgICBpc1Jlc29sdmVkID0gdHJ1ZTtcbiAgICAgIGNvbmZpZy5vbkVycm9yPy4odmFsdWUpO1xuICAgICAgY29udGludWVGbj8uKCk7XG4gICAgICBwcm9taXNlUmVqZWN0KHZhbHVlKTtcbiAgICB9XG4gIH07XG4gIGNvbnN0IHBhdXNlID0gKCkgPT4ge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgoY29udGludWVSZXNvbHZlKSA9PiB7XG4gICAgICBjb250aW51ZUZuID0gKHZhbHVlKSA9PiB7XG4gICAgICAgIGNvbnN0IGNhbkNvbnRpbnVlID0gaXNSZXNvbHZlZCB8fCAhc2hvdWxkUGF1c2UoKTtcbiAgICAgICAgaWYgKGNhbkNvbnRpbnVlKSB7XG4gICAgICAgICAgY29udGludWVSZXNvbHZlKHZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gY2FuQ29udGludWU7XG4gICAgICB9O1xuICAgICAgY29uZmlnLm9uUGF1c2U/LigpO1xuICAgIH0pLnRoZW4oKCkgPT4ge1xuICAgICAgY29udGludWVGbiA9IHZvaWQgMDtcbiAgICAgIGlmICghaXNSZXNvbHZlZCkge1xuICAgICAgICBjb25maWcub25Db250aW51ZT8uKCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH07XG4gIGNvbnN0IHJ1biA9ICgpID0+IHtcbiAgICBpZiAoaXNSZXNvbHZlZCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBsZXQgcHJvbWlzZU9yVmFsdWU7XG4gICAgdHJ5IHtcbiAgICAgIHByb21pc2VPclZhbHVlID0gY29uZmlnLmZuKCk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIHByb21pc2VPclZhbHVlID0gUHJvbWlzZS5yZWplY3QoZXJyb3IpO1xuICAgIH1cbiAgICBQcm9taXNlLnJlc29sdmUocHJvbWlzZU9yVmFsdWUpLnRoZW4ocmVzb2x2ZSkuY2F0Y2goKGVycm9yKSA9PiB7XG4gICAgICBpZiAoaXNSZXNvbHZlZCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBjb25zdCByZXRyeSA9IGNvbmZpZy5yZXRyeSA/PyAoaXNTZXJ2ZXIgPyAwIDogMyk7XG4gICAgICBjb25zdCByZXRyeURlbGF5ID0gY29uZmlnLnJldHJ5RGVsYXkgPz8gZGVmYXVsdFJldHJ5RGVsYXk7XG4gICAgICBjb25zdCBkZWxheSA9IHR5cGVvZiByZXRyeURlbGF5ID09PSBcImZ1bmN0aW9uXCIgPyByZXRyeURlbGF5KGZhaWx1cmVDb3VudCwgZXJyb3IpIDogcmV0cnlEZWxheTtcbiAgICAgIGNvbnN0IHNob3VsZFJldHJ5ID0gcmV0cnkgPT09IHRydWUgfHwgdHlwZW9mIHJldHJ5ID09PSBcIm51bWJlclwiICYmIGZhaWx1cmVDb3VudCA8IHJldHJ5IHx8IHR5cGVvZiByZXRyeSA9PT0gXCJmdW5jdGlvblwiICYmIHJldHJ5KGZhaWx1cmVDb3VudCwgZXJyb3IpO1xuICAgICAgaWYgKGlzUmV0cnlDYW5jZWxsZWQgfHwgIXNob3VsZFJldHJ5KSB7XG4gICAgICAgIHJlamVjdChlcnJvcik7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGZhaWx1cmVDb3VudCsrO1xuICAgICAgY29uZmlnLm9uRmFpbD8uKGZhaWx1cmVDb3VudCwgZXJyb3IpO1xuICAgICAgc2xlZXAoZGVsYXkpLnRoZW4oKCkgPT4ge1xuICAgICAgICBpZiAoc2hvdWxkUGF1c2UoKSkge1xuICAgICAgICAgIHJldHVybiBwYXVzZSgpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybjtcbiAgICAgIH0pLnRoZW4oKCkgPT4ge1xuICAgICAgICBpZiAoaXNSZXRyeUNhbmNlbGxlZCkge1xuICAgICAgICAgIHJlamVjdChlcnJvcik7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcnVuKCk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH0pO1xuICB9O1xuICBpZiAoY2FuRmV0Y2goY29uZmlnLm5ldHdvcmtNb2RlKSkge1xuICAgIHJ1bigpO1xuICB9IGVsc2Uge1xuICAgIHBhdXNlKCkudGhlbihydW4pO1xuICB9XG4gIHJldHVybiB7XG4gICAgcHJvbWlzZSxcbiAgICBjYW5jZWwsXG4gICAgY29udGludWU6ICgpID0+IHtcbiAgICAgIGNvbnN0IGRpZENvbnRpbnVlID0gY29udGludWVGbj8uKCk7XG4gICAgICByZXR1cm4gZGlkQ29udGludWUgPyBwcm9taXNlIDogUHJvbWlzZS5yZXNvbHZlKCk7XG4gICAgfSxcbiAgICBjYW5jZWxSZXRyeSxcbiAgICBjb250aW51ZVJldHJ5XG4gIH07XG59XG5leHBvcnQge1xuICBDYW5jZWxsZWRFcnJvcixcbiAgY2FuRmV0Y2gsXG4gIGNyZWF0ZVJldHJ5ZXIsXG4gIGlzQ2FuY2VsbGVkRXJyb3Jcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZXRyeWVyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/retryer.js\n"));

/***/ }),

/***/ "./node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/subscribable.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/subscribable.js ***!
  \***********************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Subscribable: function() { return /* binding */ Subscribable; }\n/* harmony export */ });\n// src/subscribable.ts\nvar Subscribable = class {\n  constructor() {\n    this.listeners = /* @__PURE__ */ new Set();\n    this.subscribe = this.subscribe.bind(this);\n  }\n  subscribe(listener) {\n    this.listeners.add(listener);\n    this.onSubscribe();\n    return () => {\n      this.listeners.delete(listener);\n      this.onUnsubscribe();\n    };\n  }\n  hasListeners() {\n    return this.listeners.size > 0;\n  }\n  onSubscribe() {\n  }\n  onUnsubscribe() {\n  }\n};\n\n//# sourceMappingURL=subscribable.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3JlYWN0LXF1ZXJ5L25vZGVfbW9kdWxlcy9AdGFuc3RhY2svcXVlcnktY29yZS9idWlsZC9tb2Rlcm4vc3Vic2NyaWJhYmxlLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9yZWFjdC1xdWVyeS9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3F1ZXJ5LWNvcmUvYnVpbGQvbW9kZXJuL3N1YnNjcmliYWJsZS5qcz80NDUxIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9zdWJzY3JpYmFibGUudHNcbnZhciBTdWJzY3JpYmFibGUgPSBjbGFzcyB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMubGlzdGVuZXJzID0gLyogQF9fUFVSRV9fICovIG5ldyBTZXQoKTtcbiAgICB0aGlzLnN1YnNjcmliZSA9IHRoaXMuc3Vic2NyaWJlLmJpbmQodGhpcyk7XG4gIH1cbiAgc3Vic2NyaWJlKGxpc3RlbmVyKSB7XG4gICAgdGhpcy5saXN0ZW5lcnMuYWRkKGxpc3RlbmVyKTtcbiAgICB0aGlzLm9uU3Vic2NyaWJlKCk7XG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIHRoaXMubGlzdGVuZXJzLmRlbGV0ZShsaXN0ZW5lcik7XG4gICAgICB0aGlzLm9uVW5zdWJzY3JpYmUoKTtcbiAgICB9O1xuICB9XG4gIGhhc0xpc3RlbmVycygpIHtcbiAgICByZXR1cm4gdGhpcy5saXN0ZW5lcnMuc2l6ZSA+IDA7XG4gIH1cbiAgb25TdWJzY3JpYmUoKSB7XG4gIH1cbiAgb25VbnN1YnNjcmliZSgpIHtcbiAgfVxufTtcbmV4cG9ydCB7XG4gIFN1YnNjcmliYWJsZVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXN1YnNjcmliYWJsZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/subscribable.js\n"));

/***/ }),

/***/ "./node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/utils.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/utils.js ***!
  \****************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addToEnd: function() { return /* binding */ addToEnd; },\n/* harmony export */   addToStart: function() { return /* binding */ addToStart; },\n/* harmony export */   functionalUpdate: function() { return /* binding */ functionalUpdate; },\n/* harmony export */   hashKey: function() { return /* binding */ hashKey; },\n/* harmony export */   hashQueryKeyByOptions: function() { return /* binding */ hashQueryKeyByOptions; },\n/* harmony export */   isPlainArray: function() { return /* binding */ isPlainArray; },\n/* harmony export */   isPlainObject: function() { return /* binding */ isPlainObject; },\n/* harmony export */   isServer: function() { return /* binding */ isServer; },\n/* harmony export */   isValidTimeout: function() { return /* binding */ isValidTimeout; },\n/* harmony export */   keepPreviousData: function() { return /* binding */ keepPreviousData; },\n/* harmony export */   matchMutation: function() { return /* binding */ matchMutation; },\n/* harmony export */   matchQuery: function() { return /* binding */ matchQuery; },\n/* harmony export */   noop: function() { return /* binding */ noop; },\n/* harmony export */   partialMatchKey: function() { return /* binding */ partialMatchKey; },\n/* harmony export */   replaceData: function() { return /* binding */ replaceData; },\n/* harmony export */   replaceEqualDeep: function() { return /* binding */ replaceEqualDeep; },\n/* harmony export */   scheduleMicrotask: function() { return /* binding */ scheduleMicrotask; },\n/* harmony export */   shallowEqualObjects: function() { return /* binding */ shallowEqualObjects; },\n/* harmony export */   sleep: function() { return /* binding */ sleep; },\n/* harmony export */   timeUntilStale: function() { return /* binding */ timeUntilStale; }\n/* harmony export */ });\n// src/utils.ts\nvar isServer = typeof window === \"undefined\" || \"Deno\" in window;\nfunction noop() {\n  return void 0;\n}\nfunction functionalUpdate(updater, input) {\n  return typeof updater === \"function\" ? updater(input) : updater;\n}\nfunction isValidTimeout(value) {\n  return typeof value === \"number\" && value >= 0 && value !== Infinity;\n}\nfunction timeUntilStale(updatedAt, staleTime) {\n  return Math.max(updatedAt + (staleTime || 0) - Date.now(), 0);\n}\nfunction matchQuery(filters, query) {\n  const {\n    type = \"all\",\n    exact,\n    fetchStatus,\n    predicate,\n    queryKey,\n    stale\n  } = filters;\n  if (queryKey) {\n    if (exact) {\n      if (query.queryHash !== hashQueryKeyByOptions(queryKey, query.options)) {\n        return false;\n      }\n    } else if (!partialMatchKey(query.queryKey, queryKey)) {\n      return false;\n    }\n  }\n  if (type !== \"all\") {\n    const isActive = query.isActive();\n    if (type === \"active\" && !isActive) {\n      return false;\n    }\n    if (type === \"inactive\" && isActive) {\n      return false;\n    }\n  }\n  if (typeof stale === \"boolean\" && query.isStale() !== stale) {\n    return false;\n  }\n  if (typeof fetchStatus !== \"undefined\" && fetchStatus !== query.state.fetchStatus) {\n    return false;\n  }\n  if (predicate && !predicate(query)) {\n    return false;\n  }\n  return true;\n}\nfunction matchMutation(filters, mutation) {\n  const { exact, status, predicate, mutationKey } = filters;\n  if (mutationKey) {\n    if (!mutation.options.mutationKey) {\n      return false;\n    }\n    if (exact) {\n      if (hashKey(mutation.options.mutationKey) !== hashKey(mutationKey)) {\n        return false;\n      }\n    } else if (!partialMatchKey(mutation.options.mutationKey, mutationKey)) {\n      return false;\n    }\n  }\n  if (status && mutation.state.status !== status) {\n    return false;\n  }\n  if (predicate && !predicate(mutation)) {\n    return false;\n  }\n  return true;\n}\nfunction hashQueryKeyByOptions(queryKey, options) {\n  const hashFn = options?.queryKeyHashFn || hashKey;\n  return hashFn(queryKey);\n}\nfunction hashKey(queryKey) {\n  return JSON.stringify(\n    queryKey,\n    (_, val) => isPlainObject(val) ? Object.keys(val).sort().reduce((result, key) => {\n      result[key] = val[key];\n      return result;\n    }, {}) : val\n  );\n}\nfunction partialMatchKey(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (typeof a !== typeof b) {\n    return false;\n  }\n  if (a && b && typeof a === \"object\" && typeof b === \"object\") {\n    return !Object.keys(b).some((key) => !partialMatchKey(a[key], b[key]));\n  }\n  return false;\n}\nfunction replaceEqualDeep(a, b) {\n  if (a === b) {\n    return a;\n  }\n  const array = isPlainArray(a) && isPlainArray(b);\n  if (array || isPlainObject(a) && isPlainObject(b)) {\n    const aSize = array ? a.length : Object.keys(a).length;\n    const bItems = array ? b : Object.keys(b);\n    const bSize = bItems.length;\n    const copy = array ? [] : {};\n    let equalItems = 0;\n    for (let i = 0; i < bSize; i++) {\n      const key = array ? i : bItems[i];\n      copy[key] = replaceEqualDeep(a[key], b[key]);\n      if (copy[key] === a[key]) {\n        equalItems++;\n      }\n    }\n    return aSize === bSize && equalItems === aSize ? a : copy;\n  }\n  return b;\n}\nfunction shallowEqualObjects(a, b) {\n  if (a && !b || b && !a) {\n    return false;\n  }\n  for (const key in a) {\n    if (a[key] !== b[key]) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction isPlainArray(value) {\n  return Array.isArray(value) && value.length === Object.keys(value).length;\n}\nfunction isPlainObject(o) {\n  if (!hasObjectPrototype(o)) {\n    return false;\n  }\n  const ctor = o.constructor;\n  if (typeof ctor === \"undefined\") {\n    return true;\n  }\n  const prot = ctor.prototype;\n  if (!hasObjectPrototype(prot)) {\n    return false;\n  }\n  if (!prot.hasOwnProperty(\"isPrototypeOf\")) {\n    return false;\n  }\n  return true;\n}\nfunction hasObjectPrototype(o) {\n  return Object.prototype.toString.call(o) === \"[object Object]\";\n}\nfunction sleep(ms) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, ms);\n  });\n}\nfunction scheduleMicrotask(callback) {\n  sleep(0).then(callback);\n}\nfunction replaceData(prevData, data, options) {\n  if (typeof options.structuralSharing === \"function\") {\n    return options.structuralSharing(prevData, data);\n  } else if (options.structuralSharing !== false) {\n    return replaceEqualDeep(prevData, data);\n  }\n  return data;\n}\nfunction keepPreviousData(previousData) {\n  return previousData;\n}\nfunction addToEnd(items, item, max = 0) {\n  const newItems = [...items, item];\n  return max && newItems.length > max ? newItems.slice(1) : newItems;\n}\nfunction addToStart(items, item, max = 0) {\n  const newItems = [item, ...items];\n  return max && newItems.length > max ? newItems.slice(0, -1) : newItems;\n}\n\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@tanstack/react-query/node_modules/@tanstack/query-core/build/modern/utils.js\n"));

/***/ }),

/***/ "./node_modules/eventemitter3/index.mjs":
/*!**********************************************!*\
  !*** ./node_modules/eventemitter3/index.mjs ***!
  \**********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EventEmitter: function() { return /* reexport default export from named module */ _index_js__WEBPACK_IMPORTED_MODULE_0__; }\n/* harmony export */ });\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index.js */ \"./node_modules/eventemitter3/index.js\");\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (_index_js__WEBPACK_IMPORTED_MODULE_0__);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZXZlbnRlbWl0dGVyMy9pbmRleC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBcUM7O0FBRWQ7QUFDdkIsK0RBQWUsc0NBQVkiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2V2ZW50ZW1pdHRlcjMvaW5kZXgubWpzPzE4MzgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEV2ZW50RW1pdHRlciBmcm9tICcuL2luZGV4LmpzJ1xuXG5leHBvcnQgeyBFdmVudEVtaXR0ZXIgfVxuZXhwb3J0IGRlZmF1bHQgRXZlbnRFbWl0dGVyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/eventemitter3/index.mjs\n"));

/***/ }),

/***/ "./node_modules/zustand/esm/middleware.mjs":
/*!*************************************************!*\
  !*** ./node_modules/zustand/esm/middleware.mjs ***!
  \*************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   combine: function() { return /* binding */ combine; },\n/* harmony export */   createJSONStorage: function() { return /* binding */ createJSONStorage; },\n/* harmony export */   devtools: function() { return /* binding */ devtools; },\n/* harmony export */   persist: function() { return /* binding */ persist; },\n/* harmony export */   redux: function() { return /* binding */ redux; },\n/* harmony export */   subscribeWithSelector: function() { return /* binding */ subscribeWithSelector; }\n/* harmony export */ });\nconst reduxImpl = (reducer, initial) => (set, _get, api) => {\n  api.dispatch = (action) => {\n    set((state) => reducer(state, action), false, action);\n    return action;\n  };\n  api.dispatchFromDevtools = true;\n  return { dispatch: (...a) => api.dispatch(...a), ...initial };\n};\nconst redux = reduxImpl;\n\nconst trackedConnections = /* @__PURE__ */ new Map();\nconst getTrackedConnectionState = (name) => {\n  const api = trackedConnections.get(name);\n  if (!api)\n    return {};\n  return Object.fromEntries(\n    Object.entries(api.stores).map(([key, api2]) => [key, api2.getState()])\n  );\n};\nconst extractConnectionInformation = (store, extensionConnector, options) => {\n  if (store === void 0) {\n    return {\n      type: \"untracked\",\n      connection: extensionConnector.connect(options)\n    };\n  }\n  const existingConnection = trackedConnections.get(options.name);\n  if (existingConnection) {\n    return { type: \"tracked\", store, ...existingConnection };\n  }\n  const newConnection = {\n    connection: extensionConnector.connect(options),\n    stores: {}\n  };\n  trackedConnections.set(options.name, newConnection);\n  return { type: \"tracked\", store, ...newConnection };\n};\nconst devtoolsImpl = (fn, devtoolsOptions = {}) => (set, get, api) => {\n  const { enabled, anonymousActionType, store, ...options } = devtoolsOptions;\n  let extensionConnector;\n  try {\n    extensionConnector = (enabled != null ? enabled : ( false ? 0 : void 0) !== \"production\") && window.__REDUX_DEVTOOLS_EXTENSION__;\n  } catch (e) {\n  }\n  if (!extensionConnector) {\n    if (( false ? 0 : void 0) !== \"production\" && enabled) {\n      console.warn(\n        \"[zustand devtools middleware] Please install/enable Redux devtools extension\"\n      );\n    }\n    return fn(set, get, api);\n  }\n  const { connection, ...connectionInformation } = extractConnectionInformation(store, extensionConnector, options);\n  let isRecording = true;\n  api.setState = (state, replace, nameOrAction) => {\n    const r = set(state, replace);\n    if (!isRecording)\n      return r;\n    const action = nameOrAction === void 0 ? { type: anonymousActionType || \"anonymous\" } : typeof nameOrAction === \"string\" ? { type: nameOrAction } : nameOrAction;\n    if (store === void 0) {\n      connection == null ? void 0 : connection.send(action, get());\n      return r;\n    }\n    connection == null ? void 0 : connection.send(\n      {\n        ...action,\n        type: `${store}/${action.type}`\n      },\n      {\n        ...getTrackedConnectionState(options.name),\n        [store]: api.getState()\n      }\n    );\n    return r;\n  };\n  const setStateFromDevtools = (...a) => {\n    const originalIsRecording = isRecording;\n    isRecording = false;\n    set(...a);\n    isRecording = originalIsRecording;\n  };\n  const initialState = fn(api.setState, get, api);\n  if (connectionInformation.type === \"untracked\") {\n    connection == null ? void 0 : connection.init(initialState);\n  } else {\n    connectionInformation.stores[connectionInformation.store] = api;\n    connection == null ? void 0 : connection.init(\n      Object.fromEntries(\n        Object.entries(connectionInformation.stores).map(([key, store2]) => [\n          key,\n          key === connectionInformation.store ? initialState : store2.getState()\n        ])\n      )\n    );\n  }\n  if (api.dispatchFromDevtools && typeof api.dispatch === \"function\") {\n    let didWarnAboutReservedActionType = false;\n    const originalDispatch = api.dispatch;\n    api.dispatch = (...a) => {\n      if (( false ? 0 : void 0) !== \"production\" && a[0].type === \"__setState\" && !didWarnAboutReservedActionType) {\n        console.warn(\n          '[zustand devtools middleware] \"__setState\" action type is reserved to set state from the devtools. Avoid using it.'\n        );\n        didWarnAboutReservedActionType = true;\n      }\n      originalDispatch(...a);\n    };\n  }\n  connection.subscribe((message) => {\n    var _a;\n    switch (message.type) {\n      case \"ACTION\":\n        if (typeof message.payload !== \"string\") {\n          console.error(\n            \"[zustand devtools middleware] Unsupported action format\"\n          );\n          return;\n        }\n        return parseJsonThen(\n          message.payload,\n          (action) => {\n            if (action.type === \"__setState\") {\n              if (store === void 0) {\n                setStateFromDevtools(action.state);\n                return;\n              }\n              if (Object.keys(action.state).length !== 1) {\n                console.error(\n                  `\n                    [zustand devtools middleware] Unsupported __setState action format. \n                    When using 'store' option in devtools(), the 'state' should have only one key, which is a value of 'store' that was passed in devtools(),\n                    and value of this only key should be a state object. Example: { \"type\": \"__setState\", \"state\": { \"abc123Store\": { \"foo\": \"bar\" } } }\n                    `\n                );\n              }\n              const stateFromDevtools = action.state[store];\n              if (stateFromDevtools === void 0 || stateFromDevtools === null) {\n                return;\n              }\n              if (JSON.stringify(api.getState()) !== JSON.stringify(stateFromDevtools)) {\n                setStateFromDevtools(stateFromDevtools);\n              }\n              return;\n            }\n            if (!api.dispatchFromDevtools)\n              return;\n            if (typeof api.dispatch !== \"function\")\n              return;\n            api.dispatch(action);\n          }\n        );\n      case \"DISPATCH\":\n        switch (message.payload.type) {\n          case \"RESET\":\n            setStateFromDevtools(initialState);\n            if (store === void 0) {\n              return connection == null ? void 0 : connection.init(api.getState());\n            }\n            return connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n          case \"COMMIT\":\n            if (store === void 0) {\n              connection == null ? void 0 : connection.init(api.getState());\n              return;\n            }\n            return connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n          case \"ROLLBACK\":\n            return parseJsonThen(message.state, (state) => {\n              if (store === void 0) {\n                setStateFromDevtools(state);\n                connection == null ? void 0 : connection.init(api.getState());\n                return;\n              }\n              setStateFromDevtools(state[store]);\n              connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n            });\n          case \"JUMP_TO_STATE\":\n          case \"JUMP_TO_ACTION\":\n            return parseJsonThen(message.state, (state) => {\n              if (store === void 0) {\n                setStateFromDevtools(state);\n                return;\n              }\n              if (JSON.stringify(api.getState()) !== JSON.stringify(state[store])) {\n                setStateFromDevtools(state[store]);\n              }\n            });\n          case \"IMPORT_STATE\": {\n            const { nextLiftedState } = message.payload;\n            const lastComputedState = (_a = nextLiftedState.computedStates.slice(-1)[0]) == null ? void 0 : _a.state;\n            if (!lastComputedState)\n              return;\n            if (store === void 0) {\n              setStateFromDevtools(lastComputedState);\n            } else {\n              setStateFromDevtools(lastComputedState[store]);\n            }\n            connection == null ? void 0 : connection.send(\n              null,\n              // FIXME no-any\n              nextLiftedState\n            );\n            return;\n          }\n          case \"PAUSE_RECORDING\":\n            return isRecording = !isRecording;\n        }\n        return;\n    }\n  });\n  return initialState;\n};\nconst devtools = devtoolsImpl;\nconst parseJsonThen = (stringified, f) => {\n  let parsed;\n  try {\n    parsed = JSON.parse(stringified);\n  } catch (e) {\n    console.error(\n      \"[zustand devtools middleware] Could not parse the received json\",\n      e\n    );\n  }\n  if (parsed !== void 0)\n    f(parsed);\n};\n\nconst subscribeWithSelectorImpl = (fn) => (set, get, api) => {\n  const origSubscribe = api.subscribe;\n  api.subscribe = (selector, optListener, options) => {\n    let listener = selector;\n    if (optListener) {\n      const equalityFn = (options == null ? void 0 : options.equalityFn) || Object.is;\n      let currentSlice = selector(api.getState());\n      listener = (state) => {\n        const nextSlice = selector(state);\n        if (!equalityFn(currentSlice, nextSlice)) {\n          const previousSlice = currentSlice;\n          optListener(currentSlice = nextSlice, previousSlice);\n        }\n      };\n      if (options == null ? void 0 : options.fireImmediately) {\n        optListener(currentSlice, currentSlice);\n      }\n    }\n    return origSubscribe(listener);\n  };\n  const initialState = fn(set, get, api);\n  return initialState;\n};\nconst subscribeWithSelector = subscribeWithSelectorImpl;\n\nconst combine = (initialState, create) => (...a) => Object.assign({}, initialState, create(...a));\n\nfunction createJSONStorage(getStorage, options) {\n  let storage;\n  try {\n    storage = getStorage();\n  } catch (e) {\n    return;\n  }\n  const persistStorage = {\n    getItem: (name) => {\n      var _a;\n      const parse = (str2) => {\n        if (str2 === null) {\n          return null;\n        }\n        return JSON.parse(str2, options == null ? void 0 : options.reviver);\n      };\n      const str = (_a = storage.getItem(name)) != null ? _a : null;\n      if (str instanceof Promise) {\n        return str.then(parse);\n      }\n      return parse(str);\n    },\n    setItem: (name, newValue) => storage.setItem(\n      name,\n      JSON.stringify(newValue, options == null ? void 0 : options.replacer)\n    ),\n    removeItem: (name) => storage.removeItem(name)\n  };\n  return persistStorage;\n}\nconst toThenable = (fn) => (input) => {\n  try {\n    const result = fn(input);\n    if (result instanceof Promise) {\n      return result;\n    }\n    return {\n      then(onFulfilled) {\n        return toThenable(onFulfilled)(result);\n      },\n      catch(_onRejected) {\n        return this;\n      }\n    };\n  } catch (e) {\n    return {\n      then(_onFulfilled) {\n        return this;\n      },\n      catch(onRejected) {\n        return toThenable(onRejected)(e);\n      }\n    };\n  }\n};\nconst oldImpl = (config, baseOptions) => (set, get, api) => {\n  let options = {\n    getStorage: () => localStorage,\n    serialize: JSON.stringify,\n    deserialize: JSON.parse,\n    partialize: (state) => state,\n    version: 0,\n    merge: (persistedState, currentState) => ({\n      ...currentState,\n      ...persistedState\n    }),\n    ...baseOptions\n  };\n  let hasHydrated = false;\n  const hydrationListeners = /* @__PURE__ */ new Set();\n  const finishHydrationListeners = /* @__PURE__ */ new Set();\n  let storage;\n  try {\n    storage = options.getStorage();\n  } catch (e) {\n  }\n  if (!storage) {\n    return config(\n      (...args) => {\n        console.warn(\n          `[zustand persist middleware] Unable to update item '${options.name}', the given storage is currently unavailable.`\n        );\n        set(...args);\n      },\n      get,\n      api\n    );\n  }\n  const thenableSerialize = toThenable(options.serialize);\n  const setItem = () => {\n    const state = options.partialize({ ...get() });\n    let errorInSync;\n    const thenable = thenableSerialize({ state, version: options.version }).then(\n      (serializedValue) => storage.setItem(options.name, serializedValue)\n    ).catch((e) => {\n      errorInSync = e;\n    });\n    if (errorInSync) {\n      throw errorInSync;\n    }\n    return thenable;\n  };\n  const savedSetState = api.setState;\n  api.setState = (state, replace) => {\n    savedSetState(state, replace);\n    void setItem();\n  };\n  const configResult = config(\n    (...args) => {\n      set(...args);\n      void setItem();\n    },\n    get,\n    api\n  );\n  let stateFromStorage;\n  const hydrate = () => {\n    var _a;\n    if (!storage)\n      return;\n    hasHydrated = false;\n    hydrationListeners.forEach((cb) => cb(get()));\n    const postRehydrationCallback = ((_a = options.onRehydrateStorage) == null ? void 0 : _a.call(options, get())) || void 0;\n    return toThenable(storage.getItem.bind(storage))(options.name).then((storageValue) => {\n      if (storageValue) {\n        return options.deserialize(storageValue);\n      }\n    }).then((deserializedStorageValue) => {\n      if (deserializedStorageValue) {\n        if (typeof deserializedStorageValue.version === \"number\" && deserializedStorageValue.version !== options.version) {\n          if (options.migrate) {\n            return options.migrate(\n              deserializedStorageValue.state,\n              deserializedStorageValue.version\n            );\n          }\n          console.error(\n            `State loaded from storage couldn't be migrated since no migrate function was provided`\n          );\n        } else {\n          return deserializedStorageValue.state;\n        }\n      }\n    }).then((migratedState) => {\n      var _a2;\n      stateFromStorage = options.merge(\n        migratedState,\n        (_a2 = get()) != null ? _a2 : configResult\n      );\n      set(stateFromStorage, true);\n      return setItem();\n    }).then(() => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(stateFromStorage, void 0);\n      hasHydrated = true;\n      finishHydrationListeners.forEach((cb) => cb(stateFromStorage));\n    }).catch((e) => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(void 0, e);\n    });\n  };\n  api.persist = {\n    setOptions: (newOptions) => {\n      options = {\n        ...options,\n        ...newOptions\n      };\n      if (newOptions.getStorage) {\n        storage = newOptions.getStorage();\n      }\n    },\n    clearStorage: () => {\n      storage == null ? void 0 : storage.removeItem(options.name);\n    },\n    getOptions: () => options,\n    rehydrate: () => hydrate(),\n    hasHydrated: () => hasHydrated,\n    onHydrate: (cb) => {\n      hydrationListeners.add(cb);\n      return () => {\n        hydrationListeners.delete(cb);\n      };\n    },\n    onFinishHydration: (cb) => {\n      finishHydrationListeners.add(cb);\n      return () => {\n        finishHydrationListeners.delete(cb);\n      };\n    }\n  };\n  hydrate();\n  return stateFromStorage || configResult;\n};\nconst newImpl = (config, baseOptions) => (set, get, api) => {\n  let options = {\n    storage: createJSONStorage(() => localStorage),\n    partialize: (state) => state,\n    version: 0,\n    merge: (persistedState, currentState) => ({\n      ...currentState,\n      ...persistedState\n    }),\n    ...baseOptions\n  };\n  let hasHydrated = false;\n  const hydrationListeners = /* @__PURE__ */ new Set();\n  const finishHydrationListeners = /* @__PURE__ */ new Set();\n  let storage = options.storage;\n  if (!storage) {\n    return config(\n      (...args) => {\n        console.warn(\n          `[zustand persist middleware] Unable to update item '${options.name}', the given storage is currently unavailable.`\n        );\n        set(...args);\n      },\n      get,\n      api\n    );\n  }\n  const setItem = () => {\n    const state = options.partialize({ ...get() });\n    return storage.setItem(options.name, {\n      state,\n      version: options.version\n    });\n  };\n  const savedSetState = api.setState;\n  api.setState = (state, replace) => {\n    savedSetState(state, replace);\n    void setItem();\n  };\n  const configResult = config(\n    (...args) => {\n      set(...args);\n      void setItem();\n    },\n    get,\n    api\n  );\n  let stateFromStorage;\n  const hydrate = () => {\n    var _a, _b;\n    if (!storage)\n      return;\n    hasHydrated = false;\n    hydrationListeners.forEach((cb) => {\n      var _a2;\n      return cb((_a2 = get()) != null ? _a2 : configResult);\n    });\n    const postRehydrationCallback = ((_b = options.onRehydrateStorage) == null ? void 0 : _b.call(options, (_a = get()) != null ? _a : configResult)) || void 0;\n    return toThenable(storage.getItem.bind(storage))(options.name).then((deserializedStorageValue) => {\n      if (deserializedStorageValue) {\n        if (typeof deserializedStorageValue.version === \"number\" && deserializedStorageValue.version !== options.version) {\n          if (options.migrate) {\n            return options.migrate(\n              deserializedStorageValue.state,\n              deserializedStorageValue.version\n            );\n          }\n          console.error(\n            `State loaded from storage couldn't be migrated since no migrate function was provided`\n          );\n        } else {\n          return deserializedStorageValue.state;\n        }\n      }\n    }).then((migratedState) => {\n      var _a2;\n      stateFromStorage = options.merge(\n        migratedState,\n        (_a2 = get()) != null ? _a2 : configResult\n      );\n      set(stateFromStorage, true);\n      return setItem();\n    }).then(() => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(stateFromStorage, void 0);\n      stateFromStorage = get();\n      hasHydrated = true;\n      finishHydrationListeners.forEach((cb) => cb(stateFromStorage));\n    }).catch((e) => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(void 0, e);\n    });\n  };\n  api.persist = {\n    setOptions: (newOptions) => {\n      options = {\n        ...options,\n        ...newOptions\n      };\n      if (newOptions.storage) {\n        storage = newOptions.storage;\n      }\n    },\n    clearStorage: () => {\n      storage == null ? void 0 : storage.removeItem(options.name);\n    },\n    getOptions: () => options,\n    rehydrate: () => hydrate(),\n    hasHydrated: () => hasHydrated,\n    onHydrate: (cb) => {\n      hydrationListeners.add(cb);\n      return () => {\n        hydrationListeners.delete(cb);\n      };\n    },\n    onFinishHydration: (cb) => {\n      finishHydrationListeners.add(cb);\n      return () => {\n        finishHydrationListeners.delete(cb);\n      };\n    }\n  };\n  if (!options.skipHydration) {\n    hydrate();\n  }\n  return stateFromStorage || configResult;\n};\nconst persistImpl = (config, baseOptions) => {\n  if (\"getStorage\" in baseOptions || \"serialize\" in baseOptions || \"deserialize\" in baseOptions) {\n    if (( false ? 0 : void 0) !== \"production\") {\n      console.warn(\n        \"[DEPRECATED] `getStorage`, `serialize` and `deserialize` options are deprecated. Use `storage` option instead.\"\n      );\n    }\n    return oldImpl(config, baseOptions);\n  }\n  return newImpl(config, baseOptions);\n};\nconst persist = persistImpl;\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/zustand/esm/middleware.mjs\n"));

/***/ }),

/***/ "./node_modules/zustand/esm/shallow.mjs":
/*!**********************************************!*\
  !*** ./node_modules/zustand/esm/shallow.mjs ***!
  \**********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ shallow; },\n/* harmony export */   shallow: function() { return /* binding */ shallow$1; }\n/* harmony export */ });\nfunction shallow$1(objA, objB) {\n  if (Object.is(objA, objB)) {\n    return true;\n  }\n  if (typeof objA !== \"object\" || objA === null || typeof objB !== \"object\" || objB === null) {\n    return false;\n  }\n  if (objA instanceof Map && objB instanceof Map) {\n    if (objA.size !== objB.size)\n      return false;\n    for (const [key, value] of objA) {\n      if (!Object.is(value, objB.get(key))) {\n        return false;\n      }\n    }\n    return true;\n  }\n  if (objA instanceof Set && objB instanceof Set) {\n    if (objA.size !== objB.size)\n      return false;\n    for (const value of objA) {\n      if (!objB.has(value)) {\n        return false;\n      }\n    }\n    return true;\n  }\n  const keysA = Object.keys(objA);\n  if (keysA.length !== Object.keys(objB).length) {\n    return false;\n  }\n  for (let i = 0; i < keysA.length; i++) {\n    if (!Object.prototype.hasOwnProperty.call(objB, keysA[i]) || !Object.is(objA[keysA[i]], objB[keysA[i]])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nvar shallow = (objA, objB) => {\n  if (( false ? 0 : void 0) !== \"production\") {\n    console.warn(\n      \"[DEPRECATED] Default export is deprecated. Instead use `import { shallow } from 'zustand/shallow'`.\"\n    );\n  }\n  return shallow$1(objA, objB);\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvenVzdGFuZC9lc20vc2hhbGxvdy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixrQkFBa0I7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsT0FBTyxNQUFlLEdBQUcsQ0FBb0I7QUFDN0M7QUFDQSx3RUFBd0UsVUFBVTtBQUNsRjtBQUNBO0FBQ0E7QUFDQTs7QUFFb0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3p1c3RhbmQvZXNtL3NoYWxsb3cubWpzP2RkNjYiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gc2hhbGxvdyQxKG9iakEsIG9iakIpIHtcbiAgaWYgKE9iamVjdC5pcyhvYmpBLCBvYmpCKSkge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG4gIGlmICh0eXBlb2Ygb2JqQSAhPT0gXCJvYmplY3RcIiB8fCBvYmpBID09PSBudWxsIHx8IHR5cGVvZiBvYmpCICE9PSBcIm9iamVjdFwiIHx8IG9iakIgPT09IG51bGwpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgaWYgKG9iakEgaW5zdGFuY2VvZiBNYXAgJiYgb2JqQiBpbnN0YW5jZW9mIE1hcCkge1xuICAgIGlmIChvYmpBLnNpemUgIT09IG9iakIuc2l6ZSlcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBvYmpBKSB7XG4gICAgICBpZiAoIU9iamVjdC5pcyh2YWx1ZSwgb2JqQi5nZXQoa2V5KSkpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuICBpZiAob2JqQSBpbnN0YW5jZW9mIFNldCAmJiBvYmpCIGluc3RhbmNlb2YgU2V0KSB7XG4gICAgaWYgKG9iakEuc2l6ZSAhPT0gb2JqQi5zaXplKVxuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIGZvciAoY29uc3QgdmFsdWUgb2Ygb2JqQSkge1xuICAgICAgaWYgKCFvYmpCLmhhcyh2YWx1ZSkpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuICBjb25zdCBrZXlzQSA9IE9iamVjdC5rZXlzKG9iakEpO1xuICBpZiAoa2V5c0EubGVuZ3RoICE9PSBPYmplY3Qua2V5cyhvYmpCKS5sZW5ndGgpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBrZXlzQS5sZW5ndGg7IGkrKykge1xuICAgIGlmICghT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iakIsIGtleXNBW2ldKSB8fCAhT2JqZWN0LmlzKG9iakFba2V5c0FbaV1dLCBvYmpCW2tleXNBW2ldXSkpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHRydWU7XG59XG5cbnZhciBzaGFsbG93ID0gKG9iakEsIG9iakIpID0+IHtcbiAgaWYgKChpbXBvcnQubWV0YS5lbnYgPyBpbXBvcnQubWV0YS5lbnYuTU9ERSA6IHZvaWQgMCkgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgY29uc29sZS53YXJuKFxuICAgICAgXCJbREVQUkVDQVRFRF0gRGVmYXVsdCBleHBvcnQgaXMgZGVwcmVjYXRlZC4gSW5zdGVhZCB1c2UgYGltcG9ydCB7IHNoYWxsb3cgfSBmcm9tICd6dXN0YW5kL3NoYWxsb3cnYC5cIlxuICAgICk7XG4gIH1cbiAgcmV0dXJuIHNoYWxsb3ckMShvYmpBLCBvYmpCKTtcbn07XG5cbmV4cG9ydCB7IHNoYWxsb3cgYXMgZGVmYXVsdCwgc2hhbGxvdyQxIGFzIHNoYWxsb3cgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/zustand/esm/shallow.mjs\n"));

/***/ }),

/***/ "./node_modules/zustand/esm/vanilla.mjs":
/*!**********************************************!*\
  !*** ./node_modules/zustand/esm/vanilla.mjs ***!
  \**********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createStore: function() { return /* binding */ createStore; },\n/* harmony export */   \"default\": function() { return /* binding */ vanilla; }\n/* harmony export */ });\nconst createStoreImpl = (createState) => {\n  let state;\n  const listeners = /* @__PURE__ */ new Set();\n  const setState = (partial, replace) => {\n    const nextState = typeof partial === \"function\" ? partial(state) : partial;\n    if (!Object.is(nextState, state)) {\n      const previousState = state;\n      state = (replace != null ? replace : typeof nextState !== \"object\" || nextState === null) ? nextState : Object.assign({}, state, nextState);\n      listeners.forEach((listener) => listener(state, previousState));\n    }\n  };\n  const getState = () => state;\n  const subscribe = (listener) => {\n    listeners.add(listener);\n    return () => listeners.delete(listener);\n  };\n  const destroy = () => {\n    if (( false ? 0 : void 0) !== \"production\") {\n      console.warn(\n        \"[DEPRECATED] The `destroy` method will be unsupported in a future version. Instead use unsubscribe function returned by subscribe. Everything will be garbage-collected if store is garbage-collected.\"\n      );\n    }\n    listeners.clear();\n  };\n  const api = { setState, getState, subscribe, destroy };\n  state = createState(setState, getState, api);\n  return api;\n};\nconst createStore = (createState) => createState ? createStoreImpl(createState) : createStoreImpl;\nvar vanilla = (createState) => {\n  if (( false ? 0 : void 0) !== \"production\") {\n    console.warn(\n      \"[DEPRECATED] Default export is deprecated. Instead use import { createStore } from 'zustand/vanilla'.\"\n    );\n  }\n  return createStore(createState);\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvenVzdGFuZC9lc20vdmFuaWxsYS5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhIQUE4SDtBQUM5SDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTLE1BQWUsR0FBRyxDQUFvQjtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU8sTUFBZSxHQUFHLENBQW9CO0FBQzdDO0FBQ0EsdUVBQXVFLGNBQWM7QUFDckY7QUFDQTtBQUNBO0FBQ0E7O0FBRTJDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy96dXN0YW5kL2VzbS92YW5pbGxhLm1qcz9lMDRjIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGNyZWF0ZVN0b3JlSW1wbCA9IChjcmVhdGVTdGF0ZSkgPT4ge1xuICBsZXQgc3RhdGU7XG4gIGNvbnN0IGxpc3RlbmVycyA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgU2V0KCk7XG4gIGNvbnN0IHNldFN0YXRlID0gKHBhcnRpYWwsIHJlcGxhY2UpID0+IHtcbiAgICBjb25zdCBuZXh0U3RhdGUgPSB0eXBlb2YgcGFydGlhbCA9PT0gXCJmdW5jdGlvblwiID8gcGFydGlhbChzdGF0ZSkgOiBwYXJ0aWFsO1xuICAgIGlmICghT2JqZWN0LmlzKG5leHRTdGF0ZSwgc3RhdGUpKSB7XG4gICAgICBjb25zdCBwcmV2aW91c1N0YXRlID0gc3RhdGU7XG4gICAgICBzdGF0ZSA9IChyZXBsYWNlICE9IG51bGwgPyByZXBsYWNlIDogdHlwZW9mIG5leHRTdGF0ZSAhPT0gXCJvYmplY3RcIiB8fCBuZXh0U3RhdGUgPT09IG51bGwpID8gbmV4dFN0YXRlIDogT2JqZWN0LmFzc2lnbih7fSwgc3RhdGUsIG5leHRTdGF0ZSk7XG4gICAgICBsaXN0ZW5lcnMuZm9yRWFjaCgobGlzdGVuZXIpID0+IGxpc3RlbmVyKHN0YXRlLCBwcmV2aW91c1N0YXRlKSk7XG4gICAgfVxuICB9O1xuICBjb25zdCBnZXRTdGF0ZSA9ICgpID0+IHN0YXRlO1xuICBjb25zdCBzdWJzY3JpYmUgPSAobGlzdGVuZXIpID0+IHtcbiAgICBsaXN0ZW5lcnMuYWRkKGxpc3RlbmVyKTtcbiAgICByZXR1cm4gKCkgPT4gbGlzdGVuZXJzLmRlbGV0ZShsaXN0ZW5lcik7XG4gIH07XG4gIGNvbnN0IGRlc3Ryb3kgPSAoKSA9PiB7XG4gICAgaWYgKChpbXBvcnQubWV0YS5lbnYgPyBpbXBvcnQubWV0YS5lbnYuTU9ERSA6IHZvaWQgMCkgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgICBjb25zb2xlLndhcm4oXG4gICAgICAgIFwiW0RFUFJFQ0FURURdIFRoZSBgZGVzdHJveWAgbWV0aG9kIHdpbGwgYmUgdW5zdXBwb3J0ZWQgaW4gYSBmdXR1cmUgdmVyc2lvbi4gSW5zdGVhZCB1c2UgdW5zdWJzY3JpYmUgZnVuY3Rpb24gcmV0dXJuZWQgYnkgc3Vic2NyaWJlLiBFdmVyeXRoaW5nIHdpbGwgYmUgZ2FyYmFnZS1jb2xsZWN0ZWQgaWYgc3RvcmUgaXMgZ2FyYmFnZS1jb2xsZWN0ZWQuXCJcbiAgICAgICk7XG4gICAgfVxuICAgIGxpc3RlbmVycy5jbGVhcigpO1xuICB9O1xuICBjb25zdCBhcGkgPSB7IHNldFN0YXRlLCBnZXRTdGF0ZSwgc3Vic2NyaWJlLCBkZXN0cm95IH07XG4gIHN0YXRlID0gY3JlYXRlU3RhdGUoc2V0U3RhdGUsIGdldFN0YXRlLCBhcGkpO1xuICByZXR1cm4gYXBpO1xufTtcbmNvbnN0IGNyZWF0ZVN0b3JlID0gKGNyZWF0ZVN0YXRlKSA9PiBjcmVhdGVTdGF0ZSA/IGNyZWF0ZVN0b3JlSW1wbChjcmVhdGVTdGF0ZSkgOiBjcmVhdGVTdG9yZUltcGw7XG52YXIgdmFuaWxsYSA9IChjcmVhdGVTdGF0ZSkgPT4ge1xuICBpZiAoKGltcG9ydC5tZXRhLmVudiA/IGltcG9ydC5tZXRhLmVudi5NT0RFIDogdm9pZCAwKSAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgICBjb25zb2xlLndhcm4oXG4gICAgICBcIltERVBSRUNBVEVEXSBEZWZhdWx0IGV4cG9ydCBpcyBkZXByZWNhdGVkLiBJbnN0ZWFkIHVzZSBpbXBvcnQgeyBjcmVhdGVTdG9yZSB9IGZyb20gJ3p1c3RhbmQvdmFuaWxsYScuXCJcbiAgICApO1xuICB9XG4gIHJldHVybiBjcmVhdGVTdG9yZShjcmVhdGVTdGF0ZSk7XG59O1xuXG5leHBvcnQgeyBjcmVhdGVTdG9yZSwgdmFuaWxsYSBhcyBkZWZhdWx0IH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/zustand/esm/vanilla.mjs\n"));

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, ["main"], function() { return __webpack_exec__("./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=private-next-pages%2F_app&page=%2F_app!"), __webpack_exec__("./node_modules/next/dist/client/router.js"); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);